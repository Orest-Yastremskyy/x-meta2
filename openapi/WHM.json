{
  "components": {
    "schemas": {
      "AmazonS3BackupDestinationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationResponse"
          },
          {
            "properties": {
              "aws_access_key_id": {
                "description": "The Amazon S3 Access Key ID.",
                "example": "s123456789",
                "type": "string"
              },
              "bucket": {
                "description": "The Amazon S3™ bucket.",
                "example": "ChockFullOfNuts",
                "type": "string"
              },
              "folder": {
                "default": "",
                "description": "The path to the backups directory, relative to the root directory, on the remote server.",
                "example": "subfolder",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "AppConfig": {
        "properties": {
          "acls": {
            "description": "The ACL(s) with permission to run the application.",
            "items": {
              "example": "any",
              "type": "string"
            },
            "type": "array"
          },
          "displayname": {
            "description": "The application's WHM display label.\n\n**Note:**\n\nThe function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).",
            "example": "Roundcube",
            "type": "string"
          },
          "entryurl": {
            "description": "The application's WHM entry URL.\n\n**Note:**\n\nThe function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).",
            "example": "roundcube/",
            "format": "url-path",
            "type": "string"
          },
          "features": {
            "description": "The required features to run the application.",
            "items": {
              "example": "roundcube",
              "type": "string"
            },
            "type": "array"
          },
          "group": {
            "description": "The application's group.",
            "example": "mailman",
            "type": "string"
          },
          "icon": {
            "description": "The application's icon file, relative to the `/usr/local/cpanel/whostmgr/docroot/addon_plugins/` directory.\n\n**Note:**\n\nThe function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).",
            "example": "roundcube.ico",
            "type": "string"
          },
          "name": {
            "description": "The application's name.",
            "example": "roundcube",
            "type": "string"
          },
          "origin": {
            "description": "The application's configuration file.\n\n**Note:**\n\nThe function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).",
            "example": "clamavconnector.conf",
            "type": "string"
          },
          "phpConfig": {
            "description": "The application's `php.ini` file, relative to the `/usr/local/cpanel/3rdparty/etc/` directory.",
            "example": "php.ini",
            "format": "path",
            "type": "string"
          },
          "target": {
            "description": "The action's target directory.\n\n**Note:**\n\nThe function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).",
            "example": "_self",
            "format": "path",
            "type": "string"
          },
          "upgradecall": {
            "description": "The absolute file path to the application's upgrade script.\n\n**Note:**\n\n* The function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).\n* The system passes upgrade information in the following format: `/usr/local/youraddon/bin/upgrade 11.36.0.0 11.38.0.0`, where:\n  * `11.36.0.0` is the **previous** cPanel & WHM version.\n  * `11.38.0.0` is the **current** cPanel & WHM version.",
            "example": "/usr/local/roundcube/bin/upgrade",
            "format": "path",
            "type": "string"
          },
          "url": {
            "description": "The application's URL path.",
            "example": "/3rdparty/roundcube",
            "format": "url-path",
            "type": "string"
          },
          "user": {
            "description": "The application's username.",
            "example": "roundcube",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BackblazeBackupDestinationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationResponse"
          },
          {
            "properties": {
              "application_key": {
                "description": "The application key's name.",
                "example": "A123b45CD678e9",
                "type": "string"
              },
              "application_key_id": {
                "description": "The application key ID that authenticates the Backblaze B2 account.",
                "example": "12a345B678c9",
                "type": "string"
              },
              "bucket_id": {
                "description": "The bucket's ID.",
                "example": "a12b34cd5678e9f",
                "type": "string"
              },
              "bucket_name": {
                "description": "The bucket's name.",
                "example": "ChockFullOfNuts",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "backups",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationGetResponse": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseAmazonS3"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBackblaze"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseCustom"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseFTP"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseGoogleDrive"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseLocal"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseRsync"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseS3Compatible"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseSFTP"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseWebDAV"
          }
        ],
        "discriminator": {
          "mapping": {
            "AmazonS3": "#/components/schemas/BackupDestinationGetResponseAmazonS3",
            "Backblaze": "#/components/schemas/BackupDestinationGetResponseBackblaze",
            "Custom": "#/components/schemas/BackupDestinationGetResponseCustom",
            "FTP": "#/components/schemas/BackupDestinationGetResponseFTP",
            "GoogleDrive": "#/components/schemas/BackupDestinationGetResponseGoogleDrive",
            "Local": "#/components/schemas/BackupDestinationGetResponseLocal",
            "Rsync": "#/components/schemas/BackupDestinationGetResponseRsync",
            "S3Compatible": "#/components/schemas/BackupDestinationGetResponseS3Compatible",
            "SFTP": "#/components/schemas/BackupDestinationGetResponseSFTP",
            "WebDAV": "#/components/schemas/BackupDestinationGetResponseWebDAV"
          },
          "propertyName": "type"
        }
      },
      "BackupDestinationGetResponseAmazonS3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBase"
          },
          {
            "properties": {
              "aws_access_key_id": {
                "description": "The Amazon S3 Access Key ID.",
                "example": "s123456789",
                "type": "string"
              },
              "bucket": {
                "description": "The Amazon S3™ bucket.",
                "example": "ChockFullOfNuts",
                "type": "string"
              },
              "folder": {
                "description": "The path to the backups directory, relative to the root directory, on the remote server.",
                "example": "subfolder",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationGetResponseBackblaze": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBase"
          },
          {
            "properties": {
              "application_key": {
                "description": "The application key's name.",
                "example": "A123b45CD678e9",
                "type": "string"
              },
              "application_key_id": {
                "description": "The application key ID that authenticates the Backblaze B2 account.",
                "example": "12a345B678c9",
                "type": "string"
              },
              "bucket_id": {
                "description": "The bucket's ID.",
                "example": "a12b34cd5678e9f",
                "type": "string"
              },
              "bucket_name": {
                "description": "The bucket's name.",
                "example": "ChockFullOfNuts",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationGetResponseBase": {
        "properties": {
          "disable_reason": {
            "description": "An error message that explains why the backup is disabled.\n\n**Note:**\n\nYou will only see this return when the transport is disabled.",
            "example": "Could not list files in destination: example",
            "type": "string"
          },
          "disabled": {
            "description": "Shows whether the backup destination is disabled.\n* `1` — The destination is disabled.\n* `0` — The destination is enabled.",
            "enum": [
              0,
              1
            ],
            "example": 0,
            "type": "integer"
          },
          "id": {
            "description": "The backup destination's ID",
            "example": "sNnLb1req9oJN9lUJFhA99kY",
            "type": "string"
          },
          "name": {
            "description": "The backup destination's name.",
            "example": "destination_name",
            "type": "string"
          },
          "type": {
            "description": "The type of backup destination. Select a backup destination from the following menu to view its return values:",
            "enum": [
              "Custom",
              "FTP",
              "Local",
              "SFTP",
              "WebDAV",
              "AmazonS3",
              "Rsync",
              "GoogleDrive",
              "S3Compatible",
              "Backblaze"
            ],
            "example": "Local",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BackupDestinationGetResponseCustom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBase"
          },
          {
            "properties": {
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "script": {
                "description": "The absolute file path of the user-supplied transport solution script.",
                "example": "/home/backups/beammeupscotty.pl",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationGetResponseFTP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBase"
          },
          {
            "properties": {
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "passive": {
                "description": "Whether to use passive FTP.\n* `1` - Use passive FTP.\n* `0` - Use active FTP.",
                "example": 1,
                "type": "integer"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "description": "The remote server's FTP port.",
                "example": 21,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "timeout": {
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationGetResponseGoogleDrive": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBase"
          },
          {
            "properties": {
              "client_id": {
                "description": "The Google Drive client ID.",
                "example": "aBcdeFgHIjK123",
                "type": "string"
              },
              "client_secret": {
                "description": "The Google Drive client secret.",
                "example": "aBcde123FgHIjK456",
                "type": "string"
              },
              "folder": {
                "description": "The path to the backups directory, relative to the root directory, on the remote server.",
                "example": "subfolder",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationGetResponseLocal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBase"
          },
          {
            "properties": {
              "mount": {
                "description": "Whether the path is mounted.\n* `1` - The path is mounted.\n* `0` - The path is **not** mounted.",
                "enum": [
                  1,
                  0
                ],
                "example": 0,
                "type": "integer"
              },
              "no_mount_fail": {
                "description": "Whether to fail the backup attempt if the mount fails.\n* `1` - Fail the backup attempt.\n* `0` - Do **not** fail the backup attempt.",
                "enum": [
                  1,
                  0
                ],
                "example": 0,
                "type": "integer"
              },
              "path": {
                "description": "The absolute path to the backups directory.",
                "example": "/home/backups",
                "format": "path",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationGetResponseRsync": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBase"
          },
          {
            "properties": {
              "authtype": {
                "description": "The authorization type.\n* `password`\n* `key`",
                "enum": [
                  "password",
                  "key"
                ],
                "example": "password"
              },
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "description": "The remote server's FTP port.",
                "example": 22,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "privatekey": {
                "description": "If the `authtype` return's value is `key`, the absolute path to the private key file.",
                "example": "/home/backups/key",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationGetResponseS3Compatible": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBase"
          },
          {
            "properties": {
              "aws_access_key_id": {
                "description": "The S3-compatible provider key ID.",
                "example": "s123456789",
                "type": "string"
              },
              "bucket": {
                "description": "The S3-compatible bucket.",
                "example": "ChockFullOfNuts",
                "type": "string"
              },
              "folder": {
                "description": "The path to the backups directory, relative to the root directory, on the remote server.",
                "example": "subfolder",
                "type": "string"
              },
              "host": {
                "description": "The S3-compatible provider's server.",
                "example": "www.s3example.com",
                "format": "domain",
                "type": "string"
              },
              "timeout": {
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationGetResponseSFTP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBase"
          },
          {
            "properties": {
              "authtype": {
                "description": "The authorization type.\n* `password`\n* `key`",
                "enum": [
                  "password",
                  "key"
                ],
                "example": "password"
              },
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "description": "The remote server's FTP port.",
                "example": 21,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "privatekey": {
                "description": "If the `authtype` return's value is `key`, the absolute path to the private key file.",
                "example": "/home/backups/key",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationGetResponseWebDAV": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationGetResponseBase"
          },
          {
            "properties": {
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "description": "The remote server's FTP port.",
                "example": 21,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "ssl": {
                "description": "Whether to use SSL.\n* `1` - Use SSL.\n* `0` - Do **not** use SSL.",
                "enum": [
                  1,
                  0
                ],
                "example": 1,
                "type": "integer"
              },
              "timeout": {
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "BackupDestinationResponse": {
        "properties": {
          "disable_reason": {
            "description": "An error message that explains why the backup is disabled.\n\n**Note:**\n\nYou will only see this return when the transport is disabled.",
            "example": "Could not list files in destination: example",
            "type": "string"
          },
          "disabled": {
            "description": "Shows whether the backup destination is disabled.\n* `1` — The destination is disabled.\n* `0` — The destination is enabled.",
            "enum": [
              0,
              1
            ],
            "example": 0,
            "type": "integer"
          },
          "id": {
            "description": "The ID of the backup destination to modify.",
            "example": "0W1ei2rd3A4lI5sT6he7Be8st",
            "type": "string"
          },
          "name": {
            "description": "A new name for the backup destination.",
            "example": "destination_name",
            "type": "string"
          },
          "type": {
            "description": "The type of backup destination.",
            "enum": [
              "Custom",
              "FTP",
              "Local",
              "SFTP",
              "WebDAV",
              "AmazonS3",
              "Rsync",
              "GoogleDrive",
              "S3Compatible",
              "Backblaze"
            ],
            "example": "Local",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BackupDestinationResponseType": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/AmazonS3BackupDestinationResponse"
          },
          {
            "$ref": "#/components/schemas/BackblazeBackupDestinationResponse"
          },
          {
            "$ref": "#/components/schemas/CustomBackupDestinationResponse"
          },
          {
            "$ref": "#/components/schemas/FTPBackupDestinationResponse"
          },
          {
            "$ref": "#/components/schemas/GoogleDriveBackupDestinationResponse"
          },
          {
            "$ref": "#/components/schemas/LocalBackupDestinationResponse"
          },
          {
            "$ref": "#/components/schemas/RsyncBackupDestinationResponse"
          },
          {
            "$ref": "#/components/schemas/S3CompatibleBackupDestinationResponse"
          },
          {
            "$ref": "#/components/schemas/SFTPBackupDestinationResponse"
          },
          {
            "$ref": "#/components/schemas/WebDAVBackupDestinationResponse"
          }
        ],
        "discriminator": {
          "mapping": {
            "AmazonS3": "#/components/schemas/AmazonS3BackupDestinationResponse",
            "Backblaze": "#/components/schemas/BackblazeBackupDestinationResponse",
            "Custom": "#/components/schemas/CustomBackupDestinationResponse",
            "FTP": "#/components/schemas/FTPBackupDestinationResponse",
            "GoogleDrive": "#/components/schemas/GoogleDriveBackupDestinationResponse",
            "Local": "#/components/schemas/LocalBackupDestinationResponse",
            "Rsync": "#/components/schemas/RsyncBackupDestinationResponse",
            "S3Compatible": "#/components/schemas/S3CompatibleBackupDestinationResponse",
            "SFTP": "#/components/schemas/SFTPBackupDestinationResponse",
            "WebDAV": "#/components/schemas/WebDAVBackupDestinationResponse"
          },
          "propertyName": "type"
        }
      },
      "BackupDestinationSetParameterAmazonS3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBase"
          },
          {
            "properties": {
              "aws_access_key_id": {
                "description": "The Amazon S3 Access Key ID.",
                "example": "s123456789",
                "type": "string"
              },
              "bucket": {
                "description": "The Amazon S3™ bucket.",
                "example": "ChockFullOfNuts",
                "type": "string"
              },
              "folder": {
                "default": "",
                "description": "The path to the backups directory, relative to the root directory, on the remote server.",
                "example": "subfolder",
                "format": "path",
                "type": "string"
              },
              "password": {
                "description": "The Amazon S3 Access Key's password.",
                "example": "123456luggage",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "required": [
              "bucket",
              "aws_access_key_id",
              "timeout",
              "password"
            ],
            "type": "object"
          }
        ]
      },
      "BackupDestinationSetParameterBackblaze": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBase"
          },
          {
            "properties": {
              "application_key": {
                "description": "The application key's name.",
                "example": "A123b45CD678e9",
                "type": "string"
              },
              "application_key_id": {
                "description": "The application key ID that authenticates the Backblaze B2 account.",
                "example": "12a345B678c9",
                "type": "string"
              },
              "bucket_id": {
                "description": "The bucket's ID.",
                "example": "a12b34cd5678e9f",
                "type": "string"
              },
              "bucket_name": {
                "description": "The bucket's name.",
                "example": "ChockFullOfNuts",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "backups",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "required": [
              "application_key",
              "application_key_id",
              "bucket_id",
              "bucket_name"
            ],
            "type": "object"
          }
        ]
      },
      "BackupDestinationSetParameterBase": {
        "properties": {
          "disable_reason": {
            "description": "An error message that explains why the backup is disabled.",
            "example": "Could not list files in destination: example",
            "type": "string"
          },
          "disabled": {
            "description": "Whether to disable the backup destination.\n* `1` — Disable the destination.\n* `0` — Enable the destination.\n\n**Note:**\n\nIf you do not set this parameter, the system retains the current setting.",
            "enum": [
              0,
              1
            ],
            "example": 0,
            "type": "integer"
          },
          "id": {
            "description": "The ID of the backup destination to modify.",
            "example": "0W1ei2rd3A4lI5sT6he7Be8st",
            "type": "string"
          },
          "name": {
            "description": "A new name for the backup destination.\n\n**Note:**\n\nIf you do not set this parameter, the system retains the current setting.",
            "example": "destination_name",
            "type": "string"
          },
          "type": {
            "description": "The type of backup destination.\n\n**Note:**\n\nIf you do not set this parameter, the system retains the current setting.\n\nSelect a backup destination from the following menu to view its optional parameters:",
            "enum": [
              "Custom",
              "FTP",
              "Local",
              "SFTP",
              "WebDAV",
              "AmazonS3",
              "Rsync",
              "GoogleDrive",
              "S3Compatible",
              "Backblaze"
            ],
            "example": "Local",
            "type": "string"
          },
          "upload_system_backup": {
            "description": "Whether to upload system backups.\n* `1` — Upload.\n* `0` — Do **not** upload.\n\n**Note:**\n\nIf you do not set this parameter, the system retains the current setting.",
            "enum": [
              0,
              1
            ],
            "example": 1,
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "BackupDestinationSetParameterCustom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBase"
          },
          {
            "properties": {
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "password": {
                "description": "The remote server account's password.",
                "example": "123456luggage",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "script": {
                "description": "The absolute file path of the user-supplied transport solution script.",
                "example": "/home/backups/beammeupscotty.pl",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "required": [
              "script",
              "host",
              "path",
              "username",
              "password"
            ],
            "type": "object"
          }
        ]
      },
      "BackupDestinationSetParameterFTP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBase"
          },
          {
            "properties": {
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "passive": {
                "default": 1,
                "description": "Whether to use passive FTP.\n* `1` - Use passive FTP.\n* `0` - Use active FTP.",
                "example": 1,
                "type": "integer"
              },
              "password": {
                "description": "The remote server account's password.",
                "example": "123456luggage",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "default": 21,
                "description": "The remote server's FTP port.",
                "example": 21,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "required": [
              "host",
              "path",
              "username",
              "password"
            ],
            "type": "object"
          }
        ]
      },
      "BackupDestinationSetParameterGoogleDrive": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBase"
          },
          {
            "properties": {
              "client_id": {
                "description": "The Google Drive client ID.",
                "example": "aBcdeFgHIjK123",
                "type": "string"
              },
              "client_secret": {
                "description": "The Google Drive client secret.",
                "example": "aBcde123FgHIjK456",
                "type": "string"
              },
              "folder": {
                "default": "",
                "description": "The path to the backups directory, relative to the root directory, on the remote server.",
                "example": "subfolder",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "required": [
              "client_id",
              "client_secret"
            ],
            "type": "object"
          }
        ]
      },
      "BackupDestinationSetParameterLocal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBase"
          },
          {
            "properties": {
              "mount": {
                "default": 0,
                "description": "Whether the path is mounted.\n* `1` - The path is mounted.\n* `0` - The path is **not** mounted.",
                "enum": [
                  1,
                  0
                ],
                "example": 0,
                "type": "integer"
              },
              "no_mount_fail": {
                "default": 0,
                "description": "Whether to fail the backup attempt if the mount fails.\n* `1` - Fail the backup attempt.\n* `0` - Do **not** fail the backup attempt.",
                "enum": [
                  1,
                  0
                ],
                "example": 0,
                "type": "integer"
              },
              "path": {
                "description": "The absolute path to the backups directory.",
                "example": "/home/backups",
                "format": "path",
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "type": "object"
          }
        ]
      },
      "BackupDestinationSetParameterRsync": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBase"
          },
          {
            "properties": {
              "authtype": {
                "description": "The authorization type.\n* `password`\n* `key`",
                "enum": [
                  "password",
                  "key"
                ],
                "example": "password"
              },
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "passphrase": {
                "description": "If the `authtype` parameter's value is `key`, the private key file's passphrase.",
                "example": "123456luggage",
                "type": "string"
              },
              "password": {
                "description": "If the `authtype` parameter's value is `password`, the remote server account's password.",
                "example": "123456luggage",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "default": 22,
                "description": "The remote server's FTP port.",
                "example": 22,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "privatekey": {
                "description": "If the `authtype` parameter's value is `key`, the absolute path to the private key file.",
                "example": "/home/backups/key",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "required": [
              "host",
              "path",
              "username",
              "authtype"
            ],
            "type": "object"
          }
        ]
      },
      "BackupDestinationSetParameterS3Compatible": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBase"
          },
          {
            "properties": {
              "aws_access_key_id": {
                "description": "The S3-compatible provider key ID.",
                "example": "s123456789",
                "type": "string"
              },
              "bucket": {
                "description": "The S3-compatible bucket.",
                "example": "ChockFullOfNuts",
                "type": "string"
              },
              "folder": {
                "default": "",
                "description": "The path to the backups directory, relative to the root directory, on the remote server.",
                "example": "subfolder",
                "format": "path",
                "type": "string"
              },
              "host": {
                "description": "The S3-compatible provider's server.",
                "example": "www.s3example.com",
                "type": "string"
              },
              "password": {
                "description": "The S3-compatible provider key's password or secret.",
                "example": "123456luggage",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "required": [
              "host",
              "bucket",
              "aws_access_key_id",
              "timeout",
              "password"
            ],
            "type": "object"
          }
        ]
      },
      "BackupDestinationSetParameterSFTP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBase"
          },
          {
            "properties": {
              "authtype": {
                "description": "The authorization type.\n* `password`\n* `key`",
                "enum": [
                  "password",
                  "key"
                ],
                "example": "password"
              },
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "passphrase": {
                "description": "If the `authtype` parameter's value is `key`, the private key file's passphrase.",
                "example": "123456luggage",
                "type": "string"
              },
              "password": {
                "description": "If the `authtype` parameter's value is `password`, the remote server account's password.",
                "example": "123456luggage",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "default": 21,
                "description": "The remote server's FTP port.",
                "example": 21,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "privatekey": {
                "description": "If the `authtype` parameter's value is `key`, the absolute path to the private key file.",
                "example": "/home/backups/key",
                "format": "path",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "required": [
              "host",
              "path",
              "username",
              "authtype"
            ],
            "type": "object"
          }
        ]
      },
      "BackupDestinationSetParameterType": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterAmazonS3"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBackblaze"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterCustom"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterFTP"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterGoogleDrive"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterLocal"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterRsync"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterS3Compatible"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterSFTP"
          },
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterWebDAV"
          }
        ],
        "discriminator": {
          "mapping": {
            "AmazonS3": "#/components/schemas/BackupDestinationSetParameterAmazonS3",
            "Backblaze": "#/components/schemas/BackupDestinationSetParameterBackblaze",
            "Custom": "#/components/schemas/BackupDestinationSetParameterCustom",
            "FTP": "#/components/schemas/BackupDestinationSetParameterFTP",
            "GoogleDrive": "#/components/schemas/BackupDestinationSetParameterGoogleDrive",
            "Local": "#/components/schemas/BackupDestinationSetParameterLocal",
            "Rsync": "#/components/schemas/BackupDestinationSetParameterRsync",
            "S3Compatible": "#/components/schemas/BackupDestinationSetParameterS3Compatible",
            "SFTP": "#/components/schemas/BackupDestinationSetParameterSFTP",
            "WebDAV": "#/components/schemas/BackupDestinationSetParameterWebDAV"
          },
          "propertyName": "type"
        }
      },
      "BackupDestinationSetParameterWebDAV": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationSetParameterBase"
          },
          {
            "properties": {
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "password": {
                "description": "The remote server account's password.",
                "example": "123456luggage",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "default": 21,
                "description": "The remote server's FTP port.",
                "example": 21,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "ssl": {
                "default": 1,
                "description": "Whether to use SSL.\n* `1` - Use SSL.\n* `0` - Do **not** use SSL.",
                "enum": [
                  1,
                  0
                ],
                "example": 1,
                "type": "integer"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "required": [
              "host",
              "path",
              "username",
              "password"
            ],
            "type": "object"
          }
        ]
      },
      "CustomBackupDestinationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationResponse"
          },
          {
            "properties": {
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "script": {
                "description": "The absolute file path of the user-supplied transport solution script.",
                "example": "/home/backups/beammeupscotty.pl",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterBase": {
        "properties": {
          "class": {
            "description": "The record's class.",
            "example": "IN",
            "oneOf": [
              {
                "enum": [
                  "IN"
                ],
                "type": "string"
              },
              {
                "description": "A valid DNS record class.",
                "type": "string"
              }
            ]
          },
          "domain": {
            "description": "The new zone record's domain.",
            "example": "example.com",
            "format": "domain",
            "type": "string"
          },
          "name": {
            "description": "The record's name.\n\n**Note:**\n\nDo **not** omit any necessary trailing periods.",
            "example": "hostname.example.com.",
            "format": "domain",
            "type": "string"
          },
          "ttl": {
            "default": 86400,
            "description": "The record's Time To Live (TTL), in seconds.",
            "example": 86400,
            "minimum": 1,
            "type": "integer"
          },
          "type": {
            "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types):\n* `A` - A records store IPv4 addresses. Use them to map a hostname to an IPv4 address.\n* `A6` - A6 records store IPv6 addresses.\n* `AAAA` - AAAA records store IPv6 addresses.\n* `AFSDB` - AFSDB records store the location of an AFS cell's database servers.\n* `CAA` - CAA records control which certificate authorities can issue SSL certificates for a domain.\n* `CNAME` - CNAME records create an alias to another hostname.\n* `DNAME` - DNAME records create an alias for a hostname and its subnames.\n* `DS` - DS records specify a record's delegation signer.\n* `HINFO` - HINFO records specify a host's CPU and OS types.\n* `LOC` - LOC records store a hostname's geographical location.\n* `MX` - MX records point a domain name to its MTAs.\n* `NS` - NS records store a domain's authoritative nameservers.\n* `PTR` - PTR records point to a CNAME.\n* `RP` - RP records store a domain's Responsible Person's information.\n* `SOA` - SOA records designate the beginning of a zone of authority.\n* `SRV` - SRV records store the service location records for newer protocols (for example, Autodiscover).\n* `TXT` - TXT records store descriptive text or useful records (for example, SPF or DKIM records).\n\nWhen you call this function, you **must** include the additional parameters for the desired\nzone record type. Select a zone record from the menu to view the required additional\nparameters:",
            "enum": [
              "A",
              "A6",
              "AAAA",
              "AFSDB",
              "CAA",
              "CNAME",
              "DNAME",
              "DS",
              "HINFO",
              "LOC",
              "MX",
              "NS",
              "PTR",
              "RP",
              "SOA",
              "SRV",
              "TXT"
            ],
            "example": "A",
            "type": "string"
          }
        },
        "required": [
          "domain",
          "type",
          "line",
          "name",
          "class"
        ],
        "type": "object"
      },
      "DnsAddZoneParameterType": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeA"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeA6"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeAAAA"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeAFSDB"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeCAA"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeCNAME"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeDNAME"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeDS"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeHINFO"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeLOC"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeMX"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeNS"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypePTR"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeRP"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeSOA"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeSRV"
          },
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterTypeTXT"
          }
        ],
        "discriminator": {
          "mapping": {
            "A": "#/components/schemas/DnsAddZoneParameterTypeA",
            "A6": "#/components/schemas/DnsAddZoneParameterTypeA6",
            "AAAA": "#/components/schemas/DnsAddZoneParameterTypeAAAA",
            "AFSDB": "#/components/schemas/DnsAddZoneParameterTypeAFSDB",
            "CAA": "#/components/schemas/DnsAddZoneParameterTypeCAA",
            "CNAME": "#/components/schemas/DnsAddZoneParameterTypeCNAME",
            "DNAME": "#/components/schemas/DnsAddZoneParameterTypeDNAME",
            "DS": "#/components/schemas/DnsAddZoneParameterTypeDS",
            "HINFO": "#/components/schemas/DnsAddZoneParameterTypeHINFO",
            "LOC": "#/components/schemas/DnsAddZoneParameterTypeLOC",
            "MX": "#/components/schemas/DnsAddZoneParameterTypeMX",
            "NS": "#/components/schemas/DnsAddZoneParameterTypeNS",
            "PTR (Reverse DNS)": "#/components/schemas/DnsAddZoneParameterTypePTR",
            "RP": "#/components/schemas/DnsAddZoneParameterTypeRP",
            "SOA": "#/components/schemas/DnsAddZoneParameterTypeSOA",
            "SRV": "#/components/schemas/DnsAddZoneParameterTypeSRV",
            "TXT": "#/components/schemas/DnsAddZoneParameterTypeTXT"
          },
          "propertyName": "type"
        }
      },
      "DnsAddZoneParameterTypeA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "address": {
                "description": "The zone record's IPv4 address.\n\n**Note:**\n\nFor more information about A records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "192.168.0.20",
                "format": "ipv4",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeA6": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "prefix": {
                "deprecated": true,
                "description": "The record's prefix length.\n\n**Important:**\n\nA6 records are **deprecated**. We **strongly** recommend that you use AAAA records to\nstore IPv6 addresses.",
                "example": 48,
                "minimum": 1,
                "type": "integer"
              },
              "refer": {
                "deprecated": true,
                "description": "The record's IPv6 address suffix.\n\n**Note:**\n\nYou **must** uuencode the colons (`:`) in IPv6 addresses in your function calls.",
                "example": "0::0",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeAAAA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "address": {
                "description": "The zone record's IPv6 address.\n\n**Note:**\n\n* You **must** uuencode the colons (`:`) in IPv6 addresses in your function calls.\n* For more information about AAAA records, read [RFC 3596 at IANA](http://tools.ietf.org/html/rfc3596).",
                "example": "2001:1:42:1::2a",
                "format": "ipv6",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeAFSDB": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "hostname": {
                "description": "The database servers' hostname.",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              },
              "subtype": {
                "description": "The 16-bit integer of an AFS cell type.\n\nFor example, specify `1` to signify an AFS version 3.0 Volume Location Server.\n\n**Note:**\n\nFor more information about AFSDB records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).",
                "example": 1,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeCAA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "flag": {
                "description": "Whether the Certificate Authority (CA) will issue an SSL certificate if the CAA resource record contains unknown property tags.\n\n* `0` - The CA will issue an SSL certificate.\n* `1` - The CA will **not** issue an SSL certificate.\n\nFor more information about CAA record flags and property tags, read the [RFC 6844 documentation](https://tools.ietf.org/html/rfc6844#section-3).",
                "enum": [
                  0,
                  1
                ],
                "example": 0,
                "type": "integer"
              },
              "tag": {
                "description": "The CAA record's property type.\n\n* `issue` - Authorize a CA to issue a certificate for the domain.\n* `issuewild` - Authorize a CA to issue a wildcard certificate for the domain.\n* `iodef` - Specify a URL to which a CA may report policy violations.",
                "enum": [
                  "issue",
                  "issuewild",
                  "iodef"
                ],
                "example": "issue",
                "type": "string"
              },
              "value": {
                "description": "The CA's domain or URL. This is a valid [SSL provider](https://sslmate.com/labs/caa/),\n`mailto` URL, or a standard URL.\n\n**Note:**\n\nIf you use `iodef` as the `tag` parameter's value, enter a URL that a CA can use to report issues as this parameter's value.",
                "example": "exampleca.com",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeCNAME": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "cname": {
                "description": "The canonical name (CNAME) alias.\n\n**Note:**\n\nFor more information about CNAME records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              },
              "flatten": {
                "description": "Whether to resolve the specified CNAME value with the record's IP address.\n\nIf you do **not** also set the `flatten_to` parameter, the system will attempt to resolve the CNAME automatically.\n\n* `1` - Flattened.\n* `0` - Not flattened (the function will **fail**).\n\n**Note:**\n\nOnly use this parameter when you alter the zone's `root` record.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "flatten_to": {
                "description": "The IP address that the specified CNAME will resolve to.\n\n**Note:**\n\nYou **must** use the `flatten` parameter with this parameter.",
                "oneOf": [
                  {
                    "description": "A valid IPv4 address.",
                    "example": "192.0.2.27",
                    "format": "ipv4",
                    "type": "string"
                  },
                  {
                    "description": "A valid IPv6 address.",
                    "example": "2001:0db8:85a3:0042:1000:8a2e:0370:7334",
                    "format": "ipv6",
                    "type": "string"
                  }
                ]
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeDNAME": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "dname": {
                "description": "The delegation name (DNAME) alias.\n\n**Note:**\n\nFor more information about DNAME records, read [RFC 2672 at IANA](http://tools.ietf.org/html/rfc2672).",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeDS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "algorithm": {
                "description": "The record's algorithm number.\n\n* `1` - RSAMD5\n* `2` - Diffie-Hellman\n* `3` - DSA/SHA-1\n* `4` - Elliptic Curve\n* `5` - RSA/SHA-1\n* `252` - Indirect\n* `253` - Private DNS\n* `254` - Private OID",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5,
                  252,
                  253,
                  254
                ],
                "example": 5,
                "type": "integer"
              },
              "digitype": {
                "description": "The record's digest type.\n\n* `1` — SHA-1",
                "enum": [
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "keyname": {
                "description": "The record's KeyTag value.\n\n**Note:**\n\nFor more information about DS records, read [RFC 4034 at IANA](http://tools.ietf.org/html/rfc4034).",
                "example": 2642,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeHINFO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "cpu": {
                "description": "The host's CPU type.\n\n**Note:**\n\nFor more information about HINFO records, read [RFC 1700 at IANA](http://tools.ietf.org/html/rfc1700.txt).",
                "example": "INTEL-386",
                "type": "string"
              },
              "os": {
                "description": "The host's operating system.",
                "example": "UNIX",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeLOC": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "altitude": {
                "description": "The location's altitude above sea level, in meters.\n\n**Note:**\n\nMake certain that you append `m` to the altitude value.",
                "example": "178m",
                "type": "string"
              },
              "horiz_pre": {
                "description": "The location's horizontal precision distance, in meters.",
                "example": 10,
                "minimum": 1,
                "type": "integer"
              },
              "latitude": {
                "description": "The location's latitude.",
                "example": "41 51 54.305 N",
                "type": "string"
              },
              "longitude": {
                "description": "The location's longitude.",
                "example": "87 36 47.95 W",
                "type": "string"
              },
              "size": {
                "description": "The diameter of a sphere that encloses the entire location, in meters.",
                "example": 10,
                "minimum": 1,
                "type": "integer"
              },
              "version": {
                "description": "The record's version number.\n\n**Note:**\n\n* You **must** set this value to `0`.\n* For more information about LOC records, read [RFC 1876 at IANA](http://tools.ietf.org/html/rfc1876).",
                "enum": [
                  0
                ],
                "example": 0,
                "type": "integer"
              },
              "vert_pre": {
                "description": "The location's vertical precision distance, in meters.",
                "example": 10,
                "minimum": 1,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeMX": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "exchange": {
                "description": "The server's location's canonical name (CNAME).",
                "example": "mail.example.com",
                "format": "domain",
                "type": "string"
              },
              "preference": {
                "description": "The record's priority order.\n\n**Note:**\n\n* Lower values have a higher priority order.\n* For more information about MX records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": 10,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeNS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "nsdname": {
                "description": "The domain's authoritative nameserver.\n\n**Note:**\n\nFor more information about NS records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "ns1.example.com",
                "format": "domain",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypePTR": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "ptrdname": {
                "description": "A pointer to a canonical name (CNAME).\n\n**Note:**\n\n* Do **not** omit any necessary trailing periods.\n* For more information about NS records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              },
              "zone": {
                "description": "The new reverse DNS zone's name.",
                "example": "0.168.192.in-addr.arpa",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeRP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "mbox": {
                "description": "The Responsible Person's (RP) email address.\n\n**Note:**\n\n* Replace the `@` symbol with a period (`.`).\n* Do **not** omit any necessary trailing periods.\n* For more information about RP records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).",
                "example": "user.example.com.",
                "type": "string"
              },
              "txtdname": {
                "description": "The RP's domain name.\n\n**Note:**\n\nDo **not** omit any necessary trailing periods.",
                "example": "mx1.host.example.com.",
                "format": "domain",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeSOA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "Lines": {
                "description": "The number of lines in the SOA section.",
                "example": 4,
                "minimum": 1,
                "type": "integer"
              },
              "expire": {
                "description": "The amount of time, in seconds, to wait before the secondary server attempts to complete a zone transfer.",
                "example": 3600000,
                "minimum": 1,
                "type": "integer"
              },
              "mname": {
                "description": "The domain's authoritative nameserver.",
                "example": "ns1.host.example.com",
                "format": "domain",
                "type": "string"
              },
              "refresh": {
                "description": "The amount of time, in seconds, to wait before the secondary DNS server queries the primary DNS server's SOA records for changes.",
                "example": 1440,
                "minimum": 1,
                "type": "integer"
              },
              "retry": {
                "description": "The amount of time, in seconds, to wait before the secondary server retries a failed zone transfer.",
                "example": 14400,
                "minimum": 1,
                "type": "integer"
              },
              "rname": {
                "description": "The Responsible Person's (RP) email address.\n\n**Note:**\n\n* Replace the `@` symbol with a period (`.`).\n* Do **not** omit any necessary trailing periods.",
                "example": "email.host.example.com",
                "type": "string"
              },
              "serial": {
                "description": "The zone file's revision number.\n\n**Note:**\n\nFor more information about SOA records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": 2013122501,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeSRV": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "port": {
                "description": "The target host's port.",
                "example": 389,
                "type": "integer"
              },
              "priority": {
                "description": "The target host's priority preference.\n\n**Note:**\n\n* Lower numbers have a higher priority order.\n* For more information about SRV records, read [RFC 2782 at IANA](http://tools.ietf.org/html/rfc2782).",
                "example": 0,
                "type": "integer"
              },
              "target": {
                "description": "The service's target host.",
                "example": "service.example.com",
                "format": "domain",
                "type": "string"
              },
              "weight": {
                "description": "A relative weight. The system uses this value to rank entries with the same `priority` value.",
                "example": 2,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsAddZoneParameterTypeTXT": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsAddZoneParameterBase"
          },
          {
            "properties": {
              "txtdata": {
                "description": "The TXT record's data.\n\n**Note:**\n\n* This value **must** include beginning and ending quotes (`\"\"`).\n* Do **not** URI-encode the quotes.\n* For more information about TXT records, read [RFC 1464 at IANA](http://tools.ietf.org/html/rfc1464).",
                "example": "\"v=spf1 a -all\"",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterBase": {
        "properties": {
          "class": {
            "description": "The record's class.\n\nIf you do not use this parameter, the system retains the current setting.",
            "example": "IN",
            "oneOf": [
              {
                "enum": [
                  "IN"
                ],
                "type": "string"
              },
              {
                "description": "A valid DNS record class.",
                "type": "string"
              }
            ]
          },
          "domain": {
            "description": "The zone record's domain.",
            "example": "example.com",
            "format": "domain",
            "type": "string"
          },
          "line": {
            "description": "The zone record's file line number.",
            "example": 24,
            "minimum": 1,
            "type": "integer"
          },
          "name": {
            "description": "The record's name.\n\nIf you do not use this parameter, the system retains the current setting.\n\n**Note:**\n\nDo **not** omit any necessary trailing periods.",
            "example": "hostname.example.com.",
            "format": "domain",
            "type": "string"
          },
          "ttl": {
            "description": "The record's Time To Live (TTL), in seconds.",
            "example": 86400,
            "minimum": 1,
            "type": "integer"
          },
          "type": {
            "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types):\n* `A` - A records store IPv4 addresses. Use them to map a hostname to an IPv4 address.\n* `A6` - A6 records store IPv6 addresses.\n* `AAAA` - AAAA records store IPv6 addresses.\n* `AFSDB` - AFSDB records store the location of an AFS cell's database servers.\n* `CAA` - CAA records control which certificate authorities can issue SSL certificates for a domain.\n* `CNAME` - CNAME records create an alias to another hostname.\n* `DNAME` - DNAME records create an alias for a hostname and its subnames.\n* `DS` - DS records specify a record's delegation signer.\n* `HINFO` - HINFO records specify a host's CPU and OS types.\n* `LOC` - LOC records store a hostname's geographical location.\n* `MX` - MX records point a domain name to its MTAs.\n* `NS` - NS records store a domain's authoritative nameservers.\n* `PTR` - PTR records point to a CNAME.\n* `RP` - RP records store a domain's Responsible Person's information.\n* `SOA` - SOA records designate the beginning of a zone of authority.\n* `SRV` - SRV records store the service location records for newer protocols (for example, Autodiscover).\n* `TXT` - TXT records store descriptive text or useful records (for example, SPF or DKIM records).\n\nIf you do not use this parameter, the system retains the current setting.\n\n**Warning:**\n\nAdditional properties may be required based on the `type`.\n\nWhen you call this function, you **must** include the additional parameters for the desired\nzone record type if you use this parameter. Select a zone record from the menu to view the required additional\nparameters:",
            "enum": [
              "A",
              "AAAA",
              "AFSDB",
              "CAA",
              "CNAME",
              "DNAME",
              "DS",
              "HINFO",
              "LOC",
              "MX",
              "NS",
              "PTR",
              "RP",
              "SOA",
              "SRV",
              "TXT"
            ],
            "example": "A",
            "type": "string"
          }
        },
        "required": [
          "domain",
          "line",
          "ttl"
        ],
        "type": "object"
      },
      "DnsEditZoneParameterType": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeA"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeA6"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeAAAA"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeAFSDB"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeCAA"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeCNAME"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeDNAME"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeDS"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeHINFO"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeLOC"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeMX"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeNS"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypePTR"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeRP"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeSOA"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeSRV"
          },
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterTypeTXT"
          }
        ],
        "discriminator": {
          "mapping": {
            "A": "#/components/schemas/DnsEditZoneParameterTypeA",
            "A6": "#/components/schemas/DnsEditZoneParameterTypeA6",
            "AAAA": "#/components/schemas/DnsEditZoneParameterTypeAAAA",
            "AFSDB": "#/components/schemas/DnsEditZoneParameterTypeAFSDB",
            "CAA": "#/components/schemas/DnsEditZoneParameterTypeCAA",
            "CNAME": "#/components/schemas/DnsEditZoneParameterTypeCNAME",
            "DNAME": "#/components/schemas/DnsEditZoneParameterTypeDNAME",
            "DS": "#/components/schemas/DnsEditZoneParameterTypeDS",
            "HINFO": "#/components/schemas/DnsEditZoneParameterTypeHINFO",
            "LOC": "#/components/schemas/DnsEditZoneParameterTypeLOC",
            "MX": "#/components/schemas/DnsEditZoneParameterTypeMX",
            "NS": "#/components/schemas/DnsEditZoneParameterTypeNS",
            "PTR": "#/components/schemas/DnsEditZoneParameterTypePTR",
            "RP": "#/components/schemas/DnsEditZoneParameterTypeRP",
            "SOA": "#/components/schemas/DnsEditZoneParameterTypeSOA",
            "SRV": "#/components/schemas/DnsEditZoneParameterTypeSRV",
            "TXT": "#/components/schemas/DnsEditZoneParameterTypeTXT"
          },
          "propertyName": "type"
        }
      },
      "DnsEditZoneParameterTypeA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "address": {
                "description": "The zone record's IPv4 address.\n\n**Note:**\n\nFor more information about A records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "192.168.0.20",
                "format": "ipv4",
                "type": "string"
              }
            },
            "required": [
              "address"
            ],
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeA6": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "description": "\nA6 records are **deprecated**. We **strongly** recommend that you use AAAA records to\nstore IPv6 addresses.",
            "properties": {
              "prefix": {
                "deprecated": true,
                "description": "The record's prefix length.",
                "example": 48,
                "minimum": 1,
                "type": "integer"
              },
              "refer": {
                "deprecated": true,
                "description": "The record's address suffix.\n\n**Note:**\n\nYou **must** uuencode the colons (`:`) in IPv6 addresses in your function calls.",
                "example": "0::0",
                "type": "string"
              }
            },
            "required": [
              "prefix",
              "refer"
            ],
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeAAAA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "address": {
                "description": "The zone record's IPv6 address.\n\n**Note:**\n\n* You **must** uuencode the colons (`:`) in IPv6 addresses in your function calls.\n* For more information about AAAA records, read [RFC 3596 at IANA](http://tools.ietf.org/html/rfc3596).",
                "example": "2001:1:42:1::2a",
                "format": "ipv6",
                "type": "string"
              }
            },
            "required": [
              "address"
            ],
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeAFSDB": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "hostname": {
                "description": "The database servers' hostname.",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              },
              "subtype": {
                "description": "The 16-bit integer of an AFS cell type.\n\nFor example, specify `1` to signify an AFS version 3.0 Volume Location Server.\n\n**Note:**\n\n* You **must** uuencode the colons (`:`) in IPv6 addresses in your function calls.\n* For more information about AFSDB records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).",
                "example": 1,
                "type": "integer"
              }
            },
            "required": [
              "subtype",
              "hostname"
            ],
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeCAA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "flag": {
                "description": "Whether the Certificate Authority (CA) will issue an SSL certificate if the CAA resource record contains unknown property tags.\n\n* `0` - The CA will issue an SSL certificate.\n* `1` - The CA will **not** issue an SSL certificate.\n\nFor more information about CAA record flags and property tags, read the [RFC 6844 documentation](https://tools.ietf.org/html/rfc6844#section-3).",
                "enum": [
                  0,
                  1
                ],
                "example": 0,
                "type": "integer"
              },
              "tag": {
                "description": "The CAA record's property type.\n\n* `issue` - Authorize a CA to issue a certificate for the domain.\n* `issuewild` - Authorize a CA to issue a wildcard certificate for the domain.\n* `iodef` - Specify a URL to which a CA may report policy violations.",
                "enum": [
                  "issue",
                  "issuewild",
                  "iodef"
                ],
                "example": "issue",
                "type": "string"
              },
              "value": {
                "description": "The CA's domain or URL. This is a valid [SSL provider](https://sslmate.com/labs/caa/),\n`mailto` URL, or a standard URL.\n\n**Note:**\n\nIf you use `iodef` as the `tag` parameter's value, enter a URL that a CA can use to report issues as this parameter's value.",
                "example": "exampleca.com",
                "type": "string"
              }
            },
            "required": [
              "flag",
              "tag",
              "value"
            ],
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeCNAME": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "cname": {
                "description": "The canonical name (CNAME) alias.\n\n**Note:**\n\nFor more information about CNAME records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              },
              "flatten": {
                "description": "Whether to resolve the specified CNAME value with the record's IP address.\n\nIf you do **not** also set the `flatten_to` parameter, the system will attempt to resolve the CNAME automatically.\n\n* `1` - Flattened.\n* `0` - Not flattened (the function will **fail**).\n\n**Note:**\n\nOnly use this parameter when you alter the zone's `root` record.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "flatten_to": {
                "description": "The IP address that the specified CNAME will resolve to.\n\n**Note:**\n\nYou **must** use the `flatten` parameter with this parameter.",
                "oneOf": [
                  {
                    "description": "A valid IPv4 address.",
                    "example": "192.0.2.27",
                    "format": "ipv4",
                    "type": "string"
                  },
                  {
                    "description": "A valid IPv6 address.",
                    "example": "2001:0db8:85a3:0042:1000:8a2e:0370:7334",
                    "format": "ipv6",
                    "type": "string"
                  }
                ]
              }
            },
            "required": [
              "cname"
            ],
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeDNAME": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "dname": {
                "description": "The delegation name (DNAME) alias.\n\n**Note:**\n\nFor more information about DNAME records, read [RFC 2672 at IANA](http://tools.ietf.org/html/rfc2672).",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              }
            },
            "required": [
              "dname"
            ],
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeDS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "algorithm": {
                "description": "The record's algorithm number.\n\n* `1` - RSAMD5\n* `2` - Diffie-Hellman\n* `3` - DSA/SHA-1\n* `4` - Elliptic Curve\n* `5` - RSA/SHA-1\n* `252` - Indirect\n* `253` - Private DNS\n* `254` - Private OID",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5,
                  252,
                  253,
                  254
                ],
                "example": 5,
                "type": "integer"
              },
              "digitype": {
                "description": "The record's digest type.\n\n* `1` — SHA-1",
                "enum": [
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "keyname": {
                "description": "The record's KeyTag value.\n\n**Note:**\n\nFor more information about DS records, read [RFC 4034 at IANA](http://tools.ietf.org/html/rfc4034).",
                "example": 2642,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeHINFO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "cpu": {
                "description": "The host's CPU type.\n\n**Note:**\n\nFor more information about HINFO records, read [RFC 1700 at IANA](http://tools.ietf.org/html/rfc1700.txt).",
                "example": "INTEL-386",
                "type": "string"
              },
              "os": {
                "description": "The host's operating system.",
                "example": "UNIX",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeLOC": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "altitude": {
                "description": "The location's altitude above sea level, in meters.\n\n**Note:**\n\nMake certain that you append `m` to the altitude value.",
                "example": "178m",
                "type": "string"
              },
              "horiz_pre": {
                "description": "The location's horizontal precision distance, in meters.",
                "example": 10,
                "minimum": 1,
                "type": "integer"
              },
              "latitude": {
                "description": "The location's latitude.",
                "example": "54.305 N",
                "type": "string"
              },
              "longitude": {
                "description": "The location's longitude.",
                "example": "47.95 W",
                "type": "string"
              },
              "size": {
                "description": "The diameter of a sphere that encloses the entire location, in meters.",
                "example": 10,
                "minimum": 1,
                "type": "integer"
              },
              "version": {
                "description": "The record's version number.\n\n**Note:**\n\n* You **must** set this value to `0`.\n* For more information about LOC records, read [RFC 1876 at IANA](http://tools.ietf.org/html/rfc1876).",
                "enum": [
                  0
                ],
                "example": 0,
                "type": "integer"
              },
              "vert_pre": {
                "description": "The location's vertical precision distance, in meters.",
                "example": 10,
                "minimum": 1,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeMX": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "exchange": {
                "description": "The server's location's canonical name (CNAME).",
                "example": "mail.example.com",
                "format": "domain",
                "type": "string"
              },
              "preference": {
                "description": "The record's priority order.\n\n**Note:**\n\n* Lower values have a higher priority order.\n* For more information about MX records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": 10,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeNS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "nsdname": {
                "description": "The domain's authoritative nameserver.\n\n**Note:**\n\nFor more information about NS records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "ns1.example.com",
                "format": "domain",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypePTR": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "ptrdname": {
                "description": "A pointer to a canonical name (CNAME).\n\n**Note:**\n\n* Do **not** omit any necessary trailing periods.\n* For more information about PTR records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeRP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "mbox": {
                "description": "The Responsible Person's (RP) email address.\n\n**Note:**\n\n* Replace the `@` symbol with a period (`.`).\n* Do **not** omit any necessary trailing periods.\n* For more information about RP records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).",
                "example": "user.example.com.",
                "type": "string"
              },
              "txtdname": {
                "description": "The RP's domain name.\n\n**Note:**\n\nDo **not** omit any necessary trailing periods.",
                "example": "mx1.host.example.com.",
                "format": "domain",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeSOA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "expire": {
                "description": "The amount of time, in seconds, to wait before the secondary server attempts to complete a zone transfer.",
                "example": 3600000,
                "minimum": 1,
                "type": "integer"
              },
              "lines": {
                "description": "The number of lines in the SOA section.",
                "example": 4,
                "minimum": 1,
                "type": "integer"
              },
              "mname": {
                "description": "The domain's authoritative nameserver.",
                "example": "ns1.host.example.com",
                "format": "domain",
                "type": "string"
              },
              "refresh": {
                "description": "The amount of time, in seconds, to wait before the secondary DNS server queries the primary DNS server's SOA records for changes.",
                "example": 1440,
                "minimum": 1,
                "type": "integer"
              },
              "retry": {
                "description": "The amount of time, in seconds, to wait before the secondary server retries a failed zone transfer.",
                "example": 14400,
                "minimum": 1,
                "type": "integer"
              },
              "rname": {
                "description": "The Responsible Person's (RP) email address.\n\n**Note:**\n\n* Replace the `@` symbol with a period (`.`).\n* Do **not** omit any necessary trailing periods.",
                "example": "email.host.example.com",
                "type": "string"
              },
              "serial": {
                "description": "The zone file's revision number.\n\n**Note:**\n\nFor more information about SOA records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": 2013122501,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeSRV": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "port": {
                "description": "The target host's port.",
                "example": 389,
                "type": "integer"
              },
              "priority": {
                "description": "The target host's priority preference.\n\n**Note:**\n\n* Lower numbers have a higher priority order.\n* For more information about SRV records, read [RFC 2782 at IANA](http://tools.ietf.org/html/rfc2782).",
                "example": 0,
                "type": "integer"
              },
              "target": {
                "description": "The service's target host.",
                "example": "service.example.com",
                "format": "domain",
                "type": "string"
              },
              "weight": {
                "description": "A relative weight. The system uses this value to rank entries with the same `priority` value.",
                "example": 2,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "DnsEditZoneParameterTypeTXT": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DnsEditZoneParameterBase"
          },
          {
            "properties": {
              "txtdata": {
                "description": "The TXT record's data.\n\n**Note:**\n\n* This value **must** include beginning and ending quotes (`\"\"`).\n* Do **not** URI-encode the quotes.\n* For more information about TXT records, read [RFC 1464 at IANA](http://tools.ietf.org/html/rfc1464).",
                "example": "\"v=spf1 a -all\"",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "FTPBackupDestinationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationResponse"
          },
          {
            "properties": {
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "passive": {
                "default": 1,
                "description": "Whether to use passive FTP.\n* `1` - Use passive FTP.\n* `0` - Use active FTP.",
                "example": 1,
                "type": "integer"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "default": 21,
                "description": "The remote server's FTP port.",
                "example": 21,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "GoogleDriveBackupDestinationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationResponse"
          },
          {
            "properties": {
              "client_id": {
                "description": "The Google Drive client ID.",
                "example": "aBcdeFgHIjK123",
                "type": "string"
              },
              "client_secret": {
                "description": "The Google Drive client secret.",
                "example": "aBcde123FgHIjK456",
                "type": "string"
              },
              "folder": {
                "default": "",
                "description": "The path to the backups directory, relative to the root directory, on the remote server.",
                "example": "subfolder",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "Group": {
        "description": "A group of features.",
        "properties": {
          "acl": {
            "description": "The group's Access Control Lists (ACLs).\n\n**Note:**\n\n* Only WHM users who possess the specified ACLs can view or use the item.\n* System administrators can configure users' ACLs in WHM's [*Edit Reseller Nameservers and Privileges*](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) interface (*WHM >> Home >> Resellers >> Edit Reseller Nameservers and Privileges*).\n* For a complete list of available ACLs, read our [Guide to WHM Plugins - ACL Reference Chart](https://documentation.cpanel.net/display/DD/Guide+to+WHM+Plugins+-+ACL+Reference+Chart) documentation.",
            "example": "ACL=all",
            "nullable": true,
            "type": "string"
          },
          "dnsonly_ok": {
            "description": "The group's status for [cPanel DNSOnly](https://go.cpanel.net/cpanel-dnsonly)™ servers.\n\n* `dns` - The group appears on cPanel DNSOnly servers.\n* `` - The group does not appear on cPanel DNSOnly servers.",
            "enum": [
              "dns"
            ],
            "example": "dns",
            "nullable": true,
            "type": "string"
          },
          "file": {
            "description": "The icon file to display for the group.\n\n**Note:**\n\n* Icons for any WHM plugins exist separately from the server's theme. For more information, read our [Guide to WHM Plugins - Plugin Files](https://documentation.cpanel.net/display/DD/Guide+to+WHM+Plugins+-+Plugin+Files) documentation.\n* A valid `.png` or `.svg` image file, relative to the theme's icon directory.",
            "example": "feature_name.png",
            "type": "string"
          },
          "group": {
            "description": "The group name.",
            "example": "group_name",
            "type": "string"
          },
          "groupdesc": {
            "description": "The group's display name.\n\n**Note:**\n\nYou can localize this string to display it in the user's preferred language in the WHM interface. For more information, read our [Guide to Locales](https://documentation.cpanel.net/display/DD/Guide+to+Locales) documentation",
            "example": "$LANG{'Group Name'}",
            "type": "string"
          },
          "grouporder": {
            "description": "The group's display order in the WHM interface.\n\n**Note:**\n\nLower values appear at the top of the interface",
            "example": 1,
            "minimum": 1,
            "type": "integer"
          },
          "imgtype": {
            "description": "The group's image type.\n\n* `icon` - The only possible value.",
            "enum": [
              "icon"
            ],
            "example": "icon",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "type": "array"
          },
          "key": {
            "description": "A key to uniquely identify WHM interfaces and their associated assets for the [cPanel Analytics](https://go.cpanel.net/analytics) program.\n\n**Note:**\n\nGenerally, this value matches the `file` parameter's value without the file's extension.",
            "example": "feature_name",
            "type": "string"
          },
          "searchtext": {
            "description": "A list of the group's search terms, space delimited.",
            "example": "search keywords",
            "type": "string"
          },
          "subtype": {
            "description": "The icon type to use.\n\n* `img` - The only possible value.",
            "enum": [
              "img"
            ],
            "example": "img",
            "type": "string"
          },
          "target": {
            "description": "The area of the interface in which the feature appears.\n\nA valid HTML `<a>` target attribute.",
            "example": "_blank",
            "type": "string"
          },
          "type": {
            "description": "The object's type.",
            "example": "group",
            "type": "string"
          }
        },
        "required": [
          "type",
          "acl",
          "dnsonly_ok",
          "file",
          "group",
          "groupdesc",
          "grouporder"
        ],
        "type": "object"
      },
      "Image": {
        "description": "An individual WHM feature.",
        "properties": {
          "acl": {
            "description": "The feature's Access Control Lists (ACLs).\n\n**Note:**\n\n* Only WHM users who possess the specified ACLs can view or use the item.\n* System administrators can configure users' ACLs in WHM's [*Edit Reseller Nameservers and Privileges*](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) interface (*WHM >> Home >> Resellers >> Edit Reseller Nameservers and Privileges*).\n* For a complete list of available ACLs, read our [Guide to WHM Plugins - ACL Reference Chart](https://documentation.cpanel.net/display/DD/Guide+to+WHM+Plugins+-+ACL+Reference+Chart) documentation.",
            "example": "ACL=all",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "The feature's description that displays when the feature appears on the WHM Home interface.\n\n**Note:**\n\nYou can localize this string to display it in the user's preferred language in the WHM interface. For more information, read our [Guide to Locales](https://documentation.cpanel.net/display/DD/Guide+to+Locales) documentation.",
            "example": "View and manage reseller accounts on your server. Resellers manage other [asis,cPanel] accounts and can access [asis,cPanel].",
            "type": "string"
          },
          "dnsonly_ok": {
            "description": "The group's status for [cPanel DNSOnly](https://go.cpanel.net/cpanel-dnsonly)™ servers.\n\n* `dns` - The group appears on cPanel DNSOnly servers.\n* `` - The group does not appear on cPanel DNSOnly servers.",
            "enum": [
              "dns"
            ],
            "example": "dns",
            "nullable": true,
            "type": "string"
          },
          "file": {
            "description": "The icon file to display for the group.\n\n**Note:**\n\n* Icons for any WHM plugins exist separately from the server's theme. For more information, read our [Guide to WHM Plugins - Plugin Files](https://documentation.cpanel.net/display/DD/Guide+to+WHM+Plugins+-+Plugin+Files) documentation.\n* A valid `.png` or `.svg` image file, relative to the theme's icon directory.",
            "example": "feature_name.png",
            "type": "string"
          },
          "group": {
            "description": "The group in which the item appears. This is a value of an existing group object.",
            "example": "group_name",
            "type": "string"
          },
          "imgtype": {
            "description": "The feature's image type.\n\n* `icon` - The only possible value.",
            "enum": [
              "icon"
            ],
            "example": "icon",
            "type": "string"
          },
          "itemdesc": {
            "description": "The feature's display name.\n\n**Note:**\n\n* You can localize this string to display it in the user's preferred language in the WHM interface. For more information, read our [Guide to Locales](https://documentation.cpanel.net/display/DD/Guide+to+Locales) documentation.\n* This should be a [Template Toolkit](https://documentation.cpanel.net/display/DD/Guide+to+Template+Toolkit) directive.",
            "example": "$LANG{'Feature Name'}",
            "type": "string"
          },
          "itemorder": {
            "description": "The feature's display order within its group.\n\n**Note:**\n\nLower values appear earlier in the group.",
            "example": 1,
            "minimum": 1,
            "type": "integer"
          },
          "key": {
            "description": "A key to uniquely identify WHM interfaces and their associated assets for the [cPanel Analytics](https://go.cpanel.net/analytics) program.\n\n**Note:**\n\nGenerally, this value matches the `file` parameter's value without the file's extension.",
            "example": "feature_name",
            "type": "string"
          },
          "minimum_accounts_needed": {
            "description": "The minimum number of accounts required to display the feature icon.",
            "example": 2,
            "minimum": 1,
            "type": "integer"
          },
          "multiuser_required": {
            "description": "Whether the server allows for the creation of more than a single user.\n\n* `1` — Display the feature icon.\n* `0` — Do **not** display the feature icon.\n\n**Note:**\n\nYou **cannot** use this parameter on servers with a [cPanel Solo License](https://go.cpanel.net/cpanel-solo-license).",
            "enum": [
              1
            ],
            "example": 1,
            "type": "integer"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "searchtext": {
            "description": "A list search terms for the feature, space delimited.",
            "example": "search keywords",
            "type": "string"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          },
          "subitems": {
            "items": {
              "$ref": "#/components/schemas/Subitem"
            },
            "type": "array"
          },
          "subtype": {
            "description": "The icon type to use.\n\n* `img` - The only possible value.",
            "enum": [
              "img"
            ],
            "example": "img",
            "type": "string"
          },
          "target": {
            "description": "The area of the interface in which the feature appears.\n\nA valid HTML `<a>` target attribute.",
            "example": "_blank",
            "type": "string"
          },
          "type": {
            "description": "The object's type.\n\n* `image` - The only possible value.",
            "enum": [
              "image"
            ],
            "example": "image",
            "type": "string"
          },
          "url": {
            "description": "The feature's interface location. This path is relative to the `/usr/local/cpanel/` directory.",
            "example": "/example_plugin/feature_name",
            "format": "url-path",
            "type": "string"
          }
        },
        "required": [
          "type",
          "acl",
          "description",
          "dnsonly_ok",
          "file",
          "group",
          "itemorder",
          "url"
        ],
        "type": "object"
      },
      "Int0-999999NullOrUnlimited": {
        "example": "unlimited",
        "nullable": true,
        "oneOf": [
          {
            "enum": [
              "unlimited"
            ],
            "type": "string"
          },
          {
            "maximum": 999999,
            "minimum": 0,
            "type": "integer"
          }
        ]
      },
      "Int0Max999999NullOrUnlimited": {
        "example": "unlimited",
        "nullable": true,
        "oneOf": [
          {
            "enum": [
              "unlimited"
            ],
            "type": "string"
          },
          {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer"
          }
        ]
      },
      "Int999999OrUnlimited": {
        "example": "unlimited",
        "oneOf": [
          {
            "enum": [
              "unlimited"
            ],
            "type": "string"
          },
          {
            "maximum": 999999,
            "minimum": 0,
            "type": "integer"
          }
        ]
      },
      "IntPosNullOrUnlimited": {
        "example": "unlimited",
        "nullable": true,
        "oneOf": [
          {
            "enum": [
              "unlimited"
            ],
            "type": "string"
          },
          {
            "minimum": 0,
            "type": "integer"
          }
        ]
      },
      "IntPosOrUnlimited": {
        "example": "unlimited",
        "oneOf": [
          {
            "enum": [
              "unlimited"
            ],
            "type": "string"
          },
          {
            "minimum": 0,
            "type": "integer"
          }
        ]
      },
      "LocalBackupDestinationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationResponse"
          },
          {
            "properties": {
              "mount": {
                "default": 0,
                "description": "Whether the path is mounted.\n* `1` - The path is mounted.\n* `0` - The path is **not** mounted.",
                "enum": [
                  1,
                  0
                ],
                "example": 0,
                "type": "integer"
              },
              "no_mount_fail": {
                "default": 0,
                "description": "Whether to fail the backup attempt if the mount fails.\n* `1` - Fail the backup attempt.\n* `0` - Do **not** fail the backup attempt.",
                "enum": [
                  1,
                  0
                ],
                "example": 0,
                "type": "integer"
              },
              "path": {
                "description": "The absolute path to the backups directory.",
                "example": "/home/backups",
                "format": "path",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "MarketItem": {
        "description": "A product available from one of the cPanel Market providers.",
        "properties": {
          "billing_type": {
            "description": "The type of billing used with the product.\n\n* `none` - The product is free.\n* `one-time` - Use of the product requires a one-time payment.\n* `monthly` - Use of the product requires a monthly subscription payment.\n* `yearly` - Use of the product requires a yearly subscription payment.",
            "enum": [
              "none",
              "one-time",
              "monthly",
              "yearly"
            ],
            "type": "string"
          },
          "description": {
            "description": "A description of the product.",
            "example": "An Extended Validation (EV) SSL certificate signed by cPanel.",
            "type": "string"
          },
          "display_name": {
            "description": "The product's display name.",
            "example": "EV Certificate by cPanel.",
            "type": "string"
          },
          "icon": {
            "description": "The icon to display in the product list.",
            "format": "base64 image",
            "type": "string"
          },
          "icon_mime_type": {
            "description": "The icon's image format.",
            "example": "image/svg+xml",
            "format": "MIME",
            "type": "string"
          },
          "max_users": {
            "description": "The maximum number of users the system will allow for the product.",
            "nullable": true,
            "type": "integer"
          },
          "maximum_server_price": {
            "description": "The maximum price that the system will allow for the product.",
            "example": "20",
            "format": "currency",
            "nullable": true,
            "type": "string"
          },
          "minimum_server_price": {
            "description": "The minimum price that the system will allow for the product.",
            "example": "3",
            "format": "currency",
            "nullable": true,
            "type": "string"
          },
          "price": {
            "description": "The product's price.\n* `null` - The item does not possess a static price.",
            "example": "6",
            "format": "currency",
            "minimum": 1,
            "nullable": true,
            "type": "string"
          },
          "price_unit": {
            "description": "The currency code of the product's price.",
            "example": "USD",
            "format": "ISO-4217",
            "type": "string"
          },
          "product": {
            "description": "The human-readable product name. Use this in displays to the user.",
            "example": "Comodo EV Certificate",
            "type": "string"
          },
          "product_category": {
            "example": "N/A",
            "type": "string"
          },
          "product_group": {
            "description": "The product's group.",
            "example": "ssl_certificate",
            "type": "string"
          },
          "product_id": {
            "description": "The product's ID.",
            "example": "12345",
            "type": "string"
          },
          "provider_display_name": {
            "description": "The cPanel Market provider's display name.",
            "example": "cPanel Store",
            "type": "string"
          },
          "provider_name": {
            "description": "The cPanel Market provider's name.",
            "example": "cPStore",
            "type": "string"
          },
          "requires_ip": {
            "default": "0",
            "description": "Whether product require an IP address.\n* `1` - The product requires an IP address.\n* `0` - The product does **NOT** require an IP address.",
            "enum": [
              "1",
              "0"
            ],
            "example": "0",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketItemType": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/MarketItem"
          },
          {
            "$ref": "#/components/schemas/SSLCertificateMarketItem"
          }
        ]
      },
      "MarketProviderMetaData": {
        "properties": {
          "display_name": {
            "description": "Metadata information about the product's display name.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          },
          "enabled": {
            "description": "Metadata information about whether the product is enabled in the Market.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          },
          "icon": {
            "description": "Mtadata information about the product's icon file.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          },
          "icon_mime_type": {
            "description": "Metadata information about the icon's mime type.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          },
          "minimum_server_price": {
            "description": "Metadata information about the minimum server price for the certificate.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          },
          "price": {
            "description": "Metadata information about the product's price.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          },
          "price_unit": {
            "description": "Metadata information about the product's price per unit.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          },
          "product_description": {
            "description": "Metadata information about the product's description.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          },
          "product_group": {
            "description": "Metadata information about the product's group label.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          },
          "product_id": {
            "description": "Metadata information about the product's ID.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          },
          "recommended": {
            "description": "Metadata information about whether the product is recommended.",
            "properties": {
              "read_only": {
                "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                "enum": [
                  0,
                  1
                ],
                "example": 1
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Raw": {
        "description": "Raw data for template directives.",
        "properties": {
          "itemdesc": {
            "description": "A valid [Template Toolkit](https://documentation.cpanel.net/display/DD/Guide+to+Template+Toolkit) directive.",
            "example": "[% PROCESS 'menu/plugins_list.tmpl' target='mainFrame' -%]",
            "type": "string"
          },
          "type": {
            "description": "The object's type.\n\n* `raw` - The only possible value. Raw data for template directives.",
            "enum": [
              "raw"
            ],
            "example": "raw",
            "type": "string"
          }
        },
        "required": [
          "type",
          "itemdesc"
        ],
        "type": "object"
      },
      "Role": {
        "anyOf": [
          {
            "properties": {
              "match": {
                "description": "Whether to require all roles in the roles parameter to match the server's roles.\n\n* `all` - Require the server to match all roles in the roles parameter to display the feature. (AND condition)\n* `any` - Require the server to match any role in the roles parameter to display the feature. (OR condition)",
                "enum": [
                  "any"
                ],
                "example": "any",
                "type": "string"
              },
              "roles": {
                "description": "The array of role names.",
                "example": [
                  "MailLocal",
                  "MailSend"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          {
            "example": "MailSend",
            "type": "string"
          }
        ],
        "description": "The feature's server role.\n\n**Warning:**\n\nThe server creates this parameter automatically. Do **not** edit this parameter's value. We do **not** support customizations to this parameter.\n\n**Note:**\n\n* The icon only appears in the interface if the server configuration uses this role.\n* For more information about roles and server configurations, read our [How to Use Server Profiles](https://go.cpanel.net/howtouseserverprofiles) documentation."
      },
      "RsyncBackupDestinationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationResponse"
          },
          {
            "properties": {
              "authtype": {
                "description": "The authorization type.\n* `password`\n* `key`",
                "enum": [
                  "password",
                  "key"
                ],
                "example": "password"
              },
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "default": 22,
                "description": "The remote server's FTP port.",
                "example": 22,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "privatekey": {
                "description": "If the `authtype` return's value is `key`, the absolute path to the private key file.",
                "example": "/home/backups/key",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "S3CompatibleBackupDestinationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationResponse"
          },
          {
            "properties": {
              "aws_access_key_id": {
                "description": "The S3-compatible provider key ID.",
                "example": "s123456789",
                "type": "string"
              },
              "bucket": {
                "description": "The S3-compatible bucket.",
                "example": "ChockFullOfNuts",
                "type": "string"
              },
              "folder": {
                "default": "",
                "description": "The path to the backups directory, relative to the root directory, on the remote server.",
                "example": "subfolder",
                "type": "string"
              },
              "host": {
                "description": "The S3-compatible provider's server.",
                "example": "www.s3example.com",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "SFTPBackupDestinationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationResponse"
          },
          {
            "properties": {
              "authtype": {
                "description": "The authorization type.\n* `password`\n* `key`",
                "enum": [
                  "password",
                  "key"
                ],
                "example": "password"
              },
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "default": 21,
                "description": "The remote server's FTP port.",
                "example": 21,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "privatekey": {
                "description": "If the `authtype` return's value is `key`, the absolute path to the private key file.",
                "example": "/home/backups/key",
                "type": "string"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "SSLCertificateMarketItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MarketItem"
          },
          {
            "properties": {
              "x_certificate_term": {
                "description": "An array indicating the length and unit of time that the product secures for.",
                "example": [
                  "1",
                  "year"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "x_identity_verification": {
                "description": "An array of objects that define a schema for identity\n  verification information for Organizational Validation (OV)\n  and Extended Validation (EV) certificates.\nOV and EV certificates require identifying information.",
                "items": {
                  "properties": {
                    "description": {
                      "description": "A sentence that provides more information about the SSL provider.",
                      "example": "This is a company name",
                      "type": "string"
                    },
                    "is_optional": {
                      "description": "Whether the value is optional.\n* `1` - Optional.\n* Any object that does **not** contain a `1` value indicates that the SSL certificate provider requires identity verification.",
                      "enum": [
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "label": {
                      "description": "A phrase that serves as a label for the value.",
                      "example": "Company Name",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name by which to submit this value.",
                      "example": "duns_number",
                      "type": "string"
                    },
                    "options": {
                      "description": "An array of two member arrays.\n\n**Note:**\n\nThis return **only** appears if the type return contains the `choose_one` value.",
                      "example": [
                        [
                          "b",
                          "Incorporated Business"
                        ],
                        [
                          "d",
                          "Government Entity"
                        ]
                      ],
                      "type": "array"
                    },
                    "pattern": {
                      "description": "A regular expression pattern that clients should use to verify the relevant value prior to order submission.\n\n**Note:**\n\nThis return only appears if the `type` return contains the `text` value.",
                      "example": "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$",
                      "format": "regex",
                      "type": "string"
                    },
                    "type": {
                      "description": "A description of the value.\n* `text` - A general text statement.\n* `email` - An email address.\n* `tel` - A telephone number.\n* `country_code` - A country code ID.\n* `choose_one` - The user must select one of the provided options.\n* A date, in `yyyy-MM-dd` format.",
                      "oneOf": [
                        {
                          "enum": [
                            "test",
                            "email",
                            "tel",
                            "country_code",
                            "choose_one"
                          ],
                          "example": "choose_one",
                          "type": "string"
                        },
                        {
                          "example": "2020-08-15T00:00:00.000Z",
                          "format": "ISO-8601 Date",
                          "type": "string"
                        }
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "x_max_http_redirects": {
                "description": "The maximum number of HTTP redirections that the\n  provider allows during a Domain Control Validation (DCV)\n  check of the domain or domains in the certificate.",
                "example": 1,
                "minimum": 0,
                "type": "integer"
              },
              "x_payment_trigger": {
                "description": "Whether the provider charges immediately or when they issue the SSL certificate.\n\n* `checkout` - Collect payment and finalize immediately after checkout. Any failures to issue the certificate **must** prompt a separate refund.\n* `issuance` - Collect payment when the provider issues the certificate to the user.",
                "enum": [
                  "checkout",
                  "issuance"
                ],
                "example": "issuance",
                "type": "string"
              },
              "x_price_per_domain": {
                "description": "The product's price per domain.",
                "example": "3",
                "format": "currency",
                "type": "string"
              },
              "x_price_per_domain_maximum": {
                "description": "The maximum price per domain.",
                "example": "30.00",
                "format": "currency",
                "type": "string"
              },
              "x_price_per_domain_minimum": {
                "description": "The minimum price per domain.",
                "example": "3.00",
                "format": "currency",
                "type": "string"
              },
              "x_price_per_wildcard_domain": {
                "description": "The price per domain for a wildcard certificate.",
                "example": "99.00",
                "format": "currency",
                "type": "string"
              },
              "x_price_per_wildcard_domain_maximum": {
                "description": "The maximum price per wildcard domain.",
                "example": "990.00",
                "format": "currency",
                "type": "string"
              },
              "x_price_per_wildcard_domain_minimum": {
                "description": "The minimum price per wildcard domain.",
                "example": "99.00",
                "format": "currency",
                "type": "string"
              },
              "x_ssl_per_domain_pricing": {
                "description": "Whether the provider uses per-domain pricing for this certificate.\n* `1` - The provider uses per-domain pricing.\n* `0` - The provider does *not* use per-domain pricing.",
                "enum": [
                  1,
                  0
                ],
                "example": 1,
                "type": "integer"
              },
              "x_supports_dns_dcv": {
                "description": "Whether this product supports DNS-based DCV.\n* `1` - This product supports DNS-based DCV.\n* `0` - This product does *not* support DNS-based DVC.",
                "enum": [
                  1,
                  0
                ],
                "example": 1,
                "type": "integer"
              },
              "x_validation_type": {
                "description": "The type of validation that the product creates.\n\n* `dv` - Domain Validation\n* `ev` - Extended Validation\n* `ov` - Organization Validation",
                "enum": [
                  "dv",
                  "ev",
                  "ov"
                ],
                "example": "dv"
              },
              "x_warn_after": {
                "description": "A length of time, in seconds, after which the cPanel interface\n  warns the user that a problem may exist with the order.\nThe warning will suggest that they should contact\n  the cPanel Market provider's support contact.",
                "example": 14400,
                "minimum": 1,
                "type": "integer"
              },
              "x_wildcard_parent_domain_free": {
                "description": "Whether the provider includes the price of the parent domain in the price of a wildcard certificate.\n\nFor example, a wildcard certificate for `*.example.com` possesses the `example.com` parent domain.\n\n* `1` - Yes, the parent domain is included.\n* `0` - No, the parent domain costs extra.",
                "enum": [
                  1,
                  0
                ],
                "example": 1,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "description": "An SSL certificate product available from one of the cPanel Market providers."
      },
      "SSLMarketProviderMetaData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MarketProviderMetaData"
          },
          {
            "properties": {
              "x_identity_verification": {
                "description": "Defines a schema for identity verification information for OV and EV certificates.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_max_http_redirects": {
                "description": "Information about the maximum number of HTTP redirections that the provider allows during a Domain Control Validation (DCV) check of the domain or domains in the certificate.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_price_per_domain": {
                "description": "Metadata information about the product's price per domain.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_price_per_domain_maximum": {
                "description": "Information about the maximum allowable price per domain for the certificate.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_price_per_domain_minimum": {
                "description": "Information about the minimum allowable price per domain for the certificate.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_price_per_wildcard_domain": {
                "description": "Information about the price per wildcard certificate.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_price_per_wildcard_domain_maximum": {
                "description": "Information about the maximum allowable price per wildcard certificate.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_price_per_wildcard_domain_minimum": {
                "description": "Information about the minimum allowable price per wildcard certificate.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_ssl_per_domain_pricing": {
                "description": "Metadata information about the product's pricing per domain.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_supports_dns_dcv": {
                "description": "Information about whether the product supports DNS-based DCV.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_warn_after": {
                "description": "Information about a length of time after which the cPanel interface will warn the user that there may be a problem with the order.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              },
              "x_wildcard_parent_domain_free": {
                "description": "Information about whether the provider includes the price of the parent domain in the price of a wildcard certificate.",
                "properties": {
                  "read_only": {
                    "description": "Whether the attribute is read-only.\n* `1` — The attribute is read-only.\n* `0` — System administrators can edit the attribute.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": 1
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Service": {
        "description": "The [cPanel Service Daemon](https://go.cpanel.net/ThecPanelWHMServiceDaemons) that monitors the feature.\n\n**Warning:**\n\nThe server creates this parameter automatically. Do **not** edit this parameter's value. We do not support customizations to this parameter.\n\n**Note:**\n\n* This icon only appears on servers with the service enabled.\n* For a complete list of service daemons, read our [cPanel Service Daemons](https://go.cpanel.net/ThecPanelWHMServiceDaemons) documentation.",
        "example": "mysql",
        "oneOf": [
          {
            "properties": {
              "match": {
                "description": "Whether to require all services in the services parameter to match enabled services on the server.\n\n* `all` - Require the server to match **all** services under the `services` key to display the feature. (AND condition)\n* `any` - Require the server to match any service under the `services` key to display the feature. (OR condition)",
                "enum": [
                  "any"
                ],
                "example": "any",
                "type": "string"
              },
              "services": {
                "description": "An array of services.",
                "example": [
                  "mysql",
                  "ftp"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          {
            "example": "mysql",
            "type": "string"
          }
        ]
      },
      "Subitem": {
        "description": "A subsection of an individual WHM feature.",
        "properties": {
          "acl": {
            "description": "The subitem's Access Control Lists (ACLs).\n\n**Note:**\n\n* Only WHM users who possess the specified ACLs can view or use the item.\n* System administrators can configure users' ACLs in WHM's [*Edit Reseller Nameservers and Privileges*](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) interface (*WHM >> Home >> Resellers >> Edit Reseller Nameservers and Privileges*).\n* For a complete list of available ACLs, read our [Guide to WHM Plugins - ACL Reference Chart](https://documentation.cpanel.net/display/DD/Guide+to+WHM+Plugins+-+ACL+Reference+Chart) documentation.",
            "example": "ACL=all",
            "nullable": true,
            "type": "string"
          },
          "breadcrumb": {
            "description": "A subitem's parent feature's location.\n\n* The system uses this value to generate breadcrumbs at the top of each WHM interface.\n* The subitem's parent feature's `url` value.",
            "example": "/example_plugin/feature_name",
            "format": "url-path",
            "type": "string"
          },
          "dnsonly_ok": {
            "description": "The subitem's status for [cPanel DNSOnly](https://go.cpanel.net/cpanel-dnsonly)™ servers.\n\n* `dns` - The subitem appears on cPanel DNSOnly servers.\n* `` - The subitem does not appear on cPanel DNSOnly servers.",
            "enum": [
              "dns"
            ],
            "example": "dns",
            "nullable": true,
            "type": "string"
          },
          "file": {
            "description": "The icon file to display for the subitem.\n\n**Note:**\n\n* Icons for any WHM plugins exist separately from the server's theme. For more information, read our [Guide to WHM Plugins - Plugin Files](https://documentation.cpanel.net/display/DD/Guide+to+WHM+Plugins+-+Plugin+Files) documentation.\n* A valid `.png` or `.svg` image file, relative to the theme's icon directory.",
            "example": "feature_name.png",
            "type": "string"
          },
          "group": {
            "description": "The group in which the subitem appears. This is a value of an existing group object.",
            "example": "group_name",
            "type": "string"
          },
          "itemdesc": {
            "description": "The subitem's display name.\n\n**Note:**\n\n* You can localize this string to display it in the user's preferred language in the WHM interface. For more information, read our [Guide to Locales](https://documentation.cpanel.net/display/DD/Guide+to+Locales) documentation.",
            "example": "$LANG{'Feature Name'}",
            "type": "string"
          },
          "key": {
            "description": "A key to uniquely identify WHM interfaces and their associated assets for the [cPanel Analytics](https://go.cpanel.net/analytics) program.\n\n**Note:**\n\nGenerally, this value matches the `file` parameter's value without the file's extension.",
            "example": "feature_name",
            "type": "string"
          },
          "parent": {
            "description": "The subitem's parent feature's display order in the WHM interface. This is the parent feature's `itemorder` value.",
            "example": 1,
            "minimum": 1,
            "type": "integer"
          },
          "searchtext": {
            "description": "A list search terms for the subitem, space delimited.",
            "example": "search keywords",
            "type": "string"
          },
          "target": {
            "description": "The area of the interface in which the subitem displays.\n\nA valid HTML `<a>` target attribute.",
            "example": "_blank",
            "type": "string"
          },
          "type": {
            "description": "The object's type.\n\n* `subitem` - The only possible value.",
            "enum": [
              "subitem"
            ],
            "example": "subitem",
            "type": "string"
          },
          "url": {
            "description": "The subitem's interface location. This path is relative to the `/usr/local/cpanel/` directory.",
            "example": "/example_plugin/feature_name",
            "format": "url-path",
            "type": "string"
          }
        },
        "required": [
          "type",
          "acl",
          "breadcrumb",
          "dnsonly_ok",
          "file",
          "group",
          "parent",
          "url"
        ],
        "type": "object"
      },
      "Transfers_EnqueueTransferItem_Base": {
        "properties": {
          "module": {
            "description": "The transfer system module.\n\n* `LegacyAccountBackup` — This module restores legacy-account backup files.\n* `FeatureListRemoteRoot` — This module transfers the feature list from the remote server.\n* `PackageRemoteRoot` — This module transfers the package settings.\n* `AccountLocal` — This module restores backup files.\n* `AccountRemoteRoot` — This module uses the `root` credentials to transfer account settings that are not a part of a package.\n* `AccountRemoteUser` — This module uses the account's user credentials to transfer account settings that are not a part of a package.\n\n**Note:**\n\n* The `module` parameter determines which additional parameters to use with the function.\n* You **must** perform each module action as a separate step.\n\nWhen you call this function, you **must** include the additional parameters for the desired transfer system module. Select a module from the menu to view its required additional parameters:",
            "example": "AccountRemoteRoot",
            "type": "string"
          },
          "size": {
            "default": 1,
            "description": "The size of the content to transfer, in bytes.",
            "example": 133698,
            "minimum": 1,
            "type": "integer"
          },
          "transfer_session_id": {
            "description": "The transfer session's ID.",
            "example": "vm5docscpanelcopya20140211211719FxjU",
            "type": "string"
          }
        },
        "required": [
          "transfer_session_id",
          "module"
        ],
        "type": "object"
      },
      "Transfers_EnqueueTransferItem_Type": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot"
          },
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountRemoteRoot"
          },
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountRemoteUser"
          },
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_FeatureListRemoteRoot"
          },
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_LegacyAccountBackup"
          },
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_PackageRemoteRoot"
          }
        ],
        "discriminator": {
          "mapping": {
            "AccountLocal": "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot",
            "AccountRemoteRoot": "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountRemoteRoot",
            "AccountRemoteUser": "#/components/schemas/Transfers_EnqueueTransferItem_Type_Account_Base",
            "FeatureListRemoteRoot": "#/components/schemas/Transfers_EnqueueTransferItem_Type_FeatureListRemoteRoot",
            "LegacyAccountBackup": "#/components/schemas/Transfers_EnqueueTransferItem_Type_LegacyAccountBackup",
            "PackageRemoteRoot": "#/components/schemas/Transfers_EnqueueTransferItem_Type_PackageRemoteRoot"
          },
          "propertyName": "module"
        }
      },
      "Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_Account_Base"
          },
          {
            "properties": {
              "force": {
                "description": "Whether to overwrite an account with an identical username.\n\n* `1` — Overwrite the account.\n* `0` — Do **not** overwrite the account.\n\nThis parameter performs the following actions:\n\n* Restores the cPanel account on the destination server.\n* Overwrites all account settings, data, and databases.\n* Ignores errors and warnings for naming conflicts.\n\n**Note:**\n\n* The values you enter for the `user` and `localuser` parameters **must** match.\n* You cannot use this parameter if you called the WHM API 1 `create_remote_root_transfer_session` function with the `unrestricted_restore` parameter set to `1`.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "skipaccount": {
                "description": "Whether to skip the recreation of the account.\n\n* `1` — Skip.\n* `0` — Restore.\n\n**Note:**\n\n* The values you enter for the `user` and `localuser` parameters **must** match.\n* This parameter is similar to the `force` parameter, but performs none of the account creation steps.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "Transfers_EnqueueTransferItem_Type_AccountRemoteRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot"
          },
          {
            "properties": {
              "live_transfer": {
                "default": 0,
                "description": "Whether to use the [*Live Transfer*](https://go.cpanel.net/livetransfers) feature.\n\n* `1` — Use.\n* `0` — Do **not** use.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "xferpoint": {
                "description": "Whether to use the [*Express Transfer*](https://go.cpanel.net/livetransfer) feature.\n\n* `1` — Use.\n* `0` — Do **not** use.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              }
            }
          }
        ]
      },
      "Transfers_EnqueueTransferItem_Type_AccountRemoteUser": {
        "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_Account_Base"
      },
      "Transfers_EnqueueTransferItem_Type_Account_Base": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Base"
          },
          {
            "properties": {
              "customip": {
                "description": "The custom IP address to assign to the transferred account.\n\n**Note:**\n\nThis parameter requires that the `ip` parameter has a value of `1`.",
                "example": "192.168.0.1",
                "type": "string"
              },
              "detected_remote_user": {
                "description": "The user account name that the remote server returns when you query the user account.",
                "example": "user",
                "type": "string"
              },
              "domain": {
                "description": "The domain name.",
                "example": "example.com",
                "format": "domain",
                "type": "string"
              },
              "ip": {
                "description": "Whether to assign a dedicated IP address to the transferred account.\n\n* `1` — Assign a dedicated IP address.\n* `0` — Do **not** assign a dedicated IP address.\n\n**Note:**\n\nIf no dedicated IP address exists, the system assigns the account to a shared IP address.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "localuser": {
                "description": "The local account's username.",
                "example": "localuser",
                "format": "username",
                "type": "string"
              },
              "mail_location": {
                "default": ".existing",
                "description": "The server on which the account's email will reside after it completes the transfer.\n\n* `.local` — The local server.\n* `.existing` — Use the location defined in the account's backup data.\n* The alias (friendly name) of a remote [cPanel & WHM linked server node.](https://go.cpanel.net/whmdocsLinkServerNodes). For example, the `example-alias` for the `servernode.example.com` domain.\n\n**Note:**\n\nThe system will use the `.local` option if:\n  * The system cannot use the cPanel & WHM linked server node when you call the `.existing` option.\n  * The cPanel & WHM linked server node's alias (friendly name) is invalid.",
                "example": ".local",
                "oneOf": [
                  {
                    "enum": [
                      ".local",
                      ".existing"
                    ],
                    "type": "string"
                  },
                  {
                    "description": "A remote cPanel & WHM linked server node's alias (friendly name).",
                    "type": "string"
                  }
                ]
              },
              "overwrite_sameowner_dbs": {
                "description": "Whether to allow the system to overwrite the account's existing databases with the databases in the backup file.\n\n* `1` — Overwrite.\n* `0` — Do **not** overwrite.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "overwrite_sameowner_dbusers": {
                "description": "Whether to allow the system to overwrite the account's existing database users with the database users in the backup file.\n\n* `1` — Overwrite.\n* `0` — Do **not** overwrite.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "overwrite_with_delete": {
                "description": "Whether to replace and delete **all** directories and files on the destination server.\n\n* `1` — Overwrite.\n* `0` — Do **not** overwrite.\n\n**Warning:**\n\nIf you use this parameter, the system deletes **every** directory and file on the destination server. The system does **not** delete the directories and files from the source server.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "replaceip": {
                "description": "The lines in the domain's zonefile to replace with the new IP address.\n\n* `all` — Replace all of the matching `A` record addresses in the zone file with the new IP address, including custom `A` records.\n* `basic` — Replace **only** the cPanel-managed `A` records for this IP address. This includes the main domain and any [service subdomains](https://go.cpanel.net/ServiceProxySubdomains).",
                "enum": [
                  "all",
                  "basic"
                ],
                "example": "all",
                "type": "string"
              },
              "reseller": {
                "description": "Whether to make the account a reseller.\n\n* `1` — Make the account a reseller account.\n* `0` — Do **not** make the account a reseller account.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "shared_mysql_server": {
                "description": "Whether one of the following conditions is true:\n\n* The target and remote servers share the same remote MySQL server.\n* The target server is the remote MySQL server for the remote server.\n* The remote server is the remote MySQL server for the target server.\n\nValue:\n\n* `1` — One is true.\n* `0` — None are true.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "skipacctdb": {
                "description": "Whether to skip the transfer of the account's databases.\n\n* `1` — Skip.\n* `0` — Restore.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "skipbwdata": {
                "description": "Whether to skip the transfer of the account's bandwidth data.\n\n* `1` — Skip.\n* `0` — Restore.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "skiphomedir": {
                "description": "Whether to skip the contents of the home directory.\n\n* `1` — Skip.\n* `0` — Restore.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "skipres": {
                "description": "Whether to skip restoration of the account's reseller permissions.\n\n* `1` — Skip.\n* `0` — Restore.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "user": {
                "description": "The account to transfer.",
                "example": "user",
                "format": "username",
                "type": "string"
              }
            },
            "required": [
              "user",
              "localuser"
            ],
            "type": "object"
          }
        ]
      },
      "Transfers_EnqueueTransferItem_Type_FeatureListRemoteRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Base"
          },
          {
            "properties": {
              "featurelist": {
                "description": "The feature list's name.",
                "example": "user_features",
                "type": "string"
              }
            },
            "required": [
              "featurelist"
            ],
            "type": "object"
          }
        ]
      },
      "Transfers_EnqueueTransferItem_Type_LegacyAccountBackup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Base"
          },
          {
            "properties": {
              "mysql_dbs_to_restore": {
                "description": "A comma-separated list of MySQL databases to restore, which will overwrite those databases on the account.\n\n**Note:**\n\nThe default behavior is to select and overwrite all databases.\n\n**Warning:**\n\nThe _Restricted Restore_ feature does not allow an account to overwrite data that it does not own. If the transfer session's `unrestricted_restore` parameter has a value of `0`, this parameter is ignored.",
                "example": "msdb1,msdb2,msdb3",
                "type": "string"
              },
              "overwrite_all_dbs": {
                "description": "Whether to allow the system to overwrite all of the account's databases with the databases in the backup file.\n\n* `1` — Overwrite.\n* `0` — Do **not** overwrite.\n\n**Note:**\n\nYou may use only **one** of the following parameters:\n\n* `overwrite_all_dbs`\n* `overwrite_sameowner_dbs`\n* Both the `mysql_dbs_to_restore` and `pgsql_dbs_to_restore` parameters.\n\nIf you do not use any of these parameters, the system will restore all of the databases on the account, but will **not** overwrite any of them.\n\n**Warning:**\n\nThe _Restricted Restore_ feature does not allow an account to overwrite data that it does not own. If the transfer session's `unrestricted_restore` parameter has a value of `0`, the `overwrite_all_dbs` parameter will automatically change to a value of `0` and the `overwrite_sameowner_dbs` parameter will change to a value of `1`. This prevents the restore system from overwriting databases that the account does not own.",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "overwrite_sameowner_dbs": {
                "description": "Whether to allow the system to overwrite the account's existing databases with the databases in the backup file.\n\n* `1` — Overwrite.\n* `0` — Do **not** overwrite.",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "overwrite_sameowner_dbusers": {
                "description": "Whether to allow the system to overwrite the account's existing database users with the database users in the backup file.\n\n* `1` — Overwrite.\n* `0` — Do **not** overwrite.",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "pgsql_dbs_to_restore": {
                "description": "A comma-separated list of PostgreSQL® databases to restore, which will overwrite those databases on the account.\n\n**Note:**\n\nThe default behavior is to select and overwrite all databases.\n\n**Warning:**\n\nThe _Restricted Restore_ feature does not allow an account to overwrite data that it does not own. If the transfer session's `unrestricted_restore` parameter has a value of `0`, this parameter is ignored.",
                "example": "pgdb1,pgdb2,pgdb3",
                "type": "string"
              },
              "restoreall": {
                "description": "Whether to recreate the account on the target server.\n\n* `1` — Recreate.\n* `0` — Do **not** recreate.",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "restorebwdata": {
                "description": "Whether to restore bandwidth data.\n\n* `1` — Restore.\n* `0` — Do **not** restore.",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "restoreip": {
                "description": "Whether to assign the account's dedicated IP address that is stored in the backup file.\n\n* `1` — Assign.\n* `0` — Do **not** assign.",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "restoremail": {
                "description": "Whether to restore the account's mail data.\n\n* `1` — Restore.\n* `0` — Do **not** restore.",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "restoremysql": {
                "description": "Whether to restore MySQL® database data.\n\n* `1` — Restore.\n* `0` — Do **not** restore.",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "restoresubs": {
                "description": "Whether to restore the account's subdomains.\n\n* `1` — Restore.\n* `0` — Do **not** restore.",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "restoretype": {
                "description": "The backup type to restore.\n\n* `monthly`\n* `weekly`\n* `daily`",
                "enum": [
                  "monthly",
                  "weekly",
                  "daily"
                ],
                "example": "daily",
                "type": "string"
              },
              "unrestricted_restore": {
                "description": "Whether to bypass the *Restricted Restore* system.\n\n* `1` — Bypass.\n* `0` — Do **not** bypass.",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "user": {
                "description": "The account's username.",
                "example": "user",
                "format": "username",
                "type": "string"
              }
            },
            "required": [
              "user",
              "restoretype"
            ],
            "type": "object"
          }
        ]
      },
      "Transfers_EnqueueTransferItem_Type_PackageRemoteRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Base"
          },
          {
            "properties": {
              "package": {
                "description": "The package's name.",
                "example": "user_package",
                "type": "string"
              }
            },
            "required": [
              "package"
            ],
            "type": "object"
          }
        ]
      },
      "WebDAVBackupDestinationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupDestinationResponse"
          },
          {
            "properties": {
              "host": {
                "description": "The remote server's hostname.",
                "example": "backups.example.com",
                "format": "domain",
                "type": "string"
              },
              "path": {
                "description": "The path to the backups directory on the remote server.",
                "example": "/backups",
                "format": "path",
                "type": "string"
              },
              "port": {
                "default": 21,
                "description": "The remote server's FTP port.",
                "example": 21,
                "maximum": 65535,
                "minimum": 1,
                "type": "integer"
              },
              "ssl": {
                "default": 1,
                "description": "Whether to use SSL.\n* `1` - Use SSL.\n* `0` - Do **not** use SSL.",
                "enum": [
                  1,
                  0
                ],
                "example": 1,
                "type": "integer"
              },
              "timeout": {
                "default": 30,
                "description": "The session timeout, in seconds.",
                "example": 300,
                "maximum": 300,
                "minimum": 30,
                "type": "integer"
              },
              "username": {
                "description": "The remote server account's username.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "a": {
        "allOf": [
          {
            "properties": {
              "address": {
                "description": "The zone record's IPv4 address.",
                "example": "192.168.0.20",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `A` — A records store IPv4 addresses. Use them to map a hostname to an IPv4 address.",
                "example": "A",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing A record data.\n\n**Note:**\n\nFor more information about A records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035)."
      },
      "a6": {
        "allOf": [
          {
            "properties": {
              "prefix": {
                "description": "The record's prefix length.",
                "example": 48,
                "type": "integer"
              },
              "refer": {
                "description": "The record's address suffix.",
                "example": "0::0",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `A6` — A6 records store IPv6 addresses.\n\n**Important:**\n\nA6 records are **deprecated**. We strongly **recommend** that you use [AAAA](http://tools.ietf.org/html/rfc3596) records to store IPv6 addresses.",
                "example": "A6",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing A6 record data.\n\n**Important:**\n\nA6 records are **deprecated**. We strongly **recommend** that you use [AAAA](http://tools.ietf.org/html/rfc3596) records to store IPv6 addresses."
      },
      "aaaa": {
        "allOf": [
          {
            "properties": {
              "address": {
                "description": "The zone record's IPv6 address.",
                "example": "2001:1:42:1::2a",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `AAAA` — AAAA records store IPv6 addresses.\n\n**Important:**\n\nA6 records are **deprecated**. We strongly **recommend** that you use [AAAA](http://tools.ietf.org/html/rfc3596) records to store IPv6 addresses.",
                "example": "AAAA",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing AAAA record data.\n\n**Note:**\n\nFor more information about AAAA records, read [RFC 3596 at IANA](http://tools.ietf.org/html/rfc3596)."
      },
      "asfdb": {
        "allOf": [
          {
            "properties": {
              "hostname": {
                "description": "The database servers' hostname.",
                "example": "afs.example.com",
                "type": "string"
              },
              "subtype": {
                "description": "The AFS cell type. A 16-bit integer that represents the type of AFS cell. For example, a value of 1 indicates an AFS version 3.0 Volume Location Server.",
                "example": 1,
                "type": "integer"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `AFSDB` — AFSDB records store the location of an AFS cell's database servers.",
                "example": "AFSDB",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing AFSDB record data.\n\n**Note:**\n\nFor more information about AFSDB records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183)."
      },
      "caa": {
        "allOf": [
          {
            "properties": {
              "flag": {
                "description": "Whether the CA will issue an SSL certificate if the CAA resource record contains unknown property tags.\n* `0` - Non-critical. The CAA Resource Record contains unknown property tags, and the CA issued an SSL certificate.\n* `1` - Critical. The CAA Resource Record contains unknown property tags, and the CA did **not** issue an SSL certificate.",
                "example": 0,
                "type": "integer"
              },
              "tag": {
                "description": "The CAA record's property type.\n* `issue` - A CA issued a certificate for the domain.\n* `issuewild` - A CA issued a wildcard certificate for the domain.\n* `iodef` - The user specified a URL to which a CA may report policy violations.",
                "example": "issue",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `CAA` — CAA records control which certificate authorities can issue SSL certificates for a domain.",
                "example": "CAA",
                "type": "string"
              },
              "value": {
                "description": "The CA's domain or URL.\n* A valid [SSL provider](https://sslmate.com/labs/caa/).\n* A mailto URL or a standard URL.",
                "example": "totallyrealca.tld",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing CAA record data.\n\n**Note:**\n\nFor more information about CAA record flags and property tags, read the [RFC 6844](https://tools.ietf.org/html/rfc6844#section-3) documentation."
      },
      "cname": {
        "allOf": [
          {
            "properties": {
              "cname": {
                "description": "The canonical name (CNAME) alias.",
                "example": "sydneybristow.example.com",
                "type": "string"
              },
              "flatten": {
                "description": "Whether the specified CNAME value resolves with the record's IP address.\n* `1` - Resolves.\n* `0` - Does **not** resolve.",
                "example": 1,
                "type": "integer"
              },
              "flatten_to": {
                "description": "The IP address to which the specified CNAME resolves.",
                "example": "192.168.0.20",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `CNAME` — CNAME records create an alias to another hostname.",
                "example": "CNAME",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing CNAME record data.\n\n**Note:**\n\nFor more information about CNAME records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035)."
      },
      "dname": {
        "allOf": [
          {
            "properties": {
              "dname": {
                "description": "The delegation name (DNAME) alias.",
                "example": "hostname.dev.example.com",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `DNAME` — DNAME records create an alias for a hostname and its subnames.",
                "example": "DNAME",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing DNAME record data.\n\n**Note:**\n\nFor more information about DNAME records, read [RFC 2672 at IANA](http://tools.ietf.org/html/rfc2672)."
      },
      "ds": {
        "allOf": [
          {
            "properties": {
              "algorithm": {
                "description": "The record's algorithm number.\n* `1` — RSAMD5\n* `2` — Diffie-Hellman\n* `3` — DSA/SHA-1\n* `4` — Elliptic Curve\n* `5` — RSA/SHA-1\n* `252` — Indirect\n* `253` — Private DNS\n* `254` — Private OID",
                "example": 5,
                "type": "integer"
              },
              "digitype": {
                "description": "The record's digest type.\n* `1` — SHA-1",
                "example": 1,
                "type": "integer"
              },
              "keyname": {
                "description": "The record's KeyTag value.",
                "example": 2642,
                "type": "integer"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `DS` — DS records specify a record's delegation signer.",
                "example": "DS",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing DS record data.\n\n**Note:**\n\nFor more information about DS records, read [RFC 4034 at IANA](http://tools.ietf.org/html/rfc4034)."
      },
      "getzonerecordResponseBase": {
        "discriminator": {
          "mapping": {
            "A": "#/components/schemas/getzonerecordResponseTypeA",
            "A6": "#/components/schemas/getzonerecordResponseTypeA6",
            "AAAA": "#/components/schemas/getzonerecordResponseTypeAAAA",
            "AFSDB": "#/components/schemas/getzonerecordResponseTypeAFSDB",
            "CAA": "#/components/schemas/getzonerecordResponseTypeCAA",
            "CNAME": "#/components/schemas/getzonerecordResponseTypeCNAME",
            "DNAME": "#/components/schemas/getzonerecordResponseTypeDNAME",
            "DS": "#/components/schemas/getzonerecordResponseTypeDS",
            "HINFO": "#/components/schemas/getzonerecordResponseTypeHINFO",
            "LOC": "#/components/schemas/getzonerecordResponseTypeLOC",
            "MX": "#/components/schemas/getzonerecordResponseTypeMX",
            "NS": "#/components/schemas/getzonerecordResponseTypeNS",
            "PTR": "#/components/schemas/getzonerecordResponseTypePTR",
            "RP": "#/components/schemas/getzonerecordResponseTypeRP",
            "SOA": "#/components/schemas/getzonerecordResponseTypeSOA",
            "SRV": "#/components/schemas/getzonerecordResponseTypeSRV",
            "SSHFP": "#/components/schemas/getzonerecordResponseTypeSSHFP",
            "TXT": "#/components/schemas/getzonerecordResponseTypeTXT"
          },
          "propertyName": "type"
        },
        "properties": {
          "Line": {
            "description": "The zone record's file line number.",
            "example": 24,
            "minimum": 1,
            "type": "integer"
          },
          "class": {
            "description": "The record's class.",
            "example": "IN",
            "oneOf": [
              {
                "enum": [
                  "IN"
                ],
                "type": "string"
              },
              {
                "description": "A valid DNS record class.",
                "type": "string"
              }
            ]
          },
          "name": {
            "description": "The record's name.",
            "example": "hostname.example.com.",
            "format": "domain",
            "type": "string"
          },
          "ttl": {
            "description": "The record's Time To Live (TTL), in seconds.",
            "example": 86400,
            "minimum": 1,
            "type": "integer"
          },
          "type": {
            "description": "The DNS record type.\n* `A` - A records store IPv4 addresses. Use them to map a hostname to an IPv4 address.\n* `A6`- A6 records store IPv6 addresses.\n* `AAAA` - AAAA records store IPv6 addresses.\n* `AFSDB` - AFSDB records store the location of an AFS cell's database servers.\n* `CAA` - CAA records control which certificate authorities can issue SSL certificates for a domain.\n* `CNAME` - CNAME records create an alias to another hostname.\n* `DNAME` - DNAME records create an alias for a hostname and its subnames.\n* `DS` - DS records specify a record's delegation signer.\n* `HINFO` - HINFO records specify a host's CPU and OS types.\n* `LOC` - LOC records store a hostname's geographical location.\n* `MX` - MX records point a domain name to its MTAs.\n* `NS` - NS records store a domain's authoritative nameservers.\n* `PTR` - PTR records point to a CNAME.\n* `RP` - RP records store a domain's Responsible Person's information.\n* `SOA` - SOA records designate the beginning of a zone of authority.\n* `SRV` - SRV records store the service location records for newer protocols (for example, Autodiscover).\n* `SSHFP` - SSHFP records store a domain's SSH public host key's fingerprint.\n* `TXT` - TXT records store descriptive text or useful records (for example, SPF or DKIM records).\n\n **Warning:**\n\n  We do not currently support the SSHFP DNS record type.\n\nThis function will return a differently depending on which record type you query. Select a zone\nrecord type from the menu to view each set of return data:",
            "enum": [
              "A",
              "AAAA",
              "AFSDB",
              "CAA",
              "CNAME",
              "DNAME",
              "DS",
              "HINFO",
              "LOC",
              "MX",
              "NS",
              "PTR",
              "RP",
              "SOA",
              "SRV",
              "SSHFP",
              "TXT"
            ],
            "example": "A",
            "type": "string"
          }
        },
        "type": "object"
      },
      "getzonerecordResponseTypeA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "address": {
                "description": "The zone record's IPv4 address.\n\n**Note:**\n\nFor more information about A records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "192.168.0.20",
                "format": "ipv4",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeA6": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "prefix": {
                "deprecated": true,
                "description": "The record's prefix length.",
                "example": 48,
                "minimum": 1,
                "type": "integer"
              },
              "refer": {
                "deprecated": true,
                "description": "The record's address suffix.\n\n**Important:**\n\nA6 records are **deprecated**. We **strongly** recommend that you use AAAA records to\nstore IPv6 addresses.",
                "example": "0::0",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeAAAA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "address": {
                "description": "The zone record's IPv6 address.\n\n**Note:**\n\n For more information about AAAA records, read [RFC 3596 at IANA](http://tools.ietf.org/html/rfc3596).",
                "example": "2001:1:42:1::2a",
                "format": "ipv6",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeAFSDB": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "hostname": {
                "description": "The database servers' hostname.",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              },
              "subtype": {
                "description": "The 16-bit integer of an AFS cell type.\n\n**Note:**\n\nFor more information about AFSDB records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).",
                "example": 1,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeCAA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "flag": {
                "description": "Whether the Certificate Authority (CA) will issue an SSL certificate if the CAA resource record contains unknown property tags.\n\n* `0` - Non-critical. If the CAA Resource Record contains unknown property tags, the CA will issue an SSL certificate.\n* `1` - Critical. If the CAA Resource Record contains unknown property tags, the CA will **not** issue an SSL certificate.\n\n**Note:**\n\nFor more information about CAA record flags and property tags, read the [RFC 6844 documentation](https://tools.ietf.org/html/rfc6844#section-3).",
                "enum": [
                  0,
                  1
                ],
                "example": 0,
                "type": "integer"
              },
              "tag": {
                "description": "The CAA record's property type.\n\n* `issue` - A CA issued a certificate for the domain.\n* `issuewild` - A CA issued a wildcard certificate for the domain.\n* `iodef` - The user specified a URL to which a CA may report policy violations.",
                "enum": [
                  "issue",
                  "issuewild",
                  "iodef"
                ],
                "example": "issue",
                "type": "string"
              },
              "value": {
                "description": "The CA's domain or URL. This is a valid [SSL provider](https://sslmate.com/labs/caa/),\n`mailto` URL, or a standard URL.",
                "example": "exampleca.com",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeCNAME": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "cname": {
                "description": "The canonical name (CNAME) alias.\n\n**Note:**\n\nFor more information about CNAME records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              },
              "flatten": {
                "description": "Whether the specified CNAME value resolves with the record's IP address.\n\n* `1` - Resolves.\n* `0` - Does not resolve.",
                "enum": [
                  0,
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "flatten_to": {
                "description": "The IP address to which the specified CNAME resolves.",
                "oneOf": [
                  {
                    "description": "A valid IPv4 address.",
                    "example": "192.0.2.27",
                    "format": "ipv4",
                    "type": "string"
                  },
                  {
                    "description": "A valid IPv6 address.",
                    "example": "2001:0db8:85a3:0042:1000:8a2e:0370:7334",
                    "format": "ipv6",
                    "type": "string"
                  }
                ]
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeDNAME": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "dname": {
                "description": "The delegation name (DNAME) alias.\n\n**Note:**\n\nFor more information about DNAME records, read [RFC 2672 at IANA](http://tools.ietf.org/html/rfc2672).",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeDS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "algorithm": {
                "description": "The record's algorithm number.\n\n* `1` - RSAMD5\n* `2` - Diffie-Hellman\n* `3` - DSA/SHA-1\n* `4` - Elliptic Curve\n* `5` - RSA/SHA-1\n* `252` - Indirect\n* `253` - Private DNS\n* `254` - Private OID",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5,
                  252,
                  253,
                  254
                ],
                "example": 5,
                "type": "integer"
              },
              "digitype": {
                "description": "The record's digest type.\n\n* `1` — SHA-1",
                "enum": [
                  1
                ],
                "example": 1,
                "type": "integer"
              },
              "keyname": {
                "description": "The record's KeyTag value.\n\n**Note:**\n\nFor more information about DS records, read [RFC 4034 at IANA](http://tools.ietf.org/html/rfc4034).",
                "example": 2642,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeHINFO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "cpu": {
                "description": "The host's CPU type.\n\n**Note:**\n\nFor more information about HINFO records, read [RFC 1700 at IANA](http://tools.ietf.org/html/rfc1700.txt).",
                "example": "INTEL-386",
                "type": "string"
              },
              "os": {
                "description": "The host's operating system.",
                "example": "UNIX",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeLOC": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "altitude": {
                "description": "The location's altitude above sea level, in meters.",
                "example": "178m",
                "type": "string"
              },
              "horiz_pre": {
                "description": "The location's horizontal precision distance, in meters.",
                "example": 10,
                "minimum": 1,
                "type": "integer"
              },
              "latitude": {
                "description": "The location's latitude.",
                "example": "41 51 54.305 N",
                "type": "string"
              },
              "longitude": {
                "description": "The location's longitude.",
                "example": "87 36 47.95 W",
                "type": "string"
              },
              "size": {
                "description": "The diameter of a sphere that encloses the entire location, in meters.",
                "example": 10,
                "minimum": 1,
                "type": "integer"
              },
              "version": {
                "description": "The record's version number.\n\n**Note:**\n\nFor more information about LOC records, read [RFC 1876 at IANA](http://tools.ietf.org/html/rfc1876).",
                "enum": [
                  0
                ],
                "example": 0,
                "type": "integer"
              },
              "vert_pre": {
                "description": "The location's vertical precision distance, in meters.",
                "example": 10,
                "minimum": 1,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeMX": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "exchange": {
                "description": "The server's location's canonical name (CNAME).",
                "example": "mail.example.com",
                "format": "domain",
                "type": "string"
              },
              "preference": {
                "description": "The record's priority order.\n\n**Note:**\n\n* Lower values have a higher priority order.\n* For more information about MX records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": 10,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeNS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "nsdname": {
                "description": "The domain's authoritative nameserver.\n\n**Note:**\n\nFor more information about NS records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "ns1.example.com",
                "format": "domain",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypePTR": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "ptrdname": {
                "description": "A pointer to a canonical name (CNAME).\n\n**Note:**\n\nFor more information about PTR records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": "hostname.example.com",
                "format": "domain",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeRP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "mbox": {
                "description": "The Responsible Person's (RP) email address.\n\n**Note:**\n\nFor more information about RP records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).",
                "example": "user.example.com.",
                "type": "string"
              },
              "txtdname": {
                "description": "The RP's domain name.",
                "example": "mx1.host.example.com.",
                "format": "domain",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeSOA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "Lines": {
                "description": "The number of lines in the SOA section.",
                "example": 4,
                "minimum": 1,
                "type": "integer"
              },
              "expire": {
                "description": "The amount of time, in seconds, to wait before the secondary server attempts to complete a zone transfer.",
                "example": 3600000,
                "minimum": 1,
                "type": "integer"
              },
              "mname": {
                "description": "The domain's authoritative nameserver.",
                "example": "ns1.host.example.com",
                "format": "domain",
                "type": "string"
              },
              "refresh": {
                "description": "The amount of time, in seconds, to wait before the secondary DNS server queries the primary DNS server's SOA records for changes.",
                "example": 1440,
                "minimum": 1,
                "type": "integer"
              },
              "retry": {
                "description": "The amount of time, in seconds, to wait before the secondary server retries a failed zone transfer.",
                "example": 14400,
                "minimum": 1,
                "type": "integer"
              },
              "rname": {
                "description": "The Responsible Person's (RP) email address.",
                "example": "user.example.com.",
                "type": "string"
              },
              "serial": {
                "description": "The zone file's revision number.\n\n**Note:**\n\nFor more information about SOA records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).",
                "example": 2013122501,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeSRV": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "port": {
                "description": "The target host's port.",
                "example": 389,
                "maximum": 65535,
                "minimum": 0,
                "type": "integer"
              },
              "priority": {
                "description": "The target host's priority preference.\n\n**Note:**\n\n* Lower numbers have a higher priority order.\n* For more information about SRV records, read [RFC 2782 at IANA](http://tools.ietf.org/html/rfc2782).",
                "example": 0,
                "type": "integer"
              },
              "target": {
                "description": "The service's target host.",
                "example": "service.example.com",
                "format": "domain",
                "type": "string"
              },
              "weight": {
                "description": "A relative weight. The system uses this value to rank entries with the same `priority` value.",
                "example": 2,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeSSHFP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "algorithm": {
                "description": "The public key's algorithm number.\n\n* `1` - RSA\n* `2` - DSS\n\n**Note:**\n\nFor more information about SSHFP records, read [RFC 4255 at IANA](http://tools.ietf.org/html/rfc4255).\n\n**Warning:**\n\n* We do **not** currently support this DNS record type.",
                "enum": [
                  1,
                  2
                ],
                "example": 1,
                "type": "integer"
              },
              "fptype": {
                "description": "The public key's fingerprint type.\n\n* `1` - SHA-1",
                "enum": [
                  1
                ],
                "example": 1,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "getzonerecordResponseTypeTXT": {
        "allOf": [
          {
            "$ref": "#/components/schemas/getzonerecordResponseBase"
          },
          {
            "properties": {
              "txtdata": {
                "description": "The TXT record's data.\n\n**Note:**\n\nFor more information about TXT records, read [RFC 1464 at IANA](http://tools.ietf.org/html/rfc1464).",
                "example": "v=spf1 a -all",
                "type": "string"
              },
              "unencoded": {
                "description": "Whether the TXT record's data is encoded.\n\n* `1` - Encoded.\n* `0` - **Not** encoded.",
                "enum": [
                  1,
                  0
                ],
                "example": 0,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "hinfo": {
        "allOf": [
          {
            "properties": {
              "cpu": {
                "description": "The host's CPU type.",
                "example": "INTEL-386",
                "type": "string"
              },
              "os": {
                "description": "The host's operating system.",
                "example": "UNIX",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `HINFO` — HINFO records specify a host's CPU and OS types.",
                "example": "HINFO",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing HINFO record data.\n\n**Note:**\n\nFor more information about HINFO records, read [RFC 1700 at IANA](http://tools.ietf.org/html/rfc1700.txt)."
      },
      "loc": {
        "allOf": [
          {
            "properties": {
              "altitude": {
                "description": "The location's altitude. The location's altitude above sea level, in meters, and the m character.",
                "example": "178m",
                "type": "string"
              },
              "horiz_pre": {
                "description": "The location's horizontal precision, in meters.",
                "example": 10,
                "minimum": 0,
                "type": "integer"
              },
              "latitude": {
                "description": "The location's latitude.",
                "example": "41 51 54.305 N",
                "type": "string"
              },
              "longitude": {
                "description": "The location's longitude.",
                "example": "87 36 47.95 W",
                "type": "string"
              },
              "size": {
                "description": "The diameter of a sphere that encloses the entire location, in meters.",
                "example": 10,
                "minimum": 0,
                "type": "integer"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `LOC` — LOC records store a hostname's geographical location.",
                "example": "LOC",
                "type": "string"
              },
              "version": {
                "description": "The record's version number. You **must** set this value to `0`.",
                "example": 0,
                "type": "integer"
              },
              "vert_pre": {
                "description": "The location's vertical precision, in meters.",
                "example": 10,
                "minimum": 0,
                "type": "integer"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing LOC record data.\n\n**Note:**\n\nFor more information about LOC records, read [RFC 1876 at IANA](http://tools.ietf.org/html/rfc1876)."
      },
      "mx": {
        "allOf": [
          {
            "properties": {
              "exchange": {
                "description": "The server's location's canonical name (CNAME).",
                "example": "mail.example.com",
                "type": "string"
              },
              "preference": {
                "description": "The record's preference. An integer that represents the record's priority order.\n\n**Note:**\n\nLower values have a higher priority order.",
                "example": 10,
                "type": "integer"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `MX` — MX records point a domain name to its MTAs.",
                "example": "MX",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing MX record data.\n\n**Note:**\n\nFor more information about MX records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035)."
      },
      "ns": {
        "allOf": [
          {
            "properties": {
              "nsdname": {
                "description": "The domain's authoritative nameserver.",
                "example": "ns1.example.com",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `NS` — NS records store a domain's authoritative nameservers.",
                "example": "NS",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing NS record data.\n\n**Note:**\n\nFor more information about NS records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035)."
      },
      "ptr": {
        "allOf": [
          {
            "properties": {
              "ptrdname": {
                "description": "A pointer to a canonical name (CNAME).",
                "example": "hostname.example.com.",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `PTR` — PTR records point to a CNAME.",
                "example": "PTR",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing PTR record data.\n\n**Note:**\n\nFor more information about PTR records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035)."
      },
      "record": {
        "properties": {
          "Line": {
            "description": "The zone record's line number.",
            "example": 1,
            "type": "integer"
          },
          "class": {
            "description": "The record's class.\n- IN\n- Very rarely, another valid DNS record class.",
            "example": "IN",
            "type": "string"
          },
          "name": {
            "description": "The record's name.",
            "example": "hostname.example.com",
            "type": "string"
          },
          "ttl": {
            "description": "The record's Time To Live (TTL).",
            "example": 86400,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "restorePoint": {
        "properties": {
          "options": {
            "properties": {
              "give_ip": {
                "description": "Whether the restoration process will assign a dedicated IP address\nto the account.\n\n* `1` — Will assign.\n* `0` — Will **not** assign.",
                "enum": [
                  1,
                  0
                ],
                "example": 1,
                "type": "integer"
              },
              "mail_config": {
                "description": "Whether the restoration process will restore the account's email\nconfiguration.\n\n* `1` — Will restore.\n* `0` — Will **not** restore.",
                "enum": [
                  1,
                  0
                ],
                "example": 1,
                "type": "integer"
              },
              "mysql": {
                "description": "Whether the restoration process will restore the account's MySQL®\ndatabases.\n\n* `1` — Will restore.\n* `0` — Will **not** restore.",
                "enum": [
                  1,
                  0
                ],
                "example": 1,
                "type": "integer"
              },
              "subdomains": {
                "description": "Whether the restoration process will restore the account's subdomains.\n\n* `1` — Will restore.\n* `0` — Will **not** restore.",
                "enum": [
                  1,
                  0
                ],
                "example": 1,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "restore_point": {
            "description": "The date of the backup file.",
            "example": "2019-10-21T00:00:00.000Z",
            "format": "ISO-8601 Date",
            "type": "string"
          },
          "user": {
            "description": "The cPanel account's username.",
            "example": "username",
            "format": "username",
            "type": "string"
          }
        }
      },
      "rp": {
        "allOf": [
          {
            "properties": {
              "mbox": {
                "description": "The Responsible Person's (RP's) email address.",
                "example": "user.example.com.",
                "type": "string"
              },
              "txtdname": {
                "description": "The RP's domain name.",
                "example": "mx1.host.example.com.",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `RP` — RP records store a domain's Responsible Person's information.",
                "example": "RP",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing RP record data.\n\n**Note:**\n\nFor more information about RP records, read [RFC 1183 at IANA](https://tools.ietf.org/html/rfc1183)."
      },
      "soa": {
        "allOf": [
          {
            "properties": {
              "Lines": {
                "description": "The number of lines in the SOA section.",
                "example": 4,
                "minimum": 0,
                "type": "integer"
              },
              "expire": {
                "description": "The amount of time to wait before the secondary server attempts to complete a zone transfer, in seconds.",
                "example": 3600000,
                "minimum": 0,
                "type": "integer"
              },
              "mname": {
                "description": "The domain's authoritative nameserver.",
                "example": "ns1.example.com",
                "type": "string"
              },
              "refresh": {
                "description": "The amount of time to wait before the secondary DNS server queries the primary DNS server's SOA records for changes, in seconds.",
                "example": 1440,
                "minimum": 0,
                "type": "integer"
              },
              "retry": {
                "description": "The amount of time to wait before the secondary server retries a failed zone transfer, in seconds.",
                "example": 1440,
                "minimum": 0,
                "type": "integer"
              },
              "rname": {
                "description": "The Responsible Person's (RP's) email address.",
                "example": "user.example.com.",
                "type": "string"
              },
              "serial": {
                "description": "The zone file's revision number.",
                "example": 2013122501,
                "type": "integer"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `SOA` — SOA records designate the beginning of a zone of authority.",
                "example": "SOA",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing SOA record data.\n\n**Note:**\n\nFor more information about SOA records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035)."
      },
      "srv": {
        "allOf": [
          {
            "properties": {
              "port": {
                "description": "The target host's port.",
                "example": 389,
                "type": "integer"
              },
              "priority": {
                "description": "The target host's preference. An integer that represents the target host's priority order.\n\n**Note:**\n\nLower numbers have a higher priority order.",
                "example": 0,
                "type": "integer"
              },
              "target": {
                "description": "The service's target host.",
                "example": "service.example.com",
                "format": "domain",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `SRV` — SRV records store the service location records for newer protocols (for example, Autodiscover).",
                "example": "SRV",
                "type": "string"
              },
              "weight": {
                "description": "A relative weight. The system uses this value to rank entries with the same `priority` value. An integer that represents the target host's weight against other hosts with the same `priority` value.",
                "example": 2,
                "type": "integer"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing SRV record data.\n\n**Note:**\n\nFor more information about SRV records, read [RFC 2782 at IANA](http://tools.ietf.org/html/rfc2782)."
      },
      "sshfp": {
        "allOf": [
          {
            "properties": {
              "algorithm": {
                "description": "The public key's algorithm number.\n* `1` — RSA\n* `2` — DSS",
                "example": 1,
                "type": "integer"
              },
              "fptype": {
                "description": "The public key's fingerprint type.\n* `1` — SHA-1",
                "example": 1,
                "type": "integer"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `SSHFP` — SSHFP records store a domain's SSH public host key's fingerprint.\n\n**Warning:**\n\n  We do **not** currently support the SSHFP DNS record type.",
                "example": "SSHFP",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing SSHFP record data.\n\n**Warning:**\n\nWe do **not** currently support this DNS record type.\n\n**Note:**\n\nFor more information about SSHFP records, read [RFC 4255 at IANA](http://tools.ietf.org/html/rfc4255)."
      },
      "txt": {
        "allOf": [
          {
            "properties": {
              "txtdata": {
                "description": "The TXT record's data.",
                "example": "v=spf1 a -all",
                "type": "string"
              },
              "type": {
                "description": "The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n* `TXT` — TXT records store descriptive text or useful records (for example, SPF or DKIM records).",
                "example": "TXT",
                "type": "string"
              },
              "unencoded": {
                "description": "Whether the TXT record's data is encoded.\n* `1` — Encoded.\n* `0` — **Not** encoded.",
                "example": 1,
                "type": "integer"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/record"
          }
        ],
        "description": "An object representing TXT record data.\n\n**Note:**\n\nFor more information about TXT records, read [RFC 1464 at IANA](http://tools.ietf.org/html/rfc1464)."
      },
      "schemas-Transfers_EnqueueTransferItem_Type": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot"
          },
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountRemoteRoot"
          },
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_Account_Base"
          },
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_FeatureListRemoteRoot"
          },
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_LegacyAccountBackup"
          },
          {
            "$ref": "#/components/schemas/Transfers_EnqueueTransferItem_Type_PackageRemoteRoot"
          }
        ],
        "discriminator": {
          "mapping": {
            "AccountLocal": "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot",
            "AccountRemoteRoot": "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountRemoteRoot",
            "AccountRemoteUser": "#/components/schemas/Transfers_EnqueueTransferItem_Type_Account_Base",
            "FeatureListRemoteRoot": "#/components/schemas/Transfers_EnqueueTransferItem_Type_FeatureListRemoteRoot",
            "LegacyAccountBackup": "#/components/schemas/Transfers_EnqueueTransferItem_Type_LegacyAccountBackup",
            "PackageRemoteRoot": "#/components/schemas/Transfers_EnqueueTransferItem_Type_PackageRemoteRoot"
          },
          "propertyName": "module"
        }
      }
    },
    "securitySchemes": {
      "BasicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "externalDocs": {
    "url": "https://cpanel.net/developers/"
  },
  "info": {
    "contact": {
      "email": "cs@cpanel.net",
      "name": "cPanel L.L.C.",
      "url": "https://cpanel.net/support/"
    },
    "description": "WHM API.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "license": {
      "name": "cPanel License",
      "url": "https://cpanel.net/legal-notices/"
    },
    "termsOfService": "https://cpanel.net/legal-notices/",
    "title": "WHM API",
    "version": "11.93.9999.134"
  },
  "openapi": "3.0.2",
  "paths": {
    "/_getpkgextensionform": {
      "get": {
        "description": "This function retrieves a hosting plan's package extension templates. When you call this\nfunction, the system checks the hosting plan's `_PACKAGE_EXTENSIONS` value.  The function\nreturns the contents of the `/var/cpanel/packages/extensions/name.tt2` file for each package\nextension in the list, where name represents the package extension's name.\n\nFor more information, read our\n[Guide to Package Extensions](https://go.cpanel.net/GuidetoPackageExtensions).\n\n**Note:**\n\nThis function returns only metadata if the hosting plan does not use package extensions, or\nif the extensions' template files are empty.",
        "operationId": "_getpkgextensionform",
        "parameters": [
          {
            "description": "The hosting plan's name.",
            "in": "query",
            "name": "pkg",
            "required": true,
            "schema": {
              "example": "package1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "html": {
                          "description": "The HTML and Template Toolkit soure code for the hosting plan's extensions' templates.",
                          "example": "<div class=\"fatBorder\" id=\"dog_Extension\"> <fieldset class=\"groupEditor\"> <div class=\"propertyGroup\"> <h3>Dog Settings</h3> <div class=\"propertyEditor\"> <div class=\"propertyLabel\">Dog Species</div> <div class=\"propertyValue\"><input id=\"dog_species\" type=\"text\" name=\"dog_species\" value=\"dalmatian\"></div> </div> <div class=\"propertyEditor\"> <div class=\"propertyLabel\">Tail Length</div> <div class=\"propertyValue\"> <input type=\"radio\" id=\"dogTailLengthTiny\" name=\"dog_tail_length\" value=\"tiny\"> <label for=\"dogTailLengthTiny\">Tiny</label><br> <input type=\"radio\" id=\"dogTailLengthNormal\" name=\"dog_tail_length\" value=\"normal\"> <label for=\"dogTailLengthNormal\">Normal</label><br> <input type=\"radio\" id=\"dogTailLengthLong\" name=\"dog_tail_length\" value=\"long\"> <label for=\"dogTailLengthLong\">Long</label> </div> </div> <div class=\"propertyEditor\"> <div class=\"propertyLabel\"><label for=\"dog_spots\">Has Spots</label></div> <div class=\"propertyValue\"> <input id=\"dog_spots\" type=\"checkbox\" name=\"dog_spots\" value=\"y\" checked=\"checked\"> </div> </div> </div> </fieldset> </div>",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "_getpkgextensionform",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return hosting plan extension templates",
        "tags": [
          "Packages",
          "Hosting Plan Extensions"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 _getpkgextensionform pkg='package1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/_getpkgextensionform?api.version=1&pkg=package1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/abort_transfer_session": {
      "get": {
        "description": "This function aborts an active transfer session.",
        "operationId": "abort_transfer_session",
        "parameters": [
          {
            "description": "The transfer session's ID.",
            "in": "query",
            "name": "transfer_session_id",
            "required": true,
            "schema": {
              "example": "exampleservercopya20140206192428NtyW",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "abort_transfer_session",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Stop transfer session",
        "tags": [
          "Transfers",
          "cPanel Account Transfer"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 abort_transfer_session transfer_session_id='exampleservercopya20140206192428NtyW'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/abort_transfer_session?api.version=1&transfer_session_id=exampleservercopya20140206192428NtyW"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/accept_eula": {
      "get": {
        "description": "This function records acceptance of cPanel & WHM's legal terms. To do this, the function creates a touchfile in the `/var/cpanel/activate/` directory.\n\n**Important:**\n\n  Server owners *must* accept these agreements before they use cPanel & WHM.",
        "operationId": "accept_eula",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "accept_eula",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Save EULA acceptance",
        "tags": [
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 accept_eula"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/accept_eula?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/accesshash": {
      "get": {
        "deprecated": true,
        "description": "This function regenerates or retrieves a user's access hash. For more information about access hashes, read our [Remote Access Key](https://docs.cpanel.net/whm/clusters/remote-access-key/) documentation.\n\n**Warning:**\n\nWe **deprecated** this function. We **strongly** suggest that you use the WHM API 1 `api_token_create` function.",
        "operationId": "accesshash",
        "parameters": [
          {
            "description": "Whether to regenerate the access hash.\n* `1` — Regenerate the access hash.\n* `0` — Do **not** regenerate the access hash.",
            "in": "query",
            "name": "generate",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The user's name.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "root",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "accesshash": {
                          "description": "The user's access hash.",
                          "example": "cb523f89e9a31123fde7c6f93b580ac05bf00a2804d4febe6667ab9917a14baa1c4914da209bf55c862999ea51983a117a4d2f238140200b1e5b270b94b2c52492747e5ebfdeddb8abf4e1b0c428c6c68b701b48e13dbe39da49450e7a8e5422e18ab3b6290b5b6556bd82ee21d9c1103e7a51d1e94f2ac0c4dcc6a10954b8634c6db16a541660c3c89e10254f05583f4167adfcff7781090ea930647b46e5b981f3e16c7723ca4e12dc4b54a778dc66a28df73632a0d3a8e01e207b9fd6b555b72936a903af014f30061d712d736176a87fb5333c5b90cf0bb4f3c6735f2b45929ac79fb1184045a5f4c20bfcc553f5ab760eec077c0d6096e54d02724201281e441e7b0f642370a63f61c68766e224c8510bc32b0316780660c34352cbfeeccfee9d4f02e20ba7b664d3e84e9419ca386c41df07613f8af252aba8626a8b54796bbe616f41af1e6f11a3d0327f7608d23666fca64e6ebe899f7479a5fb0aea008b1e7a41890c9c58037682450febf91b7aa1c080d31d834b0ae466f8533df838ab271b26a7fb7de96402ad4a818d6b786af92c38414d2ef6c88deb7c685a1e60c3cbcfbf20cf6d2a00dd50d2be9bc1824d91284ec6842dd7db42564dfc3ecb75c1a9bc775c45c5f08784b9e2885c2d",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "accesshash",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account access hash",
        "tags": [
          "Security",
          "SSH Keys and Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 accesshash user='root' generate='0'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/accesshash?api.version=1&user=root&generate=0"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/accountsummary": {
      "get": {
        "description": "This function retrieves a summary of a user's account.\n\n**Note:**\n\nYou must use either the user or domain parameters.",
        "operationId": "accountsummary",
        "parameters": [
          {
            "description": "The account's main domain.",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The account's username.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "acct": {
                          "description": "An array of objects of account data.",
                          "items": {
                            "properties": {
                              "backup": {
                                "description": "Whether backups are enabled.\n* `1` Enabled.\n* `0` Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "disklimit": {
                                "description": "The account's disk space quota.\n* `unlimited`\n* A maximum amount of disk space, in mebibyte (MiB).",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "diskused": {
                                "description": "The account's current disk space usage. An integer that represents an amount of disk space, in mebibyte (MiB). For example, 14M represents 14 MiB of disk space.",
                                "example": "14M",
                                "format": "mebibyte-short",
                                "type": "string"
                              },
                              "domain": {
                                "description": "The account's main domain. A valid domain name on the account.",
                                "example": "example.com",
                                "format": "fqdn",
                                "type": "string"
                              },
                              "email": {
                                "description": "The account's contact email address. A valid email address.",
                                "example": "username@example.com",
                                "format": "email",
                                "type": "string"
                              },
                              "inodeslimit": {
                                "description": "The limit on the number of files that the account owns.\n* `unlimited`\n* A maximum amount of files as an integer.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "inodesused": {
                                "description": "The number of files that the account owns.",
                                "example": 1,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "ip": {
                                "description": "The account's main domain's IP address.",
                                "example": "192.168.0.128",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "ipv6": {
                                "description": "The account's main domain's IPv6 addresses.",
                                "items": {
                                  "example": "0101:ca75:0101:ca75:0101:ca75:0101:ca77",
                                  "format": "ipv6",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "is_locked": {
                                "description": "Whether the account is currently locked.\n* `1` Locked.\n* `0` Not locked.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "legacy_backup": {
                                "description": "Whether legacy backups are enabled.\n* `1` Enabled.\n* `0` Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "mailbox_format": {
                                "description": "The storage format that the account's email mailboxes use.\n* `maildir` The account's mail is stored in `maildir` format.\n* `mbox` The account's mail is stored in `mbox` format.",
                                "enum": [
                                  "maildir",
                                  "mbox"
                                ],
                                "example": "maildir",
                                "format": "mailbox_format",
                                "type": "string"
                              },
                              "max_defer_fail_percentage": {
                                "description": "The percentage of failed or deferred email messages that the account\ncan send per hour before outgoing mail is rate-limited.\n* `unlimited`\n* An integer that represents a percentage of messages.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "max_email_per_hour": {
                                "description": "The maximum number of emails that the account can send in one hour.\n* `unlimited`\n* An integer that represents a number of sent emails.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "max_emailacct_quota": {
                                "description": "The maximum size that the cPanel account can define when it creates an email account.\n* `unlimited`\n* A positive integer that represents the allowable maximum size of an email account, in mebibyte (MiB).",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxaddons": {
                                "description": "The account's maximum number of addon domains.\n* `unlimited`\n* `*unknown*`  The account cannot use any addon domains.\n* An integer that represents a number of addon domains.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxftp": {
                                "description": "The account's maximum number of FTP accounts.\n* `unlimited`\n* An integer that represents a number of FTP accounts.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxlst": {
                                "description": "The account's maximum number of mailing lists.\n* `unlimited`\n* An integer that represents a number of mailing lists.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxparked": {
                                "description": "The account's maximum number of parked domains (aliases).\n* `unlimited`\n* `*unknown*` The account cannot use any parked domains.\n* An integer that represents a number of parked domains.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxpop": {
                                "description": "The account's maximum number of email addresses.\n* `unlimited`\n* An integer that represents a number of email accounts.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxsql": {
                                "description": "The account's maximum number of SQL databases.\n* `unlimited`\n* An integer that represents a number of SQL databases.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxsub": {
                                "description": "The account's maximum number of subdomains.\n* `unlimited`\n* `*unknown*` The account cannot use any subdomains.\n* An integer that represents a number of subdomains.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "min_defer_fail_to_trigger_protection": {
                                "description": "The minimum number of failed or deferred messages that the account can send before\noutgoing mail is subject to rate-limiting.\n* `unlimited`\n* An integer that represents a number of failed or deferred messages.",
                                "example": "5",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "outgoing_mail_hold": {
                                "description": "Whether to retain outgoing mail in the mail queue for the account's users.\n* `1` Suspend and force failure of outgoing email.\n* `0` Unsuspend outgoing email.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "outgoing_mail_suspended": {
                                "description": "Whether to suspend outgoing email from the account's users and force failure of any of their mail currently in the mail queue.\n* `1` - Suspend and force failure of outgoing email.\n* `0` - Unsuspend outgoing email.\n\n**Note:**\n\nIf mail for a cPanel user's account is suspended, the system will reject their email before the system puts it in the mail server queue.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "owner": {
                                "description": "The account's owner.\n* root\n* A reseller account's username.",
                                "example": "root",
                                "format": "username",
                                "type": "string"
                              },
                              "partition": {
                                "description": "The partition that contains the account's home directory. The name of a partition on the server.",
                                "example": "home",
                                "type": "string"
                              },
                              "plan": {
                                "description": "The account's hosting package. The name of a package on the server.",
                                "example": "packagename",
                                "format": "plan",
                                "type": "string"
                              },
                              "shell": {
                                "description": "The account's shell. A shell location on the server.",
                                "example": "/bin/bash",
                                "format": "shell",
                                "type": "string"
                              },
                              "startdate": {
                                "description": "The account creation date. The date in YY-Mon-DD HH-mm human-readable format, where:- YY represents the year.\n* `Mon` represents the month.\n* `DD` represents the date.\n* `HH` represents the hour.\n* `mm` represents the minute.",
                                "example": "13 May 22 16:03",
                                "format": "YY-Mon-DD-HH-MM",
                                "type": "string"
                              },
                              "suspended": {
                                "description": "Whether the account is currently suspended.\n* `1`  Suspended.\n* `0`  Not suspended.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "suspendreason": {
                                "description": "The reason for account suspension, if one was provided.\n* `null` The account is not currently suspended.\n* A blank value, if the suspender did not provide a reason.\n* A message that explains the suspension.",
                                "example": "not suspended",
                                "nullable": true,
                                "type": "string"
                              },
                              "suspendtime": {
                                "description": "The time of suspension.\n* `null` The account is not currently suspended.\n* The time at which the account became suspended.",
                                "example": null,
                                "nullable": true,
                                "type": "string"
                              },
                              "temporary": {
                                "description": "Whether the Customer Support Ticket process created this user for temporary access to the system.\n* `1` - Temporary user.\n* `0` - Regular user.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "theme": {
                                "description": "The account's cPanel interface theme.\n* `paper_lantern`\n* Another valid theme on the server.",
                                "example": "paper_lantern",
                                "format": "theme",
                                "type": "string"
                              },
                              "uid": {
                                "description": "The account's user ID on the system.",
                                "type": "integer"
                              },
                              "unix_startdate": {
                                "description": "The account creation date. The account creation date and time, in Unix time format.",
                                "example": 1369256589,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "user": {
                                "description": "The account username. A cPanel account or reseller username on the server.",
                                "example": "username",
                                "format": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "accountsummary",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` Success\n* `0` Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account summary",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 accountsummary"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/accountsummary?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/acctcounts": {
      "get": {
        "description": "This function lists a reseller's total accounts, suspended accounts, and account creation limit.",
        "operationId": "acctcounts",
        "parameters": [
          {
            "description": "A reseller's username, to query that reseller. If you do not specify a value, the function lists information for the authenticated account.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "reseller": {
                          "description": "An object that contains information for an account.",
                          "properties": {
                            "active": {
                              "description": "The number of active accounts that the reseller account owns.",
                              "example": 9,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "limit": {
                              "description": "The maximum number of accounts that the reseller account may create, if a maximum exists.\n\n**NOTE:**\n\nA null value indicates that the reseller does not have an account creation limit.",
                              "example": 25,
                              "minimum": 1,
                              "nullable": true,
                              "type": "integer"
                            },
                            "suspended": {
                              "description": "The number of suspended accounts that the reseller account owns.",
                              "example": 5,
                              "minimum": 1,
                              "nullable": true,
                              "type": "integer"
                            },
                            "user": {
                              "description": "The reseller account's username or the `root` user.",
                              "example": "root",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "acctcounts",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return reseller's owned accounts' information",
        "tags": [
          "Resellers",
          "Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 acctcounts"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/acctcounts?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/activate_zone_key": {
      "get": {
        "description": "This function activates a domain's DNSSEC security key.",
        "operationId": "activate_zone_key",
        "parameters": [
          {
            "description": "The domain for which to activate a security key.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The security key's ID.\n\n**Note:**\n\nUse the WHM AP1 `fetch_ds_records_for_domains` function to locate the domain's security key ID.",
            "in": "query",
            "name": "key_id",
            "required": true,
            "schema": {
              "example": 1,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "activate_zone_key",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable domain's DNSSEC key",
        "tags": [
          "DNS",
          "DNS Security"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 activate_zone_key domain='example.com' key_id='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/activate_zone_key?api.version=1&domain=example.com&key_id=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/add_autossl_user_excluded_domains": {
      "get": {
        "description": "This function disables AutoSSL for an account's specified domains.",
        "operationId": "add_autossl_user_excluded_domains",
        "parameters": [
          {
            "description": "Disable AutoSSL for this domain.\n\n**Note:**\n\nTo disable AutoSSL for multiple domains, increment the parameter name. For example, `domain=example.com`, `domain1=example1.com`, and `domain2=example.com`.",
            "examples": {
              "multiple": {
                "summary": "Disable AutoSSL for multiple domains.",
                "value": "domain=example.com domain1=example1.com domain2=example2.com"
              },
              "single": {
                "summary": "Disable AutoSSL for a single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The cPanel user's account.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "add_autossl_user_excluded_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable AutoSSL for domain",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 add_autossl_user_excluded_domains username='example' domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/add_autossl_user_excluded_domains?api.version=1&username=example&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "66"
      }
    },
    "/add_configclusterserver": {
      "post": {
        "description": "This function adds a server to a configuration cluster. The function's return data appears in\nthe `metadata` section of its output.\n\nWe recommend that you run this function as a `POST` request with SSL enabled:\n\n* The length of the remote access key may cause problems if you run the function with the `GET`\nmethod (for example, a URL in your browser).\n* You risk security problems if you enter a remote access key through the `GET` method.\n\n**Important:**\n\n* Run this function as a `root`-level user on the server that you wish to use as the parent server.\n* If you log in to a configuration cluster server that is **not** the parent server, **nothing**\nwill indicate that the server is part of a configuration cluster. You can **only** view and modify\nthis information from the parent server.",
        "operationId": "add_configclusterserver",
        "parameters": [
          {
            "description": "A truncated version of the server's remote access key.",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0",
              "type": "string"
            }
          },
          {
            "description": "The remote configuration cluster server's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The username for the server's `root`-level account.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "root",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "add_configclusterserver",
                          "type": "string"
                        },
                        "name": {
                          "description": "The remote configuration cluster server's name.",
                          "example": "example.com",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "signature": {
                          "description": "A truncated version of the server's remote access key.",
                          "example": "d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0",
                          "type": "string"
                        },
                        "user": {
                          "description": "The username for the server's `root`-level account.",
                          "example": "root",
                          "type": "string"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add configuration cluster server",
        "tags": [
          "Server Administration",
          "Configuration Clusters"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 add_configclusterserver name='example.com' user='root' key='d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/add_configclusterserver?api.version=1&name=example.com&user=root&key=d0%3ad0%3ad0%3ad0%3ad0%3ad0%3ad0%3ad0%3ad0%3ad0%3ad0%3ad0%3ad0%3ad0%3ad0%3ad0"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/add_override_features_for_user": {
      "get": {
        "description": "This function adds feature overrides to a cPanel account.",
        "operationId": "add_override_features_for_user",
        "parameters": [
          {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "description": "Whether to enable or disable a feature.\n\n* `1` — Enable.\n* `0` — Disable.\n\n**Note:**\n\nFor a list of available features, use WHM API 1's `get_feature_names` function.",
                    "enum": [
                      1,
                      0
                    ],
                    "type": "integer"
                  },
                  "example": {
                    "backup": 1
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON-encoded list of features to override and whether to enable or disable them.",
            "in": "query",
            "name": "features",
            "required": true
          },
          {
            "description": "The cPanel username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "add_override_features_for_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add cPanel account feature list overrides",
        "tags": [
          "Packages",
          "Feature Access"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 add_override_features_for_user user='username' features='{\"backup\":\"1\"}'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/add_override_features_for_user?api.version=1&user=username&features=%7b%22backup%22%3a%221%22%7d"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/add_zone_key": {
      "get": {
        "description": "This function generates a DNSSEC zone key for a domain.\n\n**Note:**\n\n* Only servers that run PowerDNS can use DNSSEC. If you call this function on\na server that doesn't use PowerDNS, you will receive an error.\n* After you enable DNSSEC on the domain, you **must** add the Delegation of Signing (DS)\nrecords to your zone record and your registrar.\n* You **cannot** modify the DNSSEC security key. To make any changes, you **must** disable,\ndelete, and re-create the DNSSEC security key.",
        "operationId": "add_zone_key",
        "parameters": [
          {
            "description": "The algorithm that the system uses to generate the security key.\n\n* `5` — RSA/SHA-1\n* `6` — DSA-NSEC3-SHA1\n* `7` — RSA SHA1-NSEC3-SHA1\n* `8` — RSA/SHA-256\n* `13` — ECDSA Curve P-256 with SHA-256\n* `14` — ECDSA Curve P-384 with SHA-384\n\n**Note:**\n\nWe recommend that you use a `13` (ECDSA Curve P-256 with SHA-256) value if\nyour registrar supports it.",
            "in": "query",
            "name": "algo_num",
            "required": true,
            "schema": {
              "enum": [
                5,
                6,
                7,
                8,
                13,
                14
              ],
              "example": 13,
              "type": "integer"
            }
          },
          {
            "description": "The domain for which to enable DNSSEC.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The type of security key to add.\n\n* `ksk` — Key Signing Key.\n* `zsk` — Zone Signing Key.\n\n**Note:**\n\nYou **must** call these values in lowercase.",
            "in": "query",
            "name": "key_type",
            "required": true,
            "schema": {
              "example": "ksk",
              "type": "string"
            }
          },
          {
            "description": "Whether to activate the new security key.\n\n* `1` — Activate.\n* `0` — Do **not** activate.",
            "in": "query",
            "name": "active",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The security key size, in bits.\n\n**Note:**\n\nThis parameter defaults to the following values, depending on the `algo_num`\nand `key_type` values:\n\n* `algo_num` = `5`\n  * `ksk` = `2048`\n  * `zsk` = `1024`\n* `algo_num` = `6`\n  * `ksk` = `2048`\n  * `zsk` = `1024`\n* `algo_num` = `7`\n  * `ksk` = `2048`\n  * `zsk` = `1024`\n* `algo_num` = `8`\n  * `ksk` = `2048`\n  * `zsk` = `1024`\n* `algo_num` = `13`\n  * `ksk` and `zsk` = `256`\n* `algo_num` = `14`\n  * `ksk` and `zsk` = `384`",
            "in": "query",
            "name": "key_size",
            "required": false,
            "schema": {
              "enum": [
                256,
                384,
                1024,
                2048
              ],
              "example": 256,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "new_key_id": {
                          "description": "The security key's ID.",
                          "example": "1",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "add_zone_key",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create domain's DNSSEC zone key",
        "tags": [
          "DNS",
          "DNS Security"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 add_zone_key domain='example.com' algo_num='13' key_type='ksk'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/add_zone_key?api.version=1&domain=example.com&algo_num=13&key_type=ksk"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/adddns": {
      "get": {
        "description": "This function creates a DNS zone. This function also adds an XDNS entry for the domain in the following locations:\n* The `/var/cpanel/users/USER` file, where `USER` represents the `trueowner` parameter's value.\n* The `/etc/vdomainaliases/DOMAIN` directory, where `DOMAIN` represents the new zone's domain.\n* The `/etc/vfilters/DOMAIN` directory, where `DOMAIN` represents the new zone's domain.\n\nWhen you call this function, the system uses the domain name and IP address that you supply. WHM's standard zone template determines all other zone information.\n\nThis function generates the DNS zone's [MX record](https://en.wikipedia.org/wiki/MX_record), [domain PTR](https://en.wikipedia.org/wiki/Reverse_DNS_lookup#Multiple_pointer_records), and [A records](https://en.wikipedia.org/wiki/List_of_DNS_record_types#A) automatically.\n\n**Important:**\n\nWhen you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "adddns",
        "parameters": [
          {
            "description": "The new zone's domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The domain's IP address.",
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "example": "192.168.0.20",
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "Whether to add an IPv6 address to the new zone.\n* `1` — Add the IPv6 address in the `ipv6` parameter to the new zone.\n* `0` — Do **not** add an IPv6 address to the new zone.",
            "in": "query",
            "name": "has_ipv6",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The domain's IPv6 address.",
            "in": "query",
            "name": "ipv6",
            "required": false,
            "schema": {
              "example": "2001:0db8:0:0:1:0:0:1",
              "format": "ipv6",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "The zone file template.\n* `standard`\n* `simple`\n* `standardvirtualftp`\n* The name of a custom zone template file in the `/var/cpanel/zonetemplates` directory.",
            "in": "query",
            "name": "template",
            "required": false,
            "schema": {
              "default": "standard",
              "example": "standard",
              "type": "string"
            }
          },
          {
            "description": "The new zone's owner. This parameter defaults to the currently-authenticated user.",
            "in": "query",
            "name": "trueowner",
            "required": false,
            "schema": {
              "example": "user",
              "format": "username",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "adddns",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Added example.com ok belonging to user username",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create DNS zone",
        "tags": [
          "DNS",
          "DNS Zones"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 adddns domain='example.com' ip='192.168.0.20'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/adddns?api.version=1&domain=example.com&ip=192.168.0.20"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.28"
      }
    },
    "/addips": {
      "get": {
        "description": "This function adds an IPv4 address or addresses to the server.\nWhen you add an IP address, the system attempts to add an alias of that IP\naddress to the main network interface. This process rebuilds the IP address\npool, which resides in the `/etc/ipaddrpool` file. The system stores IP addresses\nwithin the `/etc/ips` file. The `ipaliases` service activates those IP addresses\nwhen the server starts.",
        "operationId": "addips",
        "parameters": [
          {
            "description": "The IPv4 address or address range\nin [Class C CIDR format](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing).",
            "examples": {
              "ipv4": {
                "summary": "IPv4 address",
                "value": "192.168.0.0"
              },
              "ipv4range": {
                "summary": "IPv4 address range",
                "value": "192.168.0.20/28"
              }
            },
            "in": "query",
            "name": "ips",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IPv4 address' netmask.\n\n**Note:**\n\nIf the `ips` parameter is in Class C CIDR format,\nthe range mask **must** be a value from `24` through `30`.",
            "in": "query",
            "name": "netmask",
            "required": true,
            "schema": {
              "example": "255.255.255.0",
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "An IPv4 address or comma-delimited list of IPv4 addresses to exclude.\n\n**Note:**\n\nIf you do not specify a value,\nthe function does not exclude any IPv4 addresses.",
            "examples": {
              "multiple": {
                "summary": "Multiple IP addresses.",
                "value": "excludes=192.0.20.0,192.0.20.1"
              },
              "single": {
                "summary": "A single IP address.",
                "value": "192.0.20.0"
              }
            },
            "explode": false,
            "in": "query",
            "name": "excludes",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "addips",
                          "type": "string"
                        },
                        "output": {
                          "properties": {
                            "messages": {
                              "description": "A list of messages returned from the function.",
                              "items": {
                                "example": "eth0:cp1 is now up. 192.168.0.20/255.255.255.0 broadcast 192.168.0.255 has been added.",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Success",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add IP addresses",
        "tags": [
          "IP Addresses",
          "IPv4 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 addips ips='192.168.0.0' netmask='255.255.255.0'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/addips?api.version=1&ips=192.168.0.0&netmask=255.255.255.0"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/addpkg": {
      "get": {
        "description": "This function creates a hosting plan (package).\n\n**Note:**\n\nThe [Access Control Lists](https://go.cpanel.net/GuidetoWHMPluginsAccessControlLists)\nrestricts some of this function's parameters, which limit the features that\nWHM users can access.",
        "operationId": "addpkg",
        "parameters": [
          {
            "description": "The new hosting plan's name.\n\n**Note:**\n\n* You **cannot** use the name `extensions` for a hosting plan.\n* You **cannot** modify hosting plan names after creation. Do **not**\ninclude details that may change over time, such as price.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "package1",
              "type": "string"
            }
          },
          {
            "description": "A space-separated list of the hosting plan's\n[package extensions](https://go.cpanel.net/GuidetoPackageExtensions).\n\nIf you do **not** provide a value, the hosting plan will **not** include package\nextensions.\n\n**Note:**\n\n* We **strongly** recommend that you manage package extensions through WHM API\n1's `addpkgext` and `delpkgext` functions.\n* You can include the extension's variables in your function call, in `key=value` format.\nConsult the extension's documentation for a list of possible variables.\n* Extension names and variables are case-sensitive.",
            "in": "query",
            "name": "_PACKAGE_EXTENSIONS",
            "required": false,
            "schema": {
              "example": "'extension1 extension2 extension3'",
              "type": "string"
            }
          },
          {
            "description": "The hosting plan's maximum bandwidth use, in megabytes (MB).\n\n* `0`, `unlimited`, or `null` — The hosting plan allows unlimited bandwidth.\n\n**Note:**\n\nThe `0`, `unlimited`, and `null` values are **only** available to users that possess\nthe corresponding unlimited ACL permission.",
            "in": "query",
            "name": "bwlimit",
            "required": false,
            "schema": {
              "default": 1048576,
              "example": 1048576,
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited bandwidth.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "Whether CGI access is enabled for the account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Note:**\n\nWhen a\n[server profile](https://go.cpanel.net/whmdocsServerProfile) disables the\n[Web Server role](https://go.cpanel.net/serverroles#roles), this parameter\ndefaults to `0`. On these servers, you **cannot** enable CGI access.",
            "in": "query",
            "name": "cgi",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The hosting plan's cPanel theme.\n\nThis parameter defaults to the server's\n[default cPanel theme](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup#select-a-default-theme-for-the-cpanel-interface).",
            "in": "query",
            "name": "cpmod",
            "required": false,
            "schema": {
              "example": "paper_lantern",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable Digest Authentication for accounts on the hosting plan.\n\n* `1` — Enable.\n* `0` — Disable.",
            "in": "query",
            "name": "digestauth",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The hosting plan's feature list.\n\nIf you do **not** use this parameter, the function assigns the `default`\nfeature list to the account.",
            "in": "query",
            "name": "featurelist",
            "required": false,
            "schema": {
              "default": "default",
              "example": "feature_list",
              "type": "string"
            }
          },
          {
            "deprecated": true,
            "description": "Whether Microsoft® FrontPage® Extensions are enabled for the account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Note:**\n\ncPanel & WHM ignores all FrontPage settings and parameters.",
            "in": "query",
            "name": "frontpage",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether the hosting plan allows shell access.\n\n* `1` — The hosting plan allows shell access.\n* `0` — The hosting plan does **not** allows shell access.",
            "in": "query",
            "name": "hasshell",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the account has a dedicated IP address.\n\n* `y` — The account possesses a dedicated IP address.\n* `n` — The account does not possess a dedicated IP address.",
            "in": "query",
            "name": "ip",
            "required": false,
            "schema": {
              "default": "n",
              "enum": [
                "y",
                "n"
              ],
              "example": "n",
              "type": "string"
            }
          },
          {
            "description": "The hosting plan's default locale, in its two-letter\n[ISO-3166 code](http://www.iso.org/iso/country_codes.htm)\nformat.\n\nThis parameter defaults to the server's default locale.",
            "in": "query",
            "name": "language",
            "required": false,
            "schema": {
              "example": "en",
              "format": "ISO-3166-1 (alpha-2)",
              "type": "string"
            }
          },
          {
            "description": "The percentage of failed or deferred email messages that the hosting plan allows users\nto send per hour before outgoing mail is rate-limited.\n\n* `0` or `unlimited` — The hosting plan allows users ot send an unlimited number of\nfailed or deferred messages.",
            "in": "query",
            "name": "MAX_DEFER_FAIL_PERCENTAGE",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows users ot send an unlimited number of failed or deferred messages.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The maximum number of emails that the hosting plan allows users to send in one hour.\n\n* `0` or `unlimited` — The hosting plan allows users to send an unlimited number of emails.",
            "in": "query",
            "name": "MAX_EMAIL_PER_HOUR",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows users to send an unlimited number of emails.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum email account quota size, in megabytes (MB).\n\n* `0`, `unlimited`, or `null` — The hosting plan allows unlimited email account quota.\n\n**Note:**\n\nThe `0`, `unlimited`, and `null` values are **only** available to users that possess\nthe corresponding unlimited ACL permission.",
            "in": "query",
            "name": "max_emailacct_quota",
            "required": false,
            "schema": {
              "default": 1024,
              "example": 1024,
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 4294967296,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited email account quota.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of addon domains.\n\n* `unlimited` or `null` — The hosting plan allows unlimited addon domains.",
            "in": "query",
            "name": "maxaddon",
            "required": false,
            "schema": {
              "default": 0,
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited addon domains.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of FTP accounts.\n\n* `unlimited`, or `null` — The hosting plan allows unlimited FTP accounts.",
            "in": "query",
            "name": "maxftp",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited FTP accounts.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of mailing lists.\n\n* `unlimited`, or `null` — The hosting plan allows unlimited mailing lists.",
            "in": "query",
            "name": "maxlists",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited mailing lists.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of parked domains (aliases).\n\n* `unlimited` or `null` — The hosting plan allows unlimited parked domains.",
            "in": "query",
            "name": "maxpark",
            "required": false,
            "schema": {
              "default": 0,
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited parked domains.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of email accounts.\n\n* `unlimited`, or `null` — The hosting plan allows unlimited email accounts.",
            "in": "query",
            "name": "maxpop",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited email accounts.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of each available type of SQL\ndatabase.\n\nFor example, if you set this value to `5` and the system administrator\nallows MySQL® and PostgreSQL® databases, users can create up to five MySQL\ndatabases and up to five PostgreSQL databases.\n\n* `unlimited`, or `null` — The hosting allows unlimited databases.",
            "in": "query",
            "name": "maxsql",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited databases.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of subdomains.\n\n* `unlimited`, or `null` — The hosting plan allows unlimited subdomains.",
            "in": "query",
            "name": "maxsub",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited subdomains.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's disk space quota, in megabytes (MB).\n\n* `0`, `unlimited`, or `null` — The hosting plan allows unlimited disk space.\n\n**Note:**\n\nThe `0`, `unlimited`, and `null` values are **only** available to users that possess\nthe corresponding unlimited ACL permission.",
            "in": "query",
            "name": "quota",
            "required": false,
            "schema": {
              "default": 10240,
              "example": 10240,
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited disk space.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pkg": {
                          "description": "The new hosting plan's name.",
                          "example": "package1",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "addpkg",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create hosting plan",
        "tags": [
          "Packages",
          "Hosting Plans"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 addpkg name='package1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/addpkg?api.version=1&name=package1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/addpkgext": {
      "get": {
        "description": "This function adds a package extension to a hosting plan (package).\n\n**Notes:**\n\n* If you need to edit a package extension's parameters, call this function again\nwith the same package extension name and the updated package extension variables.\n\n* You can include the extension's variables in your function call, in `key=value` format.\n  Consult the extension's documentation for a list of possible variables. Extension variables\n  are case-sensitive.",
        "operationId": "addpkgext",
        "parameters": [
          {
            "description": "The hosting plan's\n[package extensions](https://go.cpanel.net/GuidetoPackageExtensions).\n\n**Note:**\n\n* Use space-delimited format to add multiple package extensions.\n* Extension names are case-sensitive.",
            "examples": {
              "multiple": {
                "summary": "Add multiple package extensions.",
                "value": "extension1 extension2 extension3"
              },
              "single": {
                "summary": "Add a single package extension.",
                "value": "extension1"
              }
            },
            "explode": false,
            "in": "query",
            "name": "_PACKAGE_EXTENSIONS",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "spaceDelimited"
          },
          {
            "description": "The hosting plan's name.\n\n**Note:**\n\nYou **cannot** use the `extensions` name for a hosting plan.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "package1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pkg": {
                          "description": "The hosting plan's name.",
                          "example": "package1",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "addpkgext",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add hosting plan extension",
        "tags": [
          "Packages",
          "Hosting Plan Extensions"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 addpkgext name='package1' _PACKAGE_EXTENSIONS='extension1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/addpkgext?api.version=1&name=package1&_PACKAGE_EXTENSIONS=extension1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/addzonerecord": {
      "post": {
        "description": "This function adds a DNS zone record.\n\n**Important:**\n\n* When you call this function, you **must** include the additional parameters for the selected zone record type.\n* When you disable the [DNS role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.\n\n**Note:**\n\nOn servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource records on DNS.\n  * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.\n  * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).",
        "operationId": "addzonerecord",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DnsAddZoneParameterType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "addzonerecord",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Bind reloading on hostname using rndc zone: [example.com]\n",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create DNS zone record",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 --input=json --output=json addzonerecord"
          },
          {
            "label": "HTTP Request (Wire Format)",
            "lang": "HTTP",
            "source": "POST /cpsess##########/json-api/addzonerecord HTTP/1.1\nHost: example.com:2083\nCookie: ###################################\nContent-Type: application/json\nContent-Length: 0\n\n"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/analyze_transfer_session_remote": {
      "get": {
        "description": "This function checks the remote server's credentials, which a transfer session uses to connect.",
        "operationId": "analyze_transfer_session_remote",
        "parameters": [
          {
            "description": "The transfer session's ID.",
            "in": "query",
            "name": "transfer_session_id",
            "required": true,
            "schema": {
              "example": "exampleservercopya20140206192428NtyW",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "analyze_transfer_session_remote",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate remote server's credentials",
        "tags": [
          "Transfers",
          "Transfer Monitoring"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 analyze_transfer_session_remote transfer_session_id='exampleservercopya20140206192428NtyW'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/analyze_transfer_session_remote?api.version=1&transfer_session_id=exampleservercopya20140206192428NtyW"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/api_token_create": {
      "get": {
        "description": "This function creates an API token. You can use API tokens instead of a password\nor access hash key to execute WHM API 1 functions over HTTPS. For more information\nabout API tokens, read our\n[Manage API Tokens in WHM](https://docs.cpanel.net/whm/development/manage-api-tokens-in-whm/)\ndocumentation.\n\n**Important:**\n\nYou **must** call this function over an SSL connection.",
        "operationId": "api_token_create",
        "parameters": [
          {
            "description": "The API token's name.\n\n**Note:**\n\n* An API token name's maximum length is 50 characters, and the name may **only**\ncontain alphanumeric characters, dashes (`-`), and underscores (`_`).\n* You **must** assign a name that does **not** already exist to the API token.",
            "in": "query",
            "name": "token_name",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          },
          {
            "description": "The privileges to assign to the token. If you do not use this parameter, the system\nassigns **all** of your privileges to the token.\n\n**Note:**\n\n* You can **only** assign privileges that you possess to the API token.\n* To assign multiple privileges to the token, increment the parameter name. For\nexample: `acl-0`, `acl-1`, `acl-2`.",
            "examples": {
              "multiple": {
                "summary": "Assign multiple privileges.",
                "value": "acl-0=create-acct acl-1=list-accts acl-2=kill-acct"
              },
              "single": {
                "summary": "Assign a single privilege.",
                "value": "all"
              }
            },
            "in": "query",
            "name": "acl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API token's expiration time. If you do not use this parameter, the\nAPI token will not expire.\n\n* A date, in [Unix Epoch format](http://en.wikipedia.org/wiki/Unix_time).\n* `0` — The API token will **not** expire.\n\n**Important:**\n\n When an API token expires, the system **does** not delete it. You **must**\n manually delete expired API tokens.",
            "in": "query",
            "name": "expires_at",
            "required": false,
            "schema": {
              "default": 0,
              "example": 1609372800,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "acls": {
                          "description": "An array of privileges that the token possesses.",
                          "items": {
                            "example": "kill-acct",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "create_time": {
                          "description": "The API token's creation time, in Unix time format.",
                          "example": 1483625276,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "expires_at": {
                          "description": "The API token's expiration time.\n\n* A valid timestamp, in Unix time format.\n* A `null` value.",
                          "example": 1609372800,
                          "format": "unix_timestamp",
                          "nullable": true,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The new API token's name.\n\n**Note:**\n\nUse this value to revoke an API token with WHM API 1's\n`api_token_revoke` function.",
                          "example": "example",
                          "type": "string"
                        },
                        "token": {
                          "description": "The new API token to use to authenticate to WHM.\n\n**Warning:**\n\nMake **certain** that you save your API token in a safe location.\nYou **cannot** access the token again after you use this function.",
                          "example": "UWU28DCA23NKY76CN17MDPKM3O7EFQY8",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "api_token_create",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create WHM API token",
        "tags": [
          "Authentication",
          "API Token Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 api_token_create token_name='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/api_token_create?api.version=1&token_name=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/api_token_list": {
      "get": {
        "description": "This function lists a WHM account's API tokens.",
        "operationId": "api_token_list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "tokens": {
                          "additionalProperties": {
                            "description": "An object of API token details.",
                            "properties": {
                              "acls": {
                                "additionalProperties": {
                                  "description": "Whether the Access Control List (ACL) is enabled.\n* `1` - The ACL is enabled.\n* `0` - The ACL is disabled.\n\n**Note**\n\nThe property name should be an [ACL](https://go.cpanel.net/ACLReferenceChart).",
                                  "enum": [
                                    0,
                                    1
                                  ],
                                  "example": 1,
                                  "type": "integer"
                                },
                                "description": "An object of privileges available to the user."
                              },
                              "create_time": {
                                "description": "The API token's creation time.",
                                "example": 1483625276,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "expires_at": {
                                "description": "The API token's expiration time. If the API token does not expire, the value is `null`.",
                                "example": 1609372800,
                                "format": "unix_timestamp",
                                "nullable": true,
                                "type": "integer"
                              },
                              "name": {
                                "description": "The API token's name.",
                                "example": "my-token-name",
                                "type": "string"
                              }
                            }
                          },
                          "description": "An object that contains WHM account's API token names.",
                          "example": {
                            "my-controller-token": {
                              "acls": {
                                "create-acct": 0,
                                "edit-account": 0,
                                "limit-bandwidth": 1,
                                "list-accts": 1,
                                "suspend-acct": 1,
                                "upgrade-account": 0
                              },
                              "create_time": 1483625276,
                              "expires_at": 1609372800,
                              "name": "my-controller-token"
                            },
                            "my-read-only-token": {
                              "acls": {
                                "create-acct": 0,
                                "edit-account": 0,
                                "limit-bandwidth": 0,
                                "list-accts": 1,
                                "suspend-acct": 0,
                                "upgrade-account": 0
                              },
                              "create_time": 1490882281,
                              "expires_at": null,
                              "name": "my-read-only-token"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "api_token_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return WHM API tokens",
        "tags": [
          "Authentication",
          "API Token Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 api_token_list"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/api_token_list?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/api_token_revoke": {
      "get": {
        "description": "This function revokes an API token from the WHM account.",
        "operationId": "api_token_revoke",
        "parameters": [
          {
            "description": "The API token's name.\n\n**Note:**\n\nTo revoke multiple API tokens, increment this parameter's name. For example: `token_name-1`, `token_name-2`, and `token_name-3`.",
            "examples": {
              "multiple": {
                "summary": "Revoke multiple API tokens.",
                "value": "token_name-1=subway&token_name-2=job&token_name-3=jmkMRXBnhp20iz"
              },
              "single": {
                "summary": "Revoke a single API token.",
                "value": "subway"
              }
            },
            "in": "query",
            "name": "token_name",
            "required": true,
            "schema": {
              "example": "subway",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "api_token_revoke",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable WHM API token",
        "tags": [
          "Authentication",
          "API Token Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 api_token_revoke token_name='subway'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/api_token_revoke?api.version=1&token_name=subway"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/api_token_update": {
      "get": {
        "description": "This function updates an API token's settings.",
        "operationId": "api_token_update",
        "parameters": [
          {
            "description": "The API token's name.",
            "in": "query",
            "name": "token_name",
            "required": true,
            "schema": {
              "example": "token",
              "type": "string"
            }
          },
          {
            "description": "The new privileges to assign to the token. If you do **not** use this parameter,\nthe system will assign all of your privileges to the token.\n\nFor a list of Access Control List (ACL) privileges, read our\n[Edit Reseller Nameservers and Privileges](https://docs.cpanel.net/whm/resellers/edit-reseller-nameservers-and-privileges/#feature-limits-acl-lists)\ndocumentation.\n\n**Note:**\n\n* You can **only** assign privileges that you possess to the API token.\n\n* The function replaces **all** current privileges with the privileges that you pass\nin this parameter.\n\n* To assign multiple privileges to the token, increment the parameter name.\nFor example, `acl-1`, `acl-2`, `acl-3`.",
            "examples": {
              "multiple": {
                "summary": "Assign multiple privilges.",
                "value": "acl-0=create-acct acl-1=list-accts acl-2=kill-acct"
              },
              "single": {
                "summary": "Assign a single privilege.",
                "value": "all"
              }
            },
            "in": "query",
            "name": "acl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API token's expiration time. If you do not use this parameter,\nthe API token will **not** expire.\n\n* A date, in [Unix Epoch format](http://en.wikipedia.org/wiki/Unix_time).\n* `0` — The API token will **not** expire.\n\n**Important:**\n\nWhen an API token expires, the system does **not** delete it. You **must**\nmanually delete expired API tokens.",
            "in": "query",
            "name": "expires_at",
            "required": false,
            "schema": {
              "default": 0,
              "example": 1609372800,
              "format": "unix_timestamp",
              "type": "integer"
            }
          },
          {
            "description": "The API token's new name. If you do not use this parameter, the API token's name\nremains the same.\n\n**Note:**\n\n* An API token name's maximum length is 50 characters, and the name may **only**\ncontain alphanumeric characters, dashes (`-`), and underscores (`_`).\n\n* You **must** assign a name that does **not** already exist to the API token.",
            "in": "query",
            "name": "new_name",
            "required": false,
            "schema": {
              "example": "example",
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "acls": {
                          "description": "A list of privileges assigned to the token.",
                          "example": [
                            "create-acct",
                            "kill-acct",
                            "list-accts"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "create_time": {
                          "description": "The API token's creation time.",
                          "example": 1483625276,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "expires_at": {
                          "description": "The API token's expiration time.\n\n**Note:**\n\nA `null` value means that the API token does **not** expire.",
                          "example": 1609372800,
                          "format": "unix_timestamp",
                          "nullable": true,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The API token's name.\n\n**Note:**\n\n* This function returns the API token's new name when you use\nthe `new_name` parameter.\n\n* Use this value to revoke an API token with WHM API 1's `api_token_revoke`\nfunction.",
                          "example": "example",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "api_token_update",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` – Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update WHM API token's settings",
        "tags": [
          "Authentication",
          "API Token Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 api_token_update token_name='token'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/api_token_update?api.version=1&token_name=token"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/applist": {
      "get": {
        "description": "This function lists available WHM API 1 functions.",
        "operationId": "applist",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "app": {
                          "description": "An array of available WHM API 1 functions.",
                          "example": [
                            "accountsummary",
                            "listaccts"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "applist",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the api failed when the metadata.result field is 0. The field may be set to a success message on a successful call.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the api call.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return WHM API 1 functions list",
        "tags": [
          "Accounts",
          "Applications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 applist"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/applist?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/authorizesshkey": {
      "get": {
        "description": "This function authorizes a public SSH key to access the server.\nWhen you call this function, it adds the key to the `/root/.ssh/authorized_keys` file.\n\n**Warning:**\n\n* Do **not** transfer private keys over insecure ports.\n* Only `root` and `root`-enabled resellers can use this function, and it only affects\nthe `root` public SSH keys. To perform this function on a regular user account, call\nthe cPanel API 2 `SSH::authkey` function via the WHM API. For more information, read our\n[Use WHM API to Call cPanel API and UAPI](https://go.cpanel.net/UseWHMAPItoCallcPanelAPIandUAPI)\ndocumentation.",
        "operationId": "authorizesshkey",
        "parameters": [
          {
            "description": "Whether to authorize the public SSH key to access the server.\n\n* `1` — Authorize.\n* `0` — Do **not** authorize.",
            "in": "query",
            "name": "authorize",
            "required": true,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The public SSH key file's name.\n\n**Note:**\n\n* This file **must** exist in the `/root/.ssh` directory.\n* If you call **both** the `file` and the `text` parameters, the function **ignores**\nthe `file` parameter.",
            "in": "query",
            "name": "file",
            "required": true,
            "schema": {
              "example": "sshkey.pub",
              "type": "string"
            }
          },
          {
            "description": "The text of the SSH public key file.\n\n**Note:**\n\n* If you call **both** the `file` and the `text` parameters, the function **ignores**\nthe `file` parameter.",
            "in": "query",
            "name": "text",
            "required": true,
            "schema": {
              "example": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCys7JbGhkAZ8E4Pmq8D4EBm1UedKK2oMhs3RVIEFRJX6S86Itw6Qmhds62LNGrxuVL11W6v25+maIiBhXnslyQpd838tHyAC7J/SJojDid8acovX/4xgJQaJHLAh9tLgyQXnNhIxIGJ4nVZ+8OqM2Vb1Cps+E5H17ivG07PXnVPEvwMaeWkm2DnGgSy5kmjVpNKlj9GWFCn/SJd7up7QnbGKoz87pxKDs3esp+ziuPEAJHLeXnKHWPVukQgtRUpUBdqkCvu5hUkhpaiWmBR8yxajkxbSObPw+ZkELhmm+fQseOfEbrwToMRJCO7gAKwBtNi7OhyFM7YFrvdo0xh6cn",
              "type": "string"
            }
          },
          {
            "description": "A comma-separated list of options to include with the public SSH key.\nFor a list of options, read the\n[OpenBSD manaual](https://man.openbsd.org/sshd.8#AUTHORIZED_KEYS_FILE_FORMAT).\n\nThis parameter defaults to no options.",
            "in": "query",
            "name": "options",
            "required": false,
            "schema": {
              "example": "agent-forwarding,cert-authority",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "authorized": {
                          "description": "Whether the public SSH key has authorization.\n* `1` — Authorized.\n* `0` — **Not** authorized.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "file": {
                          "description": "The public SSH key file's name.",
                          "example": "sshkey.pub",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "authorizesshkey",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable SSH key for server",
        "tags": [
          "Security",
          "SSH Keys and Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 authorizesshkey file='sshkey.pub' text='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCys7JbGhkAZ8E4Pmq8D4EBm1UedKK2oMhs3RVIEFRJX6S86Itw6Qmhds62LNGrxuVL11W6v25+maIiBhXnslyQpd838tHyAC7J/SJojDid8acovX/4xgJQaJHLAh9tLgyQXnNhIxIGJ4nVZ+8OqM2Vb1Cps+E5H17ivG07PXnVPEvwMaeWkm2DnGgSy5kmjVpNKlj9GWFCn/SJd7up7QnbGKoz87pxKDs3esp+ziuPEAJHLeXnKHWPVukQgtRUpUBdqkCvu5hUkhpaiWmBR8yxajkxbSObPw+ZkELhmm+fQseOfEbrwToMRJCO7gAKwBtNi7OhyFM7YFrvdo0xh6cn' authorize='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/authorizesshkey?api.version=1&file=sshkey.pub&text=ssh-rsa%20AAAAB3NzaC1yc2EAAAADAQABAAABAQCys7JbGhkAZ8E4Pmq8D4EBm1UedKK2oMhs3RVIEFRJX6S86Itw6Qmhds62LNGrxuVL11W6v25%2bmaIiBhXnslyQpd838tHyAC7J%2fSJojDid8acovX%2f4xgJQaJHLAh9tLgyQXnNhIxIGJ4nVZ%2b8OqM2Vb1Cps%2bE5H17ivG07PXnVPEvwMaeWkm2DnGgSy5kmjVpNKlj9GWFCn%2fSJd7up7QnbGKoz87pxKDs3esp%2bziuPEAJHLeXnKHWPVukQgtRUpUBdqkCvu5hUkhpaiWmBR8yxajkxbSObPw%2bZkELhmm%2bfQseOfEbrwToMRJCO7gAKwBtNi7OhyFM7YFrvdo0xh6cn&authorize=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/available_transfer_modules": {
      "get": {
        "description": "This function lists all available transfer modules.\n\n**Note:**\n\n  For more information about how this function works with other functions in the transfer and restore process, read our\n  [Guide to Transfer and Restore API Functions](https://documentation.cpanel.net/display/DD/Guide+to+Transfer+and+Restore+API+Functions)\n  documentation.",
        "operationId": "available_transfer_modules",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "modules": {
                          "additionalProperties": {
                            "description": "The priority of the transfer module.\n\n**Note:**\n\nThe key is the transfer module's name.",
                            "example": "6000",
                            "pattern": "^[1-9][0-9]*$",
                            "type": "string"
                          },
                          "description": "The transfer module's information.",
                          "example": {
                            "AccountLocal": "5000",
                            "AccountRemoteRoot": "3000",
                            "AccountRemoteUser": "4000",
                            "FeatureListRemoteRoot": "1000",
                            "LegacyAccountBackup": "6000",
                            "PackageRemoteRoot": "2000"
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "available_transfer_modules",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return available transfer modules",
        "tags": [
          "Transfers",
          "Transfer Monitoring"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 available_transfer_modules"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/available_transfer_modules?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/background_mysql_upgrade_checker_run": {
      "get": {
        "description": "This function checks your MySQL configuration file and table engine before an upgrade to MySQL 8.0.\n\n**Important:**\n\nWhen you disable the\n[MySQL/MariaDB role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles)\n**and** remote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "background_mysql_upgrade_checker_run",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "log_entry": {
                          "description": "The upgrade log's location, relative to the\n[`/var/cpanel/logs/`](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-log-files/#/var-cpanel-logs)\ndirectory.",
                          "example": "mysql_upgrade.20200202-172923",
                          "type": "string"
                        },
                        "pid": {
                          "description": "The upgrade check's process ID.",
                          "example": 23456,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "background_mysql_upgrade_checker_run",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate MySQL status before upgrade",
        "tags": [
          "Databases",
          "Manage MySQL Server"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 background_mysql_upgrade_checker_run"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/background_mysql_upgrade_checker_run?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "88"
      }
    },
    "/background_mysql_upgrade_status": {
      "get": {
        "description": "This function retrieves the status of a background MySQL® or MariaDB® upgrade.\n\n**Important:**\n\n  When you disable the [MySQL/MariaDB](https://go.cpanel.net/serverroles) role and remote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "background_mysql_upgrade_status",
        "parameters": [
          {
            "description": "The logfile's name.\n\n**Note:**\n\n  Log files exist in the `/var/cpanel/logs/` directory.",
            "in": "query",
            "name": "upgrade_id",
            "required": true,
            "schema": {
              "example": "mysql_upgrade.20141108-172923",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "error": {
                          "description": "An error code.\n* `0` — Successful upgrade.\n* `-1` — Child process died from a signal.\n* `4` — MySQL upgrade failed error code.\n* `5` — Ruby upgrade failed error code.\n* `8` — EasyApache upgrade failed error code.",
                          "example": 0,
                          "type": "integer"
                        },
                        "error_log": {
                          "description": "The upgrade's error log file.\n\n**Note:**\n\n You can review MySQL upgrade error logs in the following location, where $TIME represents the time in [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) format: `/var/cpanel/logs/mysql_upgrade.$TIME/unattended_background_upgrade.error`.",
                          "example": "Starting The system failed to update MYSQL,\\n------------------------------------\\n",
                          "type": "string"
                        },
                        "log": {
                          "description": "The upgrade's log file.",
                          "example": "Starting process with log file at /var/cpanel/logs/mysql_upgrade.20141108-172923/unattended_background_upgrade.log\nBeginning MariaDB 10.0 upgrade...\nObtained version information from system.\nEnsuring the MariaDB100 repository is available and working.\ncheckyum version 22.3\nEnsuring that the package MariaDB-client with version matching 10.0 is available.\nEnsuring that the package MariaDB-common with version matching 10.0 is available.\nEnsuring that the package MariaDB-devel with version matching 10.0 is available.\nEnsuring that the package MariaDB-server with version matching 10.0 is available.\nEnsuring that the package MariaDB-shared with version matching 10.0 is available.\nEnsuring that the package coreutils is available.\nEnsuring that the package grep is available.\nEnsuring that the package perl-DBI is available.\n your MariaDB server version for the right syntax to use near ''.`netcopya0I5KfqYTfHqJr` FOR UPGRADE'' at line 1 when executing ''CHECK TABLE ... FOR UPGRADE''\nFATAL ERROR: Upgrade failed\nDone building configuration.\nHooks system enabled.\nChecking for and running RPM::Versions ''post'' hooks for any RPMs about to be installed\nAll required ''post'' hooks have been run\nRunning: /usr/local/cpanel/scripts/check_cpanel_rpms --targets=MySQL41,MySQL50,MySQL51,MySQL55,MySQL56,MariaDB100,MariaDB101 --fix\nRestarting mysql service.\nWaiting for mysql to restart waiting for mysql to initialize finished.\n\u001b[1;32mMariaDB upgrade completed successfully\u001b[0m\n------------------------------------\nChecking for Ruby update...\nNo Ruby update required.\n------------------------------------\n",
                          "type": "string"
                        },
                        "state": {
                          "description": "The upgrade's state.\n* success\n* failed\n* in progress",
                          "enum": [
                            "success",
                            "failed",
                            "in progress"
                          ],
                          "example": "success",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "background_mysql_upgrade_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return MySQL or MariaDB upgrade status",
        "tags": [
          "Databases",
          "Manage MySQL Server"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 background_mysql_upgrade_status upgrade_id='mysql_upgrade.20141108-172923'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/background_mysql_upgrade_status?api.version=1&upgrade_id=mysql_upgrade.20141108-172923"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "cPanel 11.48"
      }
    },
    "/backup_config_get": {
      "get": {
        "description": "This function retrieves your backup destination configuration file data.",
        "operationId": "backup_config_get",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "backup_config": {
                          "description": "A list of backup configuration data.",
                          "properties": {
                            "backup_daily_enable": {
                              "description": "Whether daily backups are enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "backup_daily_retention": {
                              "description": "The number of retained daily backups.",
                              "example": 5,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "backup_monthly_dates": {
                              "description": "A comma-seprated list of the days of the month on which the system runs monthly backups.",
                              "example": "1,15,22",
                              "type": "string"
                            },
                            "backup_monthly_enable": {
                              "description": "Whether monthly backups are enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "backup_monthly_retention": {
                              "description": "The number of retained monthly backups.",
                              "example": 5,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "backup_weekly_day": {
                              "description": "The day of the week on which the system runs weekly backups.\n\n* `0` — Sunday.\n* `1` — Monday.\n* `2` — Tuesday.\n* `3` — Wednesday.\n* `4` — Thursday.\n* `5` — Friday.\n* `6` — Saturday.",
                              "example": "1,3,5",
                              "type": "string"
                            },
                            "backup_weekly_enable": {
                              "description": "Whether weekly backups are enabled.\n\n* `1` — Enable.\n* `0` — Disable.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "backup_weekly_retention": {
                              "description": "The number of retained weekly backups.",
                              "example": 4,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "backupaccts": {
                              "description": "Whether to back up accounts.\n\n* `1` — Back up.\n* `0` — Do **not** back up.\n\n**Note:**\n\nThis setting affects whether the system enables the *File and\nDirectory Restoration* interface in cPanel & WHM. For more\ninformation, read the\n[How to Manage Metadata Settings](https://go.cpanel.net/MetadataSettings)\ndocumentation.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "backupbwdata": {
                              "description": "Whether bandwidth tracking data backups are enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "backupdays": {
                              "description": "The days of the week on which the system runs daily backups.\n\n* `0` — Sunday.\n* `1` — Monday.\n* `2` — Tuesday.\n* `3` — Wednesday.\n* `4` — Thursday.\n* `5` — Friday.\n* `6` — Saturday.",
                              "example": "0,2,4,6",
                              "type": "string"
                            },
                            "backupdir": {
                              "description": "The aboslute file path to the server's local backup directory.",
                              "example": "/backup",
                              "type": "string"
                            },
                            "backupenable": {
                              "description": "Whether backups are enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "backupfiles": {
                              "description": "Whether system file backups are enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "backuplogs": {
                              "description": "Whether error log backups are enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "backupmount": {
                              "description": "Whether the system mounts backup partitions as part of the\nbackup process.\n\n* `1` — Mounted.\n* `0` — **Not** mounted.\n\n**Note:**\n\nThis setting affects whether the system enables the *File and\nDirectory Restoration* interface in cPanel & WHM. For more\ninformation, read the\n[How to Manage Metadata Settings](https://go.cpanel.net/MetadataSettings)\ndocumentation.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "backupsuspendedaccounts": {
                              "description": "Whether suspended account backups are enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "backuptype": {
                              "description": "The type of backup file the system creates.\n\n* `compressed` — A compressed `.tar` file.\n* `uncompressed` — An uncompressed `.tar` file.\n* `incremental` — A full tree of files and directories.",
                              "enum": [
                                "compressed",
                                "uncompressed",
                                "incremental"
                              ],
                              "example": "compressed",
                              "type": "string"
                            },
                            "check_min_free_space": {
                              "description": "Whether the system performs a check of the minimum free disk space\navailable on the destination server.\n\n* `1` — Check the free disk space on the destination server.\n* `0` — Do **not** check the free disk space on the destination\nserver.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "disable_metadata": {
                              "description": "Whether the backup system creates metadata when a backup runs.\n\n* `1` — Disables metadata creation.\n* `0` — Enables metadata creation.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "errorthreshhold": {
                              "description": "The number of times that the system attempts to use the additional backup destination.",
                              "example": 3,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "force_prune_daily": {
                              "description": "Whether the `backup_daily_retention` parameter is strictly enforced.\n\n* `1` — Enforced.\n* `0` — The system **only** enforces the `backup_daily_retention`\nsetting after a backup successfully completes.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "force_prune_monthly": {
                              "description": "Whether the `backup_monthly_retention` parameter is strictly enforced.\n\n* `1` — Enforced.\n* `0` — The system **only** enforces the `backup_monthly_retention`\nsetting after a backup successfully completes.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "force_prune_weekly": {
                              "description": "Whether the `backup_weekly_retention` parameter is strictly enforced.\n\n* `1` — Enforced.\n* `0` — The system **only** enforces the `backup_weekly_retention`\nsetting after a backup successfully completes.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "gziprsyncopts": {
                              "description": "The environment variables passed to the `gzip` application. The system uses these variables to adjust how the `gzip` application runs when compressing backups.",
                              "example": "--rysncable",
                              "type": "string"
                            },
                            "keeplocal": {
                              "description": "Whether the system deletes backups from the local directory.\n\n* `1` — The system does not delete backups from the local backup\ndirectory.\n* `0` — The system **deletes** backups from the local\ndirectory.\n\n**Note:**\n\nThe `backupdir` return value contains the local backup directory.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "linkdest": {
                              "description": "Whether the system checks the `rsync` function for hardlink support.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "localzonesonly": {
                              "description": "Whether the system uses a local zone file from the `dnsadmin` daemon\nor `/var/named/domain.tld` file, where `domain.tld` is the target domain.\n\n* `1` — The system uses the `/var/named/domain.tld` file.\n* `0` — The system uses the `dnsadmin` daemon.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "maximum_restore_timeout": {
                              "description": "The maximum interval, in seconds, that the restoration attempts a run to completion. If the restoration takes longer than this interval, the system terminates the restoration.",
                              "example": 21600,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "maximum_timeout": {
                              "description": "The maximum interval, in seconds, that the backup attempts a run to completion. If the backup takes longer than this interval, the system terminates the backup.",
                              "example": 7200,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "min_free_space": {
                              "description": "The minimum amount of free disk space the system checks for on the destination server before attempting a backup to that server.",
                              "example": 1024,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "min_free_space_unit": {
                              "description": "The unit of measure of disk space for the `min_free_space` return.\n\n* `MB` — Megabytes.\n* `percent` — Percentages.",
                              "enum": [
                                "MB",
                                "percent"
                              ],
                              "example": "MB",
                              "type": "string"
                            },
                            "mysqlbackup": {
                              "description": "The method that the system uses to back up MySQL® databases.\n\n* `accounts` — Backs up databases into each account's archive.\n* `dir` — Backs up the entire MySQL directory.\n* `both` — Back up databases into each account's archive **and**\nthe entire MySQL directory.",
                              "example": "accounts",
                              "type": "string"
                            },
                            "postbackup": {
                              "description": "Whether the `/usr/local/cpanel/scripts/postcpbackup` script runs\nafter the backup completes.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "prebackup": {
                              "description": "Whether the `/usr/local/cpanel/scripts/precpbackup` script runs before\nthe system processes backups.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "psqlbackup": {
                              "description": "Whether backups of PostgreSQL® databases are enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "remote_restore_staging_dir": {
                              "description": "The directory on the local server where the system temporarily\nstores a remote server's backup file during a backup restoration.",
                              "example": "/backup",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_config_get",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return backup configuration file data",
        "tags": [
          "Backups",
          "Backup Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_config_get"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_config_get?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_config_set": {
      "get": {
        "description": "This function configures a server's backup system. The system saves these settings in the `/var/cpanel/backups/config` file.",
        "operationId": "backup_config_set",
        "parameters": [
          {
            "description": "Whether to enable daily backups.\n\n* `1` — Enable.\n* `0` — Disable.",
            "in": "query",
            "name": "backup_daily_enable",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of daily backups to retain.",
            "in": "query",
            "name": "backup_daily_retention",
            "required": false,
            "schema": {
              "default": 5,
              "example": 5,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Which days of the month to run backups.\n\n**Note:**\n\nTo add multiple days, use a comma-delimited list.",
            "in": "query",
            "name": "backup_monthly_dates",
            "required": false,
            "schema": {
              "default": 1,
              "example": 1,
              "maximum": 31,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to enable monthly backups.\n\n* `1` — Enable.\n* `0` — Disable.",
            "in": "query",
            "name": "backup_monthly_enable",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The number of monthly backups to retain.",
            "in": "query",
            "name": "backup_monthly_retention",
            "required": false,
            "schema": {
              "default": 1,
              "example": 5,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Which day of the week to run weekly backups.\n\n* `0` — Sunday.\n* `1` — Monday.\n* `2` — Tuesday.\n* `3` — Wednesday.\n* `4` — Thursday.\n* `5` — Friday.\n* `6` — Saturday.",
            "in": "query",
            "name": "backup_weekly_day",
            "required": false,
            "schema": {
              "default": 0,
              "example": 1,
              "maximum": 6,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to enable weekly backups.\n\n* `1` — Enable.\n* `0` — Disable.",
            "in": "query",
            "name": "backup_weekly_enable",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The number of weekly backups to retain.",
            "in": "query",
            "name": "backup_weekly_retention",
            "required": false,
            "schema": {
              "default": 4,
              "example": 4,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to back up cPanel user accounts.\n\n* `1` — Back up.\n* `0` — Do **not** back up.\n\n**Note:**\n\nThis setting affects whether the system enables the *File and Directory Restoration*\ninterfaces in\n[cPanel](https://docs.cpanel.net/cpanel/files/file-and-directory-restoration-for-cpanel/)\nand in\n[WHM](https://docs.cpanel.net/whm/backup/file-and-directory-restoration-for-whm/).\nFor more information, read the\n[How to Manage Metadata Settings](https://docs.cpanel.net/knowledge-base/backup/how-to-manage-metadata-settings/)\ndocumentation.",
            "in": "query",
            "name": "backupaccts",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to back up bandwidth tracking data.\n\n* `1` — Back up.\n* `0` — Do **not** back up.",
            "in": "query",
            "name": "backupbwdata",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Which days of the week to run daily backups.\n\n* `0` — Sunday.\n* `1` — Monday.\n* `2` — Tuesday.\n* `3` — Wednesday.\n* `4` — Thursday.\n* `5` — Friday.\n* `6` — Saturday.\n\n**Note:**\n\nFor multiple days, use a comma-delimited list.",
            "in": "query",
            "name": "backupdays",
            "required": false,
            "schema": {
              "default": "0,2,4,6",
              "example": "0,1,2,3,4,5,6",
              "maximum": 6,
              "minimum": 0,
              "type": "string"
            }
          },
          {
            "description": "The primary backup directory.",
            "in": "query",
            "name": "backupdir",
            "required": false,
            "schema": {
              "default": "/backup",
              "example": "/backup",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable backups.\n\n* `1` — Enable.\n* `0` — Disable.\n\n**Note:**\n\nThis setting affects whether the system enables the *File and Directory Restoration*\ninterfaces in\n[cPanel](https://docs.cpanel.net/cpanel/files/file-and-directory-restoration-for-cpanel/)\nand in\n[WHM](https://docs.cpanel.net/whm/backup/file-and-directory-restoration-for-whm/).\nFor more information, read the\n[How to Manage Metadata Settings](https://docs.cpanel.net/knowledge-base/backup/how-to-manage-metadata-settings/)\ndocumentation.",
            "in": "query",
            "name": "backupenable",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to back up system files.\n\n* `1` — Back up.\n* `0` — Do **not** back up.",
            "in": "query",
            "name": "backupfiles",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to back up the error logs.\n\n* `1` — Back up.\n* `0` — Do **not** back up.",
            "in": "query",
            "name": "backuplogs",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to mount a backup partition.\n\n* `1` — Mount.\n* `0` — Do **not** mount.\n\n**Note:**\n\nThis setting affects whether the system enables the *File and Directory Restoration*\ninterfaces in\n[cPanel](https://docs.cpanel.net/cpanel/files/file-and-directory-restoration-for-cpanel/)\nand in\n[WHM](https://docs.cpanel.net/whm/backup/file-and-directory-restoration-for-whm/).\nFor more information, read the\n[How to Manage Metadata Settings](https://docs.cpanel.net/knowledge-base/backup/how-to-manage-metadata-settings/)\ndocumentation.",
            "in": "query",
            "name": "backupmount",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to back up suspended accounts.\n\n* `1` — Back up.\n* `0` — Do **not** back up.",
            "in": "query",
            "name": "backupsuspendedaccts",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The type of backup to create.\n\n* `compressed`\n* `uncompressed`\n* `incremental`",
            "in": "query",
            "name": "backuptype",
            "required": false,
            "schema": {
              "default": "compressed",
              "enum": [
                "compressed",
                "uncompressed",
                "incremental"
              ],
              "example": "compressed",
              "type": "string"
            }
          },
          {
            "description": "Whether to ensure that the destination server possesses the minimum\nfree disk space available.\n\n* `1` — Check the free disk space on the destination server.\n* `0` — Do **not** check the free disk space on the destination server.",
            "in": "query",
            "name": "check_min_free_space",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the backup system will create metadata when a backup runs.\n\n* `1` — Disable metadata creation.\n* `0` — Enable metadata creation.\n\n**Note:**\n\nThis setting affects whether the system enables the *File and Directory Restoration*\ninterfaces in\n[cPanel](https://docs.cpanel.net/cpanel/files/file-and-directory-restoration-for-cpanel/)\nand in\n[WHM](https://docs.cpanel.net/whm/backup/file-and-directory-restoration-for-whm/).\nFor more information, read the\n[How to Manage Metadata Settings](https://docs.cpanel.net/knowledge-base/backup/how-to-manage-metadata-settings/)\ndocumentation.",
            "in": "query",
            "name": "disable_metadata",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The number of times that the system will try to use the additional backup destination.",
            "in": "query",
            "name": "errorthreshhold",
            "required": false,
            "schema": {
              "default": 3,
              "example": 3,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to strictly enforce the value of the `backup_daily_retention`\nparameter.\n\n* `1` — Strictly enforce the `backup_daily_retention` parameter.\n* `0` — Only enforce the `backup_daily_retention` parameter **after** a\nsuccessful complete backup.",
            "in": "query",
            "name": "force_prune_daily",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to strictly enforce the value of the `backup_monthly_retention`\nparameter.\n\n* `1` — Strictly enforce the `backup_monthly_retention` parameter.\n* `0` — Only enforce the `backup_monthly_retention` parameter **after** a\nsuccessful complete backup.",
            "in": "query",
            "name": "force_prune_monthly",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to strictly enforce the value of the `backup_weekly_retention`\nparameter.\n\n* `1` — Strictly enforce the `backup_weekly_retention` parameter.\n* `0` — Only enforce the `backup_weekly_retention` parameter **after** a\nsuccessful complete backup.",
            "in": "query",
            "name": "force_prune_weekly",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The `gzip` environment variables.",
            "in": "query",
            "name": "gziprsyncopts",
            "required": false,
            "schema": {
              "default": "",
              "example": "--rysncable",
              "type": "string"
            }
          },
          {
            "description": "Whether to delete backups from the local directory.\n\n* `1` — Delete.\n* `0` — Do **not** delete.\n\n**Note:**\n\nThis setting affects whether the system enables the *File and Directory Restoration*\ninterfaces in\n[cPanel](https://docs.cpanel.net/cpanel/files/file-and-directory-restoration-for-cpanel/)\nand in\n[WHM](https://docs.cpanel.net/whm/backup/file-and-directory-restoration-for-whm/).\nFor more information, read the\n[How to Manage Metadata Settings](https://docs.cpanel.net/knowledge-base/backup/how-to-manage-metadata-settings/)\ndocumentation.",
            "in": "query",
            "name": "keeplocal",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to check the `rsync` function for hardlink support.\n\n* `1` — Check.\n* `0` — Do **not** check.",
            "in": "query",
            "name": "linkdest",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to use a local zone file from the `/var/named/domain.tld`\nfile or the `dnsadmin` daemon, where `domain.tld` represents the target domain.\n\n* `1` — Use the `/var/named/domain.tld` file.\n* `0` — Use `dnsadmin`.",
            "in": "query",
            "name": "localzonesonly",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "How long a restoration will attempt to run, in seconds. If the restoration does not succeed in this amount of time, it will stop.",
            "in": "query",
            "name": "maximum_restore_timeout",
            "required": false,
            "schema": {
              "default": 21600,
              "example": 21600,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "How long a backup will attempt to run, in seconds. If the backup does not succeed in this amount of time, it will stop.",
            "in": "query",
            "name": "maximum_timeout",
            "required": false,
            "schema": {
              "default": 7200,
              "example": 7200,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "The minimum amount of free disk to check for on the destination server.\n\n**Note:**\n\nIf the value of the `min_free_space_unit` parameter is `percent`, the maximum\nvalue is `100`.",
            "in": "query",
            "name": "min_free_space",
            "required": false,
            "schema": {
              "default": 5,
              "example": 1024,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "The units of measurement of disk space for the `min_free_space` return.\n\n* `MB` — Megabytes.\n* `percent` — Percent available.",
            "in": "query",
            "name": "min_free_space_unit",
            "required": false,
            "schema": {
              "default": "percent",
              "enum": [
                "MB",
                "percent"
              ],
              "example": "MB",
              "type": "string"
            }
          },
          {
            "description": "The backup method to use for MySQL® databases.\n\n* `accounts` — Back up databases in each account's archive.\n* `dir` — Back up the entire MySQL directory.\n* `both` — Back up databases in each account's archive and the entire\nMySQL directory.",
            "in": "query",
            "name": "mysqlbackup",
            "required": false,
            "schema": {
              "default": "accounts",
              "enum": [
                "accounts",
                "dir",
                "both"
              ],
              "example": "accounts",
              "type": "string"
            }
          },
          {
            "description": "Whether to run the `/usr/local/cpanel/scripts/postcpbackup` script after\nthe backup finishes.\n\n* `1` — Run.\n* `0` — Do **not** run.",
            "in": "query",
            "name": "postbackup",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to run the `/usr/local/cpanel/scripts/precpbackup` script before\nthe system processes backups.\n\n* `1` — Run.\n* `0` — Do **not** run.",
            "in": "query",
            "name": "prebackup",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to back up PostgreSQL® databases.\n\n* `1` — Back up.\n* `0` — Do **not** back up.",
            "in": "query",
            "name": "psqlbackup",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The directory that temporarily stores a remote backup's data during a backup restoration.\nThe data is a compressed (`.tar.gz`) or uncompressed (`.tar`) account tarball.\n\n**Important:**\n\nThe system restores backups one at a time. The backup staging directory **must**\nbe large enough to contain the largest remote backup file that you wish to restore.\nFor example, if you wish to restore three backups, sized 1.5 GB, 528 MB, and\n950 MB each, your backup staging directory must be able to hold at **least** 1.5 GB.\n\n**Note:**\n\nThe system empties the directory after the system restores the backup.",
            "in": "query",
            "name": "remote_restore_staging_dir",
            "required": false,
            "schema": {
              "example": "/backup",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_config_set",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update the system's backup configuration",
        "tags": [
          "Backups",
          "Backup Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_config_set"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_config_set?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_date_list": {
      "get": {
        "description": "This function lists the dates where backup file exists, whether stored locally or stored on remote backup destinations when local backups are disabled.",
        "operationId": "backup_date_list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "backup_set": {
                          "description": "A list of dates containing the backup files.",
                          "example": [
                            "2019-02-12T00:00:00.000Z",
                            "2019-02-12T00:00:00.000Z",
                            "2019-02-12T00:00:00.000Z"
                          ],
                          "items": {
                            "format": "ISO-8601 Date",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_date_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return dates where backup files exist",
        "tags": [
          "Backups",
          "Backup Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_date_list"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_date_list?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_destination_add": {
      "get": {
        "description": "This function adds a backup destination.",
        "operationId": "backup_destination_add",
        "parameters": [
          {
            "description": "The application key's name.\n\n**Note:**\n\nThis parameter is only valid for the `Backblaze` backup type.",
            "in": "query",
            "name": "application_key",
            "required": true,
            "schema": {
              "example": "A123b45CD678e9",
              "type": "string"
            }
          },
          {
            "description": "The application key ID that authenticates the Backblaze B2 account.\n\n**Note:**\n\nThis parameter is only valid for the `Backblaze` backup type.",
            "in": "query",
            "name": "application_key_id",
            "required": true,
            "schema": {
              "example": "12a345B678c9",
              "type": "string"
            }
          },
          {
            "description": "The authorization type.\n\n* `password`\n* `key`\n\n**Note:**\n\nThis parameter is only valid for the following backup types:\n* `SFTP`\n* `Rsync`",
            "in": "query",
            "name": "authtype",
            "required": true,
            "schema": {
              "enum": [
                "password",
                "key"
              ],
              "example": "password",
              "type": "string"
            }
          },
          {
            "description": "The Amazon S3™ Access Key ID.\n\n**Note:**\n\nThis parameter is only valid for the following backup types:\n* `AmazonS3`\n* `S3Compatible`",
            "in": "query",
            "name": "aws_access_key_id",
            "required": true,
            "schema": {
              "example": "AKIAYLWMPOZZJCERC28Q",
              "type": "string"
            }
          },
          {
            "description": "The Amazon S3™ bucket.\n\n**Note:**\n\nThis parameter is only valid for the following backup types:\n* `AmazonS3`\n* `S3Compatible`",
            "in": "query",
            "name": "bucket",
            "required": true,
            "schema": {
              "example": "ChockFullOfNuts",
              "type": "string"
            }
          },
          {
            "description": "The bucket's ID string.\n\n**Note:**\n\nThis parameter is only valid for the `Backblaze` backup type.",
            "in": "query",
            "name": "bucket_id",
            "required": true,
            "schema": {
              "example": "a12b34cd5678e9f",
              "type": "string"
            }
          },
          {
            "description": "The bucket's name.\n\n**Note:**\n\nThis parameter is only valid for the `Backblaze` backup type.",
            "in": "query",
            "name": "bucket_name",
            "required": true,
            "schema": {
              "example": "ChockFullOfNuts",
              "type": "string"
            }
          },
          {
            "description": "The Google Drive client ID.\n\n**Note:**\n\nThis parameter is only valid for the `GoogleDrive` backup type.",
            "in": "query",
            "name": "client_id",
            "required": true,
            "schema": {
              "example": "aBcdeFgHIjK123",
              "type": "string"
            }
          },
          {
            "description": "The Google Drive client secret.\n\n**Note:**\n\nThis parameter is only valid for the `GoogleDrive` backup type.",
            "in": "query",
            "name": "client_secret",
            "required": true,
            "schema": {
              "example": "aBcde123FgHIjK456",
              "type": "string"
            }
          },
          {
            "description": "Whether to disable the backup destination.\n\n* `1` — Disable the backup destination.\n* `0` — Enable the backup destination.",
            "in": "query",
            "name": "disabled",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The remote server's hostname.\n\n**Note:**\n\nThis parameter is only valid for the following backup types:\n* `Custom`\n* `FTP`\n* `SFTP`\n* `Rsync`\n* `WebDAV`\n* `S3Compatible`",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "example": "backups.example.com",
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "The backup destination's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "destination_name",
              "type": "string"
            }
          },
          {
            "description": "The remote server account's password or secret\naccess key.\n\n**Note:**\n\nThis parameter is only valid for the following backup types:\n* `AmazonS3`\n* `Custom`\n* `FTP`\n* `SFTP`\n* `Rsync`\n* `WebDAV`\n* `S3Compatible`",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "The absolute file path to the user-supplied transport solution script.\n\n**Note:**\n\nThis parameter is only valid for the `Custom` backup type.",
            "in": "query",
            "name": "script",
            "required": true,
            "schema": {
              "example": "/home/backups/beammeupscotty.pl",
              "type": "string"
            }
          },
          {
            "description": "The type of backup destination.\n\n* `Custom`\n* `FTP`\n* `Local`\n* `SFTP`\n* `WebDAV`\n* `AmazonS3`\n* `Rsync`\n* `GoogleDrive`\n* `S3Compatible`\n* `Backblaze`\n\n**Note:**\n\nThis value determines which parameters you can use with the function.\n\n**Warning:**\n\nUse any of these encrypted connections to transfer system backup files:\n\n* Amazon S3™\n* Backblaze\n* GoogleDrive\n* Rsync\n* S3 Compatible\n* SFTP\n* WebDAV with SSL enabled",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "enum": [
                "Custom",
                "FTP",
                "Local",
                "SFTP",
                "WebDAV",
                "AmazonS3",
                "Rsync",
                "GoogleDrive",
                "S3Compatible",
                "Backblaze"
              ],
              "example": "Local",
              "type": "string"
            }
          },
          {
            "description": "The remote server account's username.\n\n**Note:**\n\nThis parameter is only valid for the following backup types:\n* `Custom`\n* `FTP`\n* `SFTP`\n* `Rsync`\n* `WebDAV`",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The path to the backups directory on the remote server.\n\n**Note:**\n\nThis parameter is only valid for the following backup types:\n* `AmazonS3`\n* `GoogleDrive`\n* `S3Compatible`",
            "in": "query",
            "name": "folder",
            "required": false,
            "schema": {
              "default": "",
              "example": "subfolder",
              "type": "string"
            }
          },
          {
            "description": "Whether the path is mounted.\n\n* `1` — The path is mounted.\n* `0` — The path is **not** mounted.\n\n**Note:**\n\nThis parameter is only valid for the `Local` backup type.",
            "in": "query",
            "name": "mount",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to fail the backup attempt if the mount fails.\n\n* `1` — Fail the backup attempt.\n* `0` — Do **not** fail the backup attempt.\n\n**Note:**\n\nThis parameter is only valid for the `Local` backup type.",
            "in": "query",
            "name": "no_mount_fail",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to use passive FTP.\n\n* `1` — Use passive FTP.\n* `0` — Use active FTP.\n\n**Note:**\n\nThis parameter is only valid for the `FTP` backup type.",
            "in": "query",
            "name": "passive",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The private key file's passphrase, if the `authtype` parameter is the `key` value.\n\n**Note:**\n\nThis parameter is only valid for the following backup types:\n* `SFTP`\n* `Rsync`",
            "in": "query",
            "name": "passphrase",
            "required": false,
            "schema": {
              "default": null,
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "The path to the backups directory on the remote server.\n\n* This parameter is **required** for the `Local` backup type.\n* If you do **not** use this parameter, the system will not set a value.\n\n**Note:**\n\nThis parameter is only valid for the following backup types:\n* `Backblaze`\n* `Custom`\n* `Local`\n* `FTP`\n* `SFTP`\n* `Rsync`\n* `WebDAV`",
            "in": "query",
            "name": "path",
            "required": false,
            "schema": {
              "default": null,
              "example": "backups",
              "type": "string"
            }
          },
          {
            "description": "The TCP port to use.\n\n**Note:**\n\n* This parameter defaults to the standard port used by the queried backup `type` parameter.\n* This parameter is only valid for the following backup types:\n  * `FTP`\n  * `SFTP`\n  * `Rsync`\n  * `WebDAV`",
            "in": "query",
            "name": "port",
            "required": false,
            "schema": {
              "example": 21,
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The file path to the private key file, if the `authtype` parameter is the `key` value.\n\n**Note:**\n\nThis parameter is only valid for the following backup types:\n* `SFTP`\n* `Rsync`",
            "in": "query",
            "name": "privatekey",
            "required": false,
            "schema": {
              "default": null,
              "example": "/home/backups/key",
              "type": "string"
            }
          },
          {
            "description": "Whether to use SSL.\n\n* `1` — Use SSL.\n* `0` — Do **not** use SSL.\n\n**Note:**\n\nThis parameter is only valid for the `WebDAV` backup type.",
            "in": "query",
            "name": "ssl",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The session timeout, measured in seconds.\n\n**Note:**\n\n* This parameter is **not** valid for the `Local` backup `type` parameter.\n* The default value depends on the `type` parameter's value.",
            "in": "query",
            "name": "timeout",
            "required": false,
            "schema": {
              "example": 30,
              "type": "integer"
            }
          },
          {
            "description": "Whether to upload system backups.\n\n* `1` — Upload system backups.\n* `0` — Do **not** upload system backups.",
            "in": "query",
            "name": "upload_system_backup",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "description": "The backup destination's ID.",
                          "example": "PhAxIoLSdIkCI40q9vWS4BYy",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_destination_add",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add a backup destination",
        "tags": [
          "Backups",
          "Backup Destination"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_destination_add name='destination_name' type='Local' disabled='0' bucket='ChockFullOfNuts' aws_access_key_id='AKIAYLWMPOZZJCERC28Q' password='123456luggage' application_key='A123b45CD678e9' application_key_id='12a345B678c9' bucket_id='a12b34cd5678e9f' bucket_name='ChockFullOfNuts' script='/home/backups/beammeupscotty.pl' host='backups.example.com' username='username' client_id='aBcdeFgHIjK123' client_secret='aBcde123FgHIjK456' authtype='password'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_destination_add?api.version=1&name=destination_name&type=Local&disabled=0&bucket=ChockFullOfNuts&aws_access_key_id=AKIAYLWMPOZZJCERC28Q&password=123456luggage&application_key=A123b45CD678e9&application_key_id=12a345B678c9&bucket_id=a12b34cd5678e9f&bucket_name=ChockFullOfNuts&script=%2fhome%2fbackups%2fbeammeupscotty.pl&host=backups.example.com&username=username&client_id=aBcdeFgHIjK123&client_secret=aBcde123FgHIjK456&authtype=password"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_destination_delete": {
      "get": {
        "description": "This function removes a backup destination from the backup configuration file.",
        "operationId": "backup_destination_delete",
        "parameters": [
          {
            "description": "The destination's ID.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": "11111111",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_destination_delete",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete a backup destination",
        "tags": [
          "Backups",
          "Backup Destination"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_destination_delete id='11111111'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_destination_delete?api.version=1&id=11111111"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_destination_get": {
      "get": {
        "description": "Use this function to obtain a backup destination's settings.",
        "operationId": "backup_destination_get",
        "parameters": [
          {
            "description": "The backup destination's ID.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": "0W1ei2rd3A4lI5sT6he7Be8st",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "amazons3": {
                    "summary": "type=AmazonS3",
                    "value": {
                      "data": {
                        "aws_access_key_id": "access-key-id",
                        "bucket": "s3-bucket-brigade",
                        "disabled": 0,
                        "folder": "",
                        "id": "Sr1ThYOnnBIXUupTcSBYQywk",
                        "name": "Amazon S3",
                        "timeout": 30,
                        "type": "AmazonS3",
                        "upload_system_backup": 0
                      },
                      "metadata": {
                        "command": "backup_destination_get",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  },
                  "backblaze": {
                    "summary": "type=BackBlaze",
                    "value": {
                      "data": {
                        "application_key": "keyS3cret",
                        "application_key_id": "appID",
                        "bucket_id": "backblaze-bucket-id",
                        "bucket_name": "backblaze-bucket-name",
                        "disabled": 0,
                        "id": "c85HdhrAkpiqumuXylEzrOcb",
                        "name": "BackBlaze",
                        "path": "",
                        "timeout": 180,
                        "type": "Backblaze",
                        "upload_system_backup": 0
                      },
                      "metadata": {
                        "command": "backup_destination_get",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  },
                  "custom": {
                    "summary": "type=Custom",
                    "value": {
                      "data": {
                        "disabled": 0,
                        "host": "example.com",
                        "id": "Hhd85FsIxbxsLneBMNw1Dmdp",
                        "name": "destination unknown",
                        "path": "",
                        "script": "/bin/bacula_start",
                        "timeout": 30,
                        "type": "Custom",
                        "upload_system_backup": 0,
                        "username": "scott_bacula"
                      },
                      "metadata": {
                        "command": "backup_destination_get",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  },
                  "ftp": {
                    "summary": "type=FTP",
                    "value": {
                      "data": {
                        "disabled": 0,
                        "host": "example.com",
                        "id": "YXzdB0ZcPZ8daPvRfobqQh6H",
                        "name": "FTP backups",
                        "passive": 1,
                        "path": "",
                        "port": 21,
                        "timeout": 30,
                        "type": "FTP",
                        "upload_system_backup": 0,
                        "username": "backup_daemon"
                      },
                      "metadata": {
                        "command": "backup_destination_get",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  },
                  "google": {
                    "summary": "type=GoogleDrive",
                    "value": {
                      "data": {
                        "client_id": "CientID",
                        "client_secret": "backups3crets",
                        "disabled": 0,
                        "folder": "",
                        "id": "N9jC0iMGNbDwIph7m0MfkDd4",
                        "name": "Googlyness",
                        "timeout": 30,
                        "type": "GoogleDrive",
                        "upload_system_backup": 0
                      },
                      "metadata": {
                        "command": "backup_destination_get",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  },
                  "local": {
                    "summary": "type=Local",
                    "value": {
                      "data": {
                        "disabled": 0,
                        "id": "SenJqhJKEEE3rPM4XO7dfBaj",
                        "mount": 0,
                        "name": "additional local",
                        "no_mount_fail": 0,
                        "path": "/backup",
                        "type": "Local",
                        "upload_system_backup": 0
                      },
                      "metadata": {
                        "command": "backup_destination_get",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  },
                  "rsync": {
                    "summary": "type=Rsync",
                    "value": {
                      "data": {
                        "authtype": "password",
                        "disabled": 0,
                        "host": "example.com",
                        "id": "xOL7IT7cwJhGYYra09hrPU1r",
                        "name": "rsync",
                        "path": "",
                        "port": 22,
                        "timeout": 30,
                        "type": "Rsync",
                        "upload_system_backup": 0,
                        "username": "scott_bacula"
                      },
                      "metadata": {
                        "command": "backup_destination_get",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  },
                  "s3compatable": {
                    "summary": "type=S3Compatable",
                    "value": {
                      "data": {
                        "aws_access_key_id": "563DFGHCVD",
                        "bucket": "thepail",
                        "disabled": 0,
                        "folder": "",
                        "host": "osdc.rcc.example.com",
                        "id": "68UUM_lypmgTi9_fEaG9MIvY",
                        "name": "s3Compatable",
                        "timeout": 30,
                        "type": "S3Compatible",
                        "upload_system_backup": 0
                      },
                      "metadata": {
                        "command": "backup_destination_get",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  },
                  "sftp": {
                    "summary": "type=SFTP",
                    "value": {
                      "data": {
                        "authtype": "key",
                        "disabled": 0,
                        "host": "example.com",
                        "id": "OD5CeyEbHMEmDe0dqhtO3KYl",
                        "name": "SFTPBACKUP",
                        "path": "",
                        "port": 22,
                        "privatekey": "/root/.ssh/the_rsa",
                        "timeout": 30,
                        "type": "SFTP",
                        "upload_system_backup": 0,
                        "username": "scott_bacula"
                      },
                      "metadata": {
                        "command": "backup_destination_get",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  },
                  "webdav": {
                    "summary": "type=WebDAV",
                    "value": {
                      "data": {
                        "disabled": 0,
                        "host": "example.com",
                        "id": "ZlSBGjZEr3HVIqhqsdVgWYOM",
                        "name": "WebDav",
                        "path": "",
                        "port": 8443,
                        "ssl": 1,
                        "timeout": 30,
                        "type": "WebDAV",
                        "upload_system_backup": 0,
                        "username": "scot_bacula"
                      },
                      "metadata": {
                        "command": "backup_destination_get",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BackupDestinationGetResponse"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_destination_get",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return a backup destination's settings",
        "tags": [
          "Backups",
          "Backup Destination"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_destination_get id='0W1ei2rd3A4lI5sT6he7Be8st'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_destination_get?api.version=1&id=0W1ei2rd3A4lI5sT6he7Be8st"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_destination_list": {
      "get": {
        "description": "This function lists backup destinations.",
        "operationId": "backup_destination_list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "destination_list": {
                          "description": "An array of objects containing backup destination information.",
                          "items": {
                            "$ref": "#/components/schemas/BackupDestinationResponseType"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_destination_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return a list of backup destinations",
        "tags": [
          "Backups",
          "Backup Destination"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_destination_list"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_destination_list?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_destination_set": {
      "post": {
        "description": "Use this function to edit a backup destination's settings.",
        "operationId": "backup_destination_set",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BackupDestinationSetParameterType"
              }
            }
          },
          "description": "The destination settings.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_destination_set",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update backup destination settings",
        "tags": [
          "Backups",
          "Backup Destination"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 --input=json --output=json backup_destination_set"
          },
          {
            "label": "HTTP Request (Wire Format)",
            "lang": "HTTP",
            "source": "POST /cpsess##########/json-api/backup_destination_set HTTP/1.1\nHost: example.com:2083\nCookie: ###################################\nContent-Type: application/json\nContent-Length: 0\n\n"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_destination_validate": {
      "get": {
        "description": "This function validates a backup destination.",
        "operationId": "backup_destination_validate",
        "parameters": [
          {
            "description": "Whether to disable the backup destination if validation fails.\n\n* `1` — Disable.\n* `0` — Do **not** disable.",
            "in": "query",
            "name": "disableonfail",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The destination's ID.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": "0W1ei2rd3A4lI5sT6he7Be8st",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "description": "The destination's ID.",
                          "example": "0W1ei2rd3A4lI5sT6he7Be8st",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_destination_validate",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate a backup destination",
        "tags": [
          "Backups",
          "Backup Destination"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_destination_validate id='0W1ei2rd3A4lI5sT6he7Be8st' disableonfail='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_destination_validate?api.version=1&id=0W1ei2rd3A4lI5sT6he7Be8st&disableonfail=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_does_client_id_have_google_credentials": {
      "get": {
        "description": "This function returns whether a Google Drive™ client ID credential file exists.",
        "operationId": "backup_does_client_id_have_google_credentials",
        "parameters": [
          {
            "description": "The user's Google Drive client ID.",
            "in": "query",
            "name": "client_id",
            "required": true,
            "schema": {
              "example": "aBcdeFgHIjK123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "exists": {
                          "description": "Whether Google credentials exist for the Google Drive client ID.\n\n* `1` — Google Drive credentials exist.\n* `0` — Google Drive credentials do **not** exist.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_does_client_id_have_google_credentials",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Google Drive™ client ID credentials",
        "tags": [
          "Backups",
          "Backup Destination"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_does_client_id_have_google_credentials client_id='aBcdeFgHIjK123'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_does_client_id_have_google_credentials?api.version=1&client_id=aBcdeFgHIjK123"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/backup_generate_google_oauth_uri": {
      "get": {
        "description": "This function generates a\n[Google Drive™ OAuth redirect URI](https://developers.google.com/identity/protocols/OAuth2InstalledApp).",
        "operationId": "backup_generate_google_oauth_uri",
        "parameters": [
          {
            "description": "The Google Drive client ID.",
            "in": "query",
            "name": "client_id",
            "required": true,
            "schema": {
              "example": "aBcdeFgHIjK123",
              "type": "string"
            }
          },
          {
            "description": "The Google Drive\n[client secret](https://www.oauth.com/oauth2-servers/client-registration/client-id-secret/).",
            "in": "query",
            "name": "client_secret",
            "required": true,
            "schema": {
              "example": "aBcde123FgHIjK456",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "uri": {
                          "description": "The generated Google Drive OAuth redirect URI.",
                          "example": "https://accounts.google.com/o/oauth2/auth?client_id=aBcdeFgHIjK123&response_type=code&redirect_uri=https%3A%2F%2Fhost-10-0-0-2.example.tld%3A2087%2Fgoogledriveauth%2Fcallback&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.file&access_type=offline&prompt=consent&state=IkdLqOej5CLPW1nHRF6OJYaahE7HPXrRUvpFs6MhmBMbCjvWDQcstyYhbUFge5IJ",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_generate_google_oauth_uri",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create Google Drive™ OAuth redirect URI",
        "tags": [
          "Backups",
          "Backup Destination"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_generate_google_oauth_uri client_id='aBcdeFgHIjK123' client_secret='aBcde123FgHIjK456'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_generate_google_oauth_uri?api.version=1&client_id=aBcdeFgHIjK123&client_secret=aBcde123FgHIjK456"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/backup_get_transport_status": {
      "get": {
        "description": "This function retrieves the status of any backup transport events on the account.",
        "operationId": "backup_get_transport_status",
        "parameters": [
          {
            "description": "That transport's current state. If you do not specify this parameter, the function returns the status of all transports on the account.",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "example": "running",
              "type": "string"
            }
          },
          {
            "description": "The transport's ID or the transport's name. If you do not specify this parameter, the function returns all transports on the account.",
            "in": "query",
            "name": "transport_id  or  transport_name",
            "required": false,
            "schema": {
              "example": "transportname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pages": {
                          "description": "The number of pages that the backup transports contain.\n\n**Note:**\n\n This return's value depends on the pagination variables that you pass when you call the function. An integer value.",
                          "example": 3,
                          "type": "integer"
                        },
                        "transport_status": {
                          "description": "hash of information about each transport event. This hash contains the date,  end_timestamp , start_timestamp , status , transport , and user returns.",
                          "properties": {
                            "date": {
                              "description": "The backup transport event's date. A date in YYYY-MM-DD format, where:- YYYY represents the year.\n- MM represents the month.\n- DD represents the day.",
                              "example": "2018-08-30T00:00:00.000Z",
                              "type": "string"
                            },
                            "end_timestamp": {
                              "description": "The transport event's end time. A date and time in YYYY-MM-DD HH:MM:SS format, where:- YYYY represents the year.\n- MM represents the month.\n- DD represents the day.\n- HH represents the hour.\n- MM represents the minute.\n- SS represents the second.",
                              "example": "2018-08-30T02:04:06.000Z",
                              "type": "string"
                            },
                            "start_timestamp": {
                              "description": "The transport event's start time. A date and time in YYYY-MM-DD HH:MM:SS format, where:- YYYY represents the year.\n- MM represents the month.\n- DD represents the day.\n- HH represents the hour.\n- MM represents the minute.\n- SS represents the second.",
                              "example": "2018-08-30T02:04:08.000Z",
                              "type": "string"
                            },
                            "status": {
                              "description": "The transport event's status.\n- completed\n- failed\n- pending\n- running",
                              "example": "running",
                              "type": "string"
                            },
                            "transport": {
                              "description": "The transport event's name.\n\n**Note:**\n\n If multiple transports use the same name, the system returns the first instance of the transport with that name. A valid transport name.",
                              "example": "transportname",
                              "type": "string"
                            },
                            "user": {
                              "description": "The user for whom the system transported the backup\n A valid username on the server.",
                              "example": "salem",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_get_transport_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return backup transport events' status",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_get_transport_status"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_get_transport_status?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/backup_list_transported": {
      "get": {
        "description": "This function lists backup files that the system sent through a specified additional backup transport.",
        "operationId": "backup_list_transported",
        "parameters": [
          {
            "description": "The transport ID.\n\nIf you do not specify this parameter, the function returns backup information for all transports.\n\n**Note:**\n\nYou may obtain the IDs for all configured transports by calling WHM API 1's `backup_destination_list` function.",
            "in": "query",
            "name": "transport",
            "required": false,
            "schema": {
              "example": "nN04BhzirlJUNSLSBXSMBEYG",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "remote_backups": {
                          "additionalProperties": {
                            "additionalProperties": {
                              "description": "An array containing information on one account's backups for a given transport.\n\nThe property name is a cPanel account on the server.\n\nEach array element is a date.",
                              "items": {
                                "description": "",
                                "example": "2018-07-19T00:00:00.000Z",
                                "format": "ISO-8601 Date",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "description": "An object containing details of accounts whose backups the system sent through a transport.\n\nThe property name is a backup transport ID, an automatically generated random string.",
                            "type": "object"
                          },
                          "description": "An object containing the backup destination information.",
                          "example": {
                            "nN04BhzirlJUNSLSBXSMBEYG": {
                              "janedoe": [
                                "2020-08-28T00:00:00.000Z",
                                "2020-08-31T00:00:00.000Z",
                                "2020-09-02T00:00:00.000Z"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_list_transported",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return backup files sent through transport",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_list_transported"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_list_transported?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/backup_set_list": {
      "get": {
        "description": "This function lists backup files for the server's accounts in the local disk.",
        "operationId": "backup_set_list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "backup_set": {
                          "description": "hash of a user's backup information. This hash includes the user and backup_date returns.",
                          "items": {
                            "properties": {
                              "backup_date": {
                                "description": "The backup file's date. A date in YYYY-MM-DD format, where:- YYYY represents the year.\n- MM represents the month.\n- DD represents the day.",
                                "items": {
                                  "example": "2014-01-01T00:00:00.000Z",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "user": {
                                "description": "The backup file set's owner. A valid username.",
                                "example": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "properties": {},
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_set_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return backup files in the local disk",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_set_list"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_set_list?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_set_list_combined": {
      "get": {
        "description": "This function lists locally-stored and backup-destination stored backup files for the server's accounts.",
        "operationId": "backup_set_list_combined",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "backup_set": {
                          "additionalProperties": {
                            "description": "An array of objects containing the cPanel account's backup file information.\n\n**Note:**\n\nThis return name is the cPanel account's name.",
                            "format": "username",
                            "items": {
                              "description": "An object containing the time and location backup information.",
                              "properties": {
                                "when": {
                                  "description": "The date the backup was created.",
                                  "example": "2020-09-01T00:00:00.000Z",
                                  "format": "ISO-8601 Date",
                                  "type": "string"
                                },
                                "where": {
                                  "description": "The location of where the backup is located.\n\n* `local` - A backup located on the local machine.\n* `remote` - A backup located on a remote machine.",
                                  "enum": [
                                    "local",
                                    "remote"
                                  ],
                                  "example": "local",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "description": "An object that contains an object of backup destination information.",
                          "example": {
                            "cpusername1": [
                              {
                                "when": "2020-01-25T00:00:00.000Z",
                                "where": "local"
                              },
                              {
                                "when": "2020-01-26T00:00:00.000Z",
                                "where": "local"
                              }
                            ],
                            "cpusername2": [
                              {
                                "when": "2020-01-25T00:00:00.000Z",
                                "where": "local"
                              },
                              {
                                "when": "2020-01-26T00:00:00.000Z",
                                "where": "local"
                              }
                            ]
                          },
                          "type": "object"
                        },
                        "destination_legend": {
                          "additionalProperties": {
                            "description": "An object containing the backup destination's name and its transport type.\n\n**Note:**\n\nThis return's name is the destination's identification string.",
                            "properties": {
                              "name": {
                                "description": "The backup destination's name.",
                                "example": "More Backups",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of backup destination used in the configuration.\n\n* `AmazonS3`\n* `Backblaze`\n* `Custom`\n* `FTP`\n* `GoogleDrive`\n* `Local`\n* `Rsync`\n* `S3Compatible`\n* `SFTP`\n* `WebDAV`",
                                "enum": [
                                  "AmazonS3",
                                  "Backblaze",
                                  "Custom",
                                  "FTP",
                                  "GoogleDrive",
                                  "Local",
                                  "Rsync",
                                  "S3Compatible",
                                  "SFTP",
                                  "WebDAV"
                                ],
                                "example": "Local",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "description": "An object containing objects that contain the backup's destination and type information.",
                          "example": {
                            "GLT1vFsVO8cqk2UWWFpJ9kSQ": {
                              "name": "More Backups",
                              "type": "Local"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_set_list_combined",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return backup files for the server's accounts",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_set_list_combined"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_set_list_combined?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "80"
      }
    },
    "/backup_skip_users_all": {
      "get": {
        "description": "This function enables and disables the backup and legacy backups.",
        "operationId": "backup_skip_users_all",
        "parameters": [
          {
            "description": "The type of backup.\n  * `backup` - Standard backups.\n  * `legacy` - Legacy backups.",
            "in": "query",
            "name": "backupversion",
            "required": true,
            "schema": {
              "enum": [
                "backup",
                "legacy"
              ],
              "example": "backup",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable the backup type that the `backupversion` parameter\nspecifies for all users.\n  * `1` - Enable.\n  * `0` - Disable.",
            "in": "query",
            "name": "state",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_skip_users_all",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "Configuration update process started",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable or disable backups",
        "tags": [
          "Backups",
          "Backup Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_skip_users_all state='1' backupversion='backup'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_skip_users_all?api.version=1&state=1&backupversion=backup"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_skip_users_all_status": {
      "get": {
        "description": "This function checks each user's backup configuration status while the `backup_skip_users_all` function runs.",
        "operationId": "backup_skip_users_all_status",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "reason": {
                          "description": "An object that contains backup configuration status information.",
                          "properties": {
                            "msg": {
                              "description": "The function's status.",
                              "example": "Done",
                              "type": "string"
                            },
                            "perc": {
                              "description": "The percentage of users whose backup status has changed.",
                              "example": 100,
                              "maximum": 100,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "running": {
                              "description": "Whether user configuration changes are still in progress.\n\n* `1` - In Progress.\n* `0` - Finished.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_skip_users_all_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK."
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return backup configuration status",
        "tags": [
          "Backups",
          "Backup Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_skip_users_all_status"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_skip_users_all_status?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/backup_user_list": {
      "get": {
        "description": "This function lists users with a backup file, stored locally or on additional backup destinations, on a specified date.",
        "operationId": "backup_user_list",
        "parameters": [
          {
            "description": "The desired date.",
            "in": "query",
            "name": "restore_point",
            "required": true,
            "schema": {
              "example": "2014-10-10T00:00:00.000Z",
              "format": "ISO-8601 Date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "user": {
                          "description": "An array of objects containing user backup information.",
                          "items": {
                            "properties": {
                              "status": {
                                "description": "The account's backup status\n* `active`\n* `inactive`\n* `no_backup`",
                                "enum": [
                                  "active",
                                  "inactive",
                                  "no_backup"
                                ],
                                "example": "active",
                                "type": "string"
                              },
                              "username": {
                                "description": "The user's username.",
                                "example": "username",
                                "format": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "backup_user_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return users with a backup file",
        "tags": [
          "Backups",
          "Backup Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 backup_user_list restore_point='2014-10-10'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/backup_user_list?api.version=1&restore_point=2014-10-10"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/batch": {
      "get": {
        "description": "This function combines calls for multiple WHM API 1 functions.",
        "operationId": "batch",
        "parameters": [
          {
            "description": "The WHM API 1 function to call.\n\n**Important:**\n\nSpecify a `command` parameter for each function.\n\n**Note:**\n\nInclude the function's input parameters as a URI-encoded list after the function name.\nFor example, to call the `killdns` function with a `domain` parameter value of `example.com`\ndirectly you would use:\n\n  `killdns?domain=example.com`\n\nTo call this function using the `batch` function, URI-encode the command and pass it as part of the `batch` function:\n\n  `/json-api/batch?api.version=1&command=killdns%3Fdomain%3Dexample.com`\n\nYou can call the same function multiple times within a single batch API call. For example:\n\n  `/json-api/batch?api.version=1&command=version&command=version&command=version`",
            "in": "query",
            "name": "command",
            "required": true,
            "schema": {
              "example": "version",
              "type": "string"
            }
          },
          {
            "description": "Whether to stop processing remaining commands in the batch when a command returns an error.\n\n* `1` — Do **not** process remaining commands in the batch when an error occurs.\n* `0` — When an error occurs, process the remaining commands in the batch.",
            "in": "query",
            "name": "abort_on_error",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "result": {
                          "description": "Information regarding function output. Each result contains the returns from one of the command parameter's functions. For information about each function's returns, read the function's documentation.",
                          "example": [
                            {
                              "data": {
                                "hostname": "example-hosting.com"
                              },
                              "metadata": {
                                "command": "gethostname",
                                "reason": "OK",
                                "result": 1,
                                "version": 1
                              }
                            },
                            {
                              "data": {
                                "version": "11.88.0.1"
                              },
                              "metadata": {
                                "command": "version",
                                "reason": "OK",
                                "result": 1,
                                "version": 1
                              }
                            }
                          ],
                          "items": {
                            "properties": {
                              "data": {
                                "description": "The data returned by the command.",
                                "type": "object"
                              },
                              "metadata": {
                                "description": "The metadata returned by the command.",
                                "properties": {
                                  "command": {
                                    "description": "The method name called.",
                                    "example": "version",
                                    "type": "string"
                                  },
                                  "reason": {
                                    "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                                    "example": "OK",
                                    "type": "string"
                                  },
                                  "result": {
                                    "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "version": {
                                    "description": "The version of the API function.",
                                    "example": 1,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "batch",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Run multiple WHM API 1 functions",
        "tags": [
          "Integration",
          "API Execution"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 batch command='version'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/batch?api.version=1&command=version"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/block_incoming_email_from_country": {
      "get": {
        "description": "This function blocks email from specific countries.",
        "operationId": "block_incoming_email_from_country",
        "parameters": [
          {
            "description": "The country to block.\nThe [ISO 3166-1 alpha-2 code](https://www.iso.org/iso-3166-country-codes.html) two-letter country code.\n\n**Warning:**\n\nDo **not** block the `ZZ` country code if the server uses a [NAT](https://docs.cpanel.net/knowledge-base/general-systems-administration/1-1-nat/) configuration.\n\n**Note:**\n\n  * To search all available country codes, read the ISO's [Full list of Country Codes](https://www.iso.org/obp/ui) documentation.\n  * To block multiple countries, duplicate or increment the parameter name. For example: `country_code-1`, `country_code-2`, and `country_code-3`.",
            "examples": {
              "multiple": {
                "summary": "Multiple country codes.",
                "value": "country_code-1=AA country_code-2=AB country_code-3=AC"
              },
              "single": {
                "summary": "A single country code.",
                "value": "AA"
              }
            },
            "in": "query",
            "name": "country_code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "updated": {
                          "description": "Whether the function blocked one or more countries.\n* `1` — Success.\n* `0` — Failure.\n\n**Note**\nThe function returns `0` for the `updated` return if the server already blocks that country.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "block_incoming_email_from_country",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add block on emails from specific countries",
        "tags": [
          "Mail",
          "Spam Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 block_incoming_email_from_country country_code='AA'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/block_incoming_email_from_country?api.version=1&country_code=AA"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "84"
      }
    },
    "/block_incoming_email_from_domain": {
      "get": {
        "description": "This function blocks email from specific domains.",
        "operationId": "block_incoming_email_from_domain",
        "parameters": [
          {
            "description": "The domain to block.\n\n**Note:**\n\n* The function returns `0` for the `updated` return if the server already blocks that domain.\n* An FQDN requires **at least** [a label, a dot (`.`), and a top-level domain (TLD)](https://en.wikipedia.org/wiki/Domain_name#Domain_name_syntax).\n* Enter an asterisk (`*`) to represent [a wildcard label or TLD](https://en.wikipedia.org/wiki/Wildcard_DNS_record).\n* To block multiple domains, duplicate or increment the parameter name.",
            "examples": {
              "multiple": {
                "summary": "Multiple domains.",
                "value": "domain=example.com domain-1=example1.com domain-2=example2.com"
              },
              "multiple-alternative": {
                "summary": "Multiple domains.",
                "value": "domain=example.com domain=example1.com domain=example2.com"
              },
              "single": {
                "summary": "A single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "updated": {
                          "description": "Whether the function blocked one or more domains.\n* 1 — Success.\n* 0 — Failure.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "block_incoming_email_from_domain",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add block on emails from specific domains",
        "tags": [
          "Mail",
          "Spam Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 block_incoming_email_from_domain domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/block_incoming_email_from_domain?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "84"
      }
    },
    "/changepackage": {
      "get": {
        "description": "This function changes a cPanel account's hosting plan (package).",
        "operationId": "changepackage",
        "parameters": [
          {
            "description": "The hosting plan's name.",
            "in": "query",
            "name": "pkg",
            "required": true,
            "schema": {
              "example": "package1",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "changepackage",
                          "type": "string"
                        },
                        "output": {
                          "properties": {
                            "raw": {
                              "example": "<pre>\nChanging the account bandwidth limit from “0” to “unlimited”.\nChanging Feature List to default\nChanging the maximum email accounts from “unlimited” to “unlimited”.\nChanging the maximum SQL databases from “unlimited” to “unlimited”.\nChanging the maximum FTP accounts from “unlimited” to “unlimited”.\nChanging the maximum mailing lists from “unlimited” to “unlimited”.\nChanging the maximum subdomains from “unlimited” to “unlimited”.\nChanging the maximum email quota from “unlimited” to “unlimited” …\nChanging \"Maximum Hourly Email by Domain Relayed\" from unlimited to unlimited\nChanging \"Maximum percentage of failed or deferred messages a domain may send per hour\" from unlimited to unlimited\nChanging the maximum parked domains from “unlimited” to “0”.\nChanging the maximum addon domains from “unlimited” to “0”.\nRemoving Shell Access\nShell changedChanging cPanel theme from paper_lantern to paper_lantern\nChanging plan from default to boo\nBandwidth limit (unlimited) is lower than (unlimited) (all limits removed)<br /><blockquote><div style='float:left;'>Enabling...</div><div style='float:left;'>...exampleaddon.com...</div><div style='float:left;'>...exampleaddon.example.com...</div><div style='float:left;'>...example.com...</div><div style='float:left;'>Done</div></blockquote><br /><div class='clearit' style='clear:both; width:80%;'> </div>Setting quota to “unlimited”.\n<span class=\"b2\">Warning, this will not change shared IP accounts to dedicated IP accounts, or the reverse.</span>\n<span class=\"b2\">Warning: Changing a user’s package does not affect their Digest Authentication settings.</span>\n</pre>",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update user hosting plan",
        "tags": [
          "Packages",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 changepackage user='username' pkg='package1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/changepackage?api.version=1&user=username&pkg=package1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/check_remote_ssh_connection": {
      "get": {
        "description": "This function tests an SSH connection to another server.",
        "operationId": "check_remote_ssh_connection",
        "parameters": [
          {
            "description": "The remote server's hostname.",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The remote server's port number.",
            "in": "query",
            "name": "port",
            "required": false,
            "schema": {
              "default": 22,
              "example": 22,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "comment": {
                          "description": "The remote connection's comment section.\n* A valid string.\n* `undef` - If the local and remote servers connect successfully.",
                          "example": "null",
                          "type": "string"
                        },
                        "protocol_versions": {
                          "description": "The available SSH protocol versions.\n* A valid string.\n* `undef` - If the local and remote servers connect successfully.",
                          "items": {
                            "example": "2.0",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "received": {
                          "description": "The raw data from the remote server.",
                          "example": "SSH-2.0-OpenSSH_5.3",
                          "type": "string"
                        },
                        "server_software": {
                          "description": "The version of the remote server's SSH server software.\n* A valid string.\n* `undef` - If the local and remote servers connect successfully.",
                          "example": "OpenSSH_5.3",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "check_remote_ssh_connection",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate SSH connection to another server",
        "tags": [
          "Security",
          "SSH Keys and Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 check_remote_ssh_connection host='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/check_remote_ssh_connection?api.version=1&host=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/cluster_member_has_trust_with": {
      "get": {
        "description": "This function queries whether nameservers in a DNS cluster can share records with one another. Servers in a DNS cluster **must** exist in a [Reverse Trust relationship](https://go.cpanel.net/whmdocsDNSCluster) to share information. This relationship requires each server to have an [API token](https://go.cpanel.net/ManageAPITokens).\n\n**Note:**\n\n  DNS servers in a Write-Only role do not need to exist in a Reverse Trust relationship. For more information, read our [Guide to DNS Cluster Configurations](https://go.cpanel.net/DNSClusterConfig) documentation.",
        "operationId": "cluster_member_has_trust_with",
        "parameters": [
          {
            "description": "The nameserver's IP address.",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "example": "192.0.2.0",
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "The nameserver's alternate IP address. This is useful, for example, if your DNS cluster exists in a NAT-configured network.",
            "in": "query",
            "name": "althost",
            "required": false,
            "schema": {
              "default": "",
              "example": "192.0.3.0",
              "format": "ipv4",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "has_trust": {
                          "description": "Whether the nameserver can send information to other cluster members.\n* `1` — Can send information.\n* `0` — Can't send information.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "cluster_member_has_trust_with",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return whether DNS cluster server can share records",
        "tags": [
          "DNS",
          "DNS Zones"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 cluster_member_has_trust_with host='192.0.2.0'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/cluster_member_has_trust_with?api.version=1&host=192.0.2.0"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "84"
      }
    },
    "/configurebackgroundprocesskiller": {
      "get": {
        "description": "This function configures the server's background process killer.",
        "operationId": "configurebackgroundprocesskiller",
        "parameters": [
          {
            "description": "A process to kill in the `/usr/local/cpanel/etc/sym` directory.\n\n**Note:**\n\nTo enable the background killer for multiple processes, duplicate or increment the parameter name.\n\nFor example, `processes_to_kill`, `processes_to_kill-0`, and `processes_to_kill-1`.",
            "examples": {
              "multiple": {
                "summary": "Kill multiple processes.",
                "value": "eggdrop-0, eggdrop-1, eggdrop-2"
              },
              "single": {
                "summary": "Kill a single process.",
                "value": "eggdrop"
              }
            },
            "in": "query",
            "name": "processes_to_kill",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unaffected users. If you do not specify a value, the function affects all of the users on the server.\n\n**Note:**\n\nTo trust multiple users, duplicate or increment the parameter name.\n\nFor example, `trusted_users`, `trusted_users-0`, and `trusted_users-1`.",
            "in": "query",
            "name": "trusted_users",
            "required": false,
            "schema": {
              "example": "user",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "configurebackgroundprocesskiller",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update background process stopper",
        "tags": [
          "Server Administration",
          "Services"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 configurebackgroundprocesskiller processes_to_kill='eggdrop'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/configurebackgroundprocesskiller?api.version=1&processes_to_kill=eggdrop"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/configureservice": {
      "get": {
        "description": "This function enables or disables a service and its monitoring.\n\n**Note:**\n\nIn cPanel & WHM version 88, if the user only possesses the `clustering`\n[Access Control List (ACL)](https://documentation.cpanel.net/display/DD/Guide+to+WHM+Plugins+-+ACL+Reference+Chart),\nthen this function can only act on the `named` service.",
        "operationId": "configureservice",
        "parameters": [
          {
            "description": "The service to configure. For more information about each service, read our\n[*Service Manager*](https://docs.cpanel.net/whm/service-configuration/service-manager/)\ndocumentation.",
            "in": "query",
            "name": "service",
            "required": true,
            "schema": {
              "enum": [
                "apache_php_fpm",
                "cpanel-dovecot-solr",
                "cpanel_php_fpm",
                "cpanellogd",
                "cpdavd",
                "cphulkd",
                "cpsrvd",
                "crond",
                "dnsadmin",
                "exim",
                "exim-altport",
                "ftpd",
                "httpd",
                "imap",
                "ipaliases",
                "lmtp",
                "mailman",
                "mysql",
                "named",
                "nscd",
                "p0f",
                "pop",
                "postgresql",
                "queueprocd",
                "rsyslogd",
                "spamd",
                "sshd"
              ],
              "example": "mysql",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable the service.\n\n* `1` — Enable.\n* `0` — Disable.\n\nIf you do not use this parameter, the function will **not** change\nthe enabled status of the service.\n\n**Warning:**\n\nDo **not** use this function to disable the `cpsrvd` service.",
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "A port or list of comma-separated ports on which Exim will listen for\ninbound connections.\n\n**Note:**\n\nThe function **only** uses this parameter if you set `exim-altport` as\nthe `service` parameter's value.",
            "in": "query",
            "name": "exim-altportnum",
            "required": false,
            "schema": {
              "default": 26,
              "example": "26, 5000, 6000",
              "type": "string"
            }
          },
          {
            "description": "Whether to monitor the service in WHM's\n[*Service Status*](https://docs.cpanel.net/whm/server-status/service-status/)\ninterface (*WHM >> Home >> Server Status >> Service Status*).\n\n* `1` — Monitor.\n* `0` — Do **not** monitor.\n\nIf you do not use this parameter, the function will **not** change the\nmonitoring status of the service.",
            "in": "query",
            "name": "monitored",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "configureservice",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Enabled monitoring for mysql.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable or disable a service and its monitoring",
        "tags": [
          "Server Administration",
          "Services"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 configureservice service='mysql'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/configureservice?api.version=1&service=mysql"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/convert_addon_fetch_conversion_details": {
      "get": {
        "description": "This function returns the details of a conversion from an addon\ndomain to an account. Use WHM API 1's `convert_addon_domain_to_account`\nto start a conversion.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://go.cpanel.net/howtouseserverprofiles),\nthe system **disables** this function.",
        "operationId": "convert_addon_fetch_conversion_details",
        "parameters": [
          {
            "description": "The conversion's job identification number.",
            "in": "query",
            "name": "job_id",
            "required": true,
            "schema": {
              "example": 2,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "domain": {
                          "description": "The addon domain you converted into a cPanel account.",
                          "example": "cptestaddon175.tld",
                          "format": "domain",
                          "type": "string"
                        },
                        "job_end_time": {
                          "description": "A date that indicates when the convertion ended.",
                          "example": 1462216653,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "job_id": {
                          "description": "The conversion's job identification number.",
                          "example": 2,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "job_start_time": {
                          "description": "A date that indicates when the conversion started.",
                          "example": 1462465001,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "job_status": {
                          "description": "The status of the conversion process.\n\n* `INPROGRESS` — The conversion process is in progress.\n* `QUEUED` — The system queued the conversion job.\n* `SKIPPED` — The system skipped at least one step in the conversion process.\n* `FAILED` — At least one step in the conversion process failed.\n* `DONE` — The conversion process finished successfully.",
                          "enum": [
                            "INPROGRESS",
                            "QUEUED",
                            "SKIPPED",
                            "FAILED",
                            "DONE"
                          ],
                          "example": "DONE",
                          "type": "string"
                        },
                        "source_acct": {
                          "description": "The source cPanel user account that you converted into an account.",
                          "example": "cptest",
                          "format": "username",
                          "type": "string"
                        },
                        "steps": {
                          "description": "An array of objects containing the steps taken by the conversion process.",
                          "example": [
                            {
                              "end_time": 1462465001,
                              "start_time": 1462465001,
                              "status": "DONE",
                              "step_name": "Saving email forwarder data",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465001,
                              "start_time": 1462465001,
                              "status": "DONE",
                              "step_name": "Saving custom DNS records",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465001,
                              "start_time": 1462465001,
                              "status": "DONE",
                              "step_name": "Saving installed SSL Certificate",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465001,
                              "start_time": 1462465001,
                              "status": "DONE",
                              "step_name": "Saving EasyApache 4 configuration",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465009,
                              "start_time": 1462465001,
                              "status": "DONE",
                              "step_name": "Removing Addon Domain",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465014,
                              "start_time": 1462465009,
                              "status": "DONE",
                              "step_name": "Creating new cPanel account",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465015,
                              "start_time": 1462465014,
                              "status": "DONE",
                              "step_name": "Restoring custom DNS records",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465016,
                              "start_time": 1462465015,
                              "status": "DONE",
                              "step_name": "Copying Custom VirtualHost Includes",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465016,
                              "start_time": 1462465016,
                              "status": "DONE",
                              "step_name": "Copying document root content",
                              "warnings": "/usr/bin/gtar: ./shadow: Cannot open: Permission denied\\n/usr/bin/gtar: Exiting with failure status due to previous errors"
                            },
                            {
                              "end_time": 1462465016,
                              "start_time": 1462465016,
                              "status": "DONE",
                              "step_name": "Setting the proper permissions on document root",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465017,
                              "start_time": 1462465016,
                              "status": "DONE",
                              "step_name": "Copying email accounts",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465017,
                              "start_time": 1462465017,
                              "status": "DONE",
                              "step_name": "Restoring email forwarders",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465017,
                              "start_time": 1462465017,
                              "status": "DONE",
                              "step_name": "Copying Autoresponders",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465017,
                              "start_time": 1462465017,
                              "status": "DONE",
                              "step_name": "Copying webmail data",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465017,
                              "start_time": 1462465017,
                              "status": "DONE",
                              "step_name": "Restoring installed SSL Certificate",
                              "warnings": ""
                            },
                            {
                              "end_time": 1462465017,
                              "start_time": 1462465017,
                              "status": "DONE",
                              "step_name": "Restoring EasyApache 4 configuration",
                              "warnings": ""
                            }
                          ],
                          "items": {
                            "properties": {
                              "end_time": {
                                "description": "The date when the step ended.",
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "start_time": {
                                "description": "The date when the step started.",
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "status": {
                                "description": "The status of the conversion step.\n\n* `DONE` — The step is finished.\n* `IN PROGRESS` — The step is in progress.\n* `FAILED` — The step failed.",
                                "enum": [
                                  "DONE",
                                  "IN PROGRESS",
                                  "FAILED"
                                ],
                                "type": "string"
                              },
                              "step_name": {
                                "description": "A step of the conversion process.",
                                "type": "string"
                              },
                              "warnings": {
                                "description": "The warning message for the step that describes a potential problem, if any exist.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "target_acct": {
                          "description": "The destination cPanel user account for the conversion.",
                          "example": "user2",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "convert_addon_fetch_conversion_details",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the function failed when the `metadata.result` field is `0`. This field may include a success message when the function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The API version of the function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return additional domain conversion details",
        "tags": [
          "Addon Domains",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 convert_addon_fetch_conversion_details job_id='2'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/convert_addon_fetch_conversion_details?api.version=1&job_id=2"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/convert_addon_fetch_domain_details": {
      "get": {
        "description": "This function retrieves domain data for an addon domain.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles),\nthe system **disables** this function.",
        "operationId": "convert_addon_fetch_domain_details",
        "parameters": [
          {
            "description": "The addon domain for which to retrieve details.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "docroot": {
                          "description": "The absolute file path of the addon domain.",
                          "example": "/home/exampleparent/public_html/example.com",
                          "type": "string"
                        },
                        "has_dedicated_ip": {
                          "description": "Whether the domain uses a dedicated IP address.\n\n* `1` — The domain uses a dedicated IP address.\n* `0` — The domain does **not** use a dedicated IP address.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "has_ssl_cert_installed": {
                          "description": "Whether an SSL certificate secures the domain.\n\n* `1` — An SSL certificate secures the domain.\n* `0` — An SSL certificate does **not** secure the domain.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "ip": {
                          "description": "The domain's IP address.",
                          "example": "192.0.2.0",
                          "format": "ipv4",
                          "type": "string"
                        },
                        "is_sni_supported": {
                          "description": "Whether the domain supports Server Name Indication (SNI).\n\n* `1` — The domain supports SNI.\n* `0` — The domain does **not** support SNI.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "number_of_autoresponders": {
                          "description": "The number of the domain's autoresponders.",
                          "example": 0,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "number_of_domain_forwarders": {
                          "description": "The number of the domain's domain forwarders.",
                          "example": 1,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "number_of_email_accounts": {
                          "description": "The number of the domain's email accounts.",
                          "example": 2,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "number_of_email_forwarders": {
                          "description": "The number of the domain's email forwarders.",
                          "example": 1,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "owner": {
                          "description": "The addon domain owner's cPanel account username.",
                          "example": "username",
                          "format": "username",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "example": "convert_addon_fetch_domain_details",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the function failed when the `metadata.result` field is `0`. This field may include a success message when the function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The API version of the function.",
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return additional domain data",
        "tags": [
          "Addon Domains",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 convert_addon_fetch_domain_details domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/convert_addon_fetch_domain_details?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/convert_addon_get_conversion_status": {
      "get": {
        "description": "This function returns the status of the convert addon domain to\naccount process for specified conversion jobs. For data about the conversion\nstatus of all jobs, use the WHM API 1 `convert_addon_fetch_conversion_details`\nfunction.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles),\nthe system **disables** this function.",
        "operationId": "convert_addon_get_conversion_status",
        "parameters": [
          {
            "description": "The conversion's job identification number.\n\n**Note:**\n\nTo list entries for multiple conversion jobs, increment the parameter name. For example: `job_id-0`, `job_id-1`, and `job_id-2`.",
            "examples": {
              "multiple": {
                "summary": "Get the status for multiple conversion jobs.",
                "value": "job_id-1=10 job_id-2=33 job_id-3=15"
              },
              "single": {
                "summary": "Get status for a single conversion job.",
                "value": 10
              }
            },
            "in": "query",
            "name": "job_id",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "The converion job's identification number.\n\n**Note:**\n\nThe property name is the identification number of the requested job.",
                        "properties": {
                          "job_end_time": {
                            "description": "The time when the convert addon domain to account process ended.",
                            "format": "unix_timestamp",
                            "type": "integer"
                          },
                          "job_id": {
                            "description": "The conversion's job identification number.\n\n**Note:**\n\nThe system stores this numeric value as a string.",
                            "minimum": 1,
                            "pattern": "[1-9]+",
                            "type": "string"
                          },
                          "job_status": {
                            "description": "The status of the conversion process.\n\n* `DONE` — The conversion finished successfully.\n* `IN PROGRESS` — The conversion is running.\n* `FAILED` — The converion failed for some reason.",
                            "enum": [
                              "DONE",
                              "IN PROGRESS",
                              "FAILED"
                            ],
                            "type": "string"
                          },
                          "source_acct": {
                            "description": "The addon domain to convert into a cPanel account.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "description": "An object that contains details about the conversion job's status.",
                      "example": {
                        "1": {
                          "job_end_time": 1462383658,
                          "job_id": "1",
                          "job_status": "DONE",
                          "source_acct": "user1"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "convert_addon_get_conversion_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the function failed when the `metadata.result` field is `0`. This field may include a success message when the function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The API version of the function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return conversion status for additional domain",
        "tags": [
          "Addon Domains",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 convert_addon_get_conversion_status job_id='10'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/convert_addon_get_conversion_status?api.version=1&job_id=10"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/convert_addon_initiate_conversion": {
      "get": {
        "description": "This function initiates the conversion process for an addon domain\ninto a cPanel account.\n\n**Note:**\n\nFor information about the data that the system migrates when you convert an\naddon domain, read our\n[Addon Domain Conversion List documentation](https://go.cpanel.net/AddonConversionList).\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles),\nthe system **disables** this function.",
        "operationId": "convert_addon_initiate_conversion",
        "parameters": [
          {
            "description": "The addon domain to convert into an account's main domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The username for a specified account.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Copy a MySQL® database from the source account to the new account with a new\ndatabase name.\n\nThis parameter's format consists of `copymysqldb`, a hyphen, and the name of\nthe existing database. For example, `copymysqldb-olddatabase`.\n\nIf you do **not** specify this parameter, the system does **not** copy any MySQL\ndatabases to the new account.",
            "examples": {
              "multiple": {
                "summary": "Copy multiple databases.",
                "value": "copymysqldb-olddatabase1=newdatabase1 copymysqldb-olddatabase2=newdatabase2"
              },
              "single": {
                "summary": "Copy a single database.",
                "value": "newdatabase"
              }
            },
            "in": "query",
            "name": "copymysqldb-*",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Move the specified MySQL database from the source account to the new account.\n\nIf you do **not** specify this parameter, the system does **not** move any MySQL\ndatabases to the new account.\n\n**Note:**\n\nTo move multiple databases, increment the parameter name. For example, `movemysqldb-1`,\n`movemysqldb-2`, and `movemysqldb-3`.",
            "examples": {
              "multiple": {
                "summary": "Move multiple databases.",
                "value": "movemysqldb-1=exampledb1 movemysqldb-2=exampledb2 movemysqluser-3=exampledb3"
              },
              "single": {
                "summary": "Move a single database.",
                "value": "exampledb"
              }
            },
            "in": "query",
            "name": "movemysqldb",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Move the specified MySQL database user from the source account into the new\nMySQL database account.\n\nIf you do **not** specify this parameter, the system does **not** move any MySQL\ndatabase users to the new account.\n\n**Note:**\n\nTo move multiple database users, increment the parameter name. For example, `movemysqluser-1`,\n`movemysqluser-2`, and `movemysqluser-3`.",
            "examples": {
              "multiple": {
                "summary": "Move multiple database users.",
                "value": "movemysqluser-1=dbuser1 movemysqluser-2=dbuser2 movemysqluser-3=dbuser3"
              },
              "single": {
                "summary": "Move a single database user.",
                "value": "dbuser1"
              }
            },
            "in": "query",
            "name": "movemysqluser",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The hosting package that you want to assign to the new account.",
            "in": "query",
            "name": "pkgname",
            "required": false,
            "schema": {
              "default": "default",
              "example": "mycustompkg",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "convert_addon_initiate_conversion",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the function failed when the `metadata.result` field is `0`. This field may include a success message when the function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The API version of the function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Start additional domain conversion",
        "tags": [
          "Addon Domains",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 convert_addon_initiate_conversion username='username' domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/convert_addon_initiate_conversion?api.version=1&username=username&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/convert_addon_list_addon_domains": {
      "get": {
        "description": "This function returns a list of addon domains that belong to the current user.\n\n**Important:**\nWhen you disable the [Web Server role](https://https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "convert_addon_list_addon_domains",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "An object containing the domain's data.\n\n**Note:**\nThe domain's name is the return's name.",
                        "properties": {
                          "docroot": {
                            "description": "The document root for the addon domain.",
                            "example": "/home/exampleparent/public_html/example.com",
                            "type": "string"
                          },
                          "domain_type": {
                            "description": "The domain's type.",
                            "example": "addon",
                            "type": "string"
                          },
                          "ip": {
                            "description": "The domain's IPv4 address.",
                            "example": "192.0.2.0",
                            "format": "ipv4",
                            "type": "string"
                          },
                          "ipv6": {
                            "description": "The domain's IPv6 address.",
                            "example": "2001:db8:a0b:12f0::1",
                            "format": "ipv6",
                            "type": "string"
                          },
                          "owner": {
                            "description": "The domain's owner.",
                            "example": "exampleparent",
                            "format": "username",
                            "type": "string"
                          },
                          "reseller": {
                            "description": "The domain's reseller.",
                            "example": "exampleparent",
                            "format": "username",
                            "type": "string"
                          },
                          "subdomain": {
                            "description": "The domain's subdomain.",
                            "example": "example.exampleparent.com",
                            "format": "domain",
                            "type": "string"
                          }
                        }
                      },
                      "example": {
                        "example.com": {
                          "docroot": "/home/exampleparent/public_html/example.com",
                          "domain_type": "addon",
                          "ip": "192.0.2.0",
                          "owner": "root",
                          "subdomain": "example.exampleparent.com"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "convert_addon_list_addon_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the function failed when the `metadata.result` field is 0. This field may include a success message when the function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- `1` - Success.\n- `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The API version of the function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return current user's additional domains",
        "tags": [
          "Addon Domains",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 convert_addon_list_addon_domains"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/convert_addon_list_addon_domains?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/convert_addon_list_conversions": {
      "get": {
        "description": "This function returns a list of addon domains undergoing conversion\ninto cPanel accounts.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "convert_addon_list_conversions",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "conversions": {
                          "description": "List of conversions from an addon domain to an independent cPanel account.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The addon domain to convert into a cPanel account.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "end_time": {
                                "description": "A date in Unix time format that indicates when the process ended.",
                                "example": 1462216653,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "job_id": {
                                "description": "The conversion's job number.",
                                "example": 1,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "source_acct": {
                                "description": "The cPanel account username that owned the domain at the time of conversion.",
                                "example": "example",
                                "format": "username",
                                "type": "string"
                              },
                              "start_time": {
                                "description": "A date in Unix time format that indicates when the process started.",
                                "example": 1462216639,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "status": {
                                "description": "The status of the conversion process.\n* `DONE` — The conversion is finished.\n* `IN PROGRESS` — The conversion is in progress.\n* `FAILED` — The conversion failed.",
                                "enum": [
                                  "DONE",
                                  "IN PROGRESS",
                                  "FAILED"
                                ],
                                "example": "DONE",
                                "type": "string"
                              },
                              "target_acct": {
                                "description": "The destination user account for the conversion.",
                                "example": "example2",
                                "format": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "convert_addon_list_conversions",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the function failed when the `metadata.result` field is `0`. This field may include a success message when the function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* 1 — Success.\n* 0 — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The API version of the function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return additional domains conversion queue",
        "tags": [
          "Addon Domains",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 convert_addon_list_conversions"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/convert_addon_list_conversions?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/convert_all_domains_to_fpm": {
      "get": {
        "description": "This function activates PHP-FPM for any non-PHP-FPM domains on a server.\n\n**Important:**\n\nWhen you disable the [*Web Server*](https://go.cpanel.net/howtouseserverprofiles) role, the system **disables** this function.\n\n**Warning:**\n\nWe **strongly** recommend that you only activate Apache PHP-FPM if your server has at least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM on a server with less than the required RAM, your server may experience severe performance issues.",
        "operationId": "convert_all_domains_to_fpm",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "build_id": {
                          "description": "The ID of the log file for the conversion process.",
                          "example": 1493645268,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "convert_all_domains_to_fpm",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* 1 - Success\n* 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable PHP-FPM on all domains",
        "tags": [
          "PHP",
          "PHP-FPM"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 convert_all_domains_to_fpm"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/convert_all_domains_to_fpm?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "66"
      }
    },
    "/convert_and_migrate_from_legacy_config": {
      "get": {
        "description": "This function converts and migrates a server from the Legacy Backup system to the Backup system.",
        "operationId": "convert_and_migrate_from_legacy_config",
        "parameters": [
          {
            "description": "Whether to convert the server from the Legacy Backup system to\nthe Backup system.\n * `1` — Convert.\n * `0` — Do **not** convert.",
            "in": "query",
            "name": "no_convert",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "convert_and_migrate_from_legacy_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Legacy Backup configuration was renamed from /etc/cpbackup.conf to /etc/cpbackup.conf-1485958451 as a backup copy for your records.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Migrate server to new backup system",
        "tags": [
          "Backups",
          "Legacy Migration"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 convert_and_migrate_from_legacy_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/convert_and_migrate_from_legacy_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/convertopensshtoputty": {
      "get": {
        "description": "This function converts an OpenSSH private key to a PuTTY key.\n\n**Warning:**\n\nDo **not** transfer private keys over insecure ports.",
        "operationId": "convertopensshtoputty",
        "parameters": [
          {
            "description": "The private key file's name.",
            "in": "query",
            "name": "file",
            "required": true,
            "schema": {
              "example": "KeyFile",
              "type": "string"
            }
          },
          {
            "description": "Whether to keep the OpenSSH file on the server after conversion.\n* `1` — Keep the file.\n* `0` — Delete the file.",
            "in": "query",
            "name": "keep_file",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The private key file's passphrase.",
            "in": "query",
            "name": "passphrase",
            "required": false,
            "schema": {
              "default": "",
              "example": "12345luggage",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "key": {
                          "description": "The converted key file's text.",
                          "example": "PuTTY-User-Key-File-2: ssh-rsa Encryption: aes256-cbc Comment: imported-openssh-key Public-Lines: 12 AAAAB3NzaC1yc2EAAAABIwAAAgEAuuth41YYyWABsRKexJXgSMD8FvIBFCptUfZP 4U/6R41FvL/RS+99kq1WL/KASsKRoEA5uc0axM+iNgZtKuemQYGUZNvN+8X8sC/l E6GF7X3Pvj2Ml4AlD7TQv0WQZUp9xn+SlOti+3pYh+S56vzNjvdifO7U5mPGW/81 9N4vGhG3ThaAgETwkL33CM2LeNRuvoWpeQcuzEVX2aOvHQZqOvV15fTjZ64ZGL3i UDtKmeaHs4tMqgNIUXgn1P1V4TgPvTIfopH8FBX3g1pD15XD3vn+XHLwia0505c5 +QM+jElS3HHb0vrrDo3S+8koXLWp07wu/GYrvBd5+MlsSV7bpr7lmWj8uMQjc0ap eZe+eb/MteadWnqIPeOVuracssCvDLqXEPK2KjhFMPqBTepNhZaJHRfvkodPm43C 50nhqzrNoxFvXb1rfCjPPqGfhuSZhlCmo2FDiZPKdl0X7bhzDIvMVikyqJP06bqK y9iclyQv0VPfyCIx/VDcVclIoUa8A49nAinXHKeUx9QUNBHv8wXdyz7W41jQa+++ Ih3Yc4o9rpV95DDmKp7iF6kFk4aVjIWDgEsPTaL28wlvUyazoW5TAGPHDrRJoedU ag8KDRNPrGbKYu3CvoINiz0sshyCvr1gjKNG75Cwe+L4hXIkaw8wlCpwFq8VSX70 RS9Pei8= Private-Lines: 28 bb31s+xsiAv1+pclnmvreEYdxvuVmbeWMjUWJd4Y4TKIAyLEItsXNs078qn1QAZ+ Wj6t+0HcnhuUVICHyCyJrp++1g4OtzTAHRczaD5ybhb9ktSe1qlnszKD1Rg5/o+B 61h6kvMcZyuNSjtPkmqQ3XIh8OFYybB2oJXY7gJQzfRuRwk8dx9YWtIR4438Nbv5 ecTzGUDWvx+AfYzC4X/UIGiRy8AftfiBQyA+c1OFyg37qM1SLYnZYmIpSf5GsQ3A MaEGlB9P9hE2uoqZ4yT/A0aHj7w8DGEzYZqxNbMlCIJhLEO3vKZvMvaq7Q8ramG6 BzYwUz+8NPgCBUp1qyIcN2vvEHEq57pMMHYNfJMVfG9o0ijo+xxGCPV3MosmmvRI 1nxH0nrgdA2o6SJp/dJrKm3Hicbbxak/Kz4m8BROcnlCgptdjHp9V/cBnFq/UUHv or32gShGWmnG6+XyQs4LxpbLC4koz8EjPwg3/3W2Qn6Drn3i98omvZpmnX466i7e GUiHaiKTpBkqZkHmHFxNBAbbs85yngeo8o3RGUsmN69RupTqSkkLDuDFOMwgfsZG TWexWg/qBe+8Xrbshd9HphxvWv+Q3YcSeg+mm8Bc50Q5saLKYdQQsbfV5wtIpvLj 0eyjoTSh+FkPGBw/iB1MDzYV5OoIIgiDBndP2bOK2zFsLElSbbv/r3i//wL98316DgJWmJiQDqKxly4MEij8TfIVDAsdeyJJKvg6iGahonHbEBkZ9g9wcCpxlg8iMtTf /7eb8SmcPwe1NGdgB7PR1dU/RQ/kBbLaaBfo/1jQEnCC8VmksVu7B9ULImfLEOEm +A4J4NpKKlQocgCvJAtMogL+uRS5GpojJIElVqP12jnb7Ij3AYY3Zb4qotlprLeK 7dJslpNnrD/MSvbJZ/ZoAX+xyDxUMeq/83Xv30i5/wh00QBY4Cv5NTDU4rPoVmQm EWGW5aQx34in4JHY5bK3F4BvVYm7MscKLHoU8/OeKVAgzNcatUgPlN43FG9SX0AE pP3EYlVADSfULdbfBn9dZDidAiDMXnCv9259J65zA64tuT9XluinHXVs5PA/f5vm rZPQhAzGThw7h9L6rGYGfSKd9KYoTwf8kSOA6WU7OEyhfTvCdaW76vPi4CRW2M/Y RHX0IUdv3VxfKb4WnXFeQl6LshmGB1T2mbMyfThlqUCGAvPJyWDtZ6OpOUl3CK87 3jhFzO7t5wruhuWZ3RcISVsrdqcjgCrKy6Q9y+HbLJoNY40BkJm7f6WeV+hHn7o1 od7JiqDGq3Qk+ECEdexvqdRQS7BWgO7xudGFk+WFY02zoGvq5DMviNfsxqhM06P+ JgEinB8xPPCOPzi6q8T1y1Pz44gmluM15/QRX4z0Mwz6UQasVC/NsZxdfoNGtCy0 c2DAscy4zsiKhZMlLr0loPYycO2bOit6E5eYkrACJR2115/ZgVwzvzdmc/INJCxG3TvKYbeuv/tkolt56uJWGfMF2ZrfLJaaQ0iAiUyMep/keLP2bJ4Y97o+03BtQszZ zixXvzeQAX97WdBaUJU0C3mCKDOtkv4RWZ8hXV5v0m2tm7xbXVBzF22Pej2iHDKx GQkciskBRwQM4bDZorkcO+WnGn6uPbtw5v/AuIUqB1UNAcehWN6UTiFNveP4hLYu iRGWnZZ+uTbip91PNXSxXzb9yMWV2qSVIsZvud8kpR8ttL26Z4ySUKkFuPrgUeTeELnOF3GP6Ixk+IkwxU575w== Private-MAC: 1dfa6a4c8297d31e4cfadbf61aac8b4c5ca75584",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "convertopensshtoputty",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Migrate OpenSSH key to PuTTY format",
        "tags": [
          "Security",
          "SSH Keys and Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 convertopensshtoputty file='KeyFile'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/convertopensshtoputty?api.version=1&file=KeyFile"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/cpanel": {
      "get": {
        "description": "You can call cPanel API and UAPI functions through the WHM API.\n\nThis method is useful, for example, when you develop plugins for WHM users, particularly resellers, but need to access cPanel functions. You can make these calls from within either the WHM or cPanel interfaces.\n\n**Important:**\n\nWe recommend that you use the WHM API 1 `uapi_cpanel` function. The `uapi_cpanel` function is a more flexible way to call cPanel API functions from WHM. For example, you can use the `uapi_cpanel` function with the WHM API 1 `batch` function.\n\nBefore calling a cPanel API function via this method, read its documentation. The cPanel API function may require other parameters **not** listed in this document.",
        "operationId": "cpanel",
        "parameters": [
          {
            "description": "The UAPI function name.\n\n**Important:**\n\nFunction names are **case-sensitive**.",
            "in": "query",
            "name": "cpanel_jsonapi_func",
            "required": true,
            "schema": {
              "example": "listpopswithdisk",
              "type": "string"
            }
          },
          {
            "description": "The UAPI module name.\n\n**Important:**\n\nModule names are **case-sensitive**.",
            "in": "query",
            "name": "cpanel_jsonapi_module",
            "required": true,
            "schema": {
              "example": "Email",
              "type": "string"
            }
          },
          {
            "description": "The cPanel username for the account through which to call the function.\n\nMake **certain** that you specify the username in lowercase characters **only**. cPanel & WHM automatically converts usernames to lowercase when you create a cPanel account. For this reason, if you supply a username that includes some or all capital letters, the call will fail.",
            "in": "query",
            "name": "cpanel_jsonapi_user",
            "required": true,
            "schema": {
              "example": "user",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The cPanel API version to use.\n* `1` — Use cPanel API 1.\n* `2` — Use cPanel API 2.\n* `3` — Use UAPI.",
            "in": "query",
            "name": "cpanel_jsonapi_apiversion",
            "schema": {
              "default": 2,
              "enum": [
                1,
                2,
                3
              ],
              "example": 3,
              "type": "integer"
            }
          },
          {
            "description": "The function's input parameters and their values. You can add any additional parameters supported by the underlying cPanel API function.\n\nExample: `domain=example.com`\n\n**Note:**\n* Separate multiple `parameter=value` pairs with the ampersand character (`&`).\n* You **must** URI-encode these values.",
            "in": "query",
            "name": "Variable Names and Values",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Information returned by the cPanel API function passed in `cpanel_jsonapi_module` and `cpanel_jsonapi_func`."
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "cpanel",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Run cPanel API or UAPI function",
        "tags": [
          "Server Administration",
          "API Execution"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 cpanel cpanel_jsonapi_user='user' cpanel_jsonapi_module='Email' cpanel_jsonapi_func='listpopswithdisk'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/cpanel?api.version=1&cpanel_jsonapi_user=user&cpanel_jsonapi_module=Email&cpanel_jsonapi_func=listpopswithdisk"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "84"
      }
    },
    "/cpgreylist_is_server_netblock_trusted": {
      "get": {
        "description": "This function returns the Greylisting trusted status of the server's netblock.",
        "operationId": "cpgreylist_is_server_netblock_trusted",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ip_blocks": {
                          "additionalProperties": {
                            "description": "Whether the *Trusted Hosts* list includes the IP address range.\nThis return's name is the IP address range.\n\n* `1` — Trusted.\n* `0` — Not trusted.",
                            "enum": [
                              1,
                              0
                            ],
                            "type": "integer"
                          },
                          "description": "A list containing the neighboring netblocks.",
                          "example": {
                            "10.0.0.0-10.255.255.255": 1,
                            "199.0.0.0-199.3.255.255": 1,
                            "48.0.0.0-48.255.255.255": 1
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "cpgreylist_is_server_netblock_trusted",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Greylisting trust status of server netblock",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 cpgreylist_is_server_netblock_trusted"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/cpgreylist_is_server_netblock_trusted?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/cpgreylist_list_entries_for_common_mail_provider": {
      "get": {
        "description": "This function lists Greylisting's IP addresses for the specified mail provider.",
        "operationId": "cpgreylist_list_entries_for_common_mail_provider",
        "parameters": [
          {
            "description": "The mail provider.\n\n**Note:**\n\n * To list entries for multiple mail providers, increment the parameter name. For example, `provider-0`, `provider-1`, and `provider-2`.\n * Call WHM API 1's `cpgreylist_load_common_mail_providers_config` function to return a list of valid provider keys.",
            "examples": {
              "multiple": {
                "summary": "List multiple mail provider entries.",
                "value": "provider-0=example-0 provider-1=example-1 provider-2=example-2"
              },
              "single": {
                "summary": "List a single mail provider entry.",
                "value": "cpanel"
              }
            },
            "in": "query",
            "name": "provider",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": {
                        "providers": {
                          "cpanel": {
                            "ips": [
                              {
                                "create_time": "2015-07-28T08:16:52.000Z",
                                "host_ip": "208.115.214.0-208.115.214.255",
                                "is_trusted": 1,
                                "provider_id": 7
                              },
                              {
                                "create_time": "2015-07-28T08:16:52.000Z",
                                "host_ip": "74.63.202.0-74.63.202.255",
                                "is_trusted": 1,
                                "provider_id": 7
                              }
                            ]
                          }
                        },
                        "providers_failed": {
                          "dpanel": "Unknown mail provider: dpanel"
                        }
                      },
                      "properties": {
                        "providers": {
                          "additionalProperties": {
                            "description": "An object containing an object that contains the mail provider's IP address data.\n\n**Note:**\n\nThe return's name is the mail provider's display name.",
                            "properties": {
                              "ips": {
                                "description": "An object containing the mail provider's IP address data.",
                                "properties": {
                                  "create_time": {
                                    "description": "The date and time when the function created the record.",
                                    "example": "2015-07-28T08:16:52.000Z",
                                    "format": "ISO-8601 Date Time (Space Separated)",
                                    "type": "string"
                                  },
                                  "host_ip": {
                                    "description": "The mail provider's IP address or range.",
                                    "example": "192.168.0.1",
                                    "format": "ipv4",
                                    "type": "string"
                                  },
                                  "is_trusted": {
                                    "description": "Whether Greylisting trusts this mail provider's IP addresses.\n- `1` — Trusted.\n- `0` — Not trusted.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "provider_id": {
                                    "description": "The mail provider's identification number.",
                                    "example": 7,
                                    "minimum": 1,
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "type": "object"
                          },
                          "description": "An object containing mail providers and their IP addresses."
                        },
                        "providers_failed": {
                          "additionalProperties": {
                            "description": "The reason why the system failed to list IP addresses for the provider.\n\n**Note:**\n\nThe return's name is the mail provider's display name.",
                            "type": "string"
                          },
                          "description": "An object containing mail providers that the system failed to retrieve data for.",
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "cpgreylist_list_entries_for_common_mail_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Greylisting IP addresses of mail providers",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 cpgreylist_list_entries_for_common_mail_provider provider='cpanel'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/cpgreylist_list_entries_for_common_mail_provider?api.version=1&provider=cpanel"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/cpgreylist_load_common_mail_providers_config": {
      "get": {
        "description": "This function returns Greylisting's list of common mail service providers.",
        "operationId": "cpgreylist_load_common_mail_providers_config",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "autotrust_new_common_mail_providers": {
                          "description": "Whether Greylisting automatically trusts new mail providers that cPanel, L.L.C. adds to the common mail providers list.\n* `1` - New mail providers are automatically trusted.\n* `0` - New mail providers are **not** automatically trusted.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "common_mail_providers": {
                          "additionalProperties": {
                            "description": "An object containing the provider's data.\n\n**Note:**\n\n  The object's name is the provider's key name.",
                            "properties": {
                              "autoupdate": {
                                "description": "Whether Greylisting automatically trusts new IP addresses that cPanel, L.L.C. adds for this mail provider.\n* `1` - New IP addresses are automatically trusted.\n* `0` - New IP addresses are **not** automatically trusted.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "display_name": {
                                "description": "The mail provider's name.",
                                "example": "cPanel",
                                "type": "string"
                              },
                              "is_trusted": {
                                "description": "Whether Greylisting trusts this mail provider's IP addresses.\n* `1` - The provider is trusted.\n* `0` - The provider is **not** trusted.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "description": "An object containing common mail provider settings.",
                          "example": {
                            "cpanel": {
                              "autoupdate": 1,
                              "display_name": "cPanel",
                              "is_trusted": 1
                            },
                            "sectigo": {
                              "autoupdate": 1,
                              "display_name": "Comodo/Sectigo",
                              "is_trusted": 1
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "cpgreylist_load_common_mail_providers_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Greylisting mail providers",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 cpgreylist_load_common_mail_providers_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/cpgreylist_load_common_mail_providers_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/cpgreylist_save_common_mail_providers_config": {
      "get": {
        "description": "This function sets whether Greylisting trusts new entries to cPanel's common mail providers list.",
        "operationId": "cpgreylist_save_common_mail_providers_config",
        "parameters": [
          {
            "description": "Whether Greylisting automatically trusts new mail providers that cPanel adds to the common mail providers list.\n\n* `1` — Automatically trust new mail providers cPanel adds to the common mail providers list.\n* `0` — Do **not** automatically trust new mail providers cPanel adds to the common mail providers list.",
            "in": "query",
            "name": "autotrust_new_common_mail_providers",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether Greylisting automatically trusts new IP addresses that cPanel adds to this mail provider.\n\n* `1` — Automatically trust new IP addresses cPanel adds to this mail provider.\n* `0` — Do **not** automatically trust new IP addresses cPanel adds to this mail provider.\n\nIf you do not specify this parameter, the system will **not** change Greylisting settings for **any** existing provider.\n\n**Note:**\n\n The parameter's name is the provider's key name.\n Example key and value:\n * `google=0`",
            "in": "query",
            "name": "PROVIDERKEY",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "autotrust_new_common_mail_providers": {
                          "description": "Whether Greylisting automatically trusts new mail providers that cPanel, L.L.C. adds to the common mail providers list.\n\n* `1` - New mail providers are automatically trusted.\n* `0` - New mail providers are **not** automatically trusted.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "common_mail_providers": {
                          "additionalProperties": {
                            "description": "An object containing the provider's data.\n\n**Note:**\n\n  The object's name is the provider's key name.",
                            "properties": {
                              "autoupdate": {
                                "description": "Whether Greylisting automatically trusts new IP addresses that cPanel, L.L.C. adds for this mail provider.\n\n* `1` - New IP addresses are automatically trusted.\n* `0` - New IP addresses are **not** automatically trusted.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "display_name": {
                                "description": "The mail provider's name.",
                                "example": "cPanel",
                                "type": "string"
                              },
                              "is_trusted": {
                                "description": "Whether Greylisting trusts this mail provider's IP addresses.\n\n* `1` - The provider is trusted.\n* `0` - The provider is **not** trusted.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "description": "An object containing common mail provider settings.",
                          "example": {
                            "cpanel": {
                              "autoupdate": 1,
                              "display_name": "cPanel",
                              "is_trusted": 1
                            },
                            "sectigo": {
                              "autoupdate": 1,
                              "display_name": "Comodo/Sectigo",
                              "is_trusted": 1
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "cpgreylist_load_common_mail_providers_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update Greylisting new mail provider handling",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 cpgreylist_save_common_mail_providers_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/cpgreylist_save_common_mail_providers_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/cpgreylist_status": {
      "get": {
        "description": "This function returns the status of Greylisting.",
        "operationId": "cpgreylist_status",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "is_enabled": {
                          "description": "Whether Greylisting is enabled.\n* `1` — Enabled.\n* `0` — Disabled.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "is_exim_enabled": {
                          "description": "Whether Exim is enabled.\n* `1` — Enabled.\n* `0` — Disabled.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "service": {
                          "description": "The name of the service.",
                          "example": "cPGreyList",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "cpgreylist_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Greylisting status",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 cpgreylist_status"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/cpgreylist_status?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/cpgreylist_trust_entries_for_common_mail_provider": {
      "get": {
        "description": "This function marks the IP addresses for the specified mail provider as trusted. Greylisting will not defer emails from trusted IP addresses.",
        "operationId": "cpgreylist_trust_entries_for_common_mail_provider",
        "parameters": [
          {
            "description": "The mail providers’ names.\n\nCall the `cpgreylist_load_common_mail_providers_config` API function\nto retrieve the system’s recognized provider names.\n\n**Note:**\n\n To trust multiple mail providers, increment the parameter name (for example: `provider-0`, `provider-1`, and `provider-2`).",
            "examples": {
              "multiple": {
                "summary": "Trust multiple mail providers.",
                "value": "provider-1=cpanel&provider-2=google"
              },
              "single": {
                "summary": "Trust a single mail provider.",
                "value": "cpanel"
              }
            },
            "in": "query",
            "name": "provider",
            "required": true,
            "schema": {
              "example": "cpanel",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "providers_failed": {
                          "additionalProperties": {
                            "description": "The reason for the provider’s failure.\n\n**Note:**\n\nThe property’s keys are the provider name.",
                            "example": "This failed because it rained.",
                            "type": "string"
                          },
                          "description": "The providers whose configuration changes failed.",
                          "type": "object"
                        },
                        "providers_trusted": {
                          "additionalProperties": {
                            "description": "The providers whose configuration changes succeeded.\n\n**Note:**\n\nThe property’s keys are the provider name.",
                            "properties": {
                              "ips_trusted": {
                                "description": "The total number of the mail provider's IP addresses that Greylisting trusts.",
                                "example": 21,
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "description": "The mail providers that Greylisting trusts.",
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "cpgreylist_trust_entries_for_common_mail_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add mail provider to Greylisting trusted hosts",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 cpgreylist_trust_entries_for_common_mail_provider provider='cpanel'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/cpgreylist_trust_entries_for_common_mail_provider?api.version=1&provider=cpanel"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/cpgreylist_untrust_entries_for_common_mail_provider": {
      "get": {
        "description": "This function marks the IP addresses for the specified mail provider as not trusted.\nGreylisting defers emails from non-trusted IP addresses.",
        "operationId": "cPGreyList-cpgreylist_untrust_entries_for_common_mail_provider",
        "parameters": [
          {
            "description": "The mail provider.\n\n**Note:**\n\nTo trust multiple mail providers,\n increment the parameter name. For example, provider-0, provider-1, provider-2.",
            "examples": {
              "multiple": {
                "summary": "Trust multiple mail providers",
                "value": "provider-1=10 provider-2=33 provider-3=15"
              },
              "single": {
                "summary": "Trust a single mail provider",
                "value": "1"
              }
            },
            "in": "query",
            "name": "provider",
            "required": true,
            "schema": {
              "example": "cpanel",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "providers_failed": {
                          "additionalProperties": {
                            "description": "The mail provider's data.",
                            "properties": {
                              "ips_untrusted": {
                                "description": "The mail providers that failed to update.",
                                "example": 21,
                                "type": "integer"
                              }
                            },
                            "type": "object",
                            "x-additionalPropertiesName": "provider_key"
                          },
                          "type": "object"
                        },
                        "providers_untrusted": {
                          "additionalProperties": {
                            "description": "The reason why the change for a provider failed.",
                            "example": "Unknown mail provider.",
                            "type": "string",
                            "x-additionalPropertiesName": "provider_key"
                          },
                          "description": "The mail providers that Greylisting does not trust."
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "cpgreylist_untrust_entries_for_common_mail_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`.\nThis field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add mail provider to Greylisting non-trusted hosts",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 cpgreylist_untrust_entries_for_common_mail_provider provider='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/cpgreylist_untrust_entries_for_common_mail_provider?api.version=1&provider=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/cphulk_status": {
      "get": {
        "description": "This function returns the status of the cPHulk service.",
        "operationId": "cphulk_status",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "is_enabled": {
                          "description": "Whether the cPHulk service is enabled.\n* `1` - cPHulk is enabled.\n* `0` - cPHulk is disabled.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "service": {
                          "description": "The cPHulk service's name.",
                          "example": "cPHulk",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "cphulk_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return login security status",
        "tags": [
          "cPHulk",
          "Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 cphulk_status"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/cphulk_status?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/create_cpgreylist_trusted_host": {
      "get": {
        "description": "This function adds an IP address to the *Greylisting Trusted Hosts* list.",
        "operationId": "cPGreyList-create_cpgreylist_trusted_host",
        "parameters": [
          {
            "description": "The record's IP address, or a range of IP addresses.\n\n**Note:**\n\nTo add multiple IP addresses, increment the parameter name. For example, `ip-1`, `ip-2`, and `ip-3`.",
            "examples": {
              "multiple": {
                "summary": "To add multiple IP addresses.",
                "value": "ip-1=192.168.0.1&ip-2=192.168.0.2&ip-3=192.168.0.3"
              },
              "single": {
                "summary": "To add a single IP address.",
                "value": "192.168.0.1"
              }
            },
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "example": "192.168.0.1",
              "type": "string"
            }
          },
          {
            "description": "A comment.",
            "in": "query",
            "name": "comment",
            "required": false,
            "schema": {
              "example": "NoComment",
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "comment": {
                          "description": "Comment for the batch.",
                          "example": "NoComment",
                          "maxLength": 255,
                          "type": "string"
                        },
                        "ips_added": {
                          "description": "An array of objects that contains the IP addresses that the function added to the Trusted Hosts list.",
                          "items": {
                            "properties": {
                              "comment": {
                                "description": "Comment for the individual record.",
                                "example": "Fascinating",
                                "maxLength": 255,
                                "type": "string"
                              },
                              "create_time": {
                                "description": "The date and time at which the function created the record.",
                                "example": "2015-02-17T10:08:26.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "host_ip": {
                                "description": "The trusted host's IP address.",
                                "example": "192.168.0.1",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "id": {
                                "description": "The host's record number.",
                                "example": 42,
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "ips_failed": {
                          "description": "An object that contains the IP addresses that the function failed to add to the Trusted Hosts list.",
                          "properties": {
                            "comment": {
                              "description": "The reason for the failure.",
                              "example": "Sorry, 192.168 is not a valid IP address.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "create_cpgreylist_trusted_host",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`.\nThis field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add IP address to Greylisting trusted hosts",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 create_cpgreylist_trusted_host ip='192.168.0.1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/create_cpgreylist_trusted_host?api.version=1&ip=192.168.0.1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/create_cphulk_record": {
      "get": {
        "description": "This function adds a new record or records to cPHulk's whitelist or blacklist.",
        "operationId": "create_cphulk_record",
        "parameters": [
          {
            "description": "The record's IP address, if there is only one IP address to add.\n\n**Note:**\n\nTo add multiple IP addresses, increment the parameter name. For example, `ip-1`, `ip-2`, and `ip-3`.",
            "examples": {
              "multiple": {
                "description": "Add multiple IP addresses.",
                "value": "ip-1=192.168.0.1&ip-2=192.168.0.2&ip-3=192.168.0.3"
              },
              "single": {
                "description": "Add a single IP address.",
                "value": "192.168.0.1"
              }
            },
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "The cPHulk list's name.\n\n* `black` - Add a new record or records to the blacklist.\n* `white` - Add a new record or records to the whitelist. ",
            "in": "query",
            "name": "list_name",
            "required": true,
            "schema": {
              "enum": [
                "black",
                "white"
              ],
              "example": "white",
              "type": "string"
            }
          },
          {
            "description": "A comment to include.",
            "in": "query",
            "name": "comment",
            "required": false,
            "schema": {
              "example": "George Wendt flying through the air.",
              "maximum": 255,
              "type": "string"
            }
          },
          {
            "description": "Whether to skip checking if cPHulk runs on the server.\n\n* `1` - Do **not** check if cPHulk is running.\n* `0` - Check if cPHulk is running.\n\n**Note:**\n\n If cPHulk is disabled and you check its status, the function returns the following message: `cPHulk is disabled on the server.` ",
            "in": "query",
            "name": "skip_enabled_check",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "comment": {
                          "description": "The comment that you included when you called the function.",
                          "example": "George Wendt flying through the air.",
                          "type": "string"
                        },
                        "ip_blocks_removed": {
                          "description": "The number of IP address blocks that the function deleted.",
                          "example": 1,
                          "type": "integer"
                        },
                        "ips_added": {
                          "description": "An array of IP addresses that the function removed from the list.",
                          "items": {
                            "example": "192.168.0.1",
                            "format": "ipv4",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "ips_failed": {
                          "additionalProperties": {
                            "description": "The reason why the system failed to add an IP address to the list.\n\n**Note:**\n\nThe IP address is the return's name.",
                            "type": "string"
                          },
                          "description": "A object of IP addresses that the system failed to add to the list. This object contains one or more IP address returns.",
                          "example": {
                            "192.168.0.1": "Invalid IP address or range: \"192.68.0.1\""
                          },
                          "type": "object"
                        },
                        "iptable_bans_removed": {
                          "description": "The number of `iptables` temporary block rules that the function deleted.",
                          "example": 0,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "list_name": {
                          "description": "The cPHulk list's name.\n* `black`\n* `white`",
                          "enum": [
                            "black",
                            "white"
                          ],
                          "example": "white",
                          "type": "string"
                        },
                        "requester_ip": {
                          "description": "The IP address of the user or system that requested the addition.",
                          "example": "10.1.4.228",
                          "format": "ipv4",
                          "type": "string"
                        },
                        "requester_ip_is_whitelisted": {
                          "description": "Whether the requester's IP address exists on cPHulk's whitelist.\n* `1` - Whitelisted.\n* `0` - Not whitelisted.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "create_cphulk_record",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add login security record to list",
        "tags": [
          "cPHulk",
          "Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 create_cphulk_record list_name='white' ip='192.168.0.1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/create_cphulk_record?api.version=1&list_name=white&ip=192.168.0.1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/create_featurelist": {
      "get": {
        "description": "This function creates or updates a feature list.\n\n**Note:**\n\nA reseller **must** possess the\n[Add/Remove Package feature](https://docs.cpanel.net/whm/resellers/edit-reseller-nameservers-and-privileges/#packages)\nto use this function.",
        "operationId": "create_featurelist",
        "parameters": [
          {
            "description": "The feature list's name.",
            "in": "query",
            "name": "featurelist",
            "required": true,
            "schema": {
              "example": "CustomFeatureList",
              "type": "string"
            }
          },
          {
            "description": "Whether to add a specific feature in the feature list.\n\n* `1` — Add the feature.\n* `0` — Do **not** add the feature.\n\n**Note:**\n\n* The parameter's name is a feature's name. For example, the `changemx=1`\nadds the *Change Mail Exchanger* feature to the feature list.\n\n* You can add or omit multiple features.",
            "in": "query",
            "name": "featurelistname",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to overwrite an existing feature list.\n\n* `1` — Overwrite.\n* `0` — Do **not** overwrite.",
            "in": "query",
            "name": "overwrite",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "featurelist": {
                          "description": "The feature list's name.",
                          "example": "Arthur",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "create_featurelist",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update feature list",
        "tags": [
          "Packages",
          "Feature Lists"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 create_featurelist featurelist=Arthur webmail=1 changemx=1 overwrite=1"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/create_featurelist?api.version=1&featurelist=Arthur&webmail=1&changemx=1&overwrite=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/create_integration_group": {
      "get": {
        "description": "This function creates a group to store integrations links in the cPanel interface.",
        "operationId": "create_integration_group",
        "parameters": [
          {
            "description": "The group's ID within the system.\n\n**Warning:**\n\n If you create a link with a `group_id` value that already exists, the function replaces the existing group with the newly-created group.",
            "in": "query",
            "name": "group_id",
            "required": true,
            "schema": {
              "example": "WHMCS",
              "type": "string"
            }
          },
          {
            "description": "The label for the group to display in the cPanel interface.",
            "in": "query",
            "name": "label",
            "required": true,
            "schema": {
              "example": "WHMCS+Control",
              "type": "string"
            }
          },
          {
            "description": "The order in which to display the group in the cPanel interface.\n\n**Note:**\n\n By default, the function will automatically create an item under the username menu in the interface header.",
            "in": "query",
            "name": "order",
            "required": true,
            "schema": {
              "example": 1,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The cPanel account name.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "create_integration_group",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create integration link group",
        "tags": [
          "Integration",
          "Links"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 create_integration_group user='username' group_id='WHMCS' label='WHMCS+Control' order='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/create_integration_group?api.version=1&user=username&group_id=WHMCS&label=WHMCS%2bControl&order=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/create_integration_link": {
      "get": {
        "description": "This function creates an integration link in the cPanel interface.\n\n**Note:**\n\nThe function creates the `APP.adminconfig` and `APP.userconfig` integration link files in the `/var/cpanel/integration/links/USERNAME` directory, where `APP` represents the application name and `USERNAME` represents the user for whom you create integration links.",
        "operationId": "create_integration_link",
        "parameters": [
          {
            "description": "The application to link.\n\n**Note:**\n* If you create a link with an `app` value that already exists, the function will replace the existing link with the newly-created link.\n* The value you assign to the `app` parameter is how you identify that integration link when listing or removing integration links.\n* You may include underscore (`_`) characters.",
            "in": "query",
            "name": "app",
            "required": true,
            "schema": {
              "example": "WHMCS_billing",
              "type": "string"
            }
          },
          {
            "description": "The service for which to implement authentication.\n\n**Note:**\n\nThis is a string from the `get_users_links` function. The function typically returns one of the following values.\n\n* `billing` - This link appears in the user menu\n* `customer_service` - This link appears in the user menu\n* `support` - This link appears in the user menu\n* `upgrade` - This link appears in the user menu and context-sensitive areas when the user may require more of a resource",
            "in": "query",
            "name": "implements",
            "required": true,
            "schema": {
              "example": "billing",
              "type": "string"
            }
          },
          {
            "description": "The label to display in the cPanel login interface.",
            "in": "query",
            "name": "label",
            "required": true,
            "schema": {
              "example": "WHMCS Billing",
              "type": "string"
            }
          },
          {
            "description": "The subscriber's unique ID that the system will present to the URL in the `autologin_token_url` endpoint.",
            "in": "query",
            "name": "subscriber_unique_id",
            "required": true,
            "schema": {
              "example": "1234",
              "type": "string"
            }
          },
          {
            "description": "The token that the system will present to the URL in the `autologin_token_url` endpoint.",
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "example": "subway",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account name.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The URL to which the server will send the `app`, `token`, `user`, and `subscriber_unique_id` values through an `HTTP POST` request. The destination server will respond with a JSON-encoded object with either a `redirect_url` key or the `retry` and `attempt` keys.\n\n**Note:**\n\n* You **must** include either the `autologin_token_url` parameter, the `url` parameter, or both.\n* If you do not set the `autologin_token_url` parameter, or that server does not respond or exist, then the server will redirect the user to the location in the `url` parameter.\n* If the response contains `redirect_url`, the system will redirect the user to that URL. (For example:, `{\"redirect_url\":\" http://www.whmcs.com/client_area/login/?one_time_user_token_that_expires_in_120_seconds=d41d8cd98f00 ”}` will send the user to that unique URL.)\n* If the response contains `retry` and `attempt`, the system will wait for the retry value in seconds for a maximum of 60 seconds and then attempt the call again. The attempt value indicates the number of attempts that your system has tried. The system will stop after three attempts. (For example, `{\"retry\":30, \"attempt\":2}` represents the second attempt to connect, and the system will pause the user for 30 seconds before it tries again.)",
            "in": "query",
            "name": "autologin_token_url",
            "required": false,
            "schema": {
              "example": "http://www.example.com/login.cgi",
              "format": "json",
              "type": "string"
            }
          },
          {
            "description": "The icon image.\n\n**Note:**\n\nIf you **do not** specify a value, the interface uses a standard puzzle piece icon.",
            "in": "query",
            "name": "base64_png_image",
            "required": false,
            "schema": {
              "example": "iVBORw0KGgoAAAANSUhEUgAAAJgAAADYCAYAAA AXmipNAAAACXBIWXMAAALVAAAC1QHAwm8lAAAAGXRFWHRTb2Z0d2FyZQB 3d3cuaW5rc2NhcGUub3Jnm+48GgAAAUNJREFUeJztziFKg2EABuD3+ydz qGBwiGBZ385hstoMu4DNA8w7eIuBRUyWBYvJsC6CYWCwGGSy7bN6AOFn8 DwneJI/6mTYreNBryYl8A9KktTxoJfu0W66y3mSw6Q8pD+/LJNsWv6x5Z p6NbzJ/sF7uj/3Sf3OJqPUep6P0WnbObZfk1qu02zOks0spXylk+eUvOS 4v2g7x/bbSamPSecuqZ+p5TbN6inLvbcyma3azrH9Sr1IJyejQcq6yWL0 WqbTddspAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AANr0C5EmMYv5JZrpAAAAAElFTkSuQmCC",
              "format": "base64 image",
              "type": "string"
            }
          },
          {
            "description": "The group ID in which to add the icon of the linked service.\n\n* `files`\n* `databases`\n* `domains`\n* `email`\n* `metrics`\n* `security`\n* `software`\n* `advanced`\n* `pref`\n\n**Note:**\n\nIf you **do not** specify a value, the function automatically creates an item under the username menu in the interface header.",
            "in": "query",
            "name": "group_id",
            "required": false,
            "schema": {
              "enum": [
                "files",
                "databases",
                "domains",
                "email",
                "metrics",
                "security",
                "software",
                "advanced",
                "pref"
              ],
              "example": "advanced",
              "type": "string"
            }
          },
          {
            "description": "The order in which to display the icon in the cPanel interface inside the `group_id` group.",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "example": "999",
              "type": "string"
            }
          },
          {
            "description": "The URL to which to send the user if the `autologin_token_url` location does not respond or is not present.\n\n**Note:**\n\n* You **must** include either the `autologin_token_url` parameter, the `url` parameter, or both.",
            "in": "query",
            "name": "url",
            "required": false,
            "schema": {
              "example": "http://www.example.com",
              "format": "url",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "create_integration_link",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create integration link",
        "tags": [
          "Integration",
          "Links"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 create_integration_link user='username' app='WHMCS_billing' token='subway' implements='billing' label='WHMCS Billing' subscriber_unique_id='1234'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/create_integration_link?api.version=1&user=username&app=WHMCS_billing&token=subway&implements=billing&label=WHMCS%20Billing&subscriber_unique_id=1234"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/create_parked_domain_for_user": {
      "get": {
        "description": "This function creates an alias (parks a domain on a web virtual host).",
        "operationId": "create_parked_domain_for_user",
        "parameters": [
          {
            "description": "The domain name to park.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "park.example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The cPanel user account.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "An existing web virtual host to which the new domain name should be added.\n\n**Note:**\n\n If this is not the cPanel account’s main domain, then the system will consider the new domain to be an [addon domain](https://go.cpanel.net/cpaneldocsAddonDomains).",
            "in": "query",
            "name": "web_vhost_domain",
            "required": true,
            "schema": {
              "example": "vhost.example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "create_parked_domain_for_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create domain alias",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 create_parked_domain_for_user domain='park.example.com' username='username' web_vhost_domain='vhost.example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/create_parked_domain_for_user?api.version=1&domain=park.example.com&username=username&web_vhost_domain=vhost.example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "82"
      }
    },
    "/create_remote_root_transfer_session": {
      "get": {
        "description": "This function creates a transfer session as the `root` user.\n\n**Important:**\n\n  For information about the ports that cPanel & WHM uses, read our [How to Configure Your Firewall for cPanel Services](https://go.cpanel.net/firewall) documentation.\n\n**Note:**\n\n  For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.\n\n### Authentication\nThere are several methods that you can use to authenticate a transfer session with the remote server:\n\n#### Authenticate as root\nIf you use SSH to authenticate as the `root` user, the remote server's SSH must accept `root` logins. For more information read [OpenSSH's `sshd_config`](https://linux.die.net/man/5/sshd_config) documentation.\n\nThe following table displays the correct parameters and values for this authentication method:\n\n| Parameter | Value |\n|-|-|\n| `user` | `root` |\n| `password` | `root`'s password |\n\nYou can also use an SSH public key to authenticate the `root` user. If the SSH public key is encrypted, include the SSH key's passphrase.\n\nThe following table displays the correct parameters and values for this authentication method:\n\n| Parameter | Value if the SSH Key is not encrypted | Value if the SSH Key is encrypted |\n|-|-|-|\n| `user` | `root` | `root` |\n| `sshkey_name` | The `root` user's SSH key. | The `root` user's SSH key. |\n| `sshkey_passphrase` | *(none)* | The `root` user's SSH key passphrase. |\n\n#### Authenticate as a user\nMany server administrators do not permit direct `root` logins via SSH on their servers.\n* If the remote server forbids root logins, you **must** use another user and their password on the remote server, and then escalate to the `root` user. For more information read [OpenSSH's `sshd_config`](https://linux.die.net/man/5/sshd_config) documentation.\n* If the system administrator used WHM's [*Manage Wheel Group Users*](https://go.cpanel.net/whmdocsManageWheelGroupUsers) interface (*WHM >> Home >> Security Center >> Manage Wheel Group Users*) to grant the user `su` access, then you will need to specify `su` and the `root` password.\n* If the user has `sudo` access, you do **not** need the `root` password.\n\nThe following table displays the correct parameters and values for this authentication method:\n\n| Parameter | Value if the user has sudo access | Value if the user has su access |\n|-|-|-|\n| `user` | The username. | The username. |\n| `password` | The user's password. | The user's password. |\n| `root_escalation_method` | `sudo` | `su` |\n| `root_password` | *(none)* | The `root` user's password. |\n\nYou can also use an SSH public key instead of a password to authenticate that user. If the SSH public key is encrypted, include the SSH key's passphrase.\n\nThe following table displays the correct parameters and values for this authentication method:\n\n| Parameter | sudo | su |\n|-|-|-|\n| `user` | The username. | The username. |\n| `sshkey_name` | The user's SSH key. | The user's SSH key. |\n| `sshkey_passphrase` (If encrypted) | The user's SSH key passphrase. | The user's SSH key passphrase. |\n| `root_escalation_method` | `sudo` | `su` |\n| `root_password` | *(none)* | The `root` user's password. |",
        "operationId": "create_remote_root_transfer_session",
        "parameters": [
          {
            "description": "The method by which the transfer system will execute commands on the remote system.\n* `ssh` — Use SSH. The function uses the remote server's indicated SSH `port` value.\n* `whostmgr` — Use the remote server's secure WHM port. This will reject invalid  TLS handshakes.\n* `whostmgr_insecure` — Use the remote server's secure WHM port, but **ignores** any TLS verification failures.",
            "in": "query",
            "name": "comm_transport",
            "required": true,
            "schema": {
              "default": "ssh",
              "enum": [
                "ssh",
                "whostmgr",
                "whostmgr_insecure"
              ],
              "example": "ssh",
              "type": "string"
            }
          },
          {
            "description": "Whether to compress data before transfer.\n* `1` — Compress.\n* `0` — Do **not** compress.",
            "in": "query",
            "name": "compressed",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to transfer reseller privileges.\n* `1` — Transfer.\n* `0` — Do **not** transfer.",
            "in": "query",
            "name": "copy_reseller_privs",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to use a custom `pkgacct` scripts on the remote server for the transfer session.\n* `1` — Use a custom `pkgacct` script.\n* `0` — Do **not** use a custom script.",
            "in": "query",
            "name": "enable_custom_pkgacct",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The remote server's hostname or IP address.",
            "example": "192.168.0.0",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "description": "A valid IP address.",
                  "example": "192.168.0.0",
                  "format": "ipv4",
                  "type": "string"
                },
                {
                  "description": "A valid domain.",
                  "example": "remote.example.com",
                  "format": "domain",
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "Whether to run the remote server processes at low priority in order to reduce impact on server performance.\n* `1` — Run at low priority.\n* `0` — Run at high priority.",
            "in": "query",
            "name": "low_priority",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of CPU threads to use for restore sessions.",
            "in": "query",
            "name": "restore_threads",
            "required": true,
            "schema": {
              "example": 1,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of CPU threads to use for transfer sessions.",
            "in": "query",
            "name": "transfer_threads",
            "required": true,
            "schema": {
              "example": 1,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to not use SSL to encrypt data.\n* `1` — Do **not** use SSL.\n* `0` — Use SSL.",
            "in": "query",
            "name": "unencrypted",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to skip the Restricted Restore system.\n* `1` — Skip.\n* `0` — Do **not** skip.\n\n**Note:**\n\n  If you want to pass the `force` parameter in the WHM API 1 `enqueue_transfer_item` function, you **must** set this parameter to a value of `0`.",
            "in": "query",
            "name": "unrestricted_restore",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to use an existing backup instead of packaging the data again if the backup is less than 24 hours old.\n* `1` — Use an existing backup.\n* `0` — Package the data.",
            "in": "query",
            "name": "use_backups",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The username to use to connect to the remote server.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "root",
              "type": "string"
            }
          },
          {
            "description": "The username's password.\n\n**Note:**\n\n Use this parameter if you will authenticate to the remote server with a password. Do **not** use this parameter if you will authenticate to the remote server with an SSH key.",
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "The remote server's SSH port number.",
            "in": "query",
            "name": "port",
            "required": false,
            "schema": {
              "default": 22,
              "example": 22,
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The escalation method to use to connect to the remote server.\n* `su`\n* `sudo`\n\n**Note:**\n\n Use this parameter if the `sshd_config` file's `PermitRootLogin` value is `No`.",
            "in": "query",
            "name": "root_escalation_method",
            "required": false,
            "schema": {
              "enum": [
                "su",
                "sudo"
              ],
              "example": "sudo",
              "type": "string"
            }
          },
          {
            "description": "`root`'s password on the remote server.\n\n**Note:**\n\n Use this parameter if the `sshd_config` file's `PermitRootLogin` value is `No` and you will use the `root` user's password to escalate access.",
            "in": "query",
            "name": "root_password",
            "required": false,
            "schema": {
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "The SSH key's name.\n\n**Note:**\n\n* Use this parameter if you will authenticate to the remote server with an SSH key. Do **not** use this parameter if you will authenticate to the remote server with a password.\n* SSH keys are available in WHM's [*Manage root's SSH Keys*](https://go.cpanel.net/whmdocsManagerootsSSHKeys) interface (*WHM >> Home >> Security Center >> Manage root’s SSH Keys*).",
            "in": "query",
            "name": "sshkey_name",
            "required": false,
            "schema": {
              "example": "FrancisScott",
              "type": "string"
            }
          },
          {
            "description": "The SSH key's passphrase.\n\n**Note:**\n\n Use this parameter if you will authenticate to the remote server with an SSH key, and the key is encrypted.",
            "in": "query",
            "name": "sshkey_passphrase",
            "required": false,
            "schema": {
              "example": "kkwtoowoygidsa",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "analyze_rawout": {
                          "description": "The HTML output from the analysis of the remote server connection.",
                          "example": "Fetching information from remote host: \\u201c10.1.100.35\\u201d \\u2026 \\u2026\\nDone\\nFetching information from remote host: \\u201c10.1.100.35\\u201d \\u2026 \\u2026\\nDone\\n\",",
                          "type": "string"
                        },
                        "create_rawout": {
                          "description": "The HTML output from the creation of the remote server connection.",
                          "example": "Basic credential check \\u2026 \\u2026\\nDone\\nFetching information from remote host: \\u201c10.1.100.35\\u201d \\u2026 \\u2026\\nDone\\nFetching WHM Version \\u2026\\nDone\\nTesting \\u201cvm5.docs.cpanel.net\\u201d for transfer streaming support with password authentication....<strong>Streaming Supported</strong>\\nRemote Server Type: \\u201cWHM1130\\u201d\\n\",",
                          "type": "string"
                        },
                        "transfer_session_id": {
                          "description": "The transfer session's ID.",
                          "example": "vm5docscpanelcopya20140430200606V06z",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "create_remote_root_transfer_session",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create remote server transfer session as root user",
        "tags": [
          "Transfers",
          "cPanel Account Transfer"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 create_remote_root_transfer_session host='192.168.0.0' user='root' transfer_threads='1' restore_threads='1' unrestricted_restore='1' comm_transport='ssh' copy_reseller_privs='1' compressed='1' unencrypted='0' use_backups='1' low_priority='1' enable_custom_pkgacct='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/create_remote_root_transfer_session?api.version=1&host=192.168.0.0&user=root&transfer_threads=1&restore_threads=1&unrestricted_restore=1&comm_transport=ssh&copy_reseller_privs=1&compressed=1&unencrypted=0&use_backups=1&low_priority=1&enable_custom_pkgacct=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/create_remote_user_transfer_session": {
      "get": {
        "description": "This function creates a transfer session with a non-root user to a remote server.\n\n**Important:**\n\n* The source and target servers must be able to communicate over port `2087` to use this feature.\n* The source and target servers must also be able to communicate over the port that your servers use for SSH connections.\n* For more information about the ports that cPanel & WHM uses, read our [How to Configure Your Firewall for cPanel & WHM Services](https://go.cpanel.net/firewall) documentation.\n\n**Note:**\n\nFor more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.",
        "operationId": "create_remote_user_transfer_session",
        "parameters": [
          {
            "description": "The server hostname for the account.",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "example": "hostname.example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The account's password.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "12345luggage",
              "type": "string"
            }
          },
          {
            "description": "Whether to skip the Restricted Restore process.\n* `1` - Skip Restricted Restore.\n* `0` - Use Restricted Restore.\n\n**Note:**\n\nYou **must** set this parameter to a value of 1.",
            "in": "query",
            "name": "unrestricted_restore",
            "required": true,
            "schema": {
              "enum": [
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "transfer_session_id": {
                          "description": "The transfer session's ID.",
                          "example": "vm5docscpanelnoroo201402251939519hmy",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "create_remote_user_transfer_session",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create remote server transfer session",
        "tags": [
          "Transfers",
          "cPanel Account Transfer"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 create_remote_user_transfer_session host='hostname.example.com' password='12345luggage' unrestricted_restore='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/create_remote_user_transfer_session?api.version=1&host=hostname.example.com&password=12345luggage&unrestricted_restore=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/create_subdomain": {
      "get": {
        "description": "This function creates a subdomain.",
        "operationId": "create_subdomain",
        "parameters": [
          {
            "description": "The subdomain's document root within the home directory.\n\n  **Note:**\n\n * An invalid document root path will cause this function to **fail**.\n * If the *Restrict document roots to public_html* value is set to `On` in WHM's [Tweak Settings](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*), this parameter **must** begin with the `public_html/` path. For more information, read the [cpanel.config](https://go.cpanel.net/cpanelconfiginvalid) file documentation.",
            "in": "query",
            "name": "document_root",
            "required": true,
            "schema": {
              "example": "public_html/directory_name",
              "type": "string"
            }
          },
          {
            "description": "The subdomain name to create.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "subdomain.example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "Whether to use a canonical name in the [Apache® configuration for self-referential URLs](https://httpd.apache.org/docs/2.4/mod/core.html#usecanonicalname).\n\n* `1` — Use the canonical name.\n* `0` — Do **not** use the canonical name.",
            "in": "query",
            "name": "use_canonical_name",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "username": {
                          "description": "The cPanel account username.\n\n**Note:**\n\n This return **only** appears if the function succeeds.",
                          "example": "example",
                          "format": "username",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "create_subdomain",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create subdomain",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 create_subdomain domain='subdomain.example.com' document_root='public_html/directory_name'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/create_subdomain?api.version=1&domain=subdomain.example.com&document_root=public_html%2fdirectory_name"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/create_user_session": {
      "get": {
        "description": "This function creates a new temporary user session for a specified service.\nThis allows users with WHM access to log in to third-party applications\n(for example, billing systems) without storing the account password.\n\n**Note:**\n\n* The system destroys the temporary session after 15 minutes of inactivity.\n* For more information about the Single Sign On feature, read our\n[Guide to API Authentication](/whm/tokens/)\ndocumentation.",
        "operationId": "create_user_session",
        "parameters": [
          {
            "description": "The session's service.",
            "in": "query",
            "name": "service",
            "required": true,
            "schema": {
              "enum": [
                "cpaneld",
                "whostmgrd",
                "webmaild"
              ],
              "example": "cpaneld",
              "type": "string"
            }
          },
          {
            "description": "The session's cPanel account username or a valid email address.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "user@example.com",
              "type": "string"
            }
          },
          {
            "description": "The cPanel or WHM application to which the session will link. This\nparameter defaults to a blank string, which redirects the user to the\ncPanel\n[*Home*](https://docs.cpanel.net/cpanel/the-cpanel-interface/the-cpanel-interface/)\ninterface.\n\n* A valid application name, to link the session to an application.\n* An invalid application name, to create the session but **not** link\nit to an application.",
            "in": "query",
            "name": "app",
            "required": false,
            "schema": {
              "enum": [
                "Backups_Home",
                "Calendar_Configure",
                "ContactInfo_Change",
                "Cron_Home",
                "Database_MySQL",
                "Database_phpMyAdmin",
                "Domains_AddonDomains",
                "Domains_SubDomains",
                "Email_AccountLevelFiltering",
                "Email_Accounts",
                "Email_Archive",
                "Email_Authentication",
                "Email_AutoResponders",
                "Email_BoxTrapper",
                "Email_DefaultAddress",
                "Email_DeliveryReport",
                "Email_Forwarders",
                "Email_GreyListing",
                "Email_MailingLists",
                "Email_MX",
                "Email_SpamFilter",
                "Email_UserLevelFiltering",
                "FileManager_Home",
                "Locale_Change",
                "Password_Change",
                "Site_Software",
                "Site_Software_*",
                "Stats_AWStats",
                "WHMCS_billing",
                "add_a_dns_zone",
                "add_an_a_entry_for_your_hostname",
                "add_a_new_ip_address",
                "add_a_package",
                "additional_mysql_access_hosts",
                "add_remove_recognized_ip_addresses",
                "apache_configuration",
                "apache_mod_userdir_tweak",
                "apache_status",
                "api_shell",
                "api_tokens",
                "apps_managed_by_appconfig",
                "assign_ipv6_address",
                "background_process_killer",
                "backup_configuration",
                "backup_restoration",
                "backup_system_migration",
                "backup_user_selection",
                "basic_webhost_manager_setup",
                "blocker",
                "change_account_contact_email",
                "change_hostname",
                "change_log",
                "change_multiple_sites_ip_addresses",
                "change_mysql_user_password",
                "change_ownership_of_an_account",
                "change_ownership_of_multiple_accounts",
                "change_root_password",
                "change_sites_ip_address",
                "change_webhost_manager_theme",
                "cloudlinux_lve_manager",
                "compiler_access",
                "configuration_cluster",
                "configure_application_locales",
                "configure_cpanel_analytics",
                "configure_cpanel_cron_jobs",
                "configure_postgresql",
                "configure_remote_service_ips",
                "configure_security_policies",
                "contact_manager",
                "convert_addon_domain_to_account",
                "copy_a_locale",
                "copy_an_account_from_another_server_with_an_account_password",
                "cpanel_development_forum",
                "cpanel_log_rotation_configuration",
                "cpanel_plugin_file_generator",
                "cpanel_web_disk_configuration",
                "cpanel_web_services_configuration",
                "cphulk_brute_force_protection",
                "create_a_new_account",
                "create_support_ticket",
                "customization",
                "daily_process_log",
                "database_map_tool",
                "delete_a_dns_zone",
                "delete_a_locale",
                "delete_a_package",
                "directoryindex_priority",
                "dns_cluster",
                "dns_server",
                "easyapache_4",
                "edit_a_locale",
                "edit_a_package",
                "edit_backup_mx_hosts",
                "edit_blacklisted_smtp_ips",
                "edit_dns_zone",
                "edit_mx_entry",
                "edit_only_verify_recipient_smtp_hosts",
                "edit_questions_and_answers",
                "edit_reseller_name_servers_and_privileges",
                "edit_sender_verification_bypass_ips",
                "edit_system_mail_preferences",
                "edit_trusted_smtp_ips",
                "edit_zone_templates",
                "email_all_resellers",
                "email_all_users",
                "email_deliverability",
                "enable_dkim_and_spf_globally",
                "exim_configuration_manager",
                "feature_manager",
                "file_and_directory_restoration",
                "forceful_server_reboot",
                "force_password_change",
                "ftp_server_configuration",
                "ftp_server_proftpd_pureftpd",
                "ftp_server_selection",
                "generate_an_ssl_certificate_and_signing_request",
                "global_configuration",
                "graceful_server_reboot",
                "grant_cpanel_support_access",
                "greylisting",
                "host_access_control",
                "http_server_apache",
                "ico-security-advisor",
                "imap_server",
                "include_editor",
                "initial_quota_setup",
                "install_an_rpm",
                "install_an_ssl_certificate_on_a_domain",
                "install_a_perl_module",
                "install_a_perl_module_process",
                "install_cpaddons_site_software",
                "ip_migration_wizard",
                "ipv6_ranges",
                "legacy_backup_configuration",
                "legacy_language_file_upload",
                "legacy_restore_backups",
                "legacy_restore_multiple_backups",
                "legacy_restore_multiple_backups_confirmation",
                "limit_bandwidth_usage",
                "list_accounts",
                "list_parked_domains",
                "list_subdomains",
                "list_suspended_accounts",
                "locale_editor",
                "locale_xml_download",
                "locale_xml_upload",
                "log_rotation",
                "mailbox_conversion",
                "mail_delivery_reports",
                "mailing_list_manager_mailman",
                "mail_queue_manager",
                "mailserver_configuration",
                "mail_server_exim",
                "mail_troubleshooter",
                "manage_account_suspension",
                "manage_autossl",
                "manage_compiler_group",
                "manage_cpaddons_site_software",
                "manage_custom_rbls",
                "manage_databases",
                "manage_database_users",
                "manage_demo_mode",
                "manage_external_authentication",
                "manage_external_authentication_providers",
                "manage_external_authentication_users",
                "manage_hooks",
                "manage_mysql_profiles",
                "manage_plugins",
                "manage_resellers_ip_delegation",
                "manage_resellers_shared_ip",
                "manage_roots_ssh_keys",
                "manage_services_ssl_certificates",
                "manage_shell_access",
                "manage_ssl_hosts",
                "manage_wheel_group_users",
                "market_provider_manager",
                "memory_usage_restrictions",
                "modify_an_account",
                "modify_cpanel_whm_news",
                "modify_upgrade_multiple_accounts",
                "modsecurity_configuration",
                "modsecurity_tools",
                "modsecurity_vendors",
                "module_installers",
                "multiphp_ini_editor",
                "multiphp_manager",
                "mysql_mariadb_upgrade",
                "mysql_root_password",
                "nameserver_record_report",
                "nameserver_selection",
                "non_standard_locale_configuration",
                "park_a_domain",
                "password_modification",
                "password_strength_configuration",
                "perform_a_dns_cleanup",
                "php_fpm_service_for_apache",
                "phpMyAdmin",
                "piped_log_configuration",
                "process_manager",
                "purchase_and_install_an_ssl_certificate",
                "quota_modification",
                "raw_apache_log_download",
                "raw_ftp_log_download",
                "rearrange_an_account",
                "rebuild_rpm_database",
                "rebuild_the_ip_address_pool",
                "remote_access_key",
                "repair_a_mysql_database",
                "repair_mailbox_permissions",
                "reseller_center",
                "reserved_ips_editor",
                "reset_account_bandwidth_limit",
                "reset_a_dns_zone",
                "reset_a_mailman_password",
                "reset_resellers",
                "resolver_configuration",
                "restore_a_full_backup_cpmove_file",
                "restore_modules_summary",
                "review_transfers_and_restores",
                "security_questions",
                "server_information",
                "server_profile",
                "server_time",
                "service_manager",
                "service_status",
                "setup_edit_domain_forwarding",
                "set_zone_time_to_live_ttl",
                "shell_fork_bomb_protection",
                "show_accounts_over_quota",
                "show_current_disk_usage",
                "show_current_running_processes",
                "show_edit_reserved_ips",
                "show_ip_address_usage",
                "show_mysql_processes",
                "show_or_delete_current_ip_addresses",
                "show_reseller_accounts",
                "skeleton_directory",
                "smtp_restrictions",
                "software_development_kit",
                "spamd_startup_configuration",
                "sql_server_mysql",
                "sql_server_pgsql",
                "ssh_password_authorization_tweak",
                "ssh_server_openssh",
                "ssl_storage_manager",
                "statistics_software_configuration",
                "support_center",
                "synchronize_dns_records",
                "system_update",
                "task_queue_monitor",
                "terminal",
                "terminate_accounts",
                "theme_manager",
                "tomcat_manager",
                "traceroute_enable_disable",
                "transfer_tool",
                "tweak_settings",
                "two_factor_authentication",
                "unsuspend_bandwidth_exceeders",
                "update_database_map",
                "update_database_map_process",
                "update_preferences",
                "update_server_software",
                "upgrade_downgrade_an_account",
                "upgrade_to_latest_version",
                "view_available_locales",
                "view_bandwidth_usage",
                "view_mail_statistics_summary",
                "view_relayers",
                "view_reseller_usage_and_manage_account_status",
                "view_sent_summary",
                "web_template_editor"
              ],
              "example": "Backups_Home",
              "type": "string"
            }
          },
          {
            "description": "The session's security token.",
            "in": "query",
            "name": "cp_security_token",
            "required": false,
            "schema": {
              "example": "cpsess1234567890",
              "type": "string"
            }
          },
          {
            "description": "The session's locale. This parameter defaults to the *Server Locale* setting in WHM's\n[*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/#system)\ninterface (*WHM >> Home >> Server Configuration >> Tweak Settings*).\n\n**Note:**\n\n* If you specify a locale, the server sends a cookie to your browser with\nthat locale setting. The cookie expires after one year.\n* Users can change the locale with the language options at the bottom of\nthe login interface.",
            "in": "query",
            "name": "locale",
            "required": false,
            "schema": {
              "example": "fr",
              "type": "string"
            }
          },
          {
            "description": "The hostname or IP address for the function to use in the `url`\nreturn. This parameter's value defaults to the server's hostname.",
            "in": "query",
            "name": "preferred_domain",
            "required": false,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cp_security_token": {
                          "description": "The session's security token.",
                          "example": "/cpsess1234567890",
                          "type": "string"
                        },
                        "expires": {
                          "description": "When the security token expires, in Unix time format.",
                          "example": 1401993893,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "service": {
                          "description": "The security token's service.",
                          "example": "cpaneld",
                          "type": "string"
                        },
                        "session": {
                          "description": "The session ID.\n\n**Note:**\n\nIf the `app` parameter contains a valid application, the URL **also**\ncontains the application information.",
                          "example": "username:RFw6MUp9S8sRwTSgqaUJWUCq8ZQg2Zkopx5KaTHRNQXBfT3n8xvfBEF9JJC3iiwa",
                          "type": "string"
                        },
                        "url": {
                          "description": "The security token's URL. The URL contains the values of\nthe `preferred_domain`, `session`, and `app` parameters.",
                          "example": "https://example.com:2083/cpsess1234567890/login/?session=username:RFw6MUp9S8sRwTSgqaUJWUCq8ZQg2Zkopx5KaTHRNQXBfT3n8xvfBEF9JJC3iiwa&locale=fr",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "create_user_session",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Created session",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create a temporary user session",
        "tags": [
          "Server Administration",
          "Session"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 create_user_session user='user@example.com' service='cpaneld'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/create_user_session?api.version=1&user=user%40example.com&service=cpaneld"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/createacct": {
      "get": {
        "description": "This function creates a cPanel account and sets up its domain information.\n\n**Note:**\n\n* On servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource records on DNS.\n* This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.\n* Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).",
        "operationId": "createacct",
        "parameters": [
          {
            "description": "The account's main domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The new account's username. cPanel usernames **must** adhere to the following criteria:\n* The first eight characters of a username **must** be unique.\n* A username **cannot** begin with a number or the test string.\n\n**Note:**\n\n* Use the `Cpanel::Validate::Username` Perl module to validate usernames before you call this function. For more information, read the `/usr/local/cpanel/Cpanel/Validate/Username.pod` file.\n* The system will automatically convert this value to all lowercase letters.\n* MySQL's unique character limitations do **not** exist on servers that use MariaDB.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "description": "The account's maximum bandwidth.\n* `0`, `unlimited`, or `null` — The account possesses unlimited bandwidth.",
            "in": "query",
            "name": "bwlimit",
            "required": false,
            "schema": {
              "example": "unlimited",
              "format": "megabytes",
              "nullable": true,
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "Whether the account has [Common Gateway Interface (CGI)](https://en.wikipedia.org/wiki/Common_Gateway_Interface) access enabled.\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Note:**\n\n When a [server profile](https://docs.cpanel.net/whm/server-configuration/server-profile/) disables the [Web Server](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/86/) role, this parameter defaults to `0`. On these servers, you **cannot** enable CGI access.",
            "in": "query",
            "name": "cgi",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The account's contact email address.",
            "in": "query",
            "name": "contactemail",
            "required": false,
            "schema": {
              "default": "",
              "example": "username@example.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "The account's cPanel theme.\n\n**Note:**\n\nThis parameter defaults to the server's [default cPanel theme](https://docs.cpanel.net/whm/server-configuration/basic-webhost-manager-setup/).",
            "in": "query",
            "name": "cpmod",
            "required": false,
            "schema": {
              "example": "paper_lantern",
              "type": "string"
            }
          },
          {
            "description": "The account's IP address.\n\n**Note:**\n\nIf you do not specify this parameter, the system will determine the account's IP address.",
            "in": "query",
            "name": "customip",
            "required": false,
            "schema": {
              "example": "192.0.2.0",
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "Whether [DomainKeys Identified Mail (DKIM)](https://en.wikipedia.org/wiki/DomainKeys_Identified_Mail) is enabled for the account.\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Note:**\n\nThis parameter defaults to the *Enable DKIM on domains for newly created accounts* setting's value in WHM's *[Tweak Settings](https://docs.cpanel.net/whm/server-configuration/tweak-settings/) interface (WHM >> Home >> System Configuration >> Tweak Settings)*.",
            "in": "query",
            "name": "dkim",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The account's assigned feature list.",
            "in": "query",
            "name": "featurelist",
            "required": false,
            "schema": {
              "default": "default",
              "example": "feature_list",
              "type": "string"
            }
          },
          {
            "description": "Whether to overwrite an existing DNS zone with the new account's information. The system performs this action if a matching DNS zone currently exists.\n* `1` — Overwrite.\n* `0` — Do **not** overwrite.",
            "in": "query",
            "name": "forcedns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "deprecated": true,
            "description": "Whether the account has Microsoft® FrontPage Extensions enabled.\n\n**Note:**\n\n cPanel & WHM ignores all FrontPage settings and parameters.",
            "in": "query",
            "name": "frontpage",
            "required": false,
            "schema": {
              "default": null,
              "nullable": true,
              "type": "integer"
            }
          },
          {
            "description": "The account's group ID.\n\n**Note:**\n\n* To use this parameter, the function's caller **must** authenticate as the root user.\n* If you do **not** specify this parameter, the system generates a group ID.\n* This **must** be a unique value that is **not** currently associated with disk usage and does **not** exist on the server.",
            "in": "query",
            "name": "gid",
            "required": false,
            "schema": {
              "example": 123456789,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the account has shell (SSH) access enabled.\n* `1` — Enabled.\n* `0` — Disabled.",
            "in": "query",
            "name": "hasshell",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "A legacy parameter.\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Important:**\n\n Only include this parameter if you set a useregns value of 1.",
            "in": "query",
            "name": "hasuseregns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The absolute path to the account's `home` directory.\n\n**Note:**\n\n* To use this parameter, the function's caller **must** authenticate as the `root` user.\n* If you do not specify a value, the system uses the `/home/user` directory, where `user` is the account's username.",
            "in": "query",
            "name": "homedir",
            "required": false,
            "schema": {
              "example": "/home/user",
              "type": "string"
            }
          },
          {
            "description": "Whether the account has a dedicated IP address.\n* `y` — The account possesses a dedicated IP address.\n* `n` — The account does **not** possess a dedicated IP address.",
            "in": "query",
            "name": "ip",
            "required": false,
            "schema": {
              "default": "n",
              "enum": [
                "y",
                "n"
              ],
              "example": "n",
              "type": "string"
            }
          },
          {
            "description": "The account's default locale.\n\n**Note:**\n\n* This value is case-sensitive.\n* For region-specific locales, use the ISO 639-1 code, an underscore (`_`), and the [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) code.",
            "in": "query",
            "name": "language",
            "required": false,
            "schema": {
              "example": "en",
              "type": "string"
            }
          },
          {
            "description": "A [linked cPanel mail server](https://docs.cpanel.net/whm/server-configuration/link-server-nodes/) on which to also create the account. This is the server's alias (friendly name) defined when creating the link to a cPanel mail server.\n\n**Note:**\n\n This function **requires** a linked cPanel mail server.",
            "in": "query",
            "name": "mail_node_alias",
            "required": false,
            "schema": {
              "example": "mailnode",
              "type": "string"
            }
          },
          {
            "description": "A mailbox format to use, if you do not wish to use the system's default mailbox format.\n\n**Note:**\n\n* Use this parameter when you transfer between servers with different mailbox formats.\n* This parameter defaults to the *The mailbox storage format for new accounts setting* in the *Mail* section of WHM's [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/#mail) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).",
            "in": "query",
            "name": "mailbox_format",
            "required": false,
            "schema": {
              "enum": [
                "mdbox",
                "maildir"
              ],
              "example": "mdbox",
              "type": "string"
            }
          },
          {
            "description": "The percentage of failed or deferred email messages that the account can send per hour. If the account exceeds this value its outgoing mail is rate-limited.\n* `0` or `unlimited` — The account can send an unlimited number of failed or deferred messages.",
            "in": "query",
            "name": "max_defer_fail_percentage",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The maximum number of emails that the account can send in one hour.\n* `0` or `unlimited` — The account can send an unlimited number of emails.",
            "in": "query",
            "name": "max_email_per_hour",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The maximum size that the account can define when it creates an email account.\n* `0` or `unlimited` — The account possesses an unlimited quota.\n\n**Important:**\n\n * This value applies to each email account, **not** each cPanel account.\n * If you define this parameter it overwrites the hosting plan's defined value for the account.\n * We recommend that you allow the account's plan to determine this value.",
            "in": "query",
            "name": "max_emailacct_quota",
            "schema": {
              "default": 1024,
              "example": 1024,
              "format": "megabytes",
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "maximum": 4294967296,
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The account's maximum number of addon domains.\n* `unlimited`, or `null` — The account possesses unlimited addon domains.",
            "in": "query",
            "name": "maxaddon",
            "required": false,
            "schema": {
              "default": 0,
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The account's maximum number of FTP accounts.\n* `0`, `unlimited`, or `null` — The account possesses unlimited FTP accounts.",
            "in": "query",
            "name": "maxftp",
            "required": false,
            "schema": {
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The account's maximum number of mailing lists.\n* `0`, `unlimited`, or `null` — The account possesses unlimited mailing lists.",
            "in": "query",
            "name": "maxlst",
            "required": false,
            "schema": {
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The account's maximum number of parked domains (aliases).\n* `unlimited` or `null` — The account possesses unlimited parked domains.",
            "in": "query",
            "name": "maxpark",
            "required": false,
            "schema": {
              "default": 0,
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The account's maximum number of email accounts.\n* `0`, `unlimited`, or `null` — The account possesses unlimited email accounts.",
            "in": "query",
            "name": "maxpop",
            "required": false,
            "schema": {
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The account's maximum number of each available type of SQL database.\nFor example, this parameter has a `5` value and the system administrator allows\nMySQL® and PostgreSQL® databases. Users can create up to five MySQL databases\nand up to five PostgreSQL databases.\n* `0`, `unlimited`, or `null` — The account possesses unlimited databases.",
            "in": "query",
            "name": "maxsql",
            "required": false,
            "schema": {
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The account's maximum number of subdomains.\n`unlimited` or `null` — The account possesses unlimited subdomains.",
            "in": "query",
            "name": "maxsub",
            "required": false,
            "schema": {
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The account's main mail exchanger's type.\n* `local` - Local Mail Exchanger.\n* `secondary` - Backup Mail Exchanger.\n* `remote` - Remote Mail Exchanger.\n* `auto` - Automatically Detect Configuration.\n\n**Note:**\n\n The function does **not** configure the primary MX entry to point to the appropriate exchanger. You must [perform this function separately](https://docs.cpanel.net/whm/dns-functions/edit-mx-entry/).",
            "in": "query",
            "name": "mxcheck",
            "required": false,
            "schema": {
              "default": "local",
              "enum": [
                "local",
                "secondary",
                "remote",
                "auto"
              ],
              "example": "auto",
              "type": "string"
            }
          },
          {
            "description": "The name of the account owner.\n* `root`\n*  A valid reseller account username on the server.",
            "in": "query",
            "name": "owner",
            "required": false,
            "schema": {
              "example": "root",
              "type": "string"
            }
          },
          {
            "description": "The account's password.\n\n**Note:**\n\n * You can use either the `pass` or the `password` parameter, but **not** both.\n * If you don't specify this value, the system generates a secure password.",
            "in": "query",
            "name": "pass",
            "required": false,
            "schema": {
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "The account's password.\n\n**Note:**\n\n * You can use **either** the `pass` or the `password` parameter, but **not** both.\n * If you don't specify this value, the system generates a secure password.",
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "A new plan name. Use this parameter to save unique account settings as a new plan.\n\n**Note:**\n\n * If you do **not** use this parameter but specify `1` for the `savepkg` value, the system will generate a plan name.\n * If you do **not** use this parameter and specify `0` or do not use the `savepkg` parameter, the function does not save a new plan.\n * If you do **not** use this parameter, the function will not save the new account settings.",
            "in": "query",
            "name": "pkgname",
            "required": false,
            "schema": {
              "example": "my_new_package",
              "type": "string"
            }
          },
          {
            "description": "The account's hosting plan (package).\n\n**Important:**\n\n If you provide this value, **do not** use the optional quota-related parameters below. Instead, we recommend that you allow the account's plan to determine these values.",
            "in": "query",
            "name": "plan",
            "required": false,
            "schema": {
              "default": "default",
              "example": "default",
              "type": "string"
            }
          },
          {
            "description": "The account's disk space quota.\n* `0` — The account's disk space is unlimited.",
            "in": "query",
            "name": "quota",
            "required": false,
            "schema": {
              "default": 0,
              "example": 500,
              "format": "megabytes",
              "maximum": 999999,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to grant reseller privileges to the account.\n* `1` — Grant reseller privileges.\n* `0` — Do **not** grant reseller privileges.",
            "in": "query",
            "name": "reseller",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to save the account's settings as a new plan.\n* `1` — Save.\n* `0` — Do **not** save.",
            "in": "query",
            "name": "savepkg",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the account has Apache SpamAssassin™ enabled.\n* `1` — Enabled.\n* `0` — Disabled.",
            "in": "query",
            "name": "spamassassin",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to enable spam box filtering for the account.\n* `y` - Enable spam box filtering.\n* `n` - Disable spam box filtering.\n**Note:**\n\n You **must** enable Apache SpamAssassin™ to use the Spam Box feature.",
            "in": "query",
            "name": "spambox",
            "required": false,
            "schema": {
              "default": "y",
              "enum": [
                "y",
                "n"
              ],
              "example": "y",
              "type": "string"
            }
          },
          {
            "description": "Whether [Sender Policy Framework (SPF)](https://en.wikipedia.org/wiki/Sender_Policy_Framework) is enabled for the account.\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the *Enable SPF on domains for newly created accounts*\nsetting's value in WHM's [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/) interface (*WHM >> Home >> System Configuration >> Tweak Settings*).",
            "in": "query",
            "name": "spf",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The account's user ID.\n\n**Note:**\n\n * To use this parameter, the function's caller **must** authenticate as the `root` user.\n * If you do not specify this parameter, the system generates a user ID.\n * This **must** be a unique value that is **not** currently associated with disk usage and does **not** exist on the server.",
            "in": "query",
            "name": "uid",
            "required": false,
            "schema": {
              "example": 123456789,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to use registered nameservers for the domain.\n* `1` - Use registered nameservers.\n* `0` - Use the server's default nameservers.\n\n**Important:**\n\n If you set this parameter to `1`, you must also include the `hasuseregns` parameter with a value of `1`.",
            "in": "query",
            "name": "useregns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ip": {
                          "description": "The account's primary nameserver's IP address.",
                          "example": "192.0.2.0",
                          "format": "ipv4",
                          "type": "string"
                        },
                        "nameserver": {
                          "description": "The account's primary nameserver.",
                          "example": "ns1.example.com",
                          "type": "string"
                        },
                        "nameserver2": {
                          "description": "The account's secondary nameserver.",
                          "example": "ns2.example.com",
                          "type": "string"
                        },
                        "nameserver3": {
                          "description": "The account's tertiary nameserver.",
                          "example": "ns3.example.com",
                          "type": "string"
                        },
                        "nameserver4": {
                          "description": "The account's quaternary nameserver.",
                          "example": "ns4.example.com",
                          "type": "string"
                        },
                        "nameservera": {
                          "description": "The account's primary nameservers' IP address.",
                          "example": "192.0.2.1",
                          "format": "ipv4",
                          "nullable": true,
                          "type": "string"
                        },
                        "nameservera2": {
                          "description": "The account's secondary nameservers' IP address.",
                          "example": "192.0.2.2",
                          "format": "ipv4",
                          "nullable": true,
                          "type": "string"
                        },
                        "nameservera3": {
                          "description": "The account's tertiary nameservers' IP address.",
                          "example": "192.0.2.3",
                          "format": "ipv4",
                          "nullable": true,
                          "type": "string"
                        },
                        "nameservera4": {
                          "description": "The account's quaternary nameservers' IP address.",
                          "example": "192.0.2.4",
                          "format": "ipv4",
                          "nullable": true,
                          "type": "string"
                        },
                        "nameserverentry": {
                          "description": "The primary nameserver's DNS name.",
                          "example": "dnsentry1",
                          "nullable": true,
                          "type": "string"
                        },
                        "nameserverentry2": {
                          "description": "The secondary nameserver's DNS name.",
                          "example": "dnsentry2",
                          "nullable": true,
                          "type": "string"
                        },
                        "nameserverentry3": {
                          "description": "The tertiary nameserver's DNS name.",
                          "example": "dnsentry3",
                          "nullable": true,
                          "type": "string"
                        },
                        "nameserverentry4": {
                          "description": "The quaternary nameserver's DNS name.",
                          "example": "dnsentry4",
                          "nullable": true,
                          "type": "string"
                        },
                        "package": {
                          "description": "The account's plan (package) name.",
                          "example": "my_new_package",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "createacct",
                          "type": "string"
                        },
                        "output": {
                          "description": "An object that contains the function's raw output information.",
                          "properties": {
                            "raw": {
                              "description": "The raw output from the account creation operation. This return may contain HTML code.",
                              "example": "Checking input data...Forced Dns is enabled.\\nValidating Username......Done\\nValidating IP......Done\\nValidating Contact Email......Done\\n...Done\\nValidating system setup......Done\\nChecking for database conflicts......Done\\nWWWAcct 12.6.0 (c) 2020 cPanel, L.L.C...\\n\\n+===================================+\\n| New Account Info |\\n+===================================+\\n| Domain: example.com\\n| Ip: 192.0.2.0 (n)\\n| HasCgi: y\\n| UserName: username\\n| PassWord: 123456luggage\\n| CpanelMod: paper_lantern\\n| HomeRoot: /home\\n| Quota: 1 GB\\n| NameServer1: ns1.example.com\\n| NameServer2: ns2.example.com\\n| NameServer3:\\n| NameServer4:\\n| Contact Email: username@example.com\\n| Package: my_new_package\\n| Feature List: feature_list\\n| Language: en\\n+===================================+\\n...Done\\nCustom Account Data Provided: no\\nRunning pre creation script (/usr/local/cpanel/scripts/prewwwacct)......Done\\nAdding User...Removing Shell Access (n)\\nSuccess...Done\\nAdding Entries to userdata......Done\\nSetting up Mail & Local Domains...localdomains...valiases ...vdomainaliases ...vfilters ......Done\\nConfiguring DNS...Zone example.com has been successfully added\\n...Done\\nVerifying MX Records and Setting up Databases...Reconfiguring Mail Routing:\\nLOCAL MAIL EXCHANGER: This server will serve as a primary mail exchanger for example.com's mail.:\\n This configuration has been automatically detected based on your mx entries.\\n\\n...Done\\nSetting up Service Subdomains......Done\\nUpdating Authentication Databases......Done\\nSetting passwords......Done\\nUpdating the userdata cache......Done\\nSetting up Horde database in the background.......Done\\nCreating bandwidth datastore......Done\\nUpdating the dedicated IP address usage cache......Done\\nGenerating and installing DKIM keys......Done\\nEnabling Apache SpamAssassin......Done\\nEnabling Apache SpamAssassin Spam Box......Done\\nSending Account Information......Done\\nRunning post creation scripts (/usr/local/cpanel/scripts/legacypostwwwacct, /usr/local/cpanel/scripts/postwwwacct, /usr/local/cpanel/scripts/postwwwacctuser)......Done\\nwwwacct creation finished\\nAccount Creation Complete!!!...Account Creation Ok...Done\\n",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Account Creation Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create cPanel account",
        "tags": [
          "Accounts",
          "Account Creation"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 createacct username='username' domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/createacct?api.version=1&username=username&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/current_mysql_version": {
      "get": {
        "description": "This function retrieves the server's version of MySQL® or MariaDB®.\n\n**Important:**\n\n  When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles) **and** remote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "current_mysql_version",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "server": {
                          "default": "mysql",
                          "description": "The server's database engine.\n* `mysql`\n* `mariadb`",
                          "enum": [
                            "mysql",
                            "mariadb"
                          ],
                          "example": "mysql",
                          "type": "string"
                        },
                        "version": {
                          "description": "The version number, in `major`.`minor` format.",
                          "example": "8.0",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "current_mysql_version",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return MySQL version",
        "tags": [
          "Databases",
          "Manage MySQL Server"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 current_mysql_version"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/current_mysql_version?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "cPanel 11.48"
      }
    },
    "/deactivate_zone_key": {
      "get": {
        "description": "This function deactivates a domain's DNSSEC security key.\n\n**Note:**\n\nOnly servers that run PowerDNS can use DNSSEC. If you call this function on a server\nthat doesn't use PowerDNS, you will receive an error.",
        "operationId": "deactivate_zone_key",
        "parameters": [
          {
            "description": "The domain for which to deactivate a security key.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The security key's ID.\n\n**Note:**\n\nUse the WHM AP1 `fetch_ds_records_for_domains` function to locate the\ndomain's security key ID.",
            "in": "query",
            "name": "key_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "deactivate_zone_key",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable domain's DNSSEC key",
        "tags": [
          "DNS",
          "DNS Security"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 deactivate_zone_key domain='example.com' key_id='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/deactivate_zone_key?api.version=1&domain=example.com&key_id=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/delete_account_archives": {
      "get": {
        "description": "This function removes a cPanel user account's archives.",
        "operationId": "delete_account_archives",
        "parameters": [
          {
            "description": "The cPanel account username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The filepath to the archive storage location.",
            "in": "query",
            "name": "mountpoint",
            "required": false,
            "schema": {
              "default": "/home",
              "example": "/home/example/",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delete_account_archives",
                          "type": "string"
                        },
                        "output": {
                          "properties": {
                            "messages": {
                              "description": "An array of status messages.",
                              "items": {
                                "example": "Found archive: /home/example/example.tar.gz",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "warnings": {
                              "description": "An array of warning messages.",
                              "items": {
                                "example": "This is a warning message.",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove cPanel account's archives",
        "tags": [
          "Transfers",
          "Transfer Configuration"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delete_account_archives user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delete_account_archives?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "70"
      }
    },
    "/delete_configclusterserver": {
      "get": {
        "description": "This function removes a server from a configuration cluster. The function's return\ndata appears in the `metadata` section of its output.\n\n**Important:**\n\nIf you log in to a configuration cluster server that is **not** the parent server,\n**nothing** will indicate that the server is part of a configuration cluster. You can\n**only** view and modify this information from the parent server.",
        "operationId": "delete_configclusterserver",
        "parameters": [
          {
            "description": "The hostname or IP address of a remote configuration cluster server.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delete_configclusterserver",
                          "type": "string"
                        },
                        "name": {
                          "description": "The remote configuration cluster server's name.",
                          "example": "example.com",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete server from configuration cluster",
        "tags": [
          "Server Administration",
          "Configuration Clusters"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delete_configclusterserver name='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delete_configclusterserver?api.version=1&name=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/delete_cpgreylist_trusted_host": {
      "get": {
        "description": "This function deletes an IP address from the Greylisting _Trusted Hosts_ list.",
        "operationId": "delete_cpgreylist_trusted_host",
        "parameters": [
          {
            "description": "The record's IP address, or a range of IP addresses.\n\n**Note:**\n\nTo add multiple IP addresses, increment the parameter name (for example, `ip-1`, `ip-2`, `ip-3`).",
            "examples": {
              "cidr-ipv4": {
                "summary": "CIDR Format IPv4",
                "value": "192.168.0.1/16"
              },
              "cidr-ipv6": {
                "summary": "CIDR Format IPv6",
                "value": "2001:db8::/32"
              },
              "multiple": {
                "description": "Multiple IP addresses.",
                "value": "ip-1=192.168.0.1&ip-2=192.168.0.2&ip-3=192.168.0.3"
              },
              "single": {
                "description": "A single IP address.",
                "value": "192.168.0.1"
              },
              "single-ipv4": {
                "summary": "Single IPv4 Address",
                "value": "192.0.2.0"
              },
              "single-ipv6": {
                "summary": "Single IPv6 Address",
                "value": "2001:db8::1"
              }
            },
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "example": "192.168.0.1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ips_failed": {
                          "additionalProperties": {
                            "description": "A failed IP address and the error message.",
                            "type": "string"
                          },
                          "description": "An object that contains the IP addresses that the function failed to remove from the _Trusted Hosts_ list.",
                          "example": {
                            "5.5": "Invalid IP address or range: “5.5”"
                          },
                          "type": "object"
                        },
                        "ips_removed": {
                          "description": "An array of IP addresses that the function removed from the _Trusted Hosts_ list.",
                          "example": [
                            "192.168.0.1",
                            "2001:db8::1"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delete_cpgreylist_trusted_host",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove IP address from Greylisting trusted hosts",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delete_cpgreylist_trusted_host ip='192.168.0.1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delete_cpgreylist_trusted_host?api.version=1&ip=192.168.0.1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/delete_cphulk_record": {
      "get": {
        "description": "This function deletes a record or records from cPHulk's whitelist or blacklist.",
        "operationId": "delete_cphulk_record",
        "parameters": [
          {
            "description": "The record's IP address.\n\n**Note:**\n\n To delete multiple IP addresses, increment the parameter name. For example, `ip-1`, `ip-2`, `ip-3`.",
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "example": "192.168.0.1",
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "The cPHulk list's name.\n\n* `white`\n* `black`",
            "in": "query",
            "name": "list_name",
            "required": true,
            "schema": {
              "enum": [
                "white",
                "black"
              ],
              "example": "white",
              "type": "string"
            }
          },
          {
            "description": "Whether to skip checking if cPHulk runs on the server.\n\n* `1` - Don’t check cPHulk’s status.\n* `0` - Check cPHulk’s status.\n\n**Note:**\n\n If cPHulk is disabled and you check its status, the function returns the following message:\n`cPHulk is disabled on the server`.",
            "in": "query",
            "name": "skip_enabled_check",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ips_failed": {
                          "additionalProperties": {
                            "description": "The reason why the system failed to add the IP address to the list.\n\n**Note:**\n\n The IP address is the property name.",
                            "example": "Invalid IP address or range \"192.68.0.1\"",
                            "type": "string"
                          },
                          "description": "Information about IP addresses that the system failed to add to the list.",
                          "example": {
                            "192.168.0.1": "This is why, alpha.",
                            "192.168.9.1": "This is why, beta."
                          },
                          "type": "object"
                        },
                        "ips_removed": {
                          "description": "The IP addresses that the function removed from the list.",
                          "items": {
                            "example": "192.168.0.1",
                            "format": "ipv4",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "list_name": {
                          "description": "The cPHulk list's name.\n* `black`\n* `white`",
                          "enum": [
                            "black",
                            "white"
                          ],
                          "example": "white",
                          "type": "string"
                        },
                        "requester_ip": {
                          "description": "The requester's IP address.",
                          "example": "192.168.0.1",
                          "format": "ipv4",
                          "type": "string"
                        },
                        "requester_ip_is_whitelisted": {
                          "description": "Whether the requester's IP address exists on cPHulk's whitelist.\n* `1` - Whitelisted.\n* `0` - **Not** whitelisted.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delete_cphulk_record",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove login security record from list",
        "tags": [
          "cPHulk",
          "Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delete_cphulk_record list_name='white' ip='192.168.0.1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delete_cphulk_record?api.version=1&list_name=white&ip=192.168.0.1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/delete_domain": {
      "get": {
        "description": "This function deletes a domain.\n\n**Note:**\n\nThis function does **not** remove an addon domain's associated subdomain. You **must** also run this function for the associated subdomain.",
        "operationId": "delete_domain",
        "parameters": [
          {
            "description": "The name of the domain to delete.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "type": {
                          "description": "The type of domain that the function deleted.\n* `addon` — An addon domain.\n* `parked` — A parked (alias) domain.\n* `sub` — A subdomain.\n* `null` — The domain does not exist on the server.",
                          "enum": [
                            "addon",
                            "parked",
                            "sub"
                          ],
                          "example": "addon",
                          "nullable": true,
                          "type": "string"
                        },
                        "username": {
                          "description": "The cPanel user that owned the domain.\n* A cPanel account username.\n* `null` — The function did **not** find a cPanel account that owns the given domain.",
                          "example": "username",
                          "format": "domain",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delete_domain",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete domain",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delete_domain domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delete_domain?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/delete_featurelist": {
      "get": {
        "description": "This function deletes a feature list.",
        "operationId": "delete_featurelist",
        "parameters": [
          {
            "description": "The feature list's name.",
            "in": "query",
            "name": "featurelist",
            "required": true,
            "schema": {
              "example": "TestList",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "deleted_featurelist": {
                          "description": "The deleted feature list's name.",
                          "example": "TestList",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delete_featurelist",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete feature list",
        "tags": [
          "Packages",
          "Feature Lists"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delete_featurelist featurelist='TestList'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delete_featurelist?api.version=1&featurelist=TestList"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/delete_hook": {
      "get": {
        "description": "This function removes a script hook.",
        "operationId": "delete_hook",
        "parameters": [
          {
            "description": "The script hook's ID.\n\n**Note:**\n\nTo retrieve a hook's ID, use the WHM API 1 `list_hooks` function.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": "HzEpGvT6QGUYwxuX3hWB8AUq",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delete_hook",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete script hook",
        "tags": [
          "Script Hooks",
          "Scripts Hooks"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delete_hook id='HzEpGvT6QGUYwxuX3hWB8AUq'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delete_hook?api.version=1&id=HzEpGvT6QGUYwxuX3hWB8AUq"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/delete_rpm_version": {
      "get": {
        "description": "This function removes RPM data. When you call this function, it performs the same\nactions as the following command:\n\n`/usr/local/cpanel/scripts/update_local_rpm_versions --del section.key value`\n\nFor more information, read our\n[rpm.versions system](https://docs.cpanel.net/knowledge-base/rpm-versions/introduction-to-the-rpm-versions-system/)\ndocumentation.\n\n**Note:**\n\nAfter you call this function, we **strongly** recommend that you run the\n`/usr/local/cpanel/scripts/check_cpanel_rpms` script.",
        "operationId": "delete_rpm_version",
        "parameters": [
          {
            "description": "The [RPM's target](https://docs.cpanel.net/knowledge-base/rpm-versions/rpm-targets/).",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "3rdparty",
              "type": "string"
            }
          },
          {
            "description": "The RPM's section within the `rpm.versions` file.",
            "in": "query",
            "name": "section",
            "required": true,
            "schema": {
              "example": "rpm_groups",
              "type": "string"
            }
          },
          {
            "description": "The RPM name.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "example": "cpanel-pcre",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "status": {
                          "description": "Whether the function was successful.\n\n* `1` — Success.\n* `0` — Failure.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delete_rpm_version",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove rpm.versions system configuration",
        "tags": [
          "RPM",
          "Package Manager Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delete_rpm_version section='rpm_groups' key='3rdparty' value='cpanel-pcre'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delete_rpm_version?api.version=1&section=rpm_groups&key=3rdparty&value=cpanel-pcre"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/delete_ssl_vhost": {
      "get": {
        "description": "This function deletes the SSL virtual host.",
        "operationId": "delete_ssl_vhost",
        "parameters": [
          {
            "description": "The hostname whose SSL virtual host you'd like to delete.",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "output": {
                          "description": "Shows the status of the deletion.",
                          "example": [
                            "Deleting the SSL host for example.com",
                            "Done."
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "removed_vhost_data": {
                          "description": "The virtual host data that the script removed.",
                          "items": {
                            "properties": {
                              "ip_port": {
                                "description": "The IP address where the virtual host data resided and its port number.",
                                "example": [
                                  "192.0.2.0",
                                  "443"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "is_ssl": {
                                "description": "Whether the virtual host was SSL.\n* `1` — The host was SSL.\n- `0` — The host was **not** SSL.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "primary_on_ip_port": {
                                "description": "The domain name that the removed virtual host used.",
                                "example": "example.net",
                                "format": "domain",
                                "type": "string"
                              },
                              "servername": {
                                "description": "The name of the deleted domain.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "vhost_entry": {
                                "description": "The output text.",
                                "example": "<VirtualHost 192.0.2.0 :443>\nServerName example.com\nServerAlias [...]\n",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delete_ssl_vhost",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete SSL vhost",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delete_ssl_vhost host='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delete_ssl_vhost?api.version=1&host=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "82"
      }
    },
    "/deletesshkey": {
      "get": {
        "description": "This function function deletes an SSH key from the server.\n\n**Warning:**\n\nOnly the `root` account can use this function, and it only affects\nthe `root` keys. To perform this function on a cPanel user account, call the\ncPanel API 2 `SSH::authkey` function through the WHM API.",
        "operationId": "deletesshkey",
        "parameters": [
          {
            "description": "The SSH key file's name.",
            "in": "query",
            "name": "file",
            "required": true,
            "schema": {
              "example": "/root/.ssh/test",
              "type": "string"
            }
          },
          {
            "description": "Whether to authorize the SSH key to access the server.\n\n* `1` — Leave authorized.\n* `0` — Do **not** leave authorized.",
            "in": "query",
            "name": "leave_authorized",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The SSH key's username.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "deprecated": true,
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "file": {
                          "description": "The SSH key file's name.",
                          "example": "/root/.ssh/test",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "deletesshkey",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete SSH key",
        "tags": [
          "Security",
          "SSH Keys and Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 deletesshkey file='/root/.ssh/test'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/deletesshkey?api.version=1&file=%2froot%2f.ssh%2ftest"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/delip": {
      "get": {
        "description": "This function removes an IP address from the server.",
        "operationId": "delip",
        "parameters": [
          {
            "description": "The IPv4 address.",
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "example": "10.1.1.1",
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "The network alias to which the IPv4 address is bound.",
            "in": "query",
            "name": "ethernetdev",
            "required": false,
            "schema": {
              "default": "",
              "example": "eth0",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Whether to remove the IP address if the ethernet interface is down.\n* `1` — Do **not** remove the IP address.\n* `0` — Remove the IP address.",
            "in": "query",
            "name": "skipifshutdown",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delip",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "eth0:cp2 is now down, 10.1.1.1 has been removed",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove IP address",
        "tags": [
          "IP Addresses",
          "IPv4 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delip ip='10.1.1.1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delip?api.version=1&ip=10.1.1.1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/delpkgext": {
      "get": {
        "description": "This function deletes a package extension from a hosting plan (package).\n\n**Note:**\n\n* You can additionally include extension's variables in your function call, in `key=value` format.\n  Consult the extension's documentation for a list of possible variables. Extension variable names are case-sensitive.",
        "operationId": "delpkgext",
        "parameters": [
          {
            "description": "The space delimited\n[package extensions](https://documentation.cpanel.net/display/DD/Guide+to+Package+Extensions)\nto delete.\n\n**Note:**\n\n* Extension names are case-sensitive.",
            "explode": true,
            "in": "query",
            "name": "_DELETE_EXTENSIONS",
            "required": true,
            "schema": {
              "example": "extension1 extension2",
              "type": "string"
            },
            "style": "spaceDelimited"
          },
          {
            "description": "The hosting plan's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "package1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pkg": {
                          "description": "The deleted hosting plan's name.",
                          "example": "package1",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "delpkgext",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove hosting plan extension",
        "tags": [
          "Packages",
          "Hosting Plan Extensions"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 delpkgext name='package1' _DELETE_EXTENSIONS='extension1 extension2'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/delpkgext?api.version=1&name=package1&_DELETE_EXTENSIONS=extension1%20extension2"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/disable_authentication_provider": {
      "get": {
        "description": "This function disables a external authentication identity provider for a specified service.",
        "operationId": "disable_authentication_provider",
        "parameters": [
          {
            "description": "A valid identity provider's identification key.",
            "in": "query",
            "name": "provider_id",
            "required": true,
            "schema": {
              "example": "cpanelid",
              "type": "string"
            }
          },
          {
            "description": "The cPanel & WHM service's name:\n\n* `cpaneld`\n* `webmaild`\n* `whostmgrd`",
            "in": "query",
            "name": "service_name",
            "required": true,
            "schema": {
              "enum": [
                "cpaneld",
                "webmaild",
                "whostmgrd"
              ],
              "example": "cpaneld",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "disable_authentication_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable identity provider",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 disable_authentication_provider service_name='cpaneld' provider_id='cpanelid'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/disable_authentication_provider?api.version=1&service_name=cpaneld&provider_id=cpanelid"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/disable_autossl": {
      "get": {
        "description": "This function disables the AutoSSL feature.",
        "operationId": "disable_autossl",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "disable_autossl",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable AutoSSL",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 disable_autossl"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/disable_autossl?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/disable_cpgreylist": {
      "get": {
        "description": "This function disables Greylisting.",
        "operationId": "disable_cpgreylist",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "disable_cpgreylist",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable Greylisting",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 disable_cpgreylist"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/disable_cpgreylist?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/disable_cphulk": {
      "get": {
        "description": "This function disables the cPHulk service.",
        "operationId": "disable_cphulk",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "disable_cphulk",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable login security",
        "tags": [
          "cPHulk",
          "Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 disable_cphulk"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/disable_cphulk?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/disable_dkim": {
      "get": {
        "description": "This function removes the DomainKeys Identified Mail (DKIM) records on the DNS server for one or more domains.",
        "operationId": "disable_dkim",
        "parameters": [
          {
            "description": "The domain for which to remove DKIM records on the DNS server.\n\n**Note:**\n\n To remove multiple domain DKIM records, duplicate the parameter name. For example, use the `domain=example-1.com`, `domain=example-2.com`, and `domain=example-3.com` parameters.",
            "examples": {
              "multiple": {
                "summary": "To remove multiple domain DKIM records",
                "value": "domain=example-1.com domain=example-2.com domain=example-3.com"
              },
              "single": {
                "summary": "To remove a single domain DKIM record",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contains information about the removal of a domain's DKIM record on the DNS server.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The domain for which the system removed the DKIM record.",
                                "example": "example.com",
                                "type": "string"
                              },
                              "msg": {
                                "description": "Information about the removed DKIM record.",
                                "example": "[REMOVE:TXT@default._domainkey:v=DKIM1; k=rsa; p=MIGfMAOGCSqGSIb3DQEBAQUAA4GNADCBiLMNOpQDw5nw4NP1RsWXlfmiMzByDfOT16QCZO/xJtrPZKskZF8/sU0zWGTqKUOErlyJfoJzMDUv3/zzjGswc2nEmYqxxoQZaBkN4QaS6MvJQxysAr+sK8C248/r9zMperQdhJedUVejtpFQHJwgqpHy1tQMxY37L7sQjdxmQ5WnQ1acXiwIDAQAB;]",
                                "type": "string"
                              },
                              "status": {
                                "description": "Whether the system removed the domain's DKIM record on the DNS server.\n- `1`  — The system removed the domain's DKIM record.\n- `0`  — The system did *not* remove the domain's DKIM record.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "disable_dkim",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable domain's DKIM records",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 disable_dkim domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/disable_dkim?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/disable_dnssec_for_domains": {
      "get": {
        "description": "This function disables DNSSEC on the domain.\n\n**Note:**\n\n  Only servers that run PowerDNS can use DNSSEC. If you call this function on a server that doesn't use PowerDNS, you will receive an error.\n\n**Warning:**\n\n - This action is **irreversible**. If you disable DNSSEC on the domain, you will lose the associated keys. You can only retrieve the keys by restoring them from a full back up of the account.\n - If you disable DNSSEC, you **must** remove the Delegation of Signing (DS) records on your DNS server and with your registrar.",
        "operationId": "disable_dnssec_for_domains",
        "parameters": [
          {
            "description": "The domain for which to disable DNSSEC.\n\n**Note:**\n\nTo disable DNSSEC for multiple domains, duplicate or increment the parameter name. For example, to check three domains, you could:\n\n* Use the `domain` parameter multiple times.\n* Use the `domain`, `domain-1`, `domain-2` parameters.",
            "examples": {
              "multiple": {
                "summary": "Multiple domains",
                "value": "domain=example.com&domain-1=example1.com&domain-2=example2.com"
              },
              "multiple-alternative": {
                "summary": "Multiple domains",
                "value": "domain=example.com&domain=example1.com&domain=example2.com"
              },
              "single": {
                "summary": "A single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "domains": {
                          "description": "An array of objects that contains information about each domain.",
                          "items": {
                            "properties": {
                              "disabled": {
                                "description": "Whether the system disabled DNSSEC.\n* `1` - Disabled.\n* `0` - The system failed to disable DNSSEC.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "domain": {
                                "description": "The domain for which the system disabled DNSSEC.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "disable_dnssec_for_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable DNSSEC on domain",
        "tags": [
          "DNS",
          "DNS Security"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 disable_dnssec_for_domains domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/disable_dnssec_for_domains?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/disable_failing_authentication_providers": {
      "get": {
        "description": "This function disables any enabled identity provider modules that fail to load.",
        "operationId": "disable_failing_authentication_providers",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects containing information about the external authentication identity provider module failures.",
                          "items": {
                            "properties": {
                              "disabled_services": {
                                "description": "An array of the cPanel services for which the external authentication identity provider was previously disabled.",
                                "example": [
                                  "cpaneld",
                                  "webmaild"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "failures_to_disable": {
                                "description": "An array of objects containing the cPanel services for which the system fails to disable the module.",
                                "items": {
                                  "properties": {
                                    "failure": {
                                      "description": "A description of the failure to disable the identity provider module for that module.",
                                      "example": "An informative failure message.",
                                      "type": "string"
                                    },
                                    "service_name": {
                                      "description": "A cPanel service for which the system failed to disable the external authentication identity provider.",
                                      "example": "whostmgrd",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "provider_failure": {
                                "description": "A description of the failure.",
                                "example": "(ERR mcddbv) The system failed to load the module “Cpanel::Security::Authn::Provider::Facebook“ because of an error: Can't locate Cpanel/Security/Authn/Provider/Facebook.pm in @INC (@INC contains: /usr/local/cpanel /usr/local/cpanel/3rdparty/perl/514/lib/perl5/cpanel_lib/i386-linux-64int /usr/local/cpanel/3rdparty/perl/514/lib/perl5/cpanel_lib /usr/local/cpanel/3rdparty/perl/514/lib/perl5/5.14.4/i386-linux-64int /usr/local/cpanel/3rdparty/perl/514/lib/perl5/5.14.4 /opt/cpanel/perl5/514/site_lib/i386-linux-64int /opt/cpanel/perl5/514/site_lib /var/cpanel/perl) at (eval 143) line 1.\nBEGIN failed--compilation aborted at (eval 143) line 1.\n",
                                "type": "string"
                              },
                              "provider_name": {
                                "description": "The external authentication identity provider to disable.",
                                "example": "facebook",
                                "type": "string"
                              },
                              "provider_namespace": {
                                "description": "The external authentication identity provider module's namespace.",
                                "example": "Cpanel::Security::Authn::Provider::Facebook",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "disable_failing_authentication_providers",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable identity provider modules that fail to load",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 disable_failing_authentication_providers"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/disable_failing_authentication_providers?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/disable_market_provider": {
      "get": {
        "description": "This function disables a cPanel Market provider.",
        "operationId": "disable_market_provider",
        "parameters": [
          {
            "description": "The cPanel Market provider's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "cPStore",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "disable_market_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable Market provider",
        "tags": [
          "Market",
          "Provider Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 disable_market_provider name='cPStore'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/disable_market_provider?api.version=1&name=cPStore"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/domainuserdata": {
      "get": {
        "description": "This function retrieves domain data.",
        "operationId": "domainuserdata",
        "parameters": [
          {
            "description": "The account's main domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "userdata": {
                          "description": "The domain information.",
                          "properties": {
                            "customlog": {
                              "description": "A list of objects of Apache log information.",
                              "items": {
                                "properties": {
                                  "format": {
                                    "description": "The custom log's format. A valid Apache log format.",
                                    "example": "combined",
                                    "type": "string"
                                  },
                                  "target": {
                                    "description": "An Apache custom log's location. The absolute path to the log file.",
                                    "example": "/usr/local/apache/domlogs/example.com",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "documentroot": {
                              "description": "The path to the domain's document root. A valid filepath.",
                              "example": "/home/username/public_html",
                              "type": "string"
                            },
                            "group": {
                              "description": "The account's group name. A valid group name.",
                              "example": "reseller_username",
                              "type": "string"
                            },
                            "hascgi": {
                              "description": "Whether CGI is enabled for the account.\n- 1  Enabled.\n- 0  Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "homedir": {
                              "description": "The path to the domain's home directory. The absolute path to the domain's home directory.",
                              "example": "/home/username",
                              "type": "string"
                            },
                            "ip": {
                              "description": "The domain's IP address. A valid IP address.",
                              "example": "10.0.0.1",
                              "type": "string"
                            },
                            "owner": {
                              "description": "The WHM user who owns the cPanel account. A valid WHM username.",
                              "example": "root",
                              "type": "string"
                            },
                            "phpopenbasedirprotect": {
                              "description": "Whether the PHP open_basedir tweak is enabled.\n- 1  Enabled.\n- 0  Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "port": {
                              "description": "Apache's port to access the domain. A valid port number.",
                              "example": 80,
                              "type": "integer"
                            },
                            "scriptalias": {
                              "description": "an object containing Apache ScriptAlias information.",
                              "items": {
                                "properties": {
                                  "path": {
                                    "description": "The path to Apache's CGI scripts. The url alias redirects to this location. A valid URL or absolute file path.",
                                    "example": "/home/user/public_html/cgi-bin/",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "The alias URL. This URL redirects to the path URL. A valid URL or file path.",
                                    "example": "/cgi-bin/",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "serveradmin": {
                              "description": "The account owner's contact email address. A valid email address.",
                              "example": "owner@example.com",
                              "type": "string"
                            },
                            "serveralias": {
                              "description": "The domain's aliases. A space-separated list of domain aliases.",
                              "example": "parkeddomain.com www.parkeddomain.com seconddomain.com",
                              "type": "string"
                            },
                            "servername": {
                              "description": "The main domain on the domain's account. A valid domain name.",
                              "example": "example.com",
                              "type": "string"
                            },
                            "usecanonicalname": {
                              "description": "The domain's setting for canonical names (CNAMEs).\n- On\n- Off",
                              "example": "Off",
                              "type": "string"
                            },
                            "user": {
                              "description": "The cPanel account username. A valid cPanel username.",
                              "example": "user",
                              "type": "string"
                            },
                            "userdirprotect": {
                              "description": "The domain's setting for the Apache mod_userdir Tweak.\n- On\n- Off",
                              "example": "Off",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "domainuserdata",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Obtained userdata.",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domain user information",
        "tags": [
          "Accounts",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 domainuserdata domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/domainuserdata?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/dumpzone": {
      "get": {
        "description": "This function returns a domain's DNS zone configuration.\n\n**Note:**\n\nOn servers that run CentOS 7, you may see a named warning about the absence of SPF resource records on DNS.\n* This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.\n* Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).\n\n**Important:**\n\nWhen you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.\n\n**Note:**\n\nYou **must** include either the `domain` or the `zone` parameters. ",
        "operationId": "dumpzone",
        "parameters": [
          {
            "description": "The zone record's domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The zone file's name.",
            "in": "query",
            "name": "zone",
            "required": false,
            "schema": {
              "example": "example.com.db",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "zone": {
                          "description": "An array of objects of zone information. This array contains the `record` array of objects.",
                          "items": {
                            "anyOf": [
                              {
                                "$ref": "#/components/schemas/a"
                              },
                              {
                                "$ref": "#/components/schemas/a6"
                              },
                              {
                                "$ref": "#/components/schemas/aaaa"
                              },
                              {
                                "$ref": "#/components/schemas/asfdb"
                              },
                              {
                                "$ref": "#/components/schemas/caa"
                              },
                              {
                                "$ref": "#/components/schemas/cname"
                              },
                              {
                                "$ref": "#/components/schemas/dname"
                              },
                              {
                                "$ref": "#/components/schemas/ds"
                              },
                              {
                                "$ref": "#/components/schemas/hinfo"
                              },
                              {
                                "$ref": "#/components/schemas/loc"
                              },
                              {
                                "$ref": "#/components/schemas/mx"
                              },
                              {
                                "$ref": "#/components/schemas/ns"
                              },
                              {
                                "$ref": "#/components/schemas/ptr"
                              },
                              {
                                "$ref": "#/components/schemas/rp"
                              },
                              {
                                "$ref": "#/components/schemas/soa"
                              },
                              {
                                "$ref": "#/components/schemas/srv"
                              },
                              {
                                "$ref": "#/components/schemas/sshfp"
                              },
                              {
                                "$ref": "#/components/schemas/txt"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "dumpzone",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Zone Serialized",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domain's DNS zone configuration",
        "tags": [
          "DNS",
          "DNS Zones"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 dumpzone domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/dumpzone?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/ea4_get_currently_installed_packages": {
      "get": {
        "description": "This function returns a list of the currently-installed EasyApache 4 packages.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "ea4_get_currently_installed_packages",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "packages": {
                          "description": "A list of the currently installed packages.",
                          "items": {
                            "example": "ea-apache24",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ea4_get_currently_installed_packages",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return installed Easyapache 4 packages",
        "tags": [
          "EasyApache",
          "EasyApache Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ea4_get_currently_installed_packages"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ea4_get_currently_installed_packages?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/ea4_list_profiles": {
      "get": {
        "description": "This function returns a list of all [EasyApache 4](https://docs.cpanel.net/ea4/) profiles and the packages that each profile provides.\n\n **Important:**\n\n When you disable the [Web Server](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles) role, the system **disables** this function.",
        "operationId": "ea4_list_profiles",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "**Note:**\n\n* This function returns this array when a third-party vendor-created profile exists.\n* The function may return this array multiple times.",
                        "items": {
                          "properties": {
                            "desc": {
                              "description": "A description of the profile.",
                              "example": "The currently installed packages on the server.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The profile name.",
                              "example": "No PHP",
                              "type": "string"
                            },
                            "path": {
                              "description": "The file name of the profile.",
                              "example": "default.json",
                              "type": "string"
                            },
                            "pkgs": {
                              "description": "An array of RPM packages that the profile includes.",
                              "example": [
                                "ea-apache24",
                                "ea-php74"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "tags": {
                              "description": "Labels that highlight key attributes of a profile.",
                              "example": [
                                "ea-apache24",
                                "ea-php74"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "validation_data": {
                              "properties": {
                                "not_on_server": {
                                  "description": "An array of packages in the profile that do not exist in any of the server's yum repositories.",
                                  "example": [
                                    "ea-apache24",
                                    "ea-php74"
                                  ],
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "version": {
                              "description": "The profile's current version ID.",
                              "example": "1.2",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "properties": {
                        "cpanel": {
                          "description": "An array of cPanel & WHM-provided EasyApache 4 profile settings objects.",
                          "items": {
                            "properties": {
                              "active": {
                                "description": "Whether the cPanel & WHM-provided EasyApache 4 profile's settings are active.\n* `1` - Active.\n* `0` - Inactive.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "desc": {
                                "description": "A description of the profile.",
                                "example": "The currently installed packages on the server.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The profile name.",
                                "example": "No PHP",
                                "type": "string"
                              },
                              "pkgs": {
                                "description": "An array of RPM packages that the profile includes.",
                                "example": [
                                  "ea-apache24",
                                  "ea-php74"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "tags": {
                                "description": "Labels that highlight key attributes of a profile.",
                                "example": [
                                  "ea-apache24",
                                  "ea-php74"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "validation_data": {
                                "properties": {
                                  "not_on_server": {
                                    "description": "An array of packages in the profile that do not exist in any of the server's yum repositories.",
                                    "example": [
                                      "ea-apache24",
                                      "ea-php74"
                                    ],
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "version": {
                                "description": "The profile's current version ID.",
                                "example": "1.2",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "custom": {
                          "description": "An array of custom settings objects.\n\n**Note:**\n\nThis function returns the custom array when a system administrator-created profile exists.",
                          "items": {
                            "properties": {
                              "desc": {
                                "description": "A description of the profile.",
                                "example": "The currently installed packages on the server.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The profile name.",
                                "example": "No PHP",
                                "type": "string"
                              },
                              "path": {
                                "description": "The file name of the profile.",
                                "example": "default.json",
                                "type": "string"
                              },
                              "pkgs": {
                                "description": "An array of RPM packages that the profile includes.",
                                "example": [
                                  "ea-apache24",
                                  "ea-php74"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "tags": {
                                "description": "Labels that highlight key attributes of a profile.",
                                "example": [
                                  "Apache 2.4",
                                  "PHP 7.4"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "validation_data": {
                                "properties": {
                                  "not_on_server": {
                                    "description": "An array of packages in the profile that do not exist in any of the server's yum repositories.",
                                    "example": [
                                      "ea-apache24",
                                      "ea-php74"
                                    ],
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "version": {
                                "description": "The profile's current version ID.",
                                "example": "1.2",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ea4_list_profiles",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success.\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return EasyApache 4 profiles",
        "tags": [
          "EasyApache",
          "EasyApache Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ea4_list_profiles"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ea4_list_profiles?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/ea4_metainfo": {
      "get": {
        "description": "This function returns the contents of the `/etc/cpanel/ea4/ea4-metainfo.json` file.",
        "operationId": "ea4_metainfo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "Returns the contents of the `/etc/cpanel/ea4/ea4-metainfo.json` file.\nReturns an empty value if the `/etc/cpanel/ea4/ea4-metainfo.json` file does not exist.",
                        "type": "object"
                      },
                      "description": "Contents of the `/etc/cpanel/ea4/ea4-metainfo.json` file.",
                      "example": {
                        "additional_packages": [
                          "ea-tomcat85",
                          "ea-nodejs10",
                          "ea-nginx"
                        ],
                        "default_php_handler": "cgi",
                        "default_php_package": "ea-php72",
                        "type": "object"
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ea4_metainfo",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return ea4-metainfo.json file contents",
        "tags": [
          "EasyApache",
          "EasyApache Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ea4_metainfo"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ea4_metainfo?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "80"
      }
    },
    "/ea4_recommendations": {
      "get": {
        "description": "This function returns any recommendations attached to your installed\nEasyApache 4 packages. For more information about the recommendation system,\nread our [EasyApache 4 Recommendations](https://go.cpanel.net/EasyApache4Recommendations) documentation.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "ea4_recommendations",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "* An object that contains recommendation information about a package.\n\n**Note:**\n\n* The function uses the name of the referenced package as the return name.  For example, `ea-php74-php`.",
                        "items": {
                          "properties": {
                            "desc": {
                              "description": "The recommendation's description.\n\n**Note:**\n\n* The function **only** returns this value if it exists.",
                              "type": "string"
                            },
                            "level": {
                              "description": "The level that triggers a recommendation to appear, based on [Bootstrap 3 alert components](http://getbootstrap.com/components/#alerts).\n\n* `primary`\n* `success`\n* `info`\n* `warning`\n* `danger`\n\n**Note:**\n\n* The function **only** returns this value if it exists.\n* This return's value only affects the UI if set to `danger`.",
                              "enum": [
                                "primary",
                                "success",
                                "info",
                                "warning",
                                "danger"
                              ],
                              "type": "string"
                            },
                            "name": {
                              "description": "The recommendation's name.",
                              "type": "string"
                            },
                            "on": {
                              "description": "The action that triggers a recommendation.\n\n* `add`\n* `remove`",
                              "enum": [
                                "add",
                                "remove"
                              ],
                              "type": "string"
                            },
                            "options": {
                              "description": "An object that contains each option for the package's recommendations.",
                              "items": {
                                "properties": {
                                  "items": {
                                    "description": "An array of information that corresponds with a text value.\n\n**Note:**\n\nThe function **only** returns this value if it exists.",
                                    "example": [
                                      "ea-apache24-mod_ruid2"
                                    ],
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "level": {
                                    "description": "The level that triggers a recommendation to appear, based on [Bootstrap 3 alert components](http://getbootstrap.com/components/#alerts).\n\n* `primary`\n* `success`\n* `info`\n* `warning`\n* `danger`\n\n**Note:**\n\n* The function **only** returns this value if it exists.\n* This return's value only affects the UI if set to `danger`.",
                                    "enum": [
                                      "primary",
                                      "success",
                                      "info",
                                      "warning",
                                      "danger"
                                    ],
                                    "type": "string"
                                  },
                                  "recommended": {
                                    "description": "The type of recommendation that the interface will return.\n\n* `true` - Recommended.\n* `false` - Not recommended.\n\n**Note:**\n\n* The function **only** returns this value if it exists.\n* If the function does **not** return this value, then the text displayed in the interface is informational.",
                                    "enum": [
                                      true,
                                      false
                                    ],
                                    "type": "boolean"
                                  },
                                  "text": {
                                    "description": "The text returned in the user interface.",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "A URL that provides more information.\n\n**Note:**\n\nThe function **only** returns this value if it exists.",
                                    "format": "url",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "url": {
                              "description": "A URL to provide more information.\n\n**Note:**\n\n* The function **only** returns this value if it exists.",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "example": {
                        "ea-php55-php": [
                          {
                            "desc": "PHP DSO runs as the user by default. In a shared hosting environment, this is a security issue.",
                            "level": "danger",
                            "name": "PHP DSO",
                            "on": "add",
                            "options": [
                              {
                                "items": [
                                  "ea-apache24-mod_ruid2",
                                  "ea-apache24-mod_mpm_itk"
                                ],
                                "level": "success",
                                "recommended": true,
                                "text": "We strongly recommend that you install one of the following packages unless this is a single-user system:"
                              },
                              {
                                "level": "warning",
                                "recommended": false,
                                "text": "If you use suPHP, you will add some security, but may experience performance issues on your server."
                              }
                            ],
                            "url": "https://www.example.com"
                          }
                        ]
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ea4_recommendations",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success.\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return EasyApache 4 recommendations",
        "tags": [
          "EasyApache",
          "EasyApache Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ea4_recommendations"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ea4_recommendations?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/ea4_save_profile": {
      "get": {
        "description": "This function creates an EasyApache 4 profile. This function only writes files to the `/etc/cpanel/ea4/profiles/custom/` directory.\n\n**Important**:\n\n  When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "ea4_save_profile",
        "parameters": [
          {
            "description": "The profile’s file name.",
            "in": "query",
            "name": "filename",
            "required": true,
            "schema": {
              "example": "new_profile.json",
              "type": "string"
            }
          },
          {
            "description": "The profile’s display name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "New Profile",
              "type": "string"
            }
          },
          {
            "description": "The packages that the profile contains.",
            "explode": true,
            "in": "query",
            "name": "pkg",
            "required": true,
            "schema": {
              "example": [
                "ea-apache24",
                "ea-apache24-mod_security2",
                "…"
              ],
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "The description of the profile.",
            "in": "query",
            "name": "desc",
            "required": false,
            "schema": {
              "default": "",
              "example": "This is my new profile.",
              "type": "string"
            }
          },
          {
            "description": "Whether to overwrite the file, if it exists.\n\n* `1` — Overwrite the file.\n* `0` — Do **not** overwrite the file.",
            "in": "query",
            "name": "overwrite",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Tags that are appropriate for the profile.",
            "explode": true,
            "in": "query",
            "name": "tag",
            "required": false,
            "schema": {
              "default": [],
              "example": [
                "Apache 2.4",
                "Optimized for static content",
                "…"
              ],
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "The profile’s version number.",
            "in": "query",
            "name": "version",
            "required": false,
            "schema": {
              "default": "0",
              "example": "1.3",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "already_exists": {
                          "description": "Whether the filename value already exists.\n\n**Note**:\n\n The function only returns this field if the `overwrite` value is `0`, and the specified `filename` value already exists.\n- `1` — Exists.\n- `0` — Does **not** exist.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "path": {
                          "description": "The new profile’s path.\n\n**Note**:\n\n The function only returns this field if it succeeds.",
                          "example": "/etc/cpanel/ea4/profiles/custom/new_profile.json",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ea4_save_profile",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create EasyApache 4 profile",
        "tags": [
          "EasyApache",
          "EasyApache Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ea4_save_profile filename='new_profile.json' name='New Profile' pkg='ea-apache24' pkg='ea-apache24-mod_security2' pkg='…'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ea4_save_profile?api.version=1&filename=new_profile.json&name=New%20Profile&pkg=ea-apache24&pkg=ea-apache24-mod_security2&pkg=%e2%80%a6"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/ea4_tomcat85_add": {
      "get": {
        "description": "This function adds a user to the Tomcat 8.5 configuration.\n\n**Important:**\n\nWhen you disable the [Web Server](https://go.cpanel.net/serverroles) role, the system **disables** this function.",
        "operationId": "ea4_tomcat85_add",
        "parameters": [
          {
            "description": "The user that you wish to add.\n\n**Note:**\n\nYou can pass this parameter multiple times to add multiple users to the Tomcat 8.5 configuration.",
            "examples": {
              "multiple": {
                "description": "Multiple users.",
                "value": "user=username1 user=username2 user=username3"
              },
              "single": {
                "description": "A single user.",
                "value": "username"
              }
            },
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "The status message.\n\n**Note:**\n\nA blank status message represents success.",
                        "format": "username",
                        "type": "string"
                      },
                      "description": "A status message for each username.",
                      "example": {
                        "user123": "status"
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ea4_tomcat85_add",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add Tomcat 8.5 user",
        "tags": [
          "EasyApache",
          "Tomcat Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ea4_tomcat85_add user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ea4_tomcat85_add?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/ea4_tomcat85_list": {
      "get": {
        "description": "This function returns a list of the users that run Tomcat.\n\n**Important:**\n\n  When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "ea4_tomcat85_list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "tomcat85_users": {
                          "description": "An array of usernames who run Tomcat.",
                          "example": [
                            "user123",
                            "user456",
                            "user789"
                          ],
                          "items": {
                            "format": "username",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ea4_tomcat85_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Tomcat 8.5 users",
        "tags": [
          "EasyApache",
          "Tomcat Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ea4_tomcat85_list"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ea4_tomcat85_list?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/ea4_tomcat85_rem": {
      "get": {
        "description": "This function removes a user from the Tomcat 8.5 configuration.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "ea4_tomcat85_rem",
        "parameters": [
          {
            "description": "The user that you wish to remove.\n\n**Note:**\n\nYou can pass this parameter multiple times.",
            "examples": {
              "multiple": {
                "summary": "Multiple users.",
                "value": "user=username1 user=username2 user=username3"
              },
              "single": {
                "summary": "A single user.",
                "value": "username"
              }
            },
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "The status message.\n\n**Note:**\n\nThis return's name is the user's name.\nA blank status message represents success.",
                        "format": "username",
                        "type": "string"
                      },
                      "description": "A status message for each username.",
                      "example": {
                        "user123": "status"
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ea4_tomcat85_rem",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove Tomcat 8.5 user",
        "tags": [
          "EasyApache",
          "Tomcat Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ea4_tomcat85_rem user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ea4_tomcat85_rem?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/edit_hook": {
      "get": {
        "description": "This function edits a script hook.",
        "operationId": "edit_hook",
        "parameters": [
          {
            "description": "The script hook's ID.\n\n**Note:**\n\nTo retrieve a hook's ID, use the WHM API 1 `list_hooks` function.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": "HzEpGvT6QGUYwxuX3hWB8AUq",
              "type": "string"
            }
          },
          {
            "description": "The absolute file path to the script that runs after the hook script to check the results.",
            "in": "query",
            "name": "check",
            "required": false,
            "schema": {
              "example": "/scripts/postcourier-authlibup",
              "type": "string"
            }
          },
          {
            "description": "The hook script's description.",
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "example": "TestHook",
              "type": "string"
            }
          },
          {
            "description": "Whether the hook script is enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The type of function that the script hook launches.\n\n* `script` — Runs a script.\n* `module` — Calls a function in a module.",
            "in": "query",
            "name": "exectype",
            "required": false,
            "schema": {
              "enum": [
                "script",
                "module"
              ],
              "example": "script",
              "type": "string"
            }
          },
          {
            "description": "The hook script's absolute file path or its `module::subroutine` invocation.",
            "in": "query",
            "name": "hook",
            "required": false,
            "schema": {
              "example": "/scripts/postcourier-authlibup",
              "type": "string"
            }
          },
          {
            "description": "The script hook's notes.",
            "in": "query",
            "name": "notes",
            "required": false,
            "schema": {
              "example": "Note.",
              "type": "string"
            }
          },
          {
            "description": "The absolute file path to the script that rolls back the hook script.",
            "in": "query",
            "name": "rollback",
            "required": false,
            "schema": {
              "example": "/scripts/postcourier-authlibup",
              "type": "string"
            }
          },
          {
            "description": "The condition when the hook script executes.\n\n* `pre` — The script runs before the function.\n* `post` — The script runs after the function.",
            "in": "query",
            "name": "stage",
            "required": false,
            "schema": {
              "enum": [
                "pre",
                "post"
              ],
              "example": "post",
              "type": "string"
            }
          },
          {
            "description": "The script hook's priority in the hook's stage, where a lower value runs before a higher value.",
            "in": "query",
            "name": "weight",
            "required": false,
            "schema": {
              "example": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "edit_hook",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update script hook",
        "tags": [
          "Script Hooks",
          "Scripts Hooks"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 edit_hook id='HzEpGvT6QGUYwxuX3hWB8AUq'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/edit_hook?api.version=1&id=HzEpGvT6QGUYwxuX3hWB8AUq"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/edit_rpm_version": {
      "get": {
        "description": "This function edits RPM data. When you call this function, it performs the same actions\nas the following command:\n\n`/usr/local/cpanel/scripts/update_local_rpm_versions --edit section.key value`\n\nFor more information, read our\n[rpm.versions system](https://docs.cpanel.net/knowledge-base/rpm-versions/introduction-to-the-rpm-versions-system/)\ndocumentation.\n\n**Note:**\n\nAfter you call this function, we **strongly** recommend that you run the\n`/usr/local/cpanel/scripts/check_cpanel_rpms` script.",
        "operationId": "edit_rpm_version",
        "parameters": [
          {
            "description": "The RPM's key.",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "3rdparty",
              "type": "string"
            }
          },
          {
            "description": "The RPM's section.",
            "in": "query",
            "name": "section",
            "required": true,
            "schema": {
              "example": "rpm_groups",
              "type": "string"
            }
          },
          {
            "description": "The RPM's value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "example": "cpanel-pcre",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "status": {
                          "description": "Whether the function succeeded.\n\n* `1` — Success.\n* `0` — Failure.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "edit_rpm_version",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update rpm.versions system configuration",
        "tags": [
          "RPM",
          "Package Manager Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 edit_rpm_version section='rpm_groups' key='3rdparty' value='cpanel-pcre'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/edit_rpm_version?api.version=1&section=rpm_groups&key=3rdparty&value=cpanel-pcre"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/editpkg": {
      "get": {
        "description": "This function edits a hosting plan (package).\n\n**Note:**\n\n* The\n[Access Control List (ACL)](https://go.cpanel.net/GuidetoWHMPluginsAccessControlLists)\nrestricts some of the function's parameters, which limit the features that WHM\nusers can access.\n* This function applies any changes you make to **all** accounts that exist on\nthe hosting plan.\n* This function **cannot** modify hosting plan names.",
        "operationId": "editpkg",
        "parameters": [
          {
            "description": "The hosting plan's name. If the hosting plan does not exist, the system will create it.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "package1",
              "type": "string"
            }
          },
          {
            "description": "The hosting plan's [package extensions](https://go.cpanel.net/GuidetoPackageExtensions).\n\nIf you do **not** provide a value, the hosting plan will **not** include package\nextensions.\n\n**Note:**\n\n* We **strongly** recommend that you manage package extensions through WHM API\n1's `addpkgext` and `delpkgext` functions.\n* You can include the extension's variables in your function call, in `key=value` format.\nConsult the extension's documentation for a list of possible variables.\n* Extension names and variables are case-sensitive.\n* Use space-delimited format to add multiple package extensions.",
            "examples": {
              "multiple": {
                "summary": "Add multiple package extensions.",
                "value": "_PACKAGE_EXTENSIONS='extension1 extension2 extension3'"
              },
              "single": {
                "summary": "Add a single package.",
                "value": "extension1"
              }
            },
            "in": "query",
            "name": "_PACKAGE_EXTENSIONS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The hosting plan's maximum bandwidth use, in megabytes (MB).\n\n* `0`, `unlimited`, or `null` — The hosting plan allows unlimited\nbandwidth.\n\n**Note:**\n\nThe `0`, `unlimited`, or `null` values are **only** available to\nusers that possess the corresponding `unlimited` ACL permission.",
            "in": "query",
            "name": "bwlimit",
            "required": false,
            "schema": {
              "default": 1048576,
              "example": 1048576,
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "Whether CGI access is enabled for the hosting plan.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Note:**\n\nWhen a [server profile](https://go.cpanel.net/whmdocsServerProfile) disables\nthe [Web Server role](https://go.cpanel.net/serverroles#roles), this parameter\ndefaults to `0`. On these servers, you **cannot** enable CGI access.",
            "in": "query",
            "name": "cgi",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The hosting plan's cPanel theme.\n\nThis parameter defaults to the server's\n[default cPanel theme](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup).",
            "in": "query",
            "name": "cpmod",
            "required": false,
            "schema": {
              "example": "paper_lantern",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable Digest Authentication for accounts on the hosting plan.\n\n* `1` — Enable.\n* `0` — Disable.",
            "in": "query",
            "name": "digestauth",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The hosting plan's feature list.\n\nIf you do **not** use this parameter, the function assigns the `default`\nfeature list to the hosting plan's accounts.",
            "in": "query",
            "name": "featurelist",
            "required": false,
            "schema": {
              "default": "default",
              "example": "default",
              "type": "string"
            }
          },
          {
            "deprecated": true,
            "description": "Whether Microsoft® FrontPage Extensions are enabled for the account.\n\n**Note:**\n\ncPanel & WHM ignores all FrontPage settings and parameters.",
            "in": "query",
            "name": "frontpage",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether the hosting plan allows shell access.\n\n* `1` — The hosting plan allows shell access.\n* `0` — The hoting plan does **not** allow shell access.",
            "in": "query",
            "name": "hasshell",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the hosting plan uses a dedicated IP address.\n\n* `y` — The hosting plan uses a dedicated IP address.\n* `n` — The hoting plan does **not** use a dedicated IP address.",
            "in": "query",
            "name": "ip",
            "required": false,
            "schema": {
              "default": "n",
              "enum": [
                "y",
                "n"
              ],
              "example": "n",
              "type": "string"
            }
          },
          {
            "description": "The hosting plan's default locale.\n\nThis parameter defaults to the server's default locale.",
            "in": "query",
            "name": "language",
            "required": false,
            "schema": {
              "example": "en",
              "format": "ISO-3166-1 (alpha-2)",
              "type": "string"
            }
          },
          {
            "description": "The percentage of failed or deferred email messages that an account on the\nhosting plan can send per hour before outgoing mail is rate-limited.\n\n* `0` or `unlimited` — The hosting plan allows unlimited email messages per hour.",
            "in": "query",
            "name": "max_defer_fail_percentage",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The maximum number of emails that the hosting plan allows accounts to send\nin one hour.\n\n* `0` or `unlimited` — The hosting plan allows unlimited emails per hour.",
            "in": "query",
            "name": "max_email_per_hour",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum email account quota size, in megabytes (MB).\n\n* `0`, `null, or `unlimited` — The hosting plan allows unlimited quota.\n\n**Note:**\n\n* This parameter does **not** affect any existing email accounts.\n* The `unlimited` value is **only** available to users that possess\nthe corresponding `unlimited` ACL permission.",
            "in": "query",
            "name": "max_emailacct_quota",
            "required": false,
            "schema": {
              "default": 1024,
              "example": 1024,
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 4294967296,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of addon domains.\n\n* `unlimited` or `null` — The hosting plan allows unlimited\naddon domains.",
            "in": "query",
            "name": "maxaddon",
            "required": false,
            "schema": {
              "default": 0,
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of FTP accounts.\n\n* `unlimited`, or `null` — The hosting plan allows unlimited databases.",
            "in": "query",
            "name": "maxftp",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of mailing lists.\n\n* `unlimited`, or `null` — The hosting plan allows unlimited\nmailing lists.",
            "in": "query",
            "name": "maxlists",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of parked domains (aliases).\n\n* `unlimited` or `null` — The hosting plan allows unlimited parked\ndomains.",
            "in": "query",
            "name": "maxpark",
            "required": false,
            "schema": {
              "default": 0,
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of email accounts.\n\n* `unlimited`, or `null` — The hosting plan allows unlimited\nemail accounts.",
            "in": "query",
            "name": "maxpop",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of each available type of SQL\ndatabase.\n\nFor example, if you set this value to `5` and the system administrator\nallows MySQL® and PostgreSQL® databases, users with this hosting plan\ncan create up to five MySQL databases and up to five PostgreSQL databases.\n\n* `unlimited`, or `null` — The hosting plan allows unlimited\ndatabases.",
            "in": "query",
            "name": "maxsql",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of subdomains.\n\n* `unlimited`, or `null` — The hosting plan allows unlimited\nsubdomains.",
            "in": "query",
            "name": "maxsub",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": "unlimited",
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's disk space quota, in megabytes (MB).\n\n* `0`, `unlimited`, or `null` — The hosting plan allows unlimited\ndisk space quota.\n\n**Note:**\n\nThe `0`, `unlimited`, or `null` values are **only** available to\nusers that possess the corresponding `unlimited` ACL permission.",
            "in": "query",
            "name": "quota",
            "required": false,
            "schema": {
              "default": 10240,
              "example": 10240,
              "nullable": true,
              "oneOf": [
                {
                  "maximum": 999999,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pkg": {
                          "description": "The new hosting plan's name.",
                          "example": "package1",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "editpkg",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update hosting plan",
        "tags": [
          "Packages",
          "Hosting Plans"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 editpkg name='package1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/editpkg?api.version=1&name=package1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/editquota": {
      "get": {
        "description": "This function modifies a user's disk quota.",
        "operationId": "editquota",
        "parameters": [
          {
            "description": "The account's new quota.\n* A positive integer that represents the maximum amount of disk space, in megabytes (MB).\n* 0 or unlimited grants the account unlimited disk space.",
            "in": "query",
            "name": "quota",
            "required": true,
            "schema": {
              "example": 500,
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The cPanel account username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "user",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "editquota",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Set quota for user.",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update cPanel account disk quota",
        "tags": [
          "Accounts",
          "Bandwidth and Disk Quotas"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 editquota user='user' quota='500'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/editquota?api.version=1&user=user&quota=500"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/editzonerecord": {
      "post": {
        "description": "This function edits a DNS zone record. To effectively use this function, use the following workflow:\n 1. Run the `dumpzone` function on the DNS zone record to edit.\n 1. Locate the `Line` value that corresponds to the data to edit.\n 1. Use the values from that zone record to formulate the appropriate `editzonerecord` parameters.\n\n**Important:**\n\n* When you call this function, you **must** include the additional parameters for the selected zone record type.\n* To change the zone record's IP address, we recommend that you use the [`swapip` script](https://go.cpanel.net/TheswapipScript) or the `setsiteip` function instead.\n* You **cannot** edit other DNS zones that reside on *Write-only* servers in a DNS cluster.\n\n**Note:**\n\nOn servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource records on DNS.\n  * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.\n  * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).\n\n**Important:**\n\nWhen you disable the [DNS role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.",
        "operationId": "editzonerecord",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DnsEditZoneParameterType"
              }
            }
          },
          "description": "The updated DNS Zone Record.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "editzonerecord",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Bind reloading on hostname using rndc zone: [example.com]\n",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update DNS zone record",
        "tags": [
          "DNS",
          "DNS Zones"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 --input=json --output=json editzonerecord"
          },
          {
            "label": "HTTP Request (Wire Format)",
            "lang": "HTTP",
            "source": "POST /cpsess##########/json-api/editzonerecord HTTP/1.1\nHost: example.com:2083\nCookie: ###################################\nContent-Type: application/json\nContent-Length: 0\n\n"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/emailtrack_search": {
      "get": {
        "description": "This function retrieves email delivery records.",
        "operationId": "emailtrack_search",
        "parameters": [
          {
            "description": "Whether to return delivery deferral events.\n* `1` — Return delivery deferral events.\n* `0` — Do not return delivery deferral events.",
            "in": "query",
            "name": "defer",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The type of delivery records to retrieve.\n* `all` — Retrieve all delivery records.\n* `remote` — Retrieve remote delivery records.\n* `local` — Retrieve local delivery records.",
            "in": "query",
            "name": "deliverytype",
            "required": false,
            "schema": {
              "default": "all",
              "enum": [
                "all",
                "remote",
                "local"
              ],
              "example": "all",
              "type": "string"
            }
          },
          {
            "description": "Whether to return delivery failure events.\n* `1` — Return delivery failure events.\n* `0` — Do not return delivery failure events.",
            "in": "query",
            "name": "failure",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to return delivery attempts in progress.\n* `1` — Return delivery attempts in progress.\n* `0` — Do not return delivery attempts in progress.",
            "in": "query",
            "name": "inprogress",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The number of results to return for each type.\n\n**Note**\n\nIf you set this parameter to `0`, the function returns unlimited results.",
            "in": "query",
            "name": "max_results_by_type",
            "required": false,
            "schema": {
              "default": 0,
              "example": 3,
              "type": "integer"
            }
          },
          {
            "description": "Whether to return successful delivery attempts.\n* `1` — Return successful delivery attempts.\n* `0` — Do not return successful delivery attempts.",
            "in": "query",
            "name": "nosize",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "records": {
                          "description": "An array of objects containing the delivery record.",
                          "items": {
                            "properties": {
                              "actiontime": {
                                "description": "When the delivery attempt happened in `YYYY-MM-DD HH-mm-SS` format.",
                                "example": "2012-02-06T14:17:51.000Z",
                                "type": "string"
                              },
                              "actionunixtime": {
                                "description": "When the delivery attempt happened.",
                                "example": 1328559471,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "deliveredto": {
                                "description": "The delivery attempt's final end point.\n\n**Note:**\n\n If the message went to a mailing list, the address will be the mailing list member's address.",
                                "example": null,
                                "nullable": true,
                                "type": "string"
                              },
                              "deliverydomain": {
                                "description": "The recipient's domain.",
                                "example": null,
                                "format": "domain",
                                "nullable": true,
                                "type": "string"
                              },
                              "deliveryuser": {
                                "description": "The recipient's username.",
                                "example": null,
                                "nullable": true,
                                "type": "string"
                              },
                              "domain": {
                                "description": "The sender's domain.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "host": {
                                "description": "The hostname that received the message.",
                                "example": null,
                                "format": "hostname",
                                "nullable": true,
                                "type": "string"
                              },
                              "ip": {
                                "description": "The recipient's IP address.",
                                "example": null,
                                "format": "ipv4",
                                "nullable": true,
                                "type": "string"
                              },
                              "message": {
                                "description": "The action taken.",
                                "example": "Domain example.com has exceeded the max defers and failures per hour (5/5 (100%)) allowed. Message discarded.",
                                "type": "string"
                              },
                              "msgid": {
                                "description": "The message ID.",
                                "example": "1RuV0Z-0005NR-BN",
                                "type": "string"
                              },
                              "recipient": {
                                "description": "The recipient's mail address.",
                                "example": "user@example.com",
                                "format": "email",
                                "type": "string"
                              },
                              "router": {
                                "description": "The mail server's internal router name.",
                                "example": "enforce_mail_permissions",
                                "type": "string"
                              },
                              "sender": {
                                "description": "The sender's full email address.",
                                "example": "user@example.com",
                                "type": "string"
                              },
                              "senderauth": {
                                "description": "The user authentication.",
                                "example": "localuser",
                                "format": "hostname",
                                "type": "string"
                              },
                              "senderhost": {
                                "description": "The sender's hostname.",
                                "example": "localhost",
                                "format": "hostname",
                                "type": "string"
                              },
                              "senderip": {
                                "description": "The sender's IP address.",
                                "example": "127.0.0.1",
                                "type": "string"
                              },
                              "sendunixtime": {
                                "description": "When the message was sent.",
                                "example": 1328559471,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "size": {
                                "description": "The message's size.",
                                "example": 1653,
                                "format": "bytes",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "spamscore": {
                                "description": "The message's spam score.\n\n**Note:**\n\nIf the spam prevention engine uses a result range from `0` to `1` , the system multiplies the result by `10`.",
                                "example": 5,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "transport": {
                                "description": "The mail transfer agent (MTA).",
                                "example": null,
                                "nullable": true,
                                "type": "string"
                              },
                              "transport_is_remote": {
                                "description": "Whether the mail transfer agent (MTA) is remote.\n* `1` — Remote.\n* `0` — Not remote.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The delivery status.\n* `success`\n* `defer`\n* `failure`\n* `inprogress`",
                                "enum": [
                                  "success",
                                  "defer",
                                  "failure",
                                  "inprogress"
                                ],
                                "example": "success",
                                "type": "string"
                              },
                              "user": {
                                "description": "The sender's username.",
                                "example": "cpanel1",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "emailtrack_search",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return email delivery records by search criteria",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 emailtrack_search"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/emailtrack_search?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/emailtrack_stats": {
      "get": {
        "description": "This function retrieves email tracking statistics.",
        "operationId": "emailtrack_stats",
        "parameters": [
          {
            "description": "The type of delivery to query. If you do not specify a value,\nthis function returns all types.\n* `remote`\n* `remote-or-faildefer`\n* `local`",
            "in": "query",
            "name": "deliverytype",
            "required": false,
            "schema": {
              "enum": [
                "remote",
                "remote-or-faildefer",
                "local"
              ],
              "example": "remote",
              "type": "string"
            }
          },
          {
            "description": "The end time of the search window. This parameter defaults to the current time.\n\n**Note**\n\nYou can also call this the `enddate` parameter.",
            "in": "query",
            "name": "endtime",
            "required": false,
            "schema": {
              "default": "the current time",
              "example": 1471552781,
              "format": "unix_timestamp",
              "type": "integer"
            }
          },
          {
            "description": "Whether to return the `TOTALSIZE` parameter.\n* 1 — Do **not** return.\n* 0 — Return.",
            "in": "query",
            "name": "nosize",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to return the `SUCCESSCOUNT` parameter.\n* 1 — Do **not** return.\n* 0 — Return.",
            "in": "query",
            "name": "nosuccess",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The start time of the search window.\n\n**Note**\n\nYou can also call this the `startdate` parameter.",
            "in": "query",
            "name": "starttime",
            "required": false,
            "schema": {
              "default": 0,
              "example": 1371552781,
              "format": "unix_timestamp",
              "type": "integer"
            }
          },
          {
            "description": "The cPanel username to query. If you do not specify a value, the function retrieves statistics for all of the server's accounts.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "records": {
                          "description": "An array of objects containing the message information.",
                          "items": {
                            "properties": {
                              "DEFERCOUNT": {
                                "description": "The number of deferral events.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "DEFERFAILCOUNT": {
                                "description": "The number of messages that the system deferred and failed to deliver.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "FAILCOUNT": {
                                "description": "The number of delivery failures.\n\n**Note:**\n\n If a message has three recipients, it can have a total of three failed deliveries.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "INPROGRESSCOUNT": {
                                "description": "The number of messages currently in progress.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "SENDCOUNT": {
                                "description": "The number of sent messages.",
                                "example": 14,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "SUCCESSCOUNT": {
                                "description": "The number of successful deliveries.\n\n**Note:**\n\n If a message has three recipients, it can have a total of three successful deliveries.",
                                "example": 14,
                                "type": "integer"
                              },
                              "TOTALSIZE": {
                                "description": "The total size of messages that the server sent.",
                                "example": 27444,
                                "format": "bytes",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "emailtrack_stats",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account email tracking statistics",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 emailtrack_stats"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/emailtrack_stats?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/emailtrack_user_stats": {
      "get": {
        "description": "This function retrieves email tracking statistics for each user.",
        "operationId": "emailtrack_user_stats",
        "parameters": [
          {
            "description": "The type of delivery to query. If you do not specify a value,\nthis function returns all types.\n* `remote`\n* `remote-or-faildefer`\n* `local`",
            "in": "query",
            "name": "deliverytype",
            "required": false,
            "schema": {
              "enum": [
                "remote",
                "remote-or-faildefer",
                "local"
              ],
              "example": "remote",
              "type": "string"
            }
          },
          {
            "description": "The end time of the search window.",
            "in": "query",
            "name": "endtime",
            "required": false,
            "schema": {
              "default": "the current time",
              "example": 1471552781,
              "format": "unix_timestamp",
              "type": "integer"
            }
          },
          {
            "description": "The sender's email address. If you do not specify a value, this function returns entries for mail from all senders.",
            "in": "query",
            "name": "sender",
            "required": false,
            "schema": {
              "example": "username@example.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "The start time of the search window.",
            "in": "query",
            "name": "starttime",
            "required": false,
            "schema": {
              "default": 0,
              "example": 1371552781,
              "format": "unix_timestamp",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "records": {
                          "description": "An array of objects containing the message information.",
                          "items": {
                            "properties": {
                              "DEFERCOUNT": {
                                "description": "The number of deferral events.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "DEFERFAILCOUNT": {
                                "description": "The number of messages that the system deferred and failed to deliver.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "DOMAIN": {
                                "description": "The mailbox's domain.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "FAILCOUNT": {
                                "description": "The number of delivery failures.\n\n**Note:**\n\n If you assign a message three recipients, the system can fail to deliver the message three times.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "OWNER": {
                                "description": "The mailbox's account owner.",
                                "example": "root",
                                "type": "string"
                              },
                              "PRIMARY_DOMAIN": {
                                "description": "The mailbox account's primary domain.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "REACHED_MAXDEFERFAIL": {
                                "description": "Whether the mailbox reached the maximum number of failed deferred messages.\n* `1` — Reached.\n* `0` — Has **not** reached.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "REACHED_MAXEMAILS": {
                                "description": "Whether the mailbox has reached the maximum number of messages allowed per hour.\n* `1` — Reached.\n* `0` — Has **not** reached.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "SENDCOUNT": {
                                "description": "The number of sent messages.",
                                "example": 14,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "SUCCESSCOUNT": {
                                "description": "The number of successful deliveries.\n\n**Note:**\n\n If you assign a message three recipients, the system can successfully deliver the message three times.",
                                "example": 14,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "TOTALSIZE": {
                                "description": "The total size of messages sent by the server.",
                                "example": 27444,
                                "format": "bytes",
                                "type": "integer"
                              },
                              "USER": {
                                "description": "The mailbox's owner.",
                                "example": "example",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "emailtrack_user_stats",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all cPanel accounts email tracking statistics",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 emailtrack_user_stats"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/emailtrack_user_stats?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/enable_authentication_provider": {
      "get": {
        "description": "This function enables an external authentication identity provider for a specified service.",
        "operationId": "enable_authentication_provider",
        "parameters": [
          {
            "description": "A valid identity provider's identification key.",
            "in": "query",
            "name": "provider_id",
            "required": true,
            "schema": {
              "example": "cpanelid",
              "type": "string"
            }
          },
          {
            "description": "The cPanel & WHM service's name:\n\n* `cpaneld`\n* `webmaild`\n* `whostmgrd`",
            "in": "query",
            "name": "service_name",
            "required": true,
            "schema": {
              "enum": [
                "cpaneld",
                "webmaild",
                "whostmgrd"
              ],
              "example": "cpaneld",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "enable_authentication_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable identity provider",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 enable_authentication_provider service_name='cpaneld' provider_id='cpanelid'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/enable_authentication_provider?api.version=1&service_name=cpaneld&provider_id=cpanelid"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/enable_cpgreylist": {
      "get": {
        "description": "This function enables Greylisting.",
        "operationId": "enable_cpgreylist",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "enable_cpgreylist",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable Greylisting",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 enable_cpgreylist"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/enable_cpgreylist?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/enable_cphulk": {
      "get": {
        "description": "This function enables the cPHulk service.",
        "operationId": "enable_cphulk",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "enable_cphulk",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable login security",
        "tags": [
          "cPHulk",
          "Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 enable_cphulk"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/enable_cphulk?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/enable_dkim": {
      "get": {
        "description": "This function enables DomainKeys Identified Mail (DKIM) records on the DNS server for one or more domains.",
        "operationId": "enable_dkim",
        "parameters": [
          {
            "description": "The domain for which to enable DKIM records on the DNS server.\n\n**Note:**\n\n To enable multiple domain DKIM records, duplicate the parameter name. For example, use the `domain=example-1.com`, `domain=example-2.com`, and `domain=example-3.com parameters`.",
            "examples": {
              "multiple": {
                "summary": "To enable multiple domain DKIM records",
                "value": "domain=example-1.com domain=example-2.com domain=example-3.com"
              },
              "single": {
                "summary": "To enable a single domain DKIM record",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects containing information about the enabled state of a domain's DKIM records on the DNS server.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The domain for which the system enabled the DKIM record.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "msg": {
                                "description": "The domain's DKIM record status message.",
                                "example": "Installed Keys",
                                "type": "string"
                              },
                              "status": {
                                "description": "Whether the system enabled the domain's DKIM record on the DNS server.\n* `1` — The system enabled the domain's DKIM record.\n* `0` — The system did **not** enable the domain's DKIM record.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "enable_dkim",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable domain's DKIM records",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 enable_dkim domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/enable_dkim?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/enable_dnssec_for_domains": {
      "get": {
        "description": "This function enables DNSSEC on the domain.\n\n**Note:**\n\n* Only servers that run PowerDNS can use DNSSEC. If you call this function on a server that doesn't use PowerDNS, you will receive an error.\n* After you enable DNSSEC on the domain, you **must** add the Delegation of Signing (DS) records on your DNS server and with your registrar.\n* You **cannot** modify the DNSSEC security key. To make any changes, you **must** disable, delete, and re-create the DNSSEC security key.",
        "operationId": "enable_dnssec_for_domains",
        "parameters": [
          {
            "description": "The domain for which to enable DNSSEC.\n\n**Note:**\n\nTo enable DNSSEC on multiple domains, duplicate or increment the parameter name. For example, to check three domains, you could:\n* Use the `domain` parameter multiple times.\n* Use the `domain`, `domain-1`, and `domain-2` parameters.",
            "examples": {
              "multiple": {
                "summary": "Multiple domains",
                "value": "domain=example.com&domain-1=example1.com&domain-2=example2.com"
              },
              "multiple-alternative": {
                "summary": "Multiple domains",
                "value": "domain=example.com&domain=example1.com&domain=example2.com"
              },
              "single": {
                "summary": "A single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "Whether to activate the newly-created key.\n* `1` - Activate the key.\n* `0` - Do **not** activate the key.",
            "in": "query",
            "name": "active",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The algorithm that the system uses to generate the security key.\n* `5` - RSA/SHA-1\n* `6` - DSA-NSEC3-SHA1\n* `7` - RSASHA1-NSEC3-SHA1\n* `8` - RSA/SHA-256\n* `10` - RSA/SHA-512\n* `13` - ECDSA Curve P-256 with SHA-256\n* `14` - ECDSA Curve P-384 with SHA-384\n\n**Note:**\n\nWe recommend that you use an ECDSA Curve P-256 with SHA-256 (13) value if your registrar supports it.",
            "in": "query",
            "name": "algo_num",
            "required": false,
            "schema": {
              "default": 8,
              "enum": [
                5,
                6,
                7,
                8,
                10,
                13,
                14
              ],
              "example": 8,
              "type": "integer"
            }
          },
          {
            "description": "The manner in which the system creates the security key.\n* `classic` - Use separate keys for KSK and ZSK. Use this value when the `algo_num` parameter is equal to or less than 8.\n* `simple` - Use a single key for both KSK and ZSK. Use this value when the `algo_num` parameter is greater than 8.",
            "in": "query",
            "name": "key_setup",
            "required": false,
            "schema": {
              "default": "classic",
              "enum": [
                "classic",
                "simple"
              ],
              "example": "classic",
              "type": "string"
            }
          },
          {
            "description": "The number of times that the system rehashes the first resource record hash operation.",
            "in": "query",
            "name": "nsec3_iterations",
            "required": false,
            "schema": {
              "default": 7,
              "example": 7,
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether NSEC3 operates in Narrow or Inclusive mode.\n\n**Note:**\n\nFor information about these modes, read [PowerDNS's DNSSEC documentation](https://doc.powerdns.com/authoritative/dnssec/intro.html).\n\n* `1` - Narrow mode.\n* `0` - Inclusive mode.",
            "in": "query",
            "name": "nsec3_narrow",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the system will create records for all delegations.\n* `1` - Create records for all delegations.\n* `0` - Create records only for secure delegations.\n\n**Note:**\n\nOnly use the `1` value if you **must** create records for all delegations.",
            "in": "query",
            "name": "nsec3_opt_out",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "A hexadecimal string that the system appends to the domain name before it applies the hash function to the name.\n\n**Note:**\n\nFor information about salt values, read [RFC 5155](https://tools.ietf.org/html/rfc5155#section-3.1.5).",
            "in": "query",
            "name": "nsec3_salt",
            "required": false,
            "schema": {
              "example": "1a2b3c4d5e6f",
              "type": "string"
            }
          },
          {
            "description": "Whether the domain will use [Next Secure Record](https://tools.ietf.org/html/rfc4470) (NSEC) or NSEC3 semantics.\n* `1` - Use NSEC3 semantics.\n* `0` - Use NSEC semantics.\n\n**Note:**\n\nIf you use this value, the system ignores the other NSEC3 options.",
            "in": "query",
            "name": "use_nsec3",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "domains": {
                          "description": "An array of objects that contains information about each domain.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The domain for which the system enabled DNSSEC.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Whether the system enabled DNSSEC.\n* `1` - Enabled.\n* `0` - The system failed to enable DNSSEC.\n\n**Note:**\n\nThis function will **not** return the `nsec_version` and `new_key_id` returns if this return is a `0` value.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "new_key_id": {
                                "description": "The assigned security key ID. A valid ID.",
                                "example": "2",
                                "type": "string"
                              },
                              "nsec_error": {
                                "description": "The domain has a NSEC3 configuration error.\n\n**Note:**\n\nThe function **only** displays this return if there is a NSEC3 configuration error. An error message.",
                                "example": "Error message.",
                                "type": "string"
                              },
                              "nsec_version": {
                                "description": "The version of DNSSEC the system used.\n* `NSEC3`\n* `NSEC`\n\n**Note:**\n\nThe function only displays this return if there is a NSEC3 configuration error. The system also returns the error in the `nsec_error` return.",
                                "enum": [
                                  "NSEC3",
                                  "NSEC"
                                ],
                                "example": "NSEC3",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "enable_dnssec_for_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable DNSSEC on domain",
        "tags": [
          "DNS",
          "DNS Security"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 enable_dnssec_for_domains domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/enable_dnssec_for_domains?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/enable_market_provider": {
      "get": {
        "description": "This function enables a cPanel Market provider.",
        "operationId": "enable_market_provider",
        "parameters": [
          {
            "description": "The cPanel Market provider's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "cPStore",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "enable_market_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable Market provider",
        "tags": [
          "Market",
          "Provider Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 enable_market_provider name='cPStore'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/enable_market_provider?api.version=1&name=cPStore"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/enable_monitor_all_enabled_services": {
      "get": {
        "description": "This function enables monitoring for all enabled services.",
        "operationId": "enable_monitor_all_enabled_services",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "services": {
                          "description": "An array of objects that contains information about a service and its monitoring status.",
                          "items": {
                            "properties": {
                              "monitored": {
                                "description": "Whether the system monitors the service.\n- `1` - Monitored.\n- `0` - Not monitored.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "service": {
                                "description": "The service's name. A valid service name.",
                                "example": "cphulkd",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "enable_monitor_all_enabled_services",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- `1` - Success\n- `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable monitoring for all services",
        "tags": [
          "Server Administration",
          "Services"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 enable_monitor_all_enabled_services"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/enable_monitor_all_enabled_services?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52.0.8"
      }
    },
    "/enqueue_deferred_ssl_installations": {
      "get": {
        "description": "This function adds SSL certificates to the installation queue. This allows you to\ndefer and batch SSL certificate installation.\n\n**Important:**\n\nYou **must** enter the same quantity of `username`, `cab`, `crt`, `key`, and `vhost_name`\nparameters. For example, to add three certificates to the installation queue, enter the\n`username` parameter three times, then enter three `cab`, `crt`, `key`, and `vhost_name`\nparameters.",
        "operationId": "enqueue_deferred_ssl_installations",
        "parameters": [
          {
            "description": "The Certificate Authority (CA) bundle's contents.\n\n**Note:**\n\n* We recommend that you enter an empty string. An empty string tells the server to\ndownload the CA bundle automatically.\n* To add multiple certificates to the installation queue, duplicate or increment the\nparameter name. For example, `cab-1`, `cab-2`, and `cab-3`.",
            "examples": {
              "multiple": {
                "summary": "Enqueue multiple CA bundles.",
                "value": "cab-1=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ8V8e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE----- cab-2=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ7V7e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE----- cab-3=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----"
              },
              "multiple-alternative": {
                "summary": "Enqueue multiple CA bundles.",
                "value": "cab=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ8V8e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE----- cab=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ7V7e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE----- cab=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----"
              },
              "single": {
                "summary": "Enqueue a single CA bundle.",
                "value": "-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----"
              }
            },
            "in": "query",
            "name": "cab",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The certificate's contents.\n\n**Note:**\n\n To add multiple certificates to the installation queue, duplicate or increment the\n parameter name. For example, `crt-1`, `crt-2`, and `crt-3`.",
            "examples": {
              "multiple": {
                "summary": "Enqueue the contents of multiple certificates.",
                "value": "crt-1=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2CFCrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE----- crt-2=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2AZArc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE----- crt-3=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----"
              },
              "multiple-alternative": {
                "summary": "Enqueue the contents of multiple certificates.",
                "value": "crt=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2CFCrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE----- crt=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2AZArc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE----- crt=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----"
              },
              "single": {
                "summary": "Enqueue a single certificate's contents.",
                "value": "-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----"
              }
            },
            "in": "query",
            "name": "crt",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The private key's text.\n\n**Note:**\n\nTo add multiple certificates to the installation queue, duplicate or increment the\nparameter name. For example, `key-1`, `key-2`, and `key-2`.",
            "examples": {
              "multiple": {
                "summary": "Enqueue the private key text of multiple certificates.",
                "value": "key-1=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3LMNmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY----- key-2=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3TUVmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY----- key-3=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3RSHmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----"
              },
              "multiple-alternative": {
                "summary": "Enqueue the private key text of multiple certificates.",
                "value": "key=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3LMNmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY----- key=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3TUVmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY----- key=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3RSHmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----"
              },
              "single": {
                "summary": "Enqueue a single certificate's private key text.",
                "value": "-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3RSHmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----"
              }
            },
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The cPanel account username for which to enqueue the SSL certificate installations.\n\n**Note:**\n\nTo add multiple certificates to the installation queue, duplicate or increment the\nparameter name. For example, `username-1`, `username-2`, and `username-3`.",
            "examples": {
              "multiple": {
                "summary": "Enqueue multiple SSL certificate installations.",
                "value": "username-1=username1 username-2=username2 username-3=username3"
              },
              "multiple-alternative": {
                "summary": "Enqueue multiple SSL certificate installations.",
                "value": "username=username1 username=username2 username=username3"
              },
              "single": {
                "summary": "Enqueue a single SSL certificate installation.",
                "value": "username"
              }
            },
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the web virtual host (vhost) for which to install the certificate.\n\n**Note:**\n\n To add multiple certificates to the installation queue, duplicate or increment the\n parameter name. For example, `vhost_name-1`, `vhost_name-2`, and `vhost_name-3`.",
            "examples": {
              "multiple": {
                "summary": "Install the certificate for multiple vhosts.",
                "value": "vhost_name-1=host1.example.com vhost_name-2=host2.example.com vhost_name-3=host3.example.com"
              },
              "multiple-alternative": {
                "summary": "Install the certificate for multiple vhosts.",
                "value": "vhost_name=host1.example.com vhost_name=host2.example.com vhost_name=host3.example.com"
              },
              "single": {
                "summary": "Install the certificate for a single vhost.",
                "value": "host.example.com"
              }
            },
            "in": "query",
            "name": "vhost_name",
            "required": true,
            "schema": {
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "enqueue_deferred_ssl_installations",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add SSL certificate to installation queue",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 enqueue_deferred_ssl_installations username='username' cab='-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----' crt='-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----' key='-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3RSHmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----' vhost_name='host.example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/enqueue_deferred_ssl_installations?api.version=1&username=username&cab=-----BEGIN%2520CERTIFICATE-----%250AMIIB%2bjCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%250AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%250Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%250AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%250AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k%2b625h8cXyv%250ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz%2biCWaEVh43KRuH6X4M%250AypqfpX%2f1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt%2f5%250A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%250AdcZfHeFhVYAA1IFLezEPI2PnPfMD%2bfQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%250AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4%2f5ODFlitppK%2bULdjG%2bBqXH%2f9Apy%250AbW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY%250A-----END%2520CERTIFICATE-----&crt=-----BEGIN%2520CERTIFICATE-----%250AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%250AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%250AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%250AggEBALer6vzwFt%252BO6ooHcXpq%252Bi%252FOVVQEY3oWxrqH6mB%252FPssVSxwcf6bLjoO4so%252Fn%250Adrymhb9mqfkOqYVHwnQ%252Fh2uM%252BIw1NKKDfwOljWcgCS24NykbfQUlW%252FSNDTovdDGl%250AT1Aner090Qse%252B19ta8KS%252F3Akz37bkgqMkPO%252FiEOHlF%252FLbLvjfighkoGco51wc6d7%250AHCQwPWR%252BUenbQWzUwR4%252F4Pqw%252FYrxDAv8O%252FEnNfOGwnCnlnFq4a390VGriqMAngzI%250AlRMVDu4qJGW3dFNStVUm71%252B16ba%252FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%250AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%250AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%250ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%250AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%252FBwM%250AfJEvlPO30%252FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%252FB36joYDrOhtiO6XsRw4Zm%250AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%252F0rQp1YPsVN9tBgiag754HPo%250AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%250A52gKM0u2%252BrK%252FzIYjh%252FhooqN%252BTY%252BJQ667JzLzPNenzAYFsoIQgVj6%252FZoFqJA4nbxC%250Azv%252Fspqc0OQ2W9m5egRPDhngKt%252Bi9804N7FeilBL%252FcpEgUHhgzMBi1T9n%252BYBrc6bO%250AjNjvnEQRbqZY%250A-----END%2520CERTIFICATE-----&key=-----BEGIN%2520RSA%2520PRIVATE%2520KEY-----%250AMIIEowIBAAKCAQEAt6vq%252FPAW347qigdxemr6L85VVARjehbGuofqYH8%252ByxVLHBx%252F%250ApsuOg7iyj%252Bd2vKaFv2ap%252BQ6phUfCdD%252BHa4z4jDU0ooN%252FA6WNZyAJLbg3KRt9BSVb%250A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%252FcCTPftuSCoyQ87%252BIQ4eUX8tsu%252BN%252BKCGS%250AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%252Fg%252BrD9ivEMC%252Fw78Sc184bCcKeWcWrhrf3R%250AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%250A55rS1ItHF10V3sDRAxBG%252B2eqhS%252FpFkGF5%252Bva3QIDAQABAoIBAAONBE79iUOrLKec%250AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%252FXiqM32%252By1xwRyC3gW%252Fj%250A5odSw19ai%252Fj0V9lHMxOiT%252BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%252BM%250ArfmKDKTkM8%252BWZhsAQe8kSN8NPL3pIJnG%252Ftuc8lwFoZOEot6%252BAeGYdxxEdFbvVyEm%250Aa8%252FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%252B6TMA%250AF7kJsOFiw%252B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%250A6EH%252FCxUCgYEA5qSo6zf6yJ5tdwm%252FNnrKwvFksapd%252Bi9%252BnAqQHHTFPtlzKHkZ7d5x%250AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%252FsAILTcu8QyPzN%250A%252FcYVHWykmFuS55uEa2Mlv6j%252FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%250AlmTy4ka991Ungy%252BVcNTSw9z50l%252Fzu4GxmAlj1fsuX%252F27nbfpsOFjbvlm4xLfW3qM%250A%252BWkrvKXUuxeIbGcBnVlHFWgc6%252BKt5vNoOzUVsm5i90R%252Fg3vhB5cdvuVoTKf2EU4n%250ANVTSaM%252F6zpzBEHSKtTsbx0FiPjS04bk%252Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%250AF%252FPOppV1PaESkCWG76lfL4%252FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%250AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%250AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%250AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%252F%252BUI8P4rdVXrIGHANTAjZl2bt4S51%250Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%252BJq5sjiQ7AoNs7mpvYxqs%250A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%252F%252BypxgH5EnwVr%252B3fF49tfC5xpV9Odfu1Z%250ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%252BM6rc86CmZf%252BvAPTN3%252BJwG%252BcIE%250AcKuYkroIzFWDu9NYiioUI7%252Fa9XdmTvfrT3RSHmup0FoRmlRHD%252FM8%250A-----END%2520RSA%2520PRIVATE%2520KEY-----&vhost_name=host.example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "88"
      }
    },
    "/enqueue_transfer_item": {
      "get": {
        "description": "This function adds a transfer session to a queue. For more information about how this function works with other\nfunctions in the transfer and restore process, read our\n[Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.\n\n**Important:**\n\nThe `module` parameter determines which additional parameters to use with the function.",
        "operationId": "enqueue_transfer_item",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/schemas-Transfers_EnqueueTransferItem_Type"
              }
            }
          },
          "description": "An enqueue transfer item."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "enqueue_transfer_item",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add module to transfer session",
        "tags": [
          "Transfers",
          "cPanel Account Transfer"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 --input=json --output=json enqueue_transfer_item"
          },
          {
            "label": "HTTP Request (Wire Format)",
            "lang": "HTTP",
            "source": "GET /cpsess##########/json-api/enqueue_transfer_item HTTP/1.1\nHost: example.com:2083\nCookie: ###################################\nContent-Type: application/json\nContent-Length: 0\n\n"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/ensure_dkim_keys_exist": {
      "get": {
        "description": "This function confirms the validity of a DomainKeys Identified Mail (DKIM) key for one or more domains.\n\n**Note:**\n\n* If an existing DKIM key does **not** meet the server's security requirements, the system replaces the existing DKIM key.\n* If no DKIM key exists, the system creates a new key for the domain.",
        "operationId": "ensure_dkim_keys_exist",
        "parameters": [
          {
            "description": "The domain for which to confirm a valid DKIM key exists.\n\n**Note:**\n\nTo check the DKIM key validity for multiple domain, duplicate the parameter name. For example, use the `domain-1=example.com`, `domain-2=example2.com`, and `domain-3=example3.com` parameters.",
            "examples": {
              "multiple": {
                "summary": "Check the DKIM key validity for multiple domains.",
                "value": "domain=example1.com&domain=example2.com&domain=example3.com"
              },
              "single": {
                "summary": "Check the DKIM key validity for a single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects containing information about the domain's DKIM key validity.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The domain for which the system confirmed that a valid DKIM key exists.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "msg": {
                                "description": "The domain's DKIM key status message.",
                                "example": "created new key",
                                "type": "string"
                              },
                              "status": {
                                "description": "Whether the system verified that the domain's DKIM key exists.\n* `1` — The system verified the existence of the domain's DKIM key.\n* `0` — The system did **not** verify the existence of the domain's DKIM key.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ensure_dkim_keys_exist",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed: Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate domain's DKIM keys",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ensure_dkim_keys_exist domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ensure_dkim_keys_exist?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/execute_remote_whmapi1_with_password": {
      "get": {
        "description": "This function executes WHM API 1 functions on a remote server.",
        "operationId": "execute_remote_whmapi1_with_password",
        "parameters": [
          {
            "description": "The name of the function to call on the remote server.",
            "in": "query",
            "name": "function",
            "required": true,
            "schema": {
              "example": "passwd",
              "type": "string"
            }
          },
          {
            "description": "The remote server's hostname or IP address.",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "example": "host.example.com",
              "type": "string"
            }
          },
          {
            "description": "The name of the parameter for the function.\n\n**Note:**\n\n You must enter the same number of parameter_name and parameter_value parameters.",
            "in": "query",
            "name": "parameter_name",
            "required": true,
            "schema": {
              "example": "user",
              "type": "string"
            }
          },
          {
            "description": "The value of the parameter for the function.\n\n**Note:**\n\n You must enter the same number of parameter_name and parameter_value parameters.",
            "in": "query",
            "name": "parameter_value",
            "required": true,
            "schema": {
              "example": "username2",
              "type": "string"
            }
          },
          {
            "description": "The password to log in to the remote server.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "luggage12345",
              "type": "string"
            }
          },
          {
            "description": "The username to log in to the remote server.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to use TLS verification. This parameter defaults to On.\n\n**Important:**\n\n We strongly recommend that you use TLS verification. Only connect to a server if you can verify its identity.",
            "in": "query",
            "name": "tls_verification",
            "required": false,
            "schema": {
              "example": "on",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "app": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "key-name*": {
                          "description": "The function's output.\n\n**Note:**\n\n The system uses the remote function's return name. A valid possible values.",
                          "example": "system",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "execute_remote_whmapi1_with_password",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Run remote WHM API 1 function",
        "tags": [
          "Integration",
          "API Execution"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 execute_remote_whmapi1_with_password host='host.example.com' username='username' password='luggage12345' function='passwd' parameter_name='user' parameter_value='username2'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/execute_remote_whmapi1_with_password?api.version=1&host=host.example.com&username=username&password=luggage12345&function=passwd&parameter_name=user&parameter_value=username2"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "90"
      }
    },
    "/exim_configuration_check": {
      "get": {
        "description": "This function scans the Exim configuration file for errors, and if it finds errors attempts to repair them.",
        "operationId": "exim_configuration_check",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "message": {
                          "description": "The reason why the configuration check failed.\n\n**Note:**\n\n The function **only** returns this parameter if the configuration file contains errors.",
                          "example": "cPanel was unable to automatically merge your Exim configuration with the new settings that shipped\nwith the build you have installed (11.38.0 (build 9999)) because you have a custom or broken configuration which\ncannot be automatically configured.\n    Since this configuration update is not critical, we left your previous configuration intact until\nthe new configuration can be properly installed.  In order to complete this configuration update, you will \nneed to manually merge your configuration with the new configuration settings.\n\n\nPlease follow the steps below to complete this update:\n\n\t1. <a href='javascript:select_exim_backup();'>Backup your existing configuration</a>\n\t2. <a href='javascript:select_exim_advanced();'>Notate any custom changes  you have made in the ACL section in the 'Advanced Editor  Tab'.</a>\n\t3. <a href='javascript:select_exim_reset();'>Choose 'Reset cPanel & WHM Exim configuration files, one option at a time, until the installed Exim configuration is valid' under the 'Reset Tab'.</a>\n\t4. <a href='javascript:select_exim_advanced();'>Reinstall your customizations in the 'Advanced Editor Tab'.</a>\n\n\nCurrent  Config Version: 10.320000\nNew Config Version: 10.330000",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "exim_configuration_check",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Configuration Update Failed",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Repair Exim configuration file",
        "tags": [
          "Mail",
          "Mail Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 exim_configuration_check"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/exim_configuration_check?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/export_zone_dnskey": {
      "get": {
        "description": "This function exports a domain's DNSKEY record value.",
        "operationId": "export_zone_dnskey",
        "parameters": [
          {
            "description": "The domain from which to fetch the DNSKEY record value.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The DNSSEC record's ID.",
            "in": "query",
            "name": "key_id",
            "required": true,
            "schema": {
              "example": 12345,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "dnskey": {
                          "description": "The DNSKEY record value.",
                          "example": "AwEAAch8SGW4vE6PjFWA9rbUm0AfTq+gJ0HC/nLu+2axdWHBIStt9lsOzKDorAr4vlmhlJzEzA62s96xp6mZ7XHUyWnkFwLs8obo6upL2in4h1ToOxzVl3lTs8O+kWtDq5/h1nwFlPDs9zpLJhlkTCtx2OTGbvimEYeqwPolUuSQR/Yb",
                          "type": "string"
                        },
                        "key_id": {
                          "description": "The security key's ID.",
                          "example": 12345,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "export_zone_dnskey",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Export domain's DNSKEY record value",
        "tags": [
          "DNS",
          "DNS Zones"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 export_zone_dnskey domain='example.com' key_id='12345'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/export_zone_dnskey?api.version=1&domain=example.com&key_id=12345"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "88"
      }
    },
    "/export_zone_key": {
      "get": {
        "description": "This function exports a DNSSEC security key to a domain.\n\n**Note:**\n\nOnly servers that run PowerDNS can use DNSSEC. If you call this function on a server\nthat doesn't use PowerDNS, you will receive an error.",
        "operationId": "export_zone_key",
        "parameters": [
          {
            "description": "The domain to export the security key to.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The security key's ID.\n\n**Note:**\n\nYou can locate the ID with the WHM AP1 `fetch_ds_records_for_domains` function.",
            "in": "query",
            "name": "key_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "key_tag": {
                          "description": "The security key's integer value.",
                          "example": 40481,
                          "type": "integer"
                        },
                        "key_type": {
                          "description": "The type of security key.\n\n* `CSK` — Combined Signing Key.\n* `KSK` — Key Signing Key.\n* `ZSK` — Zone Signing Key.",
                          "example": "CSK",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "export_zone_key",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Export domain's DNSSEC key",
        "tags": [
          "DNS",
          "DNS Security"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 export_zone_key domain='example.com' key_id='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/export_zone_key?api.version=1&domain=example.com&key_id=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/expunge_mailbox_messages": {
      "get": {
        "description": "This function removes mail messages from a cPanel account that you select with a query.\n\n**Important:**\n\n  When you disable the [Receive Mail role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "expunge_mailbox_messages",
        "parameters": [
          {
            "description": "An email account that exists on the server.",
            "in": "query",
            "name": "account",
            "required": true,
            "schema": {
              "example": "user@example.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "A mailbox name on the account.\n\n**Note:**\n\n  Because you cannot escape wildcard characters such as (`*`), we recommend that you use functions that use the `mailbox_guid` parameter instead. For example, the WHM API 1 `expunge_messages_for_mailbox_guid` function.",
            "in": "query",
            "name": "mailbox",
            "required": true,
            "schema": {
              "example": "INBOX",
              "type": "string"
            }
          },
          {
            "description": "A [Dovecot search query](http://wiki2.dovecot.org/Tools/Doveadm/SearchQuery) to select which messages you wish to remove from the mailbox.",
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "example": "savedbefore 52w",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "expunge_mailbox_messages",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove email account messages by Dovecot query",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 expunge_mailbox_messages account='user@example.com' mailbox='INBOX' query='savedbefore 52w'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/expunge_mailbox_messages?api.version=1&account=user%40example.com&mailbox=INBOX&query=savedbefore%2052w"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/expunge_messages_for_mailbox_guid": {
      "get": {
        "description": "This function removes mail messages from a cPanel account.\n\n**Important:**\n\n  When you disable the [Receive Mail role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "expunge_messages_for_mailbox_guid",
        "parameters": [
          {
            "description": "The email account's name.",
            "in": "query",
            "name": "account",
            "required": true,
            "schema": {
              "example": "user@example.com",
              "type": "string"
            }
          },
          {
            "description": "The mailbox's globally unique identifier (GUID).\n\n**Note:**\n\nTo find the mailbox GUID, use the WHM API 1 - `get_mailbox_status` function.",
            "in": "query",
            "name": "mailbox_guid",
            "required": true,
            "schema": {
              "example": "2550860f0c58d158c92a000044f0d230",
              "type": "string"
            }
          },
          {
            "description": "The Dovecot search query to select which messages you wish to remove from the mailbox. For more information, read [Dovecot's Search Query](http://wiki2.dovecot.org/Tools/Doveadm/SearchQuery) documentation.",
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "example": "savedbefore 52w",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "expunge_messages_for_mailbox_guid",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove email account messages by mailbox GUID",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 expunge_messages_for_mailbox_guid account='user@example.com' mailbox_guid='2550860f0c58d158c92a000044f0d230' query='savedbefore 52w'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/expunge_messages_for_mailbox_guid?api.version=1&account=user%40example.com&mailbox_guid=2550860f0c58d158c92a000044f0d230&query=savedbefore%2052w"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/fetch_dkim_private_keys": {
      "get": {
        "description": "This function returns a domain's installed DKIM private key in [Privacy-Enhanced Mail](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) (PEM) format.\n\n**Warning:**\n\n  We **strongly** recommend that you protect your private key. If others obtain your private DKIM key, they could sign emails and impersonate you as a sender.",
        "operationId": "fetch_dkim_private_keys",
        "parameters": [
          {
            "description": "The queried domain.\n\n**Note:**\n\n To retrieve multiple domain DKIM keys, increment the parameter name. For example, use the `domain-1=example-1.com`, `domain-2=example-2.com`, and `domain-3=example-3.com`                      parameters.",
            "examples": {
              "multiple": {
                "summary": "Query multiple domains.",
                "value": "domain=example-1.com&domain=example-2.com&domain=example-3.com"
              },
              "single": {
                "summary": "Query a single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array containing information about the domain's DKIM private key.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The queried domain.",
                                "example": "example.com",
                                "type": "string"
                              },
                              "pem": {
                                "description": "The domain's DKIM private key, in PEM format.",
                                "example": "-----BEGIN RSA PRIVATE KEY-----\nMIICLDCCAdKgAwIBAgIBADAKBggqhkjOPQQDAjB9MQswCQYDVQQGEwJCRTEPMA0G\nA1UEChMGR251VExTMSUwIwYDVQQLExxHbnVUTFMgY2VydGlmaWNhdGUgYXV0aG9y\naXR5MQ8wDQYDVQQIEwZMZXV2ZW4xJTAjBgNVBAMTHEdudVRMUyBjZXJ0aWZpY2F0\nZSBhdXRob3JpdHkwHhcNMTEwNTIzMjAzODIxWhcNMTIxMjIyMDc0MTUxWjB9MQsw\nCQYDVQQGEwJCRTEPMA0GA1UEChMGR251VExTMSUwIwYDVQQLExxHbnVUTFMgY2Vy\ndGlmaWNhdGUgYXV0aG9yaXR5MQ8wDQYDVQQIEwZMZXV2ZW4xJTAjBgNVBAMTHEdu\ndVRMUyBjZXJ0aWZpY2F0ZSBhdXRob3JpdHkwWTATBgcqhkjOPQIBBggqhkjOPQMB\nBwNCAARS2I0jiuNn14Y2sSALCX3IybqiIJUvxUpj+oNfzngvj/Niyv2394BWnW4X\nuQ4RTEiywK87WRcWMGgJB5kX/t2no0MwQTAPBgNVHRMBAf8EBTADAQH/MA8GA1Ud\nDwEB/wQFAwMHBgAwHQYDVR0OBBYEFPC0gf6YEr+1KLlkQAPLzB9mTigDMAoGCCqG\nSM49BAMCA0gAMEUCIDGuwD1KPyG+hRf88MeyMQcqOFZD0TbVleF+UsAGQ4enAiEA\nl4wOuDwKQa+upc8GftXE2C//4mKANBC6It01gUaTIpo==\n-----END RSA PRIVATE KEY-----\n",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetch_dkim_private_keys",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domain's DKIM private key",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetch_dkim_private_keys domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetch_dkim_private_keys?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/fetch_ds_records_for_domains": {
      "get": {
        "description": "This function fetches a domain's Delegation of Signing (DS) record.\n\n**Note:**\n\nOnly servers that run PowerDNS can use DNSSEC. If you call this function on a server that doesn't use PowerDNS, you will receive an error.",
        "operationId": "fetch_ds_records_for_domains",
        "parameters": [
          {
            "description": "The domain to fetch a DS record from.\n\n**Note:**\n\nTo fetch records from multiple domains, duplicate or increment the parameter name. For example, to check three domains, you could:\n* Use the `domain` parameter multiple times.\n* Use the `domain`, `domain-1`, and `domain-2` parameters.",
            "examples": {
              "multiple": {
                "summary": "Multiple domains",
                "value": "domain=example.com&domain-1=example1.com&domain-2=example2.com"
              },
              "multiple-alternative": {
                "summary": "Multiple domains",
                "value": "domain=example.com&domain=example1.com&domain=example2.com"
              },
              "single": {
                "summary": "A single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "domains": {
                          "description": "An array of objects that contains information about each domain.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The domain name.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "ds_records": {
                                "description": "An object that contains domain's DS records.\n\n**Note:**\n\nIf the domain does **not** have a DS record, this function returns an empty object.",
                                "example": {
                                  "keys": {
                                    "40481": {
                                      "active": 1,
                                      "algo_desc": "RSA/SHA-256",
                                      "algo_num": 8,
                                      "algo_tag": "RSASHA256",
                                      "bits": 2048,
                                      "created": 1575395316,
                                      "digests": [
                                        {
                                          "algo_desc": "SHA-1",
                                          "algo_num": 1,
                                          "digest": "2808a14b89118256119d93d24b9e6b673dca092b"
                                        },
                                        {
                                          "algo_desc": "SHA-256",
                                          "algo_num": 2,
                                          "digest": "02a57812deb952438382ed8dd20f00d4af844a55b5324d28bb"
                                        },
                                        {
                                          "algo_desc": "SHA-384",
                                          "algo_num": 4,
                                          "digest": "4569a6fcfe9e151ec6a163307e67eaa3a9547f16cd80751b0d46eb498bd96743bd4ff7c4f6fd5f76cc780aeb979cd08d"
                                        }
                                      ],
                                      "flags": 257,
                                      "key_id": 1,
                                      "key_tag": 40481,
                                      "key_type": "KSK",
                                      "privatekey": "Private-key-format: v1.2\nAlgorithm: 8 (RSASHA256)\nModulus: syUlztxieV1aOtuYAGGA4VBxgquwqPTWQXcDVY1VRFcPgFmLMWYr6dDnN4OUhu2yIulK3KMeZmAc/DmwM+yNdCdYc9y84gw5OyONKduuPGYXfwCiJfOJ+NpGaFomK6fVFN8BMi6LUBytdA4gotPw45Uz8FIbl1KsEOnV4/ZpjiM=\nPublicExponent: AQAB\nPrivateExponent: LxIfsQ7vQPxqbPSuJ8t21b0RVkhOjtZmRaVD1wLf2KkXhZ4BmOVDvJgLaObF6/4gxFOQPBEQN84hT5TI25vYPrAwRAlP/yGmQ4Z2aPIYeEawoqqNoYEa5Xjs1X90i6/+Y8mJSZpGvr4/Y4ElothZTUw+LCYb6o9ulg53yya8KUE=\nPrime1: 4od92Rbx9fSXRIk6eSSdTYN/Do3zgDiCuxmuZaCrrEAlkiK11iz/s4aZGj9+Yk4NfusjXr3NqU1OMfBiIp67Sw==\nPrime2: ynOJdz/E4/B6iBtuz/4y0kasljMtiJnaNIxPr4LG+hByx7WWCnaPm6p8g1pz3FC/w7HAdWq9xzR1VnbRPGcZiQ==\nExponent1: KUKmkIEWZ0c6ujgIl4IsyK6X2O3QGV2xqiSeWFJwknpInZqG5lDh7jAo+NfxzDQNTz3C/oGx0RGMmZoANfAViw==\nExponent2: ZcFkmpdmstqv+7EuJUSy7pWvMV9Px5Ts4/SSKLkmoZGa314Zp/CnhapPIwZXrai4effhsCKSeImZYHgf+qgnYQ==\nCoefficient: PBQUQquZB0kG//cy8oVA6nHvKkvVJ8zV4GVlkXHTDylbjoWBTuNWwQ93t5SM7Rz3JePHImWdOVMYNIXpPlp56g==\n"
                                    }
                                  },
                                  "nsec_details": {
                                    "nsec3_hash_algo_desc": "SHA-1",
                                    "nsec3_hash_algo_num": 1,
                                    "nsec3_iterations": 7,
                                    "nsec3_narrow": 1,
                                    "nsec3_opt_out": 0,
                                    "nsec3_salt": "1a2b3c4d5e6f",
                                    "nsec_version": "NSEC3"
                                  }
                                },
                                "properties": {
                                  "keys": {
                                    "additionalProperties": {
                                      "description": "Each key/value property includes information related the domain's DNSSEC record.",
                                      "properties": {
                                        "active": {
                                          "description": "Whether the DS key is active.\n* `1` - Active.\n* `0` - Inactive.",
                                          "enum": [
                                            0,
                                            1
                                          ],
                                          "example": 1,
                                          "type": "integer"
                                        },
                                        "algo_desc": {
                                          "description": "A description of the algorithm that the DS key uses.",
                                          "example": "RSA/SHA-256",
                                          "type": "string"
                                        },
                                        "algo_num": {
                                          "description": "The [Internet Engineering Task Force](https://www.ietf.org/) (IETF)-recognized DNSSEC Digest Algorithm Number.\n* `5` - RSA/SHA-1\n* `6` - DSA-NSEC3-SHA1\n* `7` - RSASHA1-NSEC3-SHA1\n* `8` - RSA/SHA-256\n* `10` - RSA/SHA-512\n* `13` - ECDSA Curve P-256 with SHA-256\n* `14` - ECDSA Curve P-384 with SHA-384",
                                          "enum": [
                                            5,
                                            6,
                                            7,
                                            8,
                                            10,
                                            13,
                                            14
                                          ],
                                          "example": 8,
                                          "type": "integer"
                                        },
                                        "algo_tag": {
                                          "description": "The short-form reference to the algorithm.",
                                          "example": "RSASHA256",
                                          "type": "string"
                                        },
                                        "bits": {
                                          "description": "The DS key's size, in bits.",
                                          "example": 2048,
                                          "format": "bits",
                                          "type": "integer"
                                        },
                                        "created": {
                                          "description": "The key's creation time, in [Unix time format](https://en.wikipedia.org/wiki/Unix_time).\n* `0` - The creation time is unknown.\n* A valid timestamp, in Unix epoch time.",
                                          "example": 1575395316,
                                          "format": "unix_timestamp",
                                          "type": "integer"
                                        },
                                        "digests": {
                                          "description": "An array of objects of information the registrar uses to populate DS records.",
                                          "items": {
                                            "properties": {
                                              "algo_desc": {
                                                "description": "A description of the algorithm that the DS record uses.",
                                                "example": "SHA-1",
                                                "type": "string"
                                              },
                                              "algo_num": {
                                                "description": "The IETF-recognized DNSSEC Algorithm Number.",
                                                "example": 1,
                                                "minimum": 1,
                                                "type": "integer"
                                              },
                                              "digest": {
                                                "description": "The actual digest in the DS record.",
                                                "example": "2808a14b89118256119d93d24b9e6b673dca092b",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "flags": {
                                          "description": "An integer that determines the `key_type` value.\n* `256` - A Zone Signing Key (ZSK).\n* `257` - A Combined Signing Key (CSK) or Key Signing Key (KSK).",
                                          "enum": [
                                            256,
                                            257
                                          ],
                                          "example": 257,
                                          "type": "integer"
                                        },
                                        "key_id": {
                                          "description": "PowerDNS's internal identifier.",
                                          "example": 1,
                                          "minimum": 1,
                                          "type": "integer"
                                        },
                                        "key_tag": {
                                          "description": "The DS key's integer value.",
                                          "example": 40481,
                                          "minimum": 1,
                                          "type": "integer"
                                        },
                                        "key_type": {
                                          "description": "The DS key's signing type.\n* `CSK` - Combined Signing Key.\n* `KSK` - Key Signing Key.\n* `ZSK` - Zone Signing Key.",
                                          "enum": [
                                            "CSK",
                                            "KSK",
                                            "ZSK"
                                          ],
                                          "example": "KSK",
                                          "type": "string"
                                        },
                                        "privatekey": {
                                          "description": "The private key in ISC format.",
                                          "example": "Private-key-format: v1.2\nAlgorithm: 8 (RSASHA256)\nModulus: syUlztxieV1aOtuYAGGA4VBxgquwqPTWQXcDVY1VRFcPgFmLMWYr6dDnN4OUhu2yIulK3KMeZmAc/DmwM+yNdCdYc9y84gw5OyONKduuPGYXfwCiJfOJ+NpGaFomK6fVFN8BMi6LUBytdA4gotPw45Uz8FIbl1KsEOnV4/ZpjiM=\nPublicExponent: AQAB\nPrivateExponent: LxIfsQ7vQPxqbPSuJ8t21b0RVkhOjtZmRaVD1wLf2KkXhZ4BmOVDvJgLaObF6/4gxFOQPBEQN84hT5TI25vYPrAwRAlP/yGmQ4Z2aPIYeEawoqqNoYEa5Xjs1X90i6/+Y8mJSZpGvr4/Y4ElothZTUw+LCYb6o9ulg53yya8KUE=\nPrime1: 4od92Rbx9fSXRIk6eSSdTYN/Do3zgDiCuxmuZaCrrEAlkiK11iz/s4aZGj9+Yk4NfusjXr3NqU1OMfBiIp67Sw==\nPrime2: ynOJdz/E4/B6iBtuz/4y0kasljMtiJnaNIxPr4LG+hByx7WWCnaPm6p8g1pz3FC/w7HAdWq9xzR1VnbRPGcZiQ==\nExponent1: KUKmkIEWZ0c6ujgIl4IsyK6X2O3QGV2xqiSeWFJwknpInZqG5lDh7jAo+NfxzDQNTz3C/oGx0RGMmZoANfAViw==\nExponent2: ZcFkmpdmstqv+7EuJUSy7pWvMV9Px5Ts4/SSKLkmoZGa314Zp/CnhapPIwZXrai4effhsCKSeImZYHgf+qgnYQ==\nCoefficient: PBQUQquZB0kG//cy8oVA6nHvKkvVJ8zV4GVlkXHTDylbjoWBTuNWwQ93t5SM7Rz3JePHImWdOVMYNIXpPlp56g==\n",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "description": "An object containing the DS keys on the requested domain.",
                                    "type": "object"
                                  },
                                  "nsec_details": {
                                    "description": "An object with of the domain's [Next Secure Record](https://tools.ietf.org/html/rfc4470) (NSEC) information.\n\n**Note:**\n\nIf the domain uses NSEC semantics, only the `nsec_version` return appears in this object.",
                                    "properties": {
                                      "nsec3_hash_algo_desc": {
                                        "description": "description of the NSEC3 key's algorithm.",
                                        "example": "SHA-1",
                                        "type": "string"
                                      },
                                      "nsec3_hash_algo_num": {
                                        "description": "The DNSSEC ([Domain Name Security Extensions](https://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions)) Digest Algorithm Number.",
                                        "example": 1,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "nsec3_iterations": {
                                        "description": "The number of times that the system rehashes the first hash operation.",
                                        "example": 7,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "nsec3_narrow": {
                                        "description": "Whether NSEC3 will operate in Narrow or Inclusive mode.\n\n**Note:**\n\nFor more information about these modes, read [PowerDNS's DNSSEC documentation](https://doc.powerdns.com/authoritative/dnssec/intro.html).\n* `1` - Narrow mode.\n* `0` - Inclusive mode.",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "nsec3_opt_out": {
                                        "description": "Whether NSEC3 will create records for all delegations or only for secure delegations.\n* `1` - Create records for all delegations.\n* `0` - Create records **only** for secure delegations.",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "nsec3_salt": {
                                        "description": "The salt value that PowerDNS uses in the hashes.\n\n**Note:**\n\nFor more information about salt values, read [RFC 5155](https://tools.ietf.org/html/rfc5155#section-3.1.5).",
                                        "example": "1a2b3c4d5e6f",
                                        "type": "string"
                                      },
                                      "nsec_version": {
                                        "description": "Whether the domain uses NSEC or NSEC3 ([Next Secure Record version 3](https://tools.ietf.org/html/rfc5155)) DNSSEC semantics.",
                                        "enum": [
                                          "NSEC",
                                          "NSEC3"
                                        ],
                                        "example": "NSEC3",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetch_ds_records_for_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domain's DS record",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetch_ds_records_for_domains domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetch_ds_records_for_domains?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/fetch_mail_queue": {
      "get": {
        "description": "This function retrieves the contents of the server's mail queue.",
        "operationId": "fetch_mail_queue",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "records": {
                          "description": "An array of objects that contain of the message information.",
                          "items": {
                            "properties": {
                              "frozen": {
                                "description": "Whether the mail message is frozen.\n* `1` — Frozen.\n* `0` — **Not** frozen.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "msgid": {
                                "description": "The mail message's ID.",
                                "example": "1UotX3-0002HX-Lr",
                                "type": "string"
                              },
                              "recipients": {
                                "description": "An array of the mail message's recipients.",
                                "items": {
                                  "example": "pricilla@graceland.com",
                                  "format": "email",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "sender": {
                                "description": "The mail message's sender.",
                                "example": "elvis@graceland.com",
                                "format": "email",
                                "type": "string"
                              },
                              "size": {
                                "description": "The mail message's size in bytes.",
                                "example": 14336,
                                "format": "bytes",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "time": {
                                "description": "The mail message's timestamp.",
                                "example": 1371552781,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "user": {
                                "description": "The mail message's owner.",
                                "example": null,
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetch_mail_queue",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return server mail queue contents",
        "tags": [
          "Mail",
          "Mail Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetch_mail_queue"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetch_mail_queue?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/fetch_pkgacct_master_log": {
      "get": {
        "description": "This function returns the contents of a `start_background_pkgacct` session's master log file.",
        "operationId": "fetch_pkgacct_master_log",
        "parameters": [
          {
            "description": "The `start_background_pkgacct` session ID.",
            "in": "query",
            "name": "session_id",
            "required": true,
            "schema": {
              "example": "username20200323154328kDJ2Kx4xua2KtG",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "log": {
                          "description": "The master log file's contents.",
                          "example": "{\"contents\":\"pkgacct started.\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"partial\":0,\"contents\":\"pkgacct version 10 - user : username - tarball: 1 - target mysql : 5.7 - split: 1 - incremental: 0 - homedir: 0 - mailman: 1 - backup: 0 - archive version: 4 - running with uid 0\\n\",\"indent\":0,\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"partial\":0,\"contents\":\"pkgacct using ''/usr/local/cpanel/3rdparty/bin/pigz -6 --processes 1 --blocksize 4096 --rsyncable'' to compress archives\\n\"}\n{\"type\":\"out\",\"indent\":0,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"contents\":\"pkgacct -- attempting to use daily backup to create an account package\\n\",\"pid\":4073}\n{\"indent\":0,\"contents\":\"pkgacct -- could not use daily backup because no daily incremental backup for user username can be found ( check if daily incremental backups are enabled )\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"pid\":4073,\"type\":\"out\"}\n{\"type\":\"out\",\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"contents\":\"pkgacct working dir : /home/cpmove-username\",\"indent\":0}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"contents\":\"Copying Reseller Config...\",\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"partial\":1}\n{\"indent\":0,\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"partial\":0,\"contents\":\"Done\\n\",\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"partial\":1,\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"contents\":\"Copying Suspension Info (if needed)...\"}\n{\"type\":\"out\",\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"partial\":0,\"contents\":\"Done\\n\",\"pid\":4073,\"indent\":0}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"contents\":\"Copying installed SSL certificates and keys...\",\"partial\":1,\"timestamp\":\"2020-03-23 10:43:28 -0500\"}\n{\"type\":\"out\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:28 -0500\",\"contents\":\"Performing ApacheTLS component....\",\"pid\":4073,\"indent\":0}\n{\"type\":\"out\",\"indent\":0,\"contents\":\"Completed ApacheTLS component.\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073}\n{\"type\":\"out\",\"pid\":4073,\"contents\":\"Done\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"indent\":0}\n{\"indent\":0,\"contents\":\"Copying DKIM keys....\",\"partial\":1,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073,\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"contents\":\"Done\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073}\n{\"type\":\"out\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"contents\":\"Copying Bandwidth Data....\",\"pid\":4073,\"indent\":0}\n{\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Performing Bandwidth component....\",\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"type\":\"out\",\"contents\":\"Summary databases \",\"partial\":1,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073,\"indent\":0}\n{\"type\":\"out\",\"contents\":\" done!\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073,\"indent\":0}\n{\"indent\":0,\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Completed Bandwidth component.\\n\",\"type\":\"out\"}\n{\"indent\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Done\\n\",\"pid\":4073,\"type\":\"out\"}\n{\"type\":\"out\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"contents\":\"Copying Dns Zones....\",\"pid\":4073,\"indent\":0}\n{\"indent\":0,\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"contents\":\"...username.tld...\",\"type\":\"out\"}\n{\"indent\":0,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Done\\n\",\"pid\":4073,\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"contents\":\"Copying Mail files....\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1}\n{\"indent\":0,\"contents\":\"Done\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073,\"type\":\"out\"}\n{\"contents\":\"Copying proftpd file....\",\"partial\":1,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"indent\":0,\"pid\":4073,\"contents\":\"Done\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"type\":\"out\"}\n{\"indent\":0,\"contents\":\"Performing Logs component....\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073,\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"contents\":\"...log file sizes [0 byte(s)]...\"}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"contents\":\"...username.tld-ssl_log...\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1}\n{\"contents\":\"...username.tld...\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"indent\":0,\"pid\":4073,\"contents\":\"Completed Logs component.\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"contents\":\"Copy userdata...\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"pid\":4073}\n{\"contents\":\"Done\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"indent\":0,\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"contents\":\"Copy custom virtualhost templates...\",\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Done\\n\",\"pid\":4073}\n{\"type\":\"out\",\"contents\":\"Copying mailman lists and archives....\",\"partial\":1,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073,\"indent\":0}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"contents\":\"Done copying mailman lists and archives.\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1}\n{\"indent\":0,\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Performing Postgresql component....\",\"type\":\"out\"}\n{\"indent\":0,\"pid\":4073,\"contents\":\"Completed Postgresql component.\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"type\":\"out\"}\n{\"type\":\"out\",\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Performing Mysql component....\",\"indent\":0}\n{\"contents\":\"Determining mysql dbs...\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"type\":\"out\",\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"contents\":\"...mysqldump version: 5.7.27...\",\"indent\":0}\n{\"type\":\"out\",\"contents\":\"...mysql version: 5.7...\",\"partial\":1,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073,\"indent\":0}\n{\"type\":\"out\",\"indent\":0,\"contents\":\"Saving mysql privs...\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"pid\":4073}\n{\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Done\\n\",\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"indent\":0,\"contents\":\"Storing MySQL databases...\\n\",\"partial\":1,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073,\"type\":\"out\"}\n{\"indent\":0,\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Done\\n\",\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"...Done\\n\"}\n{\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"...Done\\n\",\"indent\":0,\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Completed Mysql component.\\n\"}\n{\"indent\":0,\"contents\":\"Performing MysqlRemoteNotes component....\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073,\"type\":\"out\"}\n{\"indent\":0,\"contents\":\"Completed MysqlRemoteNotes component.\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073,\"type\":\"out\"}\n{\"pid\":4073,\"partial\":1,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Copying cpuser file.......\",\"indent\":0,\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"contents\":\"Done\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073}\n{\"partial\":1,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Copying crontab file.......\",\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"indent\":0,\"pid\":4073,\"contents\":\"Done\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"type\":\"out\"}\n{\"type\":\"out\",\"pid\":4073,\"contents\":\"Performing Quota component....\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"indent\":0}\n{\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Completed Quota component.\\n\",\"indent\":0,\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Performing Integration component....\",\"pid\":4073}\n{\"pid\":4073,\"contents\":\"Completed Integration component.\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"indent\":0,\"type\":\"out\"}\n{\"indent\":0,\"contents\":\"Performing AuthnLinks component....\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073,\"type\":\"out\"}\n{\"type\":\"out\",\"pid\":4073,\"contents\":\"Completed AuthnLinks component.\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"indent\":0}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Performing APITokens component....\"}\n{\"indent\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Completed APITokens component.\\n\",\"pid\":4073,\"type\":\"out\"}\n{\"indent\":0,\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Performing DNSSEC component....\",\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Completed DNSSEC component.\\n\",\"pid\":4073}\n{\"type\":\"out\",\"indent\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Performing Custom component....\",\"pid\":4073}\n{\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"No custom components to perform.\\n\",\"indent\":0,\"type\":\"out\"}\n{\"contents\":\"Completed Custom component.\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"contents\":\"Performing AutoSSL component....\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0}\n{\"indent\":0,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Completed AutoSSL component.\\n\",\"pid\":4073,\"type\":\"out\"}\n{\"type\":\"out\",\"pid\":4073,\"contents\":\"Storing Subdomains....\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"indent\":0}\n{\"type\":\"out\",\"indent\":0,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Done\\n\",\"pid\":4073}\n{\"indent\":0,\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Storing Parked Domains....\\n\",\"type\":\"out\"}\n{\"type\":\"out\",\"pid\":4073,\"contents\":\"Done\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"indent\":0}\n{\"indent\":0,\"contents\":\"Storing Addon Domains....\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073,\"type\":\"out\"}\n{\"contents\":\"Performing Password component....\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"type\":\"out\",\"indent\":0,\"contents\":\"Completed Password component.\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073}\n{\"type\":\"out\",\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Performing DigestShadow component....\",\"indent\":0}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Completed DigestShadow component.\\n\"}\n{\"type\":\"out\",\"indent\":0,\"contents\":\"Copying shell.......\",\"partial\":1,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073}\n{\"type\":\"out\",\"indent\":0,\"pid\":4073,\"contents\":\"Done\\n\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0}\n{\"indent\":0,\"pid\":4073,\"contents\":\"Performing PublicContact component....\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"type\":\"out\"}\n{\"indent\":0,\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Completed PublicContact component.\\n\",\"type\":\"out\"}\n{\"contents\":\"Performing MailLimits component....\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"indent\":0,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"Completed MailLimits component.\\n\",\"pid\":4073,\"type\":\"out\"}\n{\"contents\":\"Performing LinkedNodes component....\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Completed LinkedNodes component.\\n\",\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"pid\":4073,\"contents\":\"Creating Archive ....\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":1,\"indent\":0,\"type\":\"out\"}\n{\"indent\":0,\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"\\n\",\"type\":\"out\"}\n{\"contents\":\"splitpkgacctfile is: /home/cpmove-username-split/cpmove-username.tar.gz.part00001\\n\",\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"pid\":4073,\"indent\":0,\"type\":\"out\"}\n{\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"\\nsplitmd5sum is: e06a2d1f0cb499cb1d5ff15116f02df4\\n\",\"indent\":0,\"type\":\"out\"}\n{\"type\":\"out\",\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"\\nsplitsize is: 7275\\n\",\"indent\":0}\n{\"type\":\"out\",\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"Done\\n\",\"pid\":4073,\"indent\":0}\n{\"pid\":4073,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"partial\":0,\"contents\":\"\\nmysqlsize is: 0\\n\",\"indent\":0,\"type\":\"out\"}\n{\"indent\":0,\"pid\":4073,\"partial\":0,\"timestamp\":\"2020-03-23 10:43:29 -0500\",\"contents\":\"pkgacct completed\\n\",\"type\":\"out\"}",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetch_pkgacct_master_log",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return start_background_pkgacct session log file",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetch_pkgacct_master_log session_id='username20200323154328kDJ2Kx4xua2KtG'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetch_pkgacct_master_log?api.version=1&session_id=username20200323154328kDJ2Kx4xua2KtG"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "88"
      }
    },
    "/fetch_security_advice": {
      "get": {
        "description": "This function returns the cPanel Security Advisor's security scan data. It advises you of how to resolve any security issues that it finds.\n\n**Note:**\n\n  For more information, read the [cPanel Security Advisor](https://go.cpanel.net/githubsecurityadvisor) documentation at the cPanel, L.L.C. GitHub® repository.",
        "operationId": "fetch_security_advice",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "advice_with_module_error": {
                    "value": {
                      "data": {
                        "payload": [
                          {
                            "advice": {
                              "key": "SSH_direct_root_login_permitted",
                              "suggestion": "Manually edit /etc/ssh/sshd_config and change PermitRootLogin to “without-password” or “no”, then restart SSH …",
                              "summary": "SSH direct root logins are permitted.",
                              "type": "ADVISE_BAD"
                            },
                            "module": "Cpanel::Security::Advisor::Assessors::SSH",
                            "type": "mod_advice"
                          },
                          {
                            "advice": {
                              "key": "SSH_is_current",
                              "suggestion": null,
                              "summary": "Current SSH version is up to date: 11.22p33-44",
                              "type": "ADVISE_GOOD"
                            },
                            "module": "Cpanel::Security::Advisor::Assessors::SSH",
                            "type": "mod_advice"
                          },
                          {
                            "message": "Anvil not found at /usr/local/cpanel/Cpanel/Security/Advisor/Assessors/ACME.pm line 6.",
                            "module": "Cpanel::Security::Advisor::Assessors::ACME",
                            "type": "mod_load"
                          }
                        ]
                      },
                      "metadata": {
                        "command": "fetch_security_advice",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "**Note:**\n\n * This function only returns the the `advice` array of objects when the `type` return is the `mod_advice` value.\n * This function only returns the `message` return when the `type` return is the `mod_load` or `mod_run` value.",
                          "items": {
                            "properties": {
                              "advice": {
                                "description": "**Note:**\n\n  This function only returns this object when the `type` return is the `mod_advice` value.",
                                "properties": {
                                  "key": {
                                    "description": "A unique check identifier in the module that returns a status message.",
                                    "example": "ClamAV_not_installed",
                                    "type": "string"
                                  },
                                  "suggestion": {
                                    "description": "A message that suggests how to resolve the security issue.",
                                    "example": "Install ClamAV within \"<a target=\\\"_blank\\\" href=\\\"https://example.com:2087/scripts2/manage_plugins\\\">Manage Plugins</a>\".",
                                    "format": "HTML",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "summary": {
                                    "description": "A summary about the module's current security status.",
                                    "example": "ClamAV is not installed.",
                                    "format": "HTML",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The level at which the module returns a specific security message.\n* `ADVISE_BAD` - The object contains a security issue.\n* `ADVISE_GOOD` - There are no security issues.\n* `ADVISE_INFO` - The object contains an informational message.\n* `ADVISE_WARN` - The object contains a warning.",
                                    "enum": [
                                      "ADVISE_BAD",
                                      "ADVISE_GOOD",
                                      "ADVISE_INFO",
                                      "ADVISE_WARN"
                                    ],
                                    "example": "ADVISE_BAD",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "message": {
                                "description": "A message that describes an error.\n\n**Note:**\n\n  This function only returns this value for the `type` return's `mod_load` and `mod_run` values.",
                                "example": "Can't call method \"get_raw_conf\" on an undefined value at /usr/local/cpanel/Whostmgr/Services/SSH/Config.pm line 160.",
                                "type": "string"
                              },
                              "module": {
                                "description": "The name of a module that the Security Advisor checked.",
                                "example": "Cpanel::Security::Advisor::Assessors::ClamAV",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of security message.\n\n* `mod_advice` - There is a message from the Security Advisor module.\n* `mod_load` - There was an error preventing the loading of the module.\n* `mod_run` - There was an error preventing the system from completing one of the module's checks.",
                                "enum": [
                                  "mod_advice",
                                  "mod_load",
                                  "mod_run"
                                ],
                                "example": "mod_advice",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetch_security_advice",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Security Advisor results",
        "tags": [
          "Security"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetch_security_advice"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetch_security_advice?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "80"
      }
    },
    "/fetch_service_ssl_components": {
      "get": {
        "description": "This function lists the system's services and their associated certificates.",
        "operationId": "fetch_service_ssl_components",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "services": {
                          "description": "An array of objects containing the certificate information for each service.",
                          "items": {
                            "properties": {
                              "cabundle": {
                                "description": "The Certificate Authority (CA) information.\n\nThis function returns an empty string if no CA bundle exists\nfor the certificate.",
                                "example": "",
                                "type": "string"
                              },
                              "certificate": {
                                "description": "The SSL certificate's contents.",
                                "example": "-----BEGIN CERTIFICATE-----\nMIIECjCCAvKgAwIBAgIEW7p6xzANBgkqhkiG9w0BAQUFADCBnTELMAkGA1UEBhMC\nVVMxEDAOBgNVBAgMB1Vua25vd24xEDAOBgNVBAcMB1Vua25vd24xEDAOBgNVBAoM\nB1Vua25vd24xEDAOBgNVBAsMB1Vua25vd24xHTAbBgNVBAMMFGphc29uLmRldi5j\ncGFuZWwubmV0MScwJQYJKoZIhvcNAQkBFhhzc2xAamFzb24uZGV2LmNwYW5lbC5u\nZXQwHhcNMTMwNDI5MjEwNDU5WhcNMTQwNDI5MjEwNDU5WjCBnTELMAkGA1UEBhMC\nVVMxEDAOBgNVBAgMB1Vua25vd24xEDAOBgNVBAcMB1Vua25vd24xEDAOBgNVBAoM\nB1Vua25vd24xEDAOBgNVBAsMB1Vua25vd24xHTAbBgNVBAMMFGphc29uLmRldi5j\ncGFuZWwubmV0MScwJQYJKoZIhvcNAQkBFhhzc2xAamFzb24uZGV2LmNwYW5lbC5u\nZXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmc8Oxc0RmSzX4eR9W\nLTrqa/TY+qOuP8ClGTgP1FOWSjZnfDTUhnfst/XtA13wJvXw+Pv+IXReUtrx87nl\njHPwuu/bcJMg4iAufQUlCwUaWbMP8f7yLYPXFAwcgc6jFKCJDOjSImeZhyGBxYp0\nAWx6qiz/WscrV1zs3o8wSqVyouoD2LFzq3bG6M2539DageERnO/UuLTb++DkbH8e\n4v6LX9VQTljMvA0TtPpB7Mnr0Nq+HR/sXHJPdIFn58BVPpl/m3frNqvOcJc/Bt8V\nF0jUG3WN4+/Xr6byRkoVR/X/FYRp2W4ki+Rk357aDnzoVKiTMqLBJ4sXxCU2ipYE\n9FTbAgMBAAGjUDBOMB0GA1UdDgQWBBSiMwrIK+JMVx8ufKnfByp3V+ycoTAfBgNV\nHSMEGDAWgBSiMwrIK+JMVx8ufKnfByp3V+ycoTAMBgNVHRMEBTADAQH/MA0GCSqG\nSIb3DQEBBQUAA4IBAQAdL/oywZw+EMwNGf/e1JqjXull/fgoNMZHxsBwQb2smZuN\nKoTlkf2zDO7yTTIUnrBP1TveIlAejDLMMR7yqVgmDrVM/pl4WQjL/APbrWGExsE8\nJeEu+DjOIEveOVTTXCwaVo8ck2JO3QWZwPeRUZBwifZOfaYa8gwpdcUy8Tu/HX9T\nxsOLv/vQar8JC4Obh5eFrMBp87Obf1m/2Kmpaj9PGQQiiq+HU3r4dZf24bLGESr/\nvPXIfInwZ0Fr4G+OzwDqPgI9nCm13myZ+ZBybL64pp741ReRP1dHQGYnwtht/Dh4\n/vFZEL9Wv/18E4lUCJjMgBIknjWkyt6FtygmB1DS\n-----END CERTIFICATE-----",
                                "format": "pem-certificate",
                                "type": "string"
                              },
                              "certificate_info": {
                                "description": "An object containing certificate information data.",
                                "properties": {
                                  "domains": {
                                    "description": "The domains that correspond to the certificate.",
                                    "items": {
                                      "example": "example.com",
                                      "format": "domain",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "ecdsa_curve_name": {
                                    "description": "The ECDSA curve that the certificate's key uses.\n\n* `prime256v1`\n* `secp384r1`\n* `null` — The certificate's key is **not** an ECDSA key.",
                                    "enum": [
                                      "prime256v1",
                                      "secp384r1"
                                    ],
                                    "example": null,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "ecdsa_public": {
                                    "description": "The certificate's key's ECDSA compressed public point, in hexadecimal format.\n\n* `null` — The certificate's key is **not** an ECDSA key.",
                                    "example": null,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "is_self_signed": {
                                    "description": "Whether the certificate is self-signed.\n\n* `1` — Self-signed.\n* `0` — **Not** self-signed.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "issuer.commonName": {
                                    "description": "The certificate's Common Name.",
                                    "example": "example.com",
                                    "type": "string"
                                  },
                                  "issuer.organizationName": {
                                    "description": "The certificate's Organization Name.",
                                    "example": "Writer's Guild of America",
                                    "type": "string"
                                  },
                                  "issuer_text": {
                                    "description": "Information about the issuer.",
                                    "example": "countryName\nUS\nstateOrProvinceName\nUnknown\nlocalityName\nUnknown\norganizationName\nUnknown\norganizationalUnitName\nUnknown\ncommonName\nexample.com\nemailAddress\ntest@example.com",
                                    "type": "string"
                                  },
                                  "key_algorithm": {
                                    "description": "The certificate's key's algorithm.\n\n* `rsaEncryption` — RSA.\n* `id-ecPublicKey` — ECDSA.",
                                    "enum": [
                                      "rsaEncryption",
                                      "id-ecPublicKey"
                                    ],
                                    "example": "rsaEncryption",
                                    "type": "string"
                                  },
                                  "modulus": {
                                    "description": "The certificate's key's modulus, in hexadecimal format.\n\n* `null` — The certificate's key is **not** an RSA key.",
                                    "example": null,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "modulus_length": {
                                    "description": "The certificate's modulus size.\n\n* `null` — The certificate's key is **not** an RSA key.",
                                    "example": null,
                                    "nullable": true,
                                    "type": "integer"
                                  },
                                  "not_after": {
                                    "description": "The date the certificate expires.",
                                    "example": 1601467200,
                                    "format": "unix_timestamp",
                                    "type": "integer"
                                  },
                                  "not_before": {
                                    "description": "The certificate's validation date.",
                                    "example": 1569844800,
                                    "format": "unix_timestamp",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "key": {
                                "description": "The certificate's private key.",
                                "example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEA4FIdZcIKVK5+PtdzVm4CN45BXG5wX7KZ1/dP84MGIwtwxkkX\nhBqw7BawbHlexYXuarSnrHA8hm6RRxv/fRy+zOeg7y8v5CWG52m91GK7qSLxpruY\ngCJGJEK8fj6spbbLjxNd5XAmDwT80uMsq/3E9rGmg/ELY9X9vn5WlErRfi2Qjsiq\nx7AYUvcIkBHPOlRWzZgx2KjMjBU2U0w2RCUjgKgww/6xx2ccnTvn7HGvVjQMkh+1\nUYCdGvT8fR2qJBKHZ5Cjdfc9N304qZCqYMhcrHX2gJqc+9zLtLk7PoEYXu17l6nU\nO3C/IdzBXYWu+UoMzpZ5tc5jKRA3+I7ggKjJlwIDAQABAoIBAQDR4GI648qQolXh\n6+iws+qFGibTGU0wbET+SBjYx/0E6t5P1vEWm3Zu3WehhgkCm6WO1omOj9BBIs/w\nDSUEZNGrmwf64VZYijfm6gs+3EWiINyhWCF9uRORN5NuNquHvDhGHCOc2EnzgYIe\nuYgBP0R6X4phJjS26u8mvMO6qSnKd4wRrOf9ZU73L1VTmhMItshVxH2tuhKurkMV\njWDAjWeJfycWe4JVgYxM4GA6g5kKi5nrkhpVEsklh1FJZn65U0aWXUpHAm2ihhKf\nFq9FgC+8Xz8UAtf8JYbAW3D1E/0lRZuLt+5cosK8b2+9CIUNRjYMtyXlbI0RGwl9\nFO/9sv05AoGBAP0jfp8qUqf4u4pkE1W2SzzbQ6oYKYHTMiORVHi2qysgrxAZFKGj\nfW7c7UTpxlCaqqDBRQA+lZH16xVD3idwYvmw/9AKxSozxe3wKbQFRM+XYHc7la+2\nTiQiJgjflEadSa57FNgBB7SpeEzaIfmGBYWJXkM+6wuaGUz5qZs/SFJNAoGBAOLb\nOuh7CWTk5oISVBfqxnwFEpaMHT5vpzNBwUWUVMhrxNZP3OVSN++qKxpJhCF/M2no\nOdxX7CYkrGvHFTvV9WKpa0kYQGms+ybyoMOYxJax8rV+Zq9gg2QKwaakoJljaAlX\n5yUuy32YhLxWodQhE7mlhAUyXIuNLVuYee0Y2ZVzAoGAaV6tBnQHlAPljOW7ZqJL\nDzn2IIeOP4w6ArQsBVOETJ9+P6UxAVecjtlHqrfk5Qh8ng3VOxTSDb/f6yok/yW5\nDVawJVlWWQrUCQc/VMActIy+iuMym8G3JTNRwb/PaNVwJkD1nDRRkNI6UUM7gTJY\neg2EP1mhXWL3xSLnhsgAwsECgYEAqnm2xfeXsqM0+bAOU77RE2e4dTuryjybeDBE\nriXupIIf9DElvYrQkCDfrSxrx8RP/ZlOyd+kjXFnxMJhmYqKkW7hOZeo6ADe54DT\nAMmvidMFog/v2ID9m9NdfP4f1cTW7JaLE+0bbDGOJf4wNDn7GbphAIq88v3PhRKL\nJXpUIDMCgYEA2P7D/oZu+dEPW8JhUsDDXY238ZDbQzWBi6n1uUnMJCnUABd/mvuV\nILR/iSBHmt9UdH2YECwry58xFjhXwfTvPc155PiJddjENGFUqohjl0wh0VzLEyfF\nVb6iVMIdrycD/O4U26I3Qco2lQYPoPgrBkAGJ5/GCjkTiL0JssoMXa4=\n-----END RSA PRIVATE KEY-----",
                                "format": "pem-private-key",
                                "type": "string"
                              },
                              "service": {
                                "description": "The service that the certificate corresponds to.\n\n* `ftp`\n* `exim`\n* `dovecot`\n* `cpanel`",
                                "enum": [
                                  "ftp",
                                  "exim",
                                  "dovecot",
                                  "cpanel"
                                ],
                                "example": "ftp",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetch_service_ssl_components",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return system services and associated certificates",
        "tags": [
          "SSL",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetch_service_ssl_components"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetch_service_ssl_components?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/fetch_ssl_certificates_for_fqdns": {
      "get": {
        "description": "This function retrieves the certificate information for all fully qualified domain names (FQDNs) that the account owns.",
        "operationId": "fetch_ssl_certificates_for_fqdns",
        "parameters": [
          {
            "description": "A comma-separated list of domains for which to retrieve information.\n\n**Note:**\n\nFor browser-based calls, you **must** URI-encode each comma (`%2C`).",
            "examples": {
              "multiple": {
                "summary": "Fetch information for multiple domains.",
                "value": "domains=example-1.com,example-2.com,example-3.com"
              },
              "single": {
                "summary": "Fetch information for a single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domains",
            "required": true,
            "schema": {
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "Information about the certificate.",
                          "items": {
                            "properties": {
                              "cab": {
                                "description": "The CA bundle's contents.",
                                "example": "-----BEGIN CERTIFICATE-----\nMIIDYzCCAkugAwJBAgIFAamFDR8wDQYJKoZIhvcNAQELBQAwFDESMBAGA1UEAwwJ\nc2lza28udGxkMB4XDTE5MDYyNjE1MDYxNVoXDTIwMDYyNTE1MDYxNVowFDESMBAG\nA1UEAwwJc2lza28udGxkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nq0wqPMMP8Q6RiRXe57UXExg3PeAAd00xxFRr6pMwPZtWrkcoYV0kfHEZ7nJmD6Bd\nUnuXrDqTb1z78CeqUFt5+ZQtjGt55CjPFaUkHbNErZm2l8bKB6sjnETZ7ee4AXx/\nmaf/jhgZ0o4SMAS5h87NOoF5yg/Y0tnuncpu/RyzeXzJLxy0Mn0WMGm2w5sXSH4l\n4oaGLorGWyDUfQPjwAwcQsVi97FZ7zElRru//jJ/tqijVLELv1AWudJkuZnJJmKW\nCvkT6YpIIB8UVwbTgnFuZ86Us2Yfe17pMatAVJV8MAbRym3Z4rmWmZr1xrTdoS+L\nSwz4kCffBY5psDRp/WRqAQIDAQABo4G7MIG4MB0GA1UdDgQWBBT22CZM+khxmDvi\nF5LbZVtqm20y8TAfBgNVHSMEGDAWgBT22CZM+khxmDviF5LbZVtqm20y8TAJBgNV\nHRMEAjAAMGsGA1UdEQRkMGKCCXNpc2tvLnRsZIIObWFpbC5zaXNrby50bGSCDXd3\ndy5zaXNrby50bGSCEXdlYm1haWwuc2lza28udGxkghBjcGFuZWwuc2lza28udGxk\nghF3ZWJkaXNrLnNpc2tvLnRsZDANBgkqhkiG9w0BAQsFAAOCAQEAWDXl/WRLHPxa\nnvziWJIcM8jkSxaaUKbRPsow1XVDj3HjpDYbKkYBLfZlmaDmeU6SnmGKFYi0wSDw\n+WkK97ja3+ONHFRlYHO2dHoQrxklrqOqyV2KB0HB6YgHCl9A2b6feC31Zly2i6jc\n3SWEpYIQHecRnELc6WKkfqm0oTJZH0h7Da4WgR10Myi3GE799g0xMO/KCxPF2mDS\n6Ukr/bez9a07zCODrf4o91PrCc7r85dZq8jt02wtGMPg+zvr3FfcVPFaPZ1Oppsx\nrUNVz5W/TqdtxZhr9J5PBpSMNiNnKq88KV1zqIJiNsk9qGJbt5mQQpK0enpKqkmr\nETgwb3sSbw==\n-----END CERTIFICATE-----",
                                "format": "pem-certificate",
                                "nullable": true,
                                "type": "string"
                              },
                              "created": {
                                "description": "The date the certificate was created.",
                                "example": 1538308800,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "crt": {
                                "description": "The certificate's contents.",
                                "example": "-----BEGIN CERTIFICATE-----\nMIIDYzCCAkugAwIBAgIFAamFDR8wDQYJKoZIhvcNAQELBQAwFDESMBAGA1UEAwwJ\nc2lza28udGxkMB4XDTE5MDYyNjE1MDYxNVoXDTIwMDYyNTE1MDYxNVowFDESMBAG\nA1UEAwwJc2lza28udGxkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nq0wqPMMP8Q6RiRXe57UXExg3PeAAd00xxFRr6pMwPZtWrkcoYV0kfHEZ7nJmD6Bd\nUnuXrDqTb1z78CeqUFt5+ZQtjGt55CjPFaUkHbNErZm2l8bKB6sjnETZ7ee4AXx/\nmaf/jhgZ0o4SMAS5h87NOoF5yg/Y0tnuncpu/RyzeXzJLxy0Mn0WMGm2w5sXSH4l\n4oaGLorGWyDUfQPjwAwcQsVi97FZ7zElRru//jJ/tqijVLELv1AWudJkuZnJJmKW\nCvkT6YpIIB8UVwbTgnFuZ86Us2Yfe17pMatAVJV8MAbRym3Z4rmWmZr1xrTdoS+L\nSwz4kCffBY5psDRp/WRqAQIDAQABo4G7MIG4MB0GA1UdDgQWBBT22CZM+khxmDvi\nF5LbZVtqm20y8TAfBgNVHSMEGDAWgBT22CZM+khxmDviF5LbZVtqm20y8TAJBgNV\nHRMEAjAAMGsGA1UdEQRkMGKCCXNpc2tvLnRsZIIObWFpbC5zaXNrby50bGSCDXd3\ndy5zaXNrby50bGSCEXdlYm1haWwuc2lza28udGxkghBjcGFuZWwuc2lza28udGxk\nghF3ZWJkaXNrLnNpc2tvLnRsZDANBgkqhkiG9w0BAQsFAAOCAQEAWDXl/WRLHPxa\nnvziWJIcM8jkSxaaUKbRPsow1XVDj3HjpDYbKkYBLfZlmaDmeU6SnmGKFYi0wSDw\n+WkK97ja3+ONHFRlYHO2dHoQrxklrqOqyV2KB0HB6YgHCl9A2b6feC31Zly2i6jc\n3SWEpYIQHecRnELc6WKkfqm0oTJZH0h7Da4WgR10Myi3GE799g0xMO/KCxPF2mDS\n6Ukr/bez9a07zCODrf4o91PrCc7r85dZq8jt02wtGMPg+zvr3FfcVPFaPZ1Oppsx\nrUNVz5W/TqdtxZhr9J5PBpSMNiNnKq88KV1zqIJiNsk9qGJbt5mQQpK0enpKqkmr\nETgwb3sSbw==\n-----END CERTIFICATE-----",
                                "format": "pem-certificate",
                                "type": "string"
                              },
                              "domains": {
                                "description": "The domains that the CSR covers.",
                                "example": [
                                  "example.servername.com",
                                  "example.com",
                                  "mail.example.com",
                                  "www.example.com",
                                  "www.example.servername.com"
                                ],
                                "items": {
                                  "format": "domain",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "ecdsa_curve_name": {
                                "description": "The ECDSA curve that the certificate's key uses.\n\n* `prime256v1`\n* `secp384r1`\n* `null` — The certificate's key is **not** an ECDSA key.",
                                "enum": [
                                  "prime256v1",
                                  "secp384r1"
                                ],
                                "example": null,
                                "nullable": true,
                                "type": "string"
                              },
                              "ecdsa_public": {
                                "description": "The certificate's key's ECDSA compressed public point, in hexadecimal format.\n\n* `null` — The certificate's key is **not** an ECDSA key.",
                                "example": null,
                                "nullable": true,
                                "type": "string"
                              },
                              "friendly_name": {
                                "description": "The certificate's friendly name.",
                                "example": "example.com",
                                "type": "string"
                              },
                              "id": {
                                "description": "The certificate's identification.",
                                "example": "example_servername_com_ce52d_6e643_2813308004_119580f9b01960cjones72bc519206bc",
                                "type": "string"
                              },
                              "is_self_signed": {
                                "description": "Whether the certificate is self-signed.\n\n* `1` — Self-signed.\n* `0` — **Not** self-signed.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "issuer.commonName": {
                                "description": "The certificate's Common Name.",
                                "example": "example.servername.com",
                                "type": "string"
                              },
                              "issuer.organizationName": {
                                "description": "The certificate's Organization Name.",
                                "example": "Organization",
                                "type": "string"
                              },
                              "key": {
                                "description": "The private key's text.",
                                "example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAq0wqPMMP8Q6RiRXe57UXExg3PeAAd00xxFRr6pMwPZtWrkco\nYV0kfHEZ7nJmD6BdUnuXrDqTb1z78CeqUFt5+ZQtjGt55CjPFaUkHbNErZm2l8bK\nB6sjnETZ7ee4AXx/maf/jhgZ0o4SMAS5h87NOoF5yg/Y0tnuncpu/RyzeXzJLxy0\nMn0WMGm2w5sXSH4l4oaGLorGWyDUfQPjwAwcQsVi97FZ7zElRru//jJ/tqijVLEL\nv1AWudJkuZnJJmKWCvkT6YpIIB8UVwbTgnFuZ86Us2Yfe17pMatAVJV8MAbRym3Z\n4rmWmZr1xrTdoS+LSwz4kCffBY5psDRp/WRqAQIDAQABAoIBABR96A+cxitwMrjT\nhPbzEu+V1gXw5h1ffrSd5MsLEJpOGvB+UrZTDipU3WVJCiyUYpWbc2mHGFwaI4l3\nNUinqM/SiiBiOxKwTxWny8pBx9V8rfs6LLD+KCRpmCh9r+V9n0Yics/s0in+FO7p\nocg9VQ/KrWcevjF7ILB/pwdgh5fgw3lFf1Dp3eRG2LLh+ZuY+Q2pYkMrJhSQ0H/f\nTpuYLtZ+6tGzDvnorDJZ4H6kj+7J4UXIXWSxQe0m+hkPe/YU9e9zt4vaiHSu21PC\nNKxnmBASgnLP/0lKPGzTNhc7G4HkssfqYJ1l2W+mH2sFiQKee45EQkyhcFInDzwu\ng47CIoECgYEA3/OPyAEb4WJ1NIC+1tUunUZLC18FDwO2EqoJ2adblRkG2q8DzUPg\npzQpMEo07dwVXedN7TBehl8cN1sfBfmHdznCsW6zNbZ4481hucle1fXx0/05Hajj\n/A/w3NBxjPa45Zlu6Xcot/qy7mONz+xy/oubDI8BnXxJmHIywtsFhlcCgYEAw8+i\nEAhULx5B7hcmCBruuox6stNDleoAAxuaexylvQS5Q9Kse4cEA/ti7PF5b8kDmIH4\nb6JRenaiFmFNJTbAmwQY5iaobulpEA948H6uI7A2Al3NVJacLSmTod58I5ERsDhn\nJoBAtjZuVCZjAOalnyPC4gyFcPY4O7dJwmQDa2cCgYEAsxj6ZG2WmWF+7/UCKZal\nR7ueakKcLgy+wCBh7kFr+UnhdGPAe5iMAcuyIN9Hgu2d3NINPOGQxo8rZo2lusZ6\ncnur2u/3u73o4e0u+UA0apHcyrbYxYJ6iOtKqZy9IolxBpT04RqdYrzH+eN91sl2\nkWCeJ6X6GbL6vEKfm7tCqNMCgYALyW7e+jFfGLotQ9V1PXHLZvNn2lHCL3DKvxmg\neYv8gdFJJOBfGzSBrNs6mhqOQRJnVsOGrMWs0oFVSYwkRlR3wFpjWEZhTsmVPukv\nyOBgo5XMtKrMgbhq+4q4frUISw4+hlanOacrkME5bYoeHsQvfS6Y/tn1f8zIw3K8\nMdsG1wKBgQCFPy/bzPSVV9PI+IVAlOYlbtfTCAQGQ3jG44e1b5wkwm6Di0p44kr4\n5wi4Bxy+NuCDEIksTuo2/ZtjFlrBu233mQImqZp6b5uTeB27vwAxiX55pqsU4gme\neFdttHhA6s5/wOx9E3JRFI1ucerieUROQC+bt6NLvSu7V+amdgn7bw==\n-----END RSA PRIVATE KEY-----",
                                "format": "pem-private-key",
                                "type": "string"
                              },
                              "key_algorithm": {
                                "description": "The certificate's key's algorithm.\n\n* `rsaEncryption` — RSA.\n* `id-ecPublicKey` — ECDSA.",
                                "enum": [
                                  "rsaEncryption",
                                  "id-ecPublicKey"
                                ],
                                "example": "rsaEncryption",
                                "type": "string"
                              },
                              "modulus": {
                                "description": "The certificate's key's modulus, in hexadecimal format.\n\n* `null` — The certificate's key is **not** an RSA key.",
                                "example": "ab4c2a3cc30ff10e918915dee7b5171318373de000774d31c4546bea93303d9b56ae4728615d247c7119ee72660fa05d527b97ac3a936f5cfbf027aa505b79f9942d8c6b79e428cf15a5241db344ad99b697c6ca07ab239c44d9ede7b8017c7f99a7ff8e1819d28e123004b987cecd3a8179ca0fd8d2d9ee9dca6efd1cb3797cc92f1cb4327d163069b6c39b17487e25e286862e8ac65b20d47d03e3c00c1c42c562f7b159ef312546bbbffe327fb6a8a354b10bbf5016b9d264b999c92662960af913e98a48201f145706d382716e67ce94b3661f7b5ee931ab4054957c3006d1ca6dd9e2b996999af5c6b4dda12f8b4b0cf89027df058e69b03469fd646a01",
                                "nullable": true,
                                "type": "string"
                              },
                              "modulus_length": {
                                "description": "The certificate's key's modulus length.\n\n* `null` — The certificate's key is **not** an RSA key.",
                                "example": 2048,
                                "nullable": true,
                                "type": "integer"
                              },
                              "not_after": {
                                "description": "The date the certificate expired.",
                                "example": 1569844800,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "not_before": {
                                "description": "The date the certificate started.",
                                "example": 1538308800,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "signature_algorithm": {
                                "description": "The certificate's OID hash algorithm signature.",
                                "example": "sha256WithRSAEncryption",
                                "type": "string"
                              },
                              "subject.commonName": {
                                "description": "The certificate's Common Name.",
                                "example": "example.com",
                                "type": "string"
                              },
                              "users": {
                                "description": "A list of cPanel account owners.",
                                "example": [
                                  "username"
                                ],
                                "items": {
                                  "format": "username",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "validation_type": {
                                "description": "The certificate's validation type.\n\n* `ev` — Extended Validation.\n* `ov` — Organization Validated.\n* `dv` — Domain Validated.\n* `null` — The system could **not** parse and determine the\ncertificate's validation type.",
                                "enum": [
                                  "ev",
                                  "ov",
                                  "dv"
                                ],
                                "example": "dv",
                                "nullable": true,
                                "type": "string"
                              },
                              "verify_error": {
                                "description": "An error message that explains the reason for a verification error.",
                                "example": "DEPTH_ZERO_SELF_SIGNED_CERT",
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetch_ssl_certificates_for_fqdns",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account FQDN certificate information",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetch_ssl_certificates_for_fqdns domains='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetch_ssl_certificates_for_fqdns?api.version=1&domains=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "66"
      }
    },
    "/fetch_ssl_vhosts": {
      "get": {
        "description": "This function lists the server's virtual hosts (vhosts) and their installed SSL certificates.",
        "operationId": "fetch_ssl_vhosts",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "vhosts": {
                          "description": "An array of objects containing virtual host information.",
                          "items": {
                            "properties": {
                              "crt": {
                                "description": "Information about the certificate.",
                                "properties": {
                                  "created": {
                                    "description": "The date the certificate was created.",
                                    "example": 1538308800,
                                    "format": "unix_timestamp",
                                    "type": "integer"
                                  },
                                  "domains": {
                                    "description": "A list of the certificate's associated domains.",
                                    "example": [
                                      "example.com",
                                      "subdomain.example.com"
                                    ],
                                    "items": {
                                      "format": "domain",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "ecdsa_curve_name": {
                                    "description": "The ECDSA curve that the certificate's key uses.\n\n* `prime256v1`\n* `secp384r1`\n* `null` — The certificate's key is **not** an ECDSA key.",
                                    "enum": [
                                      "prime256v1",
                                      "secp384r1"
                                    ],
                                    "example": null,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "ecdsa_public": {
                                    "description": "The certificate's key's ECDSA compressed public point, in hexadecimal format.\n\n* `null` — The certificate's key is **not** an ECDSA key.",
                                    "example": null,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "encryption_algorithm": {
                                    "description": "The certificate's key's algorithm.\n\n* `rsaEncryption` — RSA.\n* `id-ecPublicKey` — ECDSA.",
                                    "enum": [
                                      "rsaEncryption",
                                      "id-ecPublicKey"
                                    ],
                                    "example": "rsaEncryption",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The certificate's ID.",
                                    "example": "example1_com_e353a_5bc13_1408033388_9a1d40aff655f98fed7206e5af466065",
                                    "type": "string"
                                  },
                                  "is_self_signed": {
                                    "description": "Whether the certificate is self-signed.\n\n* `1` — Self-signed.\n* `0` — Not self-signed.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "issuer.commonName": {
                                    "description": "The certificate's issuer.",
                                    "example": "example.com",
                                    "type": "string"
                                  },
                                  "issuer.organizationName": {
                                    "description": "The certificate's Organization Name.",
                                    "example": "Organization",
                                    "type": "string"
                                  },
                                  "issuer_text": {
                                    "description": "The full text of issuer information.",
                                    "example": "commonName\nsubdomain.example.com",
                                    "type": "string"
                                  },
                                  "modulus": {
                                    "description": "The certificate's key's modulus, in hexadecimal format.\n\n* `null` — The certificate's key is **not** an RSA key.",
                                    "example": "e353aa25cc8ad05d3225611e4410c0270c11b2d46f88705d3d179a23102ab24ee167c1a9070b9f554e83bade1b84256e11c5a0cb2ac96b96f28e802b11c721d73fbfe61dd9839974a6fce4e17915c0fbf885056f18656041cf70db460b22cab5fd2502491e4ab9f0d2cb727480e0ebd62e83870acda31bfa2d4625efd82234f9729f351ea02fb162609c1654c11b5dec468539a3bb83073a85f78bcf577cd8b718501145cccd89d7adb0bb18c872e7303a15e2c75a6ab315c7fa099e4351a4f0ff126c2693f71d9f21d9f798b94bb689277083fea8dcc01b6af268d0ad8b7a481f8a179d07639cdf3290c93723937a767c400a8ce4b1ca19f0a7117084d5bc13",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "modulus_length": {
                                    "description": "The certificate's key's modulus length.\n\n* `null` — The certificate's key is **not** an RSA key.",
                                    "example": 2048,
                                    "nullable": true,
                                    "type": "integer"
                                  },
                                  "not_after": {
                                    "description": "The date the certificate expires.",
                                    "example": 1601467200,
                                    "format": "unix_timestamp",
                                    "type": "integer"
                                  },
                                  "not_before": {
                                    "description": "The date the certificate became active.",
                                    "example": 1569844800,
                                    "format": "unix_timestamp",
                                    "type": "integer"
                                  },
                                  "public_exponent": {
                                    "description": "The certificate's exponent.",
                                    "example": "010001",
                                    "type": "string"
                                  },
                                  "signature_algorithm": {
                                    "description": "The certificate's OID hash algorithm.",
                                    "example": "sha256WithRSAEncryption",
                                    "type": "string"
                                  },
                                  "subject.commonName": {
                                    "description": "An object containing the certificate's Common Name.",
                                    "properties": {
                                      "commonName": {
                                        "description": "The certificate's Common Name.",
                                        "example": "example.com",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "subject_text": {
                                    "description": "The certificate's subject text.",
                                    "example": "commonName\nsubdomain.example.com",
                                    "type": "string"
                                  },
                                  "validation_type": {
                                    "description": "The certificate's validation type.\n\n* `dv` — Domain validation.\n* `ev` — Extended validation.\n* `ov` — Organizational validation.\n* `null` — Self-signed certificate.",
                                    "enum": [
                                      "dv",
                                      "ev",
                                      "ov"
                                    ],
                                    "example": "dv",
                                    "nullable": true,
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "docroot": {
                                "description": "The absolute directory path of the primary domain's document root.",
                                "example": "/home/example/public_html",
                                "format": "path",
                                "type": "string"
                              },
                              "domains": {
                                "description": "A list of the virtual host's domains.",
                                "example": [
                                  "example.com"
                                ],
                                "items": {
                                  "format": "domain",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "ip": {
                                "description": "The virtual host's IP address.",
                                "example": "192.168.0.20",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "iptype": {
                                "description": "The type of IP address.\n\n* `shared`\n* `dedicated`",
                                "enum": [
                                  "shared",
                                  "dedicated"
                                ],
                                "example": "dedicated",
                                "type": "string"
                              },
                              "ipv6": {
                                "description": "The virtual host's IPv6 address.",
                                "example": "2001:0db8:0:0:1:0:0:1",
                                "format": "ipv6",
                                "type": "string"
                              },
                              "is_primary_on_ip": {
                                "description": "Whether the certificate's domain is the IP address's primary domain.\n\n* `1` — Primary domain.\n* `0` — **Not** the primary domain.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "mail_sni_status": {
                                "description": "Whether SNI for mail is enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "needs_sni": {
                                "description": "Whether the virtual host requires SNI to function properly for\nSSL certificates.\n\n* `1` — Requires SNI.\n* `0` — Does **not** require SNI.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "servername": {
                                "description": "The virtual host's primary domain.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "type": {
                                "description": "The virtual host's domain type.\n\n* `addon` — Addon domain.\n* `main` — Main domain on account.\n* `parked` — Parked domain.\n* `sub` — Subomain.",
                                "enum": [
                                  "addon",
                                  "main",
                                  "parked",
                                  "sub"
                                ],
                                "example": "sub",
                                "type": "string"
                              },
                              "user": {
                                "description": "The virtual host's username.",
                                "example": "example",
                                "format": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetch_ssl_vhosts",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return server vhosts and SSL certificates",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetch_ssl_vhosts"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetch_ssl_vhosts?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/fetch_transfer_session_log": {
      "get": {
        "description": "This function returns a transfer session's log file.\n\n**Note:**\n\n For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.",
        "operationId": "fetch_transfer_session_log",
        "parameters": [
          {
            "description": "The logfile's name.",
            "in": "query",
            "name": "logfile",
            "required": true,
            "schema": {
              "enum": [
                "master.log",
                "master.err"
              ],
              "example": "master.log",
              "type": "string"
            }
          },
          {
            "description": "The transfer session's ID.",
            "in": "query",
            "name": "transfer_session_id",
            "required": true,
            "schema": {
              "example": "vm5docscpanelcopya20140224163412sylG",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "log": {
                          "description": "The logfile's contents.",
                          "example": "{\"contents\":{\"action\":\"start\",\"time\":1598991042,\"child_number\":0},\"pid\":12789,\"type\":\"control\",\"indent\":0,\"partial\":0}\n{\"partial\":0,\"indent\":0,\"type\":\"control\",\"pid\":12789,\"contents\":{\"time\":1598991042,\"action\":\"initiator\",\"child_number\":0,\"msg\":\"norootcopy\"}}\n{\"partial\":0,\"indent\":0,\"pid\":12789,\"type\":\"control\",\"contents\":{\"msg\":2.3,\"child_number\":0,\"time\":1598991042,\"action\":\"version\"}}\n{\"type\":\"control\",\"pid\":12789,\"contents\":{\"time\":1598991042,\"queue\":\"TRANSFER\",\"action\":\"queue_count\",\"msg\":1,\"child_number\":0},\"partial\":0,\"indent\":0}\n{\"contents\":{\"time\":1598991042,\"action\":\"queue_size\",\"queue\":\"TRANSFER\",\"child_number\":0,\"msg\":1},\"type\":\"control\",\"pid\":12789,\"indent\":0,\"partial\":0}\n{\"type\":\"control\",\"pid\":12789,\"contents\":{\"time\":1598991042,\"queue\":\"RESTORE\",\"action\":\"queue_count\",\"child_number\":0,\"msg\":1},\"partial\":0,\"indent\":0}\n{\"partial\":0,\"indent\":0,\"pid\":12789,\"type\":\"control\",\"contents\":{\"child_number\":0,\"msg\":1,\"time\":1598991042,\"action\":\"queue_size\",\"queue\":\"RESTORE\"}}\n{\"partial\":0,\"indent\":0,\"pid\":12789,\"type\":\"control\",\"contents\":{\"action\":\"remotehost\",\"time\":1598991042,\"msg\":\"10.1.32.200\",\"child_number\":0}}\n{\"partial\":0,\"indent\":0,\"type\":\"control\",\"pid\":12790,\"contents\":{\"item\":\"root\",\"time\":1598991042,\"child_number\":1,\"action\":\"start\",\"queue\":\"TRANSFER\",\"logfile\":\"item-TRANSFER_AccountRemoteUser_root\",\"local_item\":\"root\",\"item_name\":\"Account\",\"item_type\":\"AccountRemoteUser\"}}\n{\"indent\":0,\"partial\":0,\"contents\":{\"action\":\"process-item\",\"queue\":\"TRANSFER\",\"logfile\":\"item-TRANSFER_AccountRemoteUser_root\",\"item_type\":\"AccountRemoteUser\",\"item_name\":\"Account\",\"local_item\":\"root\",\"msg\":\"item-TRANSFER_AccountRemoteUser_root\",\"item\":\"root\",\"time\":1598991042,\"child_number\":1},\"pid\":12790,\"type\":\"control\"}\n{\"indent\":0,\"partial\":0,\"contents\":{\"logfile\":\"item-TRANSFER_AccountRemoteUser_root\",\"item_name\":\"Account\",\"item_type\":\"AccountRemoteUser\",\"local_item\":\"root\",\"msg\":{\"size\":1},\"queue\":\"TRANSFER\",\"action\":\"start-item\",\"child_number\":1,\"item\":\"root\",\"time\":1598991042},\"pid\":12790,\"type\":\"control\"}\n{\"contents\":{\"child_number\":1,\"item\":\"root\",\"time\":1598991042,\"logfile\":\"item-TRANSFER_AccountRemoteUser_root\",\"local_item\":\"root\",\"msg\":{\"dangerous_items\":0,\"skipped_items\":0,\"altered_items\":0,\"failure\":\"The account “root” already exists on “control.box.new”.\",\"size\":1,\"warnings\":0,\"contents\":{\"warnings\":null,\"skipped_items\":null,\"dangerous_items\":null,\"altered_items\":null}},\"item_name\":\"Account\",\"item_type\":\"AccountRemoteUser\",\"queue\":\"TRANSFER\",\"action\":\"failed-item\"},\"type\":\"control\",\"pid\":12790,\"indent\":0,\"partial\":0}\n{\"indent\":0,\"partial\":0,\"contents\":{\"item_type\":\"AccountRemoteUser\",\"item_name\":\"Account\",\"msg\":{\"size\":1},\"local_item\":\"root\",\"logfile\":\"item-RESTORE_AccountRemoteUser_root\",\"action\":\"start-item\",\"queue\":\"RESTORE\",\"child_number\":1,\"time\":1598991042,\"item\":\"root\"},\"type\":\"control\",\"pid\":12790}\n{\"pid\":12790,\"type\":\"control\",\"contents\":{\"item_type\":\"AccountRemoteUser\",\"item_name\":\"Account\",\"msg\":{\"size\":1,\"failure\":\"The account “root” already exists on “control.box.new”.\"},\"local_item\":\"root\",\"logfile\":\"item-RESTORE_AccountRemoteUser_root\",\"action\":\"failed-item\",\"queue\":\"RESTORE\",\"child_number\":1,\"time\":1598991042,\"item\":\"root\"},\"partial\":0,\"indent\":0}\n{\"contents\":{\"time\":1598991042,\"action\":\"complete\",\"queue\":\"TRANSFER\",\"child_number\":1},\"pid\":12790,\"type\":\"control\",\"indent\":0,\"partial\":0}\n{\"type\":\"control\",\"pid\":12791,\"contents\":{\"queue\":\"RESTORE\",\"action\":\"complete\",\"time\":1598991043,\"child_number\":1},\"partial\":0,\"indent\":0}\n{\"pid\":12789,\"type\":\"control\",\"contents\":{\"child_number\":0,\"action\":\"complete\",\"time\":1598991043},\"partial\":0,\"indent\":0}\n",
                          "format": "json",
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetch_transfer_session_log",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return transfer session's log file",
        "tags": [
          "Transfers",
          "Transfer Monitoring"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetch_transfer_session_log transfer_session_id='vm5docscpanelcopya20140224163412sylG' logfile='master.log'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetch_transfer_session_log?api.version=1&transfer_session_id=vm5docscpanelcopya20140224163412sylG&logfile=master.log"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/fetch_vhost_ssl_components": {
      "get": {
        "description": "This function lists the components of each SSL certificate on the server's virtual hosts.\n\n**Warning:**\n\n* On most servers, this function returns a large amount of output. We **strongly**\nrecommend that you [filter](https://go.cpanel.net/WHMAPI1FilterOutput) and\n[sort](https://go.cpanel.net/WHMAPI1SortOutput) the output.\n* The following example uses the filter and sort options:\n\n  `https://hostname.example.com:2087/cpsess##########/json-api/fetch_vhost_ssl_components?api.version=1&api.filter.a.field=servername&api.filter.a.arg0=servername.com&api.filter.a.type=eq&api.filter.enable=1&api.sort.enable=1&api.sort.a.field=servername`",
        "operationId": "fetch_vhost_ssl_components",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "components": {
                          "description": "An array of objects containing the certificate information.",
                          "items": {
                            "properties": {
                              "cabundle": {
                                "description": "The certificate's certificate authority (CA) bundle.",
                                "example": null,
                                "nullable": true,
                                "type": "string"
                              },
                              "cabundle_id": {
                                "description": "The ID of the certificate's CA bundle.",
                                "example": null,
                                "nullable": true,
                                "type": "string"
                              },
                              "certificate": {
                                "description": "The certificate's text.",
                                "example": "-----BEGIN CERTIFICATE-----\nMIIDcTCCAlmgAwIBAgIFAc/XZhswDQYJKoZIhvcNAQELBQAwFTETMBEGA1UEAwwK\ncmVzZWxsLmNvbTAeFw0xOTEyMjMxNjEwMDNaFw0yMDEyMjIxNjEwMDNaMBUxEzAR\nBgNVBAMMCnJlc2VsbC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQDs/rUGLbn4z7PeU7jMH1LeOYGc9omIATsxFwkRJUr7khxDZd59MYm2NzwLf1X2\n7ccYqYGbqjlwwpCWTrWvS9vAmrFqAr+5xp30w3bVhKrE9K+tYfUb4MbY0N/Cu0Hf\nOiSDbo07SAoOrGMHVVaPINNs1+eQ5sRxsJYBz//tOUYEJlrQAPttiHb3sk6J13Vv\nWArtk5+Q7L4lLKSxtPjQmwy/1hU2SRr0tmVkIaH77iOOMWvwB2pIYsRYjKujp0eE\ngo7FdhUIBCJ7+ZqabZHGGpm/UQ+jveI83qqB/xHD4ZxAX7GKUyHGzp8XyIPTFLNq\nAaGWN8Kv80+DZk2my78vFcjfAgMBAAGjgccwgcQwHQYDVR0OBBYEFHIsjBLssrvL\n+K0pebUQE3HYyIxFMAkGA1UdEwQCMAAwQQYDVR0jBDowOIAUciyMEuyyu8v4rSl5\ntRATcdjIjEWhGaQXMBUxEzARBgNVBAMMCnJlc2VsbC5jb22CBQHP12YbMB0GA1Ud\nJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA2BgNVHREELzAtggpyZXNlbGwuY29t\ngg9tYWlsLnJlc2VsbC5jb22CDnd3dy5yZXNlbGwuY29tMA0GCSqGSIb3DQEBCwUA\nA4IBAQAP6DKtvvr5SQGqxPTaYraq3PU6AWJGSJwFEI4LiUauyNnXMrox4a5Mi3Bl\nOoxEoyW9Br9S6HQ7Ta0kLppcPl6RTuvJljady5feMiCSYaz59XYB5Bo8vTl7Qn7u\nq2UsLqo9qroCpF+qdmbsqR8kFUltjycnVZ8g21Hu2QoeyOKEbuzohy5mtffchoV8\nzsifokwid0f+Zd88oYPQNNPib2P9Ef06DUHy2hBBe0Wunh2McjYckRTdYgIPVANj\n0DhtCcD76Q1VtmjkReirj4CY63/8wcQ2wk37qtUI5x2SzMIAuv49HAwD7atwQKgZ\n03hIrdHhFSIwTJMG1nqyO+h3X5En\n-----END CERTIFICATE-----",
                                "type": "string"
                              },
                              "certificate_id": {
                                "description": "The certificate's ID.",
                                "example": "example_com_ecfeb_5c8df_1608653403_1de5d524f287f7ec75531239a2f4a133",
                                "type": "string"
                              },
                              "key": {
                                "description": "The certificate's private key.",
                                "example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA7P61Bi25+M+z3lO4zB9S3jmBnPaJiAE7MRcJESVK+5IcQ2Xe\nfTGJtjc8C39V9u3HGKmBm6o5cMKQlk61r0vbwJqxagK/ucad9MN21YSqxPSvrWH1\nG+DG2NDfwrtB3zokg26NO0gKDqxjB1VWjyDTbNfnkObEcbCWAc//7TlGBCZa0AD7\nbYh297JOidd1b1gK7ZOfkOy+JSyksbT40JsMv9YVNkka9LZlZCGh++4jjjFr8Adq\nSGLEWIyro6dHhIKOxXYVCAQie/mamm2RxhqZv1EPo73iPN6qgf8Rw+GcQF+xilMh\nxs6fF8iD0xSzagGhljfCr/NPg2ZNpsu/LxXI3wIDAQABAoIBAQDEBRA5YgzWDQVa\nuKi6vJXQFIRuDURH56zLt5/aPJw+Y+VYoaNarWSYACt73wB9UsJAVcNLu4nzCBqL\nF+MScI38Sna/ljJ6OBth3WImzKpqaW/82m7fdhVCM9E/wZ6EQhT9WK0cAUPASzlF\nUYJcs+vrtNBle1m0JziLmzy1O4/70R4Iongi6pnMbsXopA9zypKvkhQoxAEtb1i7\nJOsFKh0EDuo4tJWkbLaKmoe8CKPr+I9lRonR6q5mwwealhuvtKvPdrz1ckYwizBn\nJIAkY5s7OXbrBe4qYd/FboNem7ExuTqGWiO7oYs/RpdOGWst3Dq7l1oC/ePxbHWK\njcL5DG6hAoGBAPdQOFPQfLrI/UOTNOnghJ4xdfEPpElMOEtWZY02Oz4cZremXfhi\n+ZLOuww6f/Qey9uKH34Umi9ugszTFREEyukJJQ+nG04GkC6EmDgNcwn4lCR6iOMN\nJc8fsnRO3zZmFC9deEbfKkUWWYaVzzBEzqZpS0+DFbPrqz/NoS0WeBtJAoGBAPVR\ntN9Q8LyTA+HjT0h3tAtyLsxPlI8GAb3t89YjSkVNAAMCrUjbOx9g2cLdSIRdoKhj\n6cwRFB2OATne5E1PfyWiw5LLgUf7aGqhDhe4xOHQyN3NhBs1p1W+XNuCJJnLxnpF\nd3NnF8VUkrphlftBzYGCbtFfgzq0W6GxcSiksdrnAoGBAJEAltYFgmwdlei98aNC\nwV7jDwy0qBVVvBfn4wjFiDyleFArGiOdHElILoE/92+RcuMYe9h3ieNPfx9Kj6p3\nzeSOOQ2RY7/+tyCfG4SZ1h49gdZVhdbiCY4EPqRU7ii99w3CVtfu1qDFNt5jDaR2\nY1dMmxxWdi4UekahcOO3rdoJAoGBAMrIAGf8QxLNv47QU/AGKsivWOm/+oADKhty\nf3WJ9FG2pYTXiJ/JwGRerYJ7Yf8wWaX3+QGbOHJ5uJ+6lCMnzGUy1tEX8USsF5LU\nkI6hR/WVnQRjZokLX8frtFwqhtCudeEKXQQCus5960+vbMeljBc61xmxBwvWnEvb\nHjvHb9EPAoGBAMXpIOZPONaOZFpAnxkHMMpE8BSyCCBOYi22JiECcXQusWiI8PIT\nyxRAxIGZ6PY6ks3AEQhb9/oWSd9RVuXsflx01SFkpRIbSNwVWhLqr9HvfmpsZw2S\n5TTdqv/VaEByFDKJSIKnKk4e6rxa2XF6YxUEvZ59Bw3iP2fpksBG/nTu\n-----END RSA PRIVATE KEY-----",
                                "type": "string"
                              },
                              "key_id": {
                                "description": "The ID of the certificate's key.",
                                "example": "ecfeb_5c8df_35927dbac0386ff253c269a9cda4c6f3",
                                "type": "string"
                              },
                              "servername": {
                                "description": "The domain or domains that the certificate covers.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetch_vhost_ssl_components",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all SSL certificate components on vhost",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetch_vhost_ssl_components"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetch_vhost_ssl_components?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/fetchcrtinfo": {
      "get": {
        "description": "This function retrieves information about a certificate.",
        "operationId": "fetchcrtinfo",
        "parameters": [
          {
            "description": "The certificate's internal system ID.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": "example_com_bf638_f81af_1500191700_79e34f42c83f748bd49474ab9d66f7cd",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cabundle": {
                          "description": "The certificate authority (CA) bundle certificate.",
                          "example": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA/MSQwIgYDVQQK\nExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMTDkRTVCBSb290IENBIFgzMB4X\nDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0NlowSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxl\ndCdzIEVuY3J5cHQxIzAhBgNVBAMTGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4\nS0EFq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan/PQeGdxyGkOlZHP/uaZ6WA8SMx+yk13\nEiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0Z8h/pZq4UmEUEz9l6YKH\ny9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWAa6xK8xuQSXgvopZPKiAlKQTGdMDQMc2P\nMTiVFrqoM7hD8bEfwzB/onkxEz0tNvjj/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQAB\no4IBfTCCAXkwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEE\nczBxMDIGCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNvbTA7\nBggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9kc3Ryb290Y2F4My5w\nN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf/EFWCFiRAwVAYDVR0gBE0wSzAIBgZngQwBAgEw\nPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcCARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNy\neXB0Lm9yZzA8BgNVHR8ENTAzMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9P\nVENBWDNDUkwuY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJouM2VcGfl96S8\nTihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr/1wXKtx8/wApIvJSwtmVi4MFU5aMqrSDE\n6ea73Mj2tcMyo5jMd6jmeWUHK8so/joWUoHOUgwuX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPM\nTZ+sOPAveyxindmjkW8lGy+QsRlGPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M\n+X+Q7UNKEkROb3N6KOqkqm57TH2H3eDJAkSnh6/DNFu0Qg==\n-----END CERTIFICATE-----",
                          "type": "string"
                        },
                        "certificate": {
                          "description": "The certificate's text.",
                          "example": "-----BEGIN CERTIFICATE-----\nMIIGeDCCBWCgAwIBAgISAxs2uBW3Q2TrGS/aRjTFh90EMA0GCSqGSIb3DQEBCwUAMEoxCzAJBgNV\nBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQDExpMZXQncyBFbmNyeXB0IEF1\ndGhvcml0eSBYMzAeFw0xNzA0MTcwNzU1MDBaFw0xNzA3MTYwNzU1MDBaMCUxIzAhBgNVBAMTGm9u\nZWFkYXl1bnRpbHRoZWRheWlkaWUuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nv2OGaQw5oeg2hy0LqfYlBoncBPqElkTfZGqY/2WHoKr5TawPqOlsrLzx17946KGxLs0A3J1rRpi9\nOqrHdv69tj2pFRFC1USjlQmWnUi3h//aTYFNrfDmG+lNWZQ3ALCveTQXYIAvbmwLSPxh6wdtEmU0\nGjbqDNxsI8GSrZcJ543PSTXYFvp7S1yBNSn64S5QB8WeNkLGyF0G+ieXbCJo5neJrNh6+6U+x7mT\n/VBsQDOFOMIskjKo1q56+/elzgSi6lZ5w9IXuQRB3YbbWzCC/kFmzEB/NTe9R5v1AEzdcNwWXpfi\nvlrNIktLQDYIRyHqtyrXl3uR8fvmoYf0ll+BrwIDAQABo4IDezCCA3cwDgYDVR0PAQH/BAQDAgWg\nMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQW\ns0hUTrAJo+db1I2D9K2Aa2O3STAfBgNVHSMEGDAWgBSoSmpjBH3duubRObemRWXv86jsoTBwBggr\nBgEFBQcBAQRkMGIwLwYIKwYBBQUHMAGGI2h0dHA6Ly9vY3NwLmludC14My5sZXRzZW5jcnlwdC5v\ncmcvMC8GCCsGAQUFBzAChiNodHRwOi8vY2VydC5pbnQteDMubGV0c2VuY3J5cHQub3JnLzCCAYMG\nA1UdEQSCAXowggF2giFjcGFuZWwub25lYWRheXVudGlsdGhlZGF5aWRpZS5jb22CH21haWwub25l\nYWRheXVudGlsdGhlZGF5aWRpZS5jb22CHm1wMy5vbmVhZGF5dW50aWx0aGVkYXlpZGllLmNvbYIa\nb25lYWRheXVudGlsdGhlZGF5aWRpZS5jb22CIXJhbmRvbS5vbmVhZGF5dW50aWx0aGVkYXlpZGll\nLmNvbYIid2ViZGlzay5vbmVhZGF5dW50aWx0aGVkYXlpZGllLmNvbYIid2VibWFpbC5vbmVhZGF5\ndW50aWx0aGVkYXlpZGllLmNvbYIed2htLm9uZWFkYXl1bnRpbHRoZWRheWlkaWUuY29tgiJ3d3cu\nbXAzLm9uZWFkYXl1bnRpbHRoZWRheWlkaWUuY29tgh53d3cub25lYWRheXVudGlsdGhlZGF5aWRp\nZS5jb22CJXd3dy5yYW5kb20ub25lYWRheXVudGlsdGhlZGF5aWRpZS5jb20wgf4GA1UdIASB9jCB\n8zAIBgZngQwBAgEwgeYGCysGAQQBgt8TAQEBMIHWMCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxl\ndHNlbmNyeXB0Lm9yZzCBqwYIKwYBBQUHAgIwgZ4MgZtUaGlzIENlcnRpZmljYXRlIG1heSBvbmx5\nIGJlIHJlbGllZCB1cG9uIGJ5IFJlbHlpbmcgUGFydGllcyBhbmQgb25seSBpbiBhY2NvcmRhbmNl\nIHdpdGggdGhlIENlcnRpZmljYXRlIFBvbGljeSBmb3VuZCBhdCBodHRwczovL2xldHNlbmNyeXB0\nLm9yZy9yZXBvc2l0b3J5LzANBgkqhkiG9w0BAQsFAAOCAQEAbfVset/dZ+ru/K2DMa2Od4pCnRYa\nLDREL7TyAWHjHq2fHK1WbzlO9zHis+C0ezB6QBPMnrGDZns/v1njGp1gASly1pqgAsytbQdPbfHv\n/Bx1HRWywniAKSRYFxrc3k3ThrSZxDj+A9mt0znNDNUvRNuP5dGFmQzFACykgNJ58yCeUJZkD78p\n7UjpbpzxWW2m6MHlHu7dDcCwSXpCa6uE4V9TeVs3OSo42C+ZlGH2x3GeZYlOZENmG2nFw0mQFSIW\nATyQuv1Jlc7tiUGmY9o13teTN4YLColMk037Rrwb/mne3ORCPB0k7QtPtzHnCdnRio2NvwZkPXzL\nbioRoW0dQg==\n-----END CERTIFICATE-----",
                          "type": "string"
                        },
                        "is_self_signed": {
                          "description": "Whether the certificate is self-signed.\n\n* `1` — Self-signed.\n* `0` — **Not** self-signed.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "key": {
                          "description": "The private key's text.",
                          "example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAv2OGaQw5oeg2hy0LqfYlBoncBPqElkTfZGqY/2WHoKr5TawP\nqOlsrLzx17946KGxLs0A3J1rRpi9OqrHdv69tj2pFRFC1USjlQmWnUi3h//aTYFN\nrfDmG+lNWZQ3ALCveTQXYIAvbmwLSPxh6wdtEmU0GjbqDNxsI8GSrZcJ543PSTXY\nFvp7S1yBNSn64S5QB8WeNkLGyF0G+ieXbCJo5neJrNh6+6U+x7mT/VBsQDOFOMIs\nkjKo1q56+/elzgSi6lZ5w9IXuQRB3YbbWzCC/kFmzEB/NTe9R5v1AEzdcNwWXpfi\nvlrNIktLQDYIRyHqtyrXl3uR8fvmoYf0ll+BrwIDAQABAoIBAG6cIm5LtnMwNXNi\nQT91Fmj0+8eU0VPXchQi11GjaAMfTP3q1xIT9c7PVCYQbtxjtncJ29mk0P73/0UM\ntkK7bwEIGdQnKa0AAlp8NCOqhwd+grgQZsiEVTkEWMPQuQkZFBDEXk5TRxZWMx93\nXU/r9smO29HasuHD8mun0BGrHPpJJm6JE8iMT9wIrr4pYb5TLtXtO/yQ5rxsT5uB\nbmuXAHZ51brj+aIdjrYNAVYHPvVDAjs7aHgKjbLvJ7DJPJKSbkbAEYKqT7lyQO5x\nGtLk1K5qKNHc1sFyybBF/LO1Tn7xTMbSuKce/AUvgE76RZ0nkvCD/kY1l3WBH2ns\nYFsojsECgYEA7UgMJgoKnerhmG/mnZqPUXb78PVgZmt0zmlAYRAcLc8K19xPKVOK\nz4HcDmfkPdkpsdp1YXJ6K/ueJOXq0aCFh2E+uYyqvsMQDFp72poxUPPlJ5zoj3jG\n6N9owoV2CuWX0QbhsE4/Hu5sVjBdE8WuqBBUqKp6602YV8YrA018bSkCgYEAznyq\nLhQujrpeqlN/HRhpNne5r5D8F4wQSZmFP9eRP1pnO2TQqY/wXJgOMKT20CcqwiiY\noVuOmQs1W3dz/MlWHanRKL5cIcF26Pgsp1jimD13JwPU/7nH4+CzJmkXGSHbNmQf\n2wvjv+jni2PbTZ5sotESziaJAdbcRAdg39KnexcCgYEAj086dycNbn9ULZs4L+wP\nr2YrmEa7KGCyNZCAH595RXmM1P7smMsqRVXrMJAy29/zPMXyqx5XB4V66FIs1tsa\nir+DANIitgBeCvgDYe5K5tfHiXtNQonxqOh1/zZYKxCr9sUvPiqkGOxrZkrjjHOS\nn1Ltrsj4YHGHF0xK4j3EbrECgYB403ANqJeZwyqTxmoST295hNNuDYvGB5qcRq43\nLl/6z16q3ZJQNj7zH7Ll+hHGubSGipTNjrLBkVJ2pE6FtBalIvKWQdXNltSK/HW8\nswFdDlKDzPU9cquqB5ktN79hYHNSv4H4fluVt6aN5S+1mqd9GpRDdz8iiWS4lgy0\nzCJenwKBgQC61u/GsjGx4yv0c3KJHgrpIroo3HYsamAdjJBfgBGKxrxVO5J7dbvd\n84UYzp+a0XNjazMxx5rEbU3HjKV5nsHjU+Eoqpz/vwfRqbC7mqINrRQoBKtEhuOY\n+xd6W+i58dOPv7PmgxPegmZ4Fo+jHx+mNLv9L+27JPMBRwRWUxH5TQ==\n-----END RSA PRIVATE KEY-----",
                          "type": "string"
                        },
                        "subject.commonName_ip": {
                          "description": "The certificate's IP address.",
                          "example": "192.0.2.0",
                          "format": "ipv4",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetchcrtinfo",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return SSL certificate information",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetchcrtinfo user='username' id='example_com_bf638_f81af_1500191700_79e34f42c83f748bd49474ab9d66f7cd'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetchcrtinfo?api.version=1&user=username&id=example_com_bf638_f81af_1500191700_79e34f42c83f748bd49474ab9d66f7cd"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/fetchsslinfo": {
      "get": {
        "description": "This function retrieves information about SSL certificates that you could install for a user. This function does **not** provide information about the currently installed certificates.",
        "operationId": "fetchsslinfo",
        "parameters": [
          {
            "description": "The certificate's text.",
            "in": "query",
            "name": "crtdata",
            "required": false,
            "schema": {
              "example": "-----BEGIN CERTIFICATE-----\\nMIIDdzCCAl+gAwIBAgIFAhQDowAwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL\\nZXhhbXBsZS5jb20wHhcNMTkxMTExMjAzNzUzWhcNMjAxMTEwMjAzNzUzWjAWMRQw\\nEgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\nggEBAK31N5qqd4BhMRm318tt7CP3thvJ9nXv5j3Hks8bfNggAgBmWwh/iGEoyB0e\\nmKmFkomXYQejSCkFmwI5/I+H53LA1UrnWURAHaY8UCJMMeCe22E9fbmASNMhcnov\\n/AOYBl3kEWEkKVBN3dQZFsWzj+PTTui1zHl8nrr1POPLZMS+t8D3HppNoUBwBkKR\\nQ/MetqCaQ3HlgbknMi0/5DbuaV0GJNbXNX9uhnGqQFUI21sEVU4xcvtEDN88dT1d\\nx5EhLXobDV/brXgFm85QK/lZt3aWlIJLs/WJJSK+152PO3HhfoHpkx+JflMYoev5\\nLauXhZGYXCEG8sBLa2PPH9WlpgcCAwEAAaOByzCByDAdBgNVHQ4EFgQU/Vx4Cer1\\nmY3SaijxdCsA2Jo7q84wCQYDVR0TBAIwADBCBgNVHSMEOzA5gBT9XHgJ6vWZjdJq\\nKPF0KwDYmjurzqEapBgwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb22CBQIUA6MAMB0G\\nA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA5BgNVHREEMjAwggtleGFtcGxl\\nLmNvbYIQbWFpbC5leGFtcGxlLmNvbYIPd3d3LmV4YW1wbGUuY29tMA0GCSqGSIb3\\nDQEBCwUAA4IBAQCneJA732g7srfydkgG0XJ8b1RS3ffVlnG1ahCDfIpBTx2M7Oco\\n0oa4QK4fEJnyh5Zc861aNrRHecLk4KV4QmDmLJVxTKNv3QXqgPJu+zN49x9ESwRs\\nbqiaD+K6MYmlyRukxY+v8jyOhTKvZTOjuuGKhDRcNNgn/kPIjZw3v37vY4o1pUPL\\nP1YBw2Caa01HstzouaVZlw05Viwo2AHJE5u7zW+VcA4VR8WAD/2SqdyWZIo+chwd\\nr3hWlRyHephLCBhOLb1wPk3E+mOIyryXjLpGdVnWewMSEY8AGvv7IORkO5ufCz/c\\n5UlG1r1+l5AhnFQPGoREI49hXVAETVInW9Uk\\n-----END CERTIFICATE-----",
              "type": "string"
            }
          },
          {
            "description": "The domain's name.",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cab": {
                          "description": "The certificate's certificate authority (CA) bundle.",
                          "example": "-----BEGIN CERTIFICATE-----\\nMIIDdzCCAl+gAwIBAgIFAhQDowAwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL\\nZXhhbXBsZS5jb20wHhcNMTkxMTExMjAzNzUzWhcNMjAxMTEwMjAzNzUzWjAWMRQw\\nEgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\nggEBAK31N5qqd4BhMRm318tt7CP3thvJ9nXv5j3Hks8bfNggAgBmWwh/iGEoyB0e\\nmKmFkomXYQejSCkFmwI5/I+H53LA1UrnWURAHaY8UCJMMeCe22E9fbmASNMhcnov\\n/AOYBl3kEWEkKVBN3dQZFsWzj+PTTui1zHl8nrr1POPLZMS+t8D3HppNoUBwBkKR\\nQ/MetqCaQ3HlgbknMi0/5DbuaV0GJNbXNX9uhnGqQFUI21sEVU4xcvtEDN88dT1d\\nx5EhLXobDV/brXgFm85QK/lZt3aWlIJLs/WJJSK+152PO3HhfoHpkx+JflMYoev5\\nLauXhZGYXCEG8sBLa2PPH9WlpgcCAwEAAaOByzCByDAdBgNVHQ4EFgQU/Vx4Cer1\\nmY3SaijxdCsA2Jo7q84wCQYDVR0TBAIwADBCBgNVHSMEOzA5gBT9XHgJ6vWZjdJq\\nKPF0KwDYmjurzqEapBgwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb22CBQIUA6MAMB0G\\nA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA5BgNVHREEMjAwggtleGFtcGxl\\nLmNvbYIQbWFpbC5leGFtcGxlLmNvbYIPd3d3LmV4YW1wbGUuY29tMA0GCSqGSIb3\\nDQEBCwUAA4IBAQCneJA732g7srfydkgG0XJ8b1RS3ffVlnG1ahCDfIpBTx2M7Oco\\n0oa4QK4fEJnyh5Zc861aNrRHecLk4KV4QmDmLJVxTKNv3QXqgPJu+zN49x9ESwRs\\nbqiaD+K6MYmlyRukxY+v8jyOhTKvZTOjuuGKhDRcNNgn/kPIjZw3v37vY4o1pUPL\\nP1YBw2Caa01HstzouaVZlw05Viwo2AHJE5u7zW+VcA4VR8WAD/2SqdyWZIo+chwd\\nr3hWlRyHephLCBhOLb1wPk3E+mOIyryXjLpGdVnWewMSEY8AGvv7IORkO5ufCz/c\\n5UlG1r1+l5AhnFQPGoREI49hXVAETVInW9Uk\\n-----END CERTIFICATE-----",
                          "type": "string"
                        },
                        "crt": {
                          "description": "The certificate's text.",
                          "example": "-----BEGIN CERTIFICATE-----\\nMIIDdzCCAl+gAwIBAgIFAhQDowAwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL\\nZXhhbXBsZS5jb20wHhcNMTkxMTExMjAzNzUzWhcNMjAxMTEwMjAzNzUzWjAWMRQw\\nEgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\\nggEBAK31N5qqd4BhMRm318tt7CP3thvJ9nXv5j3Hks8bfNggAgBmWwh/iGEoyB0e\\nmKmFkomXYQejSCkFmwI5/I+H53LA1UrnWURAHaY8UCJMMeCe22E9fbmASNMhcnov\\n/AOYBl3kEWEkKVBN3dQZFsWzj+PTTui1zHl8nrr1POPLZMS+t8D3HppNoUBwBkKR\\nQ/MetqCaQ3HlgbknMi0/5DbuaV0GJNbXNX9uhnGqQFUI21sEVU4xcvtEDN88dT1d\\nx5EhLXobDV/brXgFm85QK/lZt3aWlIJLs/WJJSK+152PO3HhfoHpkx+JflMYoev5\\nLauXhZGYXCEG8sBLa2PPH9WlpgcCAwEAAaOByzCByDAdBgNVHQ4EFgQU/Vx4Cer1\\nmY3SaijxdCsA2Jo7q84wCQYDVR0TBAIwADBCBgNVHSMEOzA5gBT9XHgJ6vWZjdJq\\nKPF0KwDYmjurzqEapBgwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb22CBQIUA6MAMB0G\\nA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA5BgNVHREEMjAwggtleGFtcGxl\\nLmNvbYIQbWFpbC5leGFtcGxlLmNvbYIPd3d3LmV4YW1wbGUuY29tMA0GCSqGSIb3\\nDQEBCwUAA4IBAQCneJA732g7srfydkgG0XJ8b1RS3ffVlnG1ahCDfIpBTx2M7Oco\\n0oa4QK4fEJnyh5Zc861aNrRHecLk4KV4QmDmLJVxTKNv3QXqgPJu+zN49x9ESwRs\\nbqiaD+K6MYmlyRukxY+v8jyOhTKvZTOjuuGKhDRcNNgn/kPIjZw3v37vY4o1pUPL\\nP1YBw2Caa01HstzouaVZlw05Viwo2AHJE5u7zW+VcA4VR8WAD/2SqdyWZIo+chwd\\nr3hWlRyHephLCBhOLb1wPk3E+mOIyryXjLpGdVnWewMSEY8AGvv7IORkO5ufCz/c\\n5UlG1r1+l5AhnFQPGoREI49hXVAETVInW9Uk\\n-----END CERTIFICATE-----",
                          "type": "string"
                        },
                        "crt_origin": {
                          "description": "The username of the certificate's creator.",
                          "example": "example",
                          "format": "username",
                          "type": "string"
                        },
                        "domain": {
                          "description": "The domain name on the certificate.",
                          "example": "example.com",
                          "format": "domain",
                          "type": "string"
                        },
                        "ip": {
                          "description": "The certificate's IP address.",
                          "example": "192.168.0.20",
                          "format": "ipv4",
                          "type": "string"
                        },
                        "key": {
                          "description": "The certificate's private key.",
                          "example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEArfU3mqp3gGExGbfXy23sI/e2G8n2de/mPceSzxt82CACAGZb\nCH+IYSjIHR6YqYWSiZdhB6NIKQWbAjn8j4fncsDVSudZREAdpjxQIkwx4J7bYT19\nuYBI0yFyei/8A5gGXeQRYSQpUE3d1BkWxbOP49NO6LXMeXyeuvU848tkxL63wPce\nmk2hQHAGQpFD8x62oJpDceWBuScyLT/kNu5pXQYk1tc1f26GcapAVQjbWwRVTjFy\n+0QM3zx1PV3HkSEtehsNX9uteAWbzlAr+Vm3dpaUgkuz9YklIr7XnY87ceF+gemT\nH4l+Uxih6/ktq5eFkZhcIQbywEtrY88f1aWmBwIDAQABAoIBAD9rmDMOFPU7+d+r\nc8QZti7Cv6TP88e5h5JccTyKg/BzcudcabHmdP0fFh3vqq6bIPqCswBK2iMChSnB\npD9bx9jBTsG5KIVGbsjNUlW+u6xtngOMnIqFp4c5uXesiM9ynFecr21f9qPtT4Nl\nBjVbqojf3/PdW8eq1F/KysEtxPYpC/RI35iL0zl8EBZ5Ydn0Yb6ftr2e72mf8JDx\nN6SgQt3E7vviRSmivuURmN9KjD+grf94fiL7PDONL/ectOWrvXnD7ppmngNuae2m\n34OHraSM46QzOp/egFc0yyNQC2PKb4YxYMq7U2ijU2rM4d809HI9jG2BXmB1I2YO\no5vZK4kCgYEA2mggZsJs7L67NXryrDNm82RnoPEjoTT2zdzl92BvMYVmu2cRyi/m\n2X5HDzTlc3l8fqFERSSc/Vc/hjluaDT+vbJzNa1tFklMbb3rXW1Z6fhqadQf34jz\nAXjeUU90aCIgAcFyTVdiz12pS1ESNCeGlRFIBF5Z3nK3MV/JmUNjEBsCgYEAy+Z/\nAtRAc6YcYseVEyo0wq2NNfDStYNp7+GhcA8qp4+1pZ8dk7n9VfkSUem0WEoi7F7g\nlUVDsWr62XiFtkV3dv77CUTlXcjmReykTzvPclT9wqyj84F09FdPZ5XusiQ0GKPe\nwLUWv+NPFlarZSxvRedlwPnC3O7FrN9TAV0/WIUCgYEAwpa/N47GKXANr6ppB8+M\nTBIK2jO+QOTFd8j2Ax8iMobebt131iIzlVeSzBOe0vFMYC4ie1ARpw3TBS2qFqIQ\nzMZvK0XmyVJpC+WIC+dfkrvHY56g/zIvAALGYL9fwV+WELpfslTHLmYObZI/m8QT\nfkC1X18Ixs6CNTVYknqdij0CgYA+btZnJFyTzMIWUOxJkPvUvFVntdSe9Z0jcWAA\nMvSpl+xTyTPCPwneIETGxhuNiS3GWIrFyg6fLZWfrzKqC/03d32gafMdU12G/Z2W\nEUdEx9dnm3scHYCVLILIwfTzoPg+rzaOpSRRHyXhPip+8SslKWRTwWY0RfxLIZqF\n6WpzDQKBgQDIFver+WSw/LTHt8LvYWyWi7pOIu6Df0ff1AYYSTMzsz9UewfRlSFw\n/ASp0dR6Po84oxIYRERxbu1ZoDhQxnGb5M1i+iFsOYBIRVmbWs4k7A0kghjGqciA\nyIbJNfSVmgNTXN4VqXW1rAqYDGDgE+huGEpnD08bPfEQm9tp0Mss5w==\n-----END RSA PRIVATE KEY-----",
                          "type": "string"
                        },
                        "key_origin": {
                          "description": "The username of the key's creator.",
                          "example": "example",
                          "format": "username",
                          "type": "string"
                        },
                        "searched_users": {
                          "description": "A list of users that the system searched to find certificate information.",
                          "example": [
                            "root",
                            "example"
                          ],
                          "items": {
                            "format": "username",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "user": {
                          "description": "The certificate's owner.",
                          "example": "example",
                          "format": "username",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "fetchsslinfo",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account SSL certificate information",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 fetchsslinfo"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/fetchsslinfo?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/flush_cphulk_login_history": {
      "get": {
        "description": "This function removes the login history entries from the cPHulk\ndatabase.",
        "operationId": "flush_cphulk_login_history",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "records_removed": {
                          "description": "The number of entries that the function deleted\nfrom the cPHulk database.",
                          "example": 10,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "flush_cphulk_login_history",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove all login security records",
        "tags": [
          "cPHulk",
          "Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 flush_cphulk_login_history"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/flush_cphulk_login_history?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/flush_cphulk_login_history_for_ips": {
      "get": {
        "description": "This function removes specific login history entries from the cPHulk database. Use this function to unblock one or more IP addresses.",
        "operationId": "flush_cphulk_login_history_for_ips",
        "parameters": [
          {
            "description": "The record's IP address.\n\n**Note:**\n\n To unblock multiple IP addresses, increment the parameter name (for example, to unblock three IP addresses, use the `ip-1`, `ip-2`, and `ip-3` parameters).",
            "examples": {
              "multiple": {
                "description": "Multiple IPv4 addresses.",
                "value": "ip-1=192.168.0.1&ip-2=192.168.0.1&ip-3=192.168.0.1"
              },
              "multiple-ipv6": {
                "summary": "Multiple IPv6 addresses.",
                "value": "ip=2001:db8::1&ip-2=2002:db8::1&ip-3=2003:db8::1"
              },
              "single": {
                "description": "A single IPv4 address.",
                "value": "192.168.0.1"
              },
              "single-ipv6": {
                "summary": "Single IPv6 Address",
                "value": "ip=2001:db8::1"
              }
            },
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "iptable_bans_removed": {
                          "description": "The number of `iptables` temporary block rules that the function deleted.",
                          "example": 1,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "records_removed": {
                          "description": "The number of entries that the function deleted.",
                          "example": 1,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "flush_cphulk_login_history_for_ips",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove login security IP address block",
        "tags": [
          "cPHulk",
          "Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 flush_cphulk_login_history_for_ips ip='192.168.0.1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/flush_cphulk_login_history_for_ips?api.version=1&ip=192.168.0.1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/force_dedistribution_from_node": {
      "get": {
        "description": "This function converts cPanel accounts that use a given\n[child node](https://go.cpanel.net/cPanelGlossary#child-node)\nto use the local server instead.\n\nUnlike the WHM API 1 `modifyacct` API call, this API does **not**\ntransfer users’ data from the child node as part of the conversion.\nThis API is useful for emergency repairs if, for example, a child\nnode goes permanently offline while accounts still use it.\n\n**Warning:**\n\nBecause this API does not transfer users’ data from the child node,\nall converted users will lose data. You should **only** call this API\nas a last resort.",
        "operationId": "force_dedistribution_from_node",
        "parameters": [
          {
            "description": "The child node’s alias (friendly name). This is the value passed in the\nWHM API 1 `link_server_node_with_api_token` function’s `alias` parameter.",
            "in": "query",
            "name": "node_alias",
            "required": true,
            "schema": {
              "example": "mailalias",
              "type": "string"
            }
          },
          {
            "description": "The usernames of the\n[distributed cPanel accounts](https://go.cpanel.net/cPanelGlossary#distributed-cpanel-account)\nto convert.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": [
                "username",
                "username1"
              ],
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "log": {
                          "description": "Log entries that indicate the conversion’s progress.",
                          "items": {
                            "properties": {
                              "contents": {
                                "description": "The message content.",
                                "example": "Converting “username1” …",
                                "type": "string"
                              },
                              "indent": {
                                "description": "The log message’s indent level.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The log level of the message.\n\n* `success` – A success message.\n* `out` – An informational message.\n* `warn` – A warning message.\n* `error` – An error message.",
                                "enum": [
                                  "success",
                                  "out",
                                  "warn",
                                  "error"
                                ],
                                "example": "success",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "user_info": {
                          "description": "Information about each newly-converted cPanel account.",
                          "items": {
                            "properties": {
                              "username": {
                                "description": "The cPanel account’s username.",
                                "example": "username1",
                                "format": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "force_dedistribution_from_node",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Repair distributed accounts with data loss",
        "tags": [
          "Server Administration",
          "Server Nodes"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 force_dedistribution_from_node node_alias='mailalias' user='username' user='username1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/force_dedistribution_from_node?api.version=1&node_alias=mailalias&user=username&user=username1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "94"
      }
    },
    "/forcepasswordchange": {
      "get": {
        "description": "This function forces a user to change the account password after the next login attempt.",
        "operationId": "forcepasswordchange",
        "parameters": [
          {
            "description": "The list of users. The system will force each user that you specify to change their account's password the next time that they log in.",
            "in": "query",
            "name": "users_json",
            "required": true,
            "schema": {
              "example": "{\"user1\":1,\"user2\":1,\"user3\":1}",
              "format": "json",
              "type": "string"
            }
          },
          {
            "description": "Whether to halt the function if it experiences an error.\n* `1` - Halt on error.\n* `0` - Continue on error.",
            "in": "query",
            "name": "stop_on_failure",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "updated": {
                          "description": "A list of usernames that the system will force to change their passwords. One or more valid usernames.",
                          "items": {
                            "example": "user",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "forcepasswordchange",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- `1` - Success\n- `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable forced password update",
        "tags": [
          "Accounts",
          "Passwords"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 forcepasswordchange users_json='{\"user1\":1,\"user2\":1,\"user3\":1}'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/forcepasswordchange?api.version=1&users_json=%7b%22user1%22%3a1%2c%22user2%22%3a1%2c%22user3%22%3a1%7d"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/generate_mobileconfig": {
      "get": {
        "description": "This function generates a mobile configuration profile for an email account.\n\n**Important:**\n\nWhen you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "generate_mobileconfig",
        "parameters": [
          {
            "description": "The email account's username.",
            "in": "query",
            "name": "account",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to use an SSL-encrypted connection.\n* `1` — Use an SSL-encrypted connnection.\n* `0` — Do **not** use an SSL-encrypted connection.",
            "in": "query",
            "name": "use_ssl",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "A comma-separated list of the email account service's `.mobileconfig` file names.\n* `caldav` — The `.mobileconfig` file for calendar setup.\n* `carddav` — The `.mobileconfig` file for contacts setup.\n* `email` — The `.mobileconfig` file for email setup.\n\n**Note:**\n\n * If you don't specify a value, this parameter uses the default values.\n * You can request one, two, or all possible values.\n * The function ignores unsupported values.",
            "in": "query",
            "name": "selected_account_services",
            "required": false,
            "schema": {
              "default": "email,caldav,carddav",
              "enum": [
                "caldav",
                "carddav",
                "email"
              ],
              "example": "email",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "The function's raw output. This function returns this value as a binary of an Apple mobile configuration file containing a series of sub-tags and keys. For more information, read [Apple's key reference](https://developer.apple.com/business/documentation/Configuration-Profile-Reference.pdf).",
                          "example": "MIIcIwYJKoZIhvcNAQcCoIIcFDCCHBACAQExDzANBglghkgBZQMEAgEFADCCFS4GCSqGSIb3DQEH\nAaCCFR8EghUbPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjwhRE9DVFlQ\nRSBwbGlzdCBQVUJMSUMgIi0vL0FwcGxlLy9EVEQgUExJU1QgMS4wLy9FTiIgImh0dHA6Ly93d3cu\nYXBwbGUuY29tL0RURHMvUHJvcGVydHlMaXN0LTEuMC5kdGQiPg0KPHBsaXN0IHZlcnNpb249IjEu\nMCI+DQo8ZGljdD4NCiAgPGtleT5QYXlsb2FkQ29udGVudDwva2V5Pg0KICA8YXJyYXk+DQogICAg\nPGRpY3Q+DQogICAgICAgIDxrZXk+Q2FsREFWQWNjb3VudERlc2NyaXB0aW9uPC9rZXk+DQogICAg\nICAgIDxzdHJpbmc+dXNlcm5hbWVAaG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZDwvc3Ry\naW5nPg0KICAgICAgICA8a2V5PkNhbERBVkhvc3ROYW1lPC9rZXk+DQogICAgICAgIDxzdHJpbmc+\naG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZDwvc3RyaW5nPg0KICAgICAgICA8a2V5PkNh\nbERBVlBvcnQ8L2tleT4NCiAgICAgICAgPGludGVnZXI+ODQ0MzwvaW50ZWdlcj4NCiAgICAgICAg\nPGtleT5DYWxEQVZQcmluY2lwYWxVUkw8L2tleT4NCiAgICAgICAgPHN0cmluZz4vcHJpbmNpcGFs\ncy9fX3VpZHNfXy8vPC9zdHJpbmc+DQogICAgICAgIDxrZXk+Q2FsREFWVXNlU1NMPC9rZXk+DQog\nICAgICAgIDx0cnVlLz4NCiAgICAgICAgPGtleT5DYWxEQVZVc2VybmFtZTwva2V5Pg0KICAgICAg\nICA8c3RyaW5nPnVzZXJuYW1lPC9zdHJpbmc+DQogICAgICAgIDxrZXk+UGF5bG9hZERlc2NyaXB0\naW9uPC9rZXk+DQogICAgICAgIDxzdHJpbmc+dXNlcm5hbWVAaG9zdC0xNzItMTYtMS0xMS5hc2hs\nZXk4MnNiLnRsZCBTZWN1cmUgQ2FsZW5kYXIgU2V0dXA8L3N0cmluZz4NCiAgICAgICAgPGtleT5Q\nYXlsb2FkRGlzcGxheU5hbWU8L2tleT4NCiAgICAgICAgPHN0cmluZz51c2VybmFtZUBob3N0LTE3\nMi0xNi0xLTExLmFzaGxleTgyc2IudGxkIFNlY3VyZSBDYWxlbmRhciBTZXR1cDwvc3RyaW5nPg0K\nICAgICAgICA8a2V5PlBheWxvYWRJZGVudGlmaWVyPC9rZXk+DQogICAgICAgIDxzdHJpbmc+Y3Bh\nbmVsLm1haWwub3JnLnVzZXJuYW1lLmhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQ8L3N0\ncmluZz4NCiAgICAgICAgPGtleT5QYXlsb2FkT3JnYW5pemF0aW9uPC9rZXk+DQogICAgICAgIDxz\ndHJpbmc+aG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZDwvc3RyaW5nPg0KICAgICAgICA8\na2V5PlBheWxvYWRUeXBlPC9rZXk+DQogICAgICAgIDxzdHJpbmc+Y29tLmFwcGxlLmNhbGRhdi5h\nY2NvdW50PC9zdHJpbmc+DQogICAgICAgIDxrZXk+UGF5bG9hZFVVSUQ8L2tleT4NCiAgICAgICAg\nPHN0cmluZz4wNWQ3OTBjMS03MjVlLTIxODUtMDM1YS0yODNiZGJkMDUxMWQ8L3N0cmluZz4NCiAg\nICAgICAgPGtleT5QYXlsb2FkVmVyc2lvbjwva2V5Pg0KICAgICAgICA8aW50ZWdlcj4xPC9pbnRl\nZ2VyPg0KICAgIDwvZGljdD4NCiAgICA8ZGljdD4NCiAgICAgICAgPGtleT5DYXJkREFWQWNjb3Vu\ndERlc2NyaXB0aW9uPC9rZXk+DQogICAgICAgIDxzdHJpbmc+dXNlcm5hbWVAaG9zdC0xNzItMTYt\nMS0xMS5hc2hsZXk4MnNiLnRsZCBTZWN1cmUgQ29udGFjdHMgU2V0dXA8L3N0cmluZz4NCiAgICAg\nICAgPGtleT5DYXJkREFWSG9zdE5hbWU8L2tleT4NCiAgICAgICAgPHN0cmluZz5ob3N0LTE3Mi0x\nNi0xLTExLmFzaGxleTgyc2IudGxkOjg0NDM8L3N0cmluZz4NCiAgICAgICAgPGtleT5DYXJkREFW\nVXNlU1NMPC9rZXk+DQogICAgICAgIDx0cnVlLz4NCiAgICAgICAgPGtleT5DYXJkREFWVXNlcm5h\nbWU8L2tleT4NCiAgICAgICAgPHN0cmluZz51c2VybmFtZTwvc3RyaW5nPg0KICAgICAgICA8a2V5\nPlBheWxvYWREZXNjcmlwdGlvbjwva2V5Pg0KICAgICAgICA8c3RyaW5nPnVzZXJuYW1lQGhvc3Qt\nMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQgU2VjdXJlIENvbnRhY3RzIFNldHVwPC9zdHJpbmc+\nDQogICAgICAgIDxrZXk+UGF5bG9hZERpc3BsYXlOYW1lPC9rZXk+DQogICAgICAgIDxzdHJpbmc+\nQ2FyZERBVjwvc3RyaW5nPg0KICAgICAgICA8a2V5PlBheWxvYWRJZGVudGlmaWVyPC9rZXk+DQog\nICAgICAgIDxzdHJpbmc+Y3BhbmVsLm1haWwub3JnLnVzZXJuYW1lLmhvc3QtMTcyLTE2LTEtMTEu\nYXNobGV5ODJzYi50bGQ8L3N0cmluZz4NCiAgICAgICAgPGtleT5QYXlsb2FkT3JnYW5pemF0aW9u\nPC9rZXk+DQogICAgICAgIDxzdHJpbmc+aG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZDwv\nc3RyaW5nPg0KICAgICAgICA8a2V5PlBheWxvYWRUeXBlPC9rZXk+DQogICAgICAgIDxzdHJpbmc+\nY29tLmFwcGxlLmNhcmRkYXYuYWNjb3VudDwvc3RyaW5nPg0KICAgICAgICA8a2V5PlBheWxvYWRV\nVUlEPC9rZXk+DQogICAgICAgIDxzdHJpbmc+Y2U0YTRiYjEtODQ3Yi1hYWQ0LWVkMTUtNzIyMDY2\nMzA5YzIyPC9zdHJpbmc+DQogICAgICAgIDxrZXk+UGF5bG9hZFZlcnNpb248L2tleT4NCiAgICAg\nICAgPGludGVnZXI+MTwvaW50ZWdlcj4NCiAgICA8L2RpY3Q+DQogICAgPGRpY3Q+DQogICAgICA8\na2V5PkVtYWlsQWNjb3VudERlc2NyaXB0aW9uPC9rZXk+DQogICAgICA8c3RyaW5nPnVzZXJuYW1l\nQGhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQ8L3N0cmluZz4NCiAgICAgIDxrZXk+RW1h\naWxBY2NvdW50TmFtZTwva2V5Pg0KICAgICAgPHN0cmluZz51c2VybmFtZUBob3N0LTE3Mi0xNi0x\nLTExLmFzaGxleTgyc2IudGxkPC9zdHJpbmc+DQogICAgICA8a2V5PkVtYWlsQWNjb3VudFR5cGU8\nL2tleT4NCiAgICAgIDxzdHJpbmc+RW1haWxUeXBlSU1BUDwvc3RyaW5nPg0KICAgICAgPGtleT5F\nbWFpbEFkZHJlc3M8L2tleT4NCiAgICAgIDxzdHJpbmc+dXNlcm5hbWVAaG9zdC0xNzItMTYtMS0x\nMS5hc2hsZXk4MnNiLnRsZDwvc3RyaW5nPg0KICAgICAgPGtleT5JbmNvbWluZ01haWxTZXJ2ZXJB\ndXRoZW50aWNhdGlvbjwva2V5Pg0KICAgICAgPHN0cmluZz5FbWFpbEF1dGhQYXNzd29yZDwvc3Ry\naW5nPg0KICAgICAgPGtleT5JbmNvbWluZ01haWxTZXJ2ZXJIb3N0TmFtZTwva2V5Pg0KICAgICAg\nPHN0cmluZz5ob3N0LTE3Mi0xNi0xLTExLmFzaGxleTgyc2IudGxkPC9zdHJpbmc+DQogICAgICA8\na2V5PkluY29taW5nTWFpbFNlcnZlclBvcnROdW1iZXI8L2tleT4NCiAgICAgIDxpbnRlZ2VyPjk5\nMzwvaW50ZWdlcj4NCiAgICAgIDxrZXk+SW5jb21pbmdNYWlsU2VydmVyVXNlU1NMPC9rZXk+DQog\nICAgICA8dHJ1ZS8+DQogICAgICA8a2V5PkluY29taW5nTWFpbFNlcnZlclVzZXJuYW1lPC9rZXk+\nDQogICAgICA8c3RyaW5nPnVzZXJuYW1lPC9zdHJpbmc+DQogICAgICA8a2V5Pk91dGdvaW5nTWFp\nbFNlcnZlckF1dGhlbnRpY2F0aW9uPC9rZXk+DQogICAgICA8c3RyaW5nPkVtYWlsQXV0aFBhc3N3\nb3JkPC9zdHJpbmc+DQogICAgICA8a2V5Pk91dGdvaW5nTWFpbFNlcnZlckhvc3ROYW1lPC9rZXk+\nDQogICAgICA8c3RyaW5nPmhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQ8L3N0cmluZz4N\nCiAgICAgIDxrZXk+T3V0Z29pbmdNYWlsU2VydmVyUG9ydE51bWJlcjwva2V5Pg0KICAgICAgPGlu\ndGVnZXI+NDY1PC9pbnRlZ2VyPg0KICAgICAgPGtleT5PdXRnb2luZ01haWxTZXJ2ZXJVc2VTU0w8\nL2tleT4NCiAgICAgIDx0cnVlLz4NCiAgICAgIDxrZXk+T3V0Z29pbmdNYWlsU2VydmVyVXNlcm5h\nbWU8L2tleT4NCiAgICAgIDxzdHJpbmc+dXNlcm5hbWU8L3N0cmluZz4NCiAgICAgIDxrZXk+T3V0\nZ29pbmdQYXNzd29yZFNhbWVBc0luY29taW5nUGFzc3dvcmQ8L2tleT4NCiAgICAgIDx0cnVlLz4N\nCiAgICAgIDxrZXk+UGF5bG9hZERlc2NyaXB0aW9uPC9rZXk+DQogICAgICA8c3RyaW5nPnVzZXJu\nYW1lQGhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQgU2VjdXJlIEVtYWlsIFNldHVwPC9z\ndHJpbmc+DQogICAgICA8a2V5PlBheWxvYWREaXNwbGF5TmFtZTwva2V5Pg0KICAgICAgPHN0cmlu\nZz51c2VybmFtZUBob3N0LTE3Mi0xNi0xLTExLmFzaGxleTgyc2IudGxkIFNlY3VyZSBFbWFpbCBT\nZXR1cDwvc3RyaW5nPg0KICAgICAgPGtleT5QYXlsb2FkSWRlbnRpZmllcjwva2V5Pg0KICAgICAg\nPHN0cmluZz5jcGFuZWwubWFpbC5vcmcudXNlcm5hbWUuaG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4\nMnNiLnRsZDwvc3RyaW5nPg0KICAgICAgPGtleT5QYXlsb2FkT3JnYW5pemF0aW9uPC9rZXk+DQog\nICAgICA8c3RyaW5nPmhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQ8L3N0cmluZz4NCiAg\nICAgIDxrZXk+UGF5bG9hZFR5cGU8L2tleT4NCiAgICAgIDxzdHJpbmc+Y29tLmFwcGxlLm1haWwu\nbWFuYWdlZDwvc3RyaW5nPg0KICAgICAgPGtleT5QYXlsb2FkVVVJRDwva2V5Pg0KICAgICAgPHN0\ncmluZz5hNmIzZTAxMC0wMGMxLWIyZjAtYWU4Mi03ZmIzZjllODkzM2Y8L3N0cmluZz4NCiAgICAg\nIDxrZXk+UGF5bG9hZFZlcnNpb248L2tleT4NCiAgICAgIDxpbnRlZ2VyPjE8L2ludGVnZXI+DQog\nICAgICA8a2V5PlByZXZlbnRBcHBTaGVldDwva2V5Pg0KICAgICAgPGZhbHNlLz4NCiAgICAgIDxr\nZXk+UHJldmVudE1vdmU8L2tleT4NCiAgICAgIDxmYWxzZS8+DQogICAgICA8a2V5PlNNSU1FRW5h\nYmxlZDwva2V5Pg0KICAgICAgPGZhbHNlLz4NCiAgICAgIDxrZXk+SW5jb21pbmdNYWlsU2VydmVy\nSU1BUFBhdGhQcmVmaXg8L2tleT4NCiAgICAgIDxzdHJpbmc+SU5CT1g8L3N0cmluZz4NCiAgICA8\nL2RpY3Q+DQogIDwvYXJyYXk+DQogIDxrZXk+UGF5bG9hZERlc2NyaXB0aW9uPC9rZXk+DQogIDxz\ndHJpbmc+dXNlcm5hbWVAaG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZCBTZWN1cmUgRW1h\naWwgU2V0dXA8L3N0cmluZz4NCiAgPGtleT5QYXlsb2FkRGlzcGxheU5hbWU8L2tleT4NCiAgPHN0\ncmluZz51c2VybmFtZUBob3N0LTE3Mi0xNi0xLTExLmFzaGxleTgyc2IudGxkIFNlY3VyZSBFbWFp\nbCBTZXR1cDwvc3RyaW5nPg0KICA8a2V5PlBheWxvYWRJZGVudGlmaWVyPC9rZXk+DQogIDxzdHJp\nbmc+Y3BhbmVsLm1haWwub3JnLnVzZXJuYW1lLmhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50\nbGQtZW1haWw8L3N0cmluZz4NCiAgPGtleT5QYXlsb2FkT3JnYW5pemF0aW9uPC9rZXk+DQogIDxz\ndHJpbmc+Y3BhbmVsLm1haWwub3JnLnVzZXJuYW1lLmhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJz\nYi50bGQ8L3N0cmluZz4NCiAgPGtleT5QYXlsb2FkUmVtb3ZhbERpc2FsbG93ZWQ8L2tleT4NCiAg\nPGZhbHNlLz4NCiAgPGtleT5QYXlsb2FkVHlwZTwva2V5Pg0KICA8c3RyaW5nPkNvbmZpZ3VyYXRp\nb248L3N0cmluZz4NCiAgPGtleT5QYXlsb2FkVVVJRDwva2V5Pg0KICA8c3RyaW5nPjRmMzI4YTVm\nLWIzMzctODZmZS03Zjk4LTVhOWMyNzFlNzY0MTwvc3RyaW5nPg0KICA8a2V5PlBheWxvYWRWZXJz\naW9uPC9rZXk+DQogIDxpbnRlZ2VyPjE8L2ludGVnZXI+DQo8L2RpY3Q+DQo8L3BsaXN0Pg0KoIIE\nSTCCBEUwggMtoAMCAQICBQG7jhEyMA0GCSqGSIb3DQEBCwUAMF4xMjAwBgkqhkiG9w0BCQEWI3Nz\nbEBob3N0LTE3Mi0xNi0xLTExLmFzaGxleTgyc2IudGxkMSgwJgYDVQQDDB9ob3N0LTE3Mi0xNi0x\nLTExLmFzaGxleTgyc2IudGxkMB4XDTE5MTExOTEzMDk1OFoXDTIwMTExODEzMDk1OFowXjEyMDAG\nCSqGSIb3DQEJARYjc3NsQGhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQxKDAmBgNVBAMM\nH2hvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDLTf43fqQJu57fAyGSBD+B/Zc3zVri44KCz/Oi9NlHCtmxET12+mE0TFkWGhjX+tzO\nfom+6Hj5KnGwr8K7qZoXq8zmiKGGvhvg11Ta6I3SJQL7VzU+wTBPXkAl+bWLBqoswzefA7A7jBZE\nv0c8W+wUAosjvmotUtiyeRsNbThTVBht7LwmHyCaAvHfIFkXkS96O6qqx0iZRlXZvahDjw6kiKOB\ne/kDpwl0YxMc3dEx2WCQyIZimtYOxNxglKKZ7UAnuKdy2we3AfOzhq3yKyDXsNyNrQghEn1aB1Ny\nY+/bYZYA/Mhlhk1jjMowEGsjLfJr1Kx6JhtBWzBPfUIkb4q7AgMBAAGjggEIMIIBBDAdBgNVHQ4E\nFgQUlzHaKABlXF/4KWQ7ZrNQij5iE/4wCQYDVR0TBAIwADCBjAYDVR0jBIGEMIGBgBSXMdooAGVc\nX/gpZDtms1CKPmIT/qFipGAwXjEyMDAGCSqGSIb3DQEJARYjc3NsQGhvc3QtMTcyLTE2LTEtMTEu\nYXNobGV5ODJzYi50bGQxKDAmBgNVBAMMH2hvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGSC\nBQG7jhEyMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAqBgNVHREEIzAhgh9ob3N0LTE3\nMi0xNi0xLTExLmFzaGxleTgyc2IudGxkMA0GCSqGSIb3DQEBCwUAA4IBAQCft6fX2NB0Lg3IM7UU\nw7eltKjsZOX3sCX/UQpwYdB8PcafoQ2Ddpb7H+CeyxW5tPk+qLpapnUWoIJBRahAQ+Xn3YWrJDfC\nFriWIdJH0Rk2Gwhydf7XM+yVm2HYBsAzfZWkF5EAjBJpgLN/28kAWdCv1p362nq79A/jrdKgpZdj\nz6fVb4aNMepJCcwIHivy7HN/PwmbXjqedwAMYsj/XEqw7aJX7+hI3VjFwkQxEbpyObVhcBhh+itt\n1O7t/MMWzg7mmJBnyTt+IbblYYEQoWvZXJgSGWT4U55mWF5arpjL9+NjFsbzvXl6TLEMzbVbpvxH\ntidgoiEpyBgzKFJ9p8TNMYICeTCCAnUCAQEwZzBeMTIwMAYJKoZIhvcNAQkBFiNzc2xAaG9zdC0x\nNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZDEoMCYGA1UEAwwfaG9zdC0xNzItMTYtMS0xMS5hc2hs\nZXk4MnNiLnRsZAIFAbuOETIwDQYJYIZIAWUDBAIBBQCggeQwGAYJKoZIhvcNAQkDMQsGCSqGSIb3\nDQEHATAcBgkqhkiG9w0BCQUxDxcNMjAwODE0MjAwMjAwWjAvBgkqhkiG9w0BCQQxIgQguoXcvM7S\nh+TCpzAkazdEcoVI9NI91whPFvfJHZd9x4oweQYJKoZIhvcNAQkPMWwwajALBglghkgBZQMEASow\nCwYJYIZIAWUDBAEWMAsGCWCGSAFlAwQBAjAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYI\nKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEggEACr8R\nPbw5CymW4Eep61SNsQzH54LXWbaS68mxF+Z8roOSLZTVYhBKP14bGJcUMhsS7c8zGYlOdwXWTA87\n4VQ0O4WIoWOsydxLVgHJ52ZDstN2iXsuW56Cm/Mk7Zow1MFdCJJ/ZX/oKOpnzm/t38kSvTXYyT/X\nLxGnTUYt+QbgUrqrxYZMbZeaAvGXkFTjTSi1kklZdnd7ndvashv5OhQ6zf6y831/c2M7mrn8vJKv\ne44Inb5NRBoK0MAc3f0vmAXrF087ayyNy6E1DqpdPWAGpCKYfIzWtIccrxKcguoIM4mWZ/Lp6mrZ\nI/2K6npCz9Wlm7iYASSsP3NMO8JWk7EWPA==\n",
                          "format": "base64",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "generate_mobileconfig",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create email account mobile profile configuration",
        "tags": [
          "Mail",
          "Mail Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 generate_mobileconfig account='username' use_ssl='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/generate_mobileconfig?api.version=1&account=username&use_ssl=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/generatesshkeypair": {
      "get": {
        "description": "This function generates an SSH key pair.",
        "operationId": "generatesshkeypair",
        "parameters": [
          {
            "description": "Whether to abort the function if the user already has a key with the same name.\n\n* `1` — Abort.\n* `0` — Continue.",
            "in": "query",
            "name": "abort_on_existing_key",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The key's encryption algorithm. The parameter defaults to the system's default algorithm.",
            "in": "query",
            "name": "algorithm",
            "required": false,
            "schema": {
              "enum": [
                "rsa2",
                "dsa"
              ],
              "example": "dsa",
              "type": "string"
            }
          },
          {
            "description": "The key's bits:\n\n* `1024` — The DSA algorithm's default value.\n* `2048`\n* `4096` — The RSA algorithm's default value.",
            "in": "query",
            "name": "bits",
            "required": false,
            "schema": {
              "enum": [
                1024,
                2048,
                4096
              ],
              "example": 2048,
              "type": "integer"
            }
          },
          {
            "description": "A comment.",
            "in": "query",
            "name": "comment",
            "required": false,
            "schema": {
              "default": "",
              "example": "NoComment",
              "type": "string"
            }
          },
          {
            "description": "The key's filename.\n\nThis parameter defaults to `id_rsa` if the algorithm is RSA, and `id_dsa`\nif the algorithm is DSA.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "default": "id_rsa",
              "example": "KeyFile",
              "type": "string"
            }
          },
          {
            "description": "The key's secure passphrase.",
            "in": "query",
            "name": "passphrase",
            "required": false,
            "schema": {
              "default": "",
              "example": "123456luggage",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "fingerprint": {
                          "description": "The key's [MD5](https://en.wikipedia.org/wiki/MD5) fingerprint.",
                          "example": null,
                          "format": "md5",
                          "nullable": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "The key's filename.",
                          "example": "KeyFile",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "generatesshkeypair",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create SSH key pair",
        "tags": [
          "Security",
          "SSH Keys and Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 generatesshkeypair"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/generatesshkeypair?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/generatessl": {
      "get": {
        "description": "This function generates a private key file, a certificate signing request (CSR), and a self-signed SSL certificate.",
        "operationId": "generatessl",
        "parameters": [
          {
            "description": "A comma-separated list of the certificate's domains.",
            "examples": {
              "multiple": {
                "summary": "Generate an SSL certificate for multiple domains.",
                "value": "domain=example1.com,example2.com,example3.com"
              },
              "single": {
                "summary": "Generate an SSL certificate for a single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domains",
            "required": true,
            "schema": {
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The certificate's country code.\n\nIf you do not use this parameter, your CSR will **not** include this field.",
            "in": "query",
            "name": "countryName",
            "required": false,
            "schema": {
              "example": "US",
              "format": "ISO-3166-1 (alpha-2)",
              "type": "string"
            }
          },
          {
            "description": "The certificate's contact email address.\n\nIf you do not use this parameter, your CSR will **not** include this field.",
            "in": "query",
            "name": "emailAddress",
            "required": false,
            "schema": {
              "example": "username@example.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "The size of the certificate's key, in bits.\n\nIf you do not use this parameter, your CSR will **not** include this field.",
            "in": "query",
            "name": "keysize",
            "required": false,
            "schema": {
              "example": 2048,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The certificate's city or locality.\n\nIf you do not use this parameter, your CSR will **not** include this field.",
            "in": "query",
            "name": "localityName",
            "required": false,
            "schema": {
              "example": "Houston",
              "type": "string"
            }
          },
          {
            "description": "The department of the organization that owns the certificate.",
            "in": "query",
            "name": "organizationalUnitName",
            "required": false,
            "schema": {
              "default": null,
              "example": "Development",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "The certificate's organization.\n\nIf you do not use this parameter, your CSR will **not** include this field.",
            "in": "query",
            "name": "organizationName",
            "required": false,
            "schema": {
              "example": "Example, L.L.C.",
              "type": "string"
            }
          },
          {
            "description": "The certificate's passphrase.",
            "in": "query",
            "name": "pass",
            "required": false,
            "schema": {
              "default": null,
              "example": "123456luggage",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Whether the function will skip certificate generation.\n\n* `1` — Skip certificate generate (do **not** generate a certificate).\n* `0` — Do **not** skip certificate generation (generate a certificate).\n\n**Note:**\n\nThe function will still generate a CSR and key and save both to the user's `SSLStorage`\ndata store.",
            "in": "query",
            "name": "skip_certificate",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The certificate's state or province name.\n\nIf you do not use this parameter, your CSR will **not** include this field.",
            "in": "query",
            "name": "stateOrProvinceName",
            "required": false,
            "schema": {
              "example": "Texas",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cert": {
                          "description": "The certificate's text.",
                          "example": "-----BEGIN CERTIFICATE-----\nMIIDVDCCAjygAwIBAgIFANMbQ1IwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL\nZXhhbXBsZS5jb20wHhcNMjAwMzE2MTg1OTU4WhcNMjEwMzE2MTg1OTU4WjAWMRQw\nEgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBALnif/SIEE3xfi7iXCI3Kk7yNFrKw9b3SbCwTFEV4HZZpX+gK0ZkwT1vkkT6\nIFs68DVJI9KxXycCY8ZVI64TeD5Hqqy3p9NAkALyfC9OJlDP/mAKjgUZYISMci4K\njuf252rrtox5I5DgbWfXGe12HAjOnQrNjJMvscU9DstXMjDtzrlpwHZ/PH+v/Rcw\nt1WwpcAVOFNxQq6Z0CDwKW/JsHu7tVRa57QMlLTm2BEMIPlTHHoHRJk0zOQuHP3x\n87eYpnCiE/WbC5xlfm912fnFvvECb/6OGtAsw7GC0KnovS1W+rPfZHAdbbA61ukU\nMh+U5VJaNot/kqfbJYpkMD1VRu8CAwEAAaOBqDCBpTAdBgNVHQ4EFgQUSU78eVCc\nJPFAzdImFwAufRu+2WEwCQYDVR0TBAIwADBCBgNVHSMEOzA5gBRJTvx5UJwk8UDN\n0iYXAC59G77ZYaEapBgwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb22CBQDTG0NSMB0G\nA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAWBgNVHREEDzANggtleGFtcGxl\nLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEAf9dzrKj4LGvkBN3q0VHvPsKicl8tABxK\nuv4vKoiAXuh7R9k2bnFqpfvDa7j2qbBd5Gh4ctjdwTv7eA/E0sELgxlezcx9grgX\nCk//GRieAoEj6ZOx1AdKw/Pj6jQyMpU9mQi7+nbpcl1CmQlBc9c2OiayjAAwxm1s\n+Uj7C9+OOkFXeLt/adurcKHhDO3tVD9fqr+pFiVjJOyuIr+T/84gAUAK4RxipaDg\nf35OapjaVQesolECPEP9l/ajf5e2C33JBDwoVqa3b7wwhStN4YpF+7SAd74K1QRz\nrPum8QKnzZjwtx0OBRJl/CHQBz4u0LJGBH4vXhgzzoAcdlGouKf8RA==\n-----END CERTIFICATE-----\n",
                          "format": "base64 certificate",
                          "type": "string"
                        },
                        "cert_id": {
                          "description": "The certificate's ID.",
                          "example": "example_com_a2459_9d253_1405012775_521f3620ac92180d24a74813a921b23e",
                          "type": "string"
                        },
                        "certfile": {
                          "description": "The absolute file path to the certificate's location.",
                          "example": "/var/cpanel/ssl/system/certs/example_com_e0054_da789_1405012513_401c27501f5e0dd8d1b1d9caa902a0c8.crt",
                          "format": "path",
                          "type": "string"
                        },
                        "csr": {
                          "description": "The CSR's text.",
                          "example": "-----BEGIN CERTIFICATE REQUEST-----\nMIIChDCCAWwCAQAwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb20wggEiMA0GCSqGSIb3\nDQEBAQUAA4IBDwAwggEKAoIBAQC54n/0iBBN8X4u4lwiNypO8jRaysPW90mwsExR\nFeB2WaV/oCtGZME9b5JE+iBbOvA1SSPSsV8nAmPGVSOuE3g+R6qst6fTQJAC8nwv\nTiZQz/5gCo4FGWCEjHIuCo7n9udq67aMeSOQ4G1n1xntdhwIzp0KzYyTL7HFPQ7L\nVzIw7c65acB2fzx/r/0XMLdVsKXAFThTcUKumdAg8ClvybB7u7VUWue0DJS05tgR\nDCD5Uxx6B0SZNMzkLhz98fO3mKZwohP1mwucZX5vddn5xb7xAm/+jhrQLMOxgtCp\n6L0tVvqz32RwHW2wOtbpFDIflOVSWjaLf5Kn2yWKZDA9VUbvAgMBAAGgKTAnBgkq\nhkiG9w0BCQ4xGjAYMBYGA1UdEQQPMA2CC2V4YW1wbGUuY29tMA0GCSqGSIb3DQEB\nCwUAA4IBAQCEPc5HD2KRQpqqm7aG6Y/oOnbGALi7GcOsr/vo+voWRDhC/nTAC9vp\nDXEjWY4FfA7N1VSgH5f04k40SBWlfvgCzQAB2AfLEo6LReNv1oCpojvKZVbJq+pq\nKTEMhkFzj4CBTG2gt9rAhKmNai7AnvDWdrnulsVShAsQMYsEeVmCxfGE9w3IEmLP\nJSvUB6/RSPF8zB5yP6/tZy00k+Mt/959yPAxDicrNASbCA2/TkuaBEaP+2v9lJY7\nzg2Z1js/Nv/5DE+1sqp+7GI26M6ZCSNzSyTVs2MOl6ecJTxhRCbVTYFy9SDRtsGE\nVOpPe2+XTcBM/mGIIRJharQNgy7S8kZ0\n-----END CERTIFICATE REQUEST-----\n",
                          "format": "base64 certificate",
                          "type": "string"
                        },
                        "csr_id": {
                          "description": "The CSR's ID.",
                          "example": "example_com_e0054_da789_96b6625681492b7c43844b6ec37764de",
                          "type": "string"
                        },
                        "csrfile": {
                          "description": "The absolute file path to the CSR.",
                          "example": "/var/cpanel/ssl/system/csrs/example_com_a2459_9d253_d5edb563abb8dd426099bbb358c8f2bc.csr",
                          "format": "path",
                          "type": "string"
                        },
                        "key": {
                          "description": "The private key's text.",
                          "example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAueJ/9IgQTfF+LuJcIjcqTvI0WsrD1vdJsLBMURXgdlmlf6Ar\nRmTBPW+SRPogWzrwNUkj0rFfJwJjxlUjrhN4PkeqrLen00CQAvJ8L04mUM/+YAqO\nBRlghIxyLgqO5/bnauu2jHkjkOBtZ9cZ7XYcCM6dCs2Mky+xxT0Oy1cyMO3OuWnA\ndn88f6/9FzC3VbClwBU4U3FCrpnQIPApb8mwe7u1VFrntAyUtObYEQwg+VMcegdE\nmTTM5C4c/fHzt5imcKIT9ZsLnGV+b3XZ+cW+8QJv/o4a0CzDsYLQqei9LVb6s99k\ncB1tsDrW6RQyH5TlUlo2i3+Sp9slimQwPVVG7wIDAQABAoIBAGIHgzdwcjjIvKT5\nF2Gr+hH8RYQEHtfFPgWCVB0HDoMbr93omCndhNNjfZ4G0v2JzZgsZEn+5JFr/zZf\nPBvXhLhDj0za5hTQnaIQQ1GnQymnJx17M36Y7X+5mZWSV98ZJN4MRQ8763fCA7CZ\njcDfYtV6MPO7hwEwS+4azyyJZZzLRUP2Z8kpXv3PFlXUeddZHwQgyKRdLcQWXE/w\niFClYSfsk10y8Nm6BKzI6TkZS32zIGt3FdJ8+kARJteV0sg6hjPpZMH0223Cbn+h\nlq9eU5b8N5xq7FBmmrfpJcaPdkmo8nUzEGQszyHHjF3N3p78065T+PEb+Jlirsl/\nQf48ssECgYEA9o5wPmAtP8/tdDtdUSHJDbvERq0i2SeEmlrc/82mw82WlHA//sg8\npqeT3EtH8QdvZqSVSw74Yr4TNOLMwLt8T5Rg+gPYsdoqc++d8hB/ru6nvRBwJ437\nZN2JeoEObvNv4QgnfFpeKGxgaX49Yx6u0DJsABWpWsAppCUTXtxP2D8CgYEAwQEo\nQ0tFhwKz4e2gSyOSkuWUJi+tbY//+ouZEGlIYCzObXsZ/bM/AIEZKiAVTdyY5h91\nnAXLFRgcP3z0+h0XeiTcSZN4oEiMwL1/mPmx4uBMZijV54+ABjUFbVStlzxh4KLN\nzf0HUOPAA1biCNDn1yY+a8C+hKky2Ec+Nx//ZVECgYBqD5v5OSY97RQYi/D4lbAH\nWF52iMQU5gsE21F2OOEkGaxM7nyY/UoZ5ryUZ03rQWeKoAIY57exwlJAzc+GmSBA\nm3OcGUt+NntMpCctmitS9RbzHb8hRNJ/8UzShfHPiKj4BKn3tGgMu5I9zzBZEzng\nFdCfuLHBeChxlAFhLSSrwQKBgQCUUsxbcvRavmP5Y8HFHPBevdotwoQ4Z+rj4/Zc\nm1yItMZrcqhVxTPMsmnhasiUjsxeRZz/q6AXdPD4hZJKyKKrNrqoPJH+M+MfmEIA\nERx468Eq3YUNsMVFf+fMzr+dM0VQ+izJegPuUSjWKCYLemhBet2Lt5NypgkyFwYk\nHQ4MEQKBgCeQOxNn2exJj0B6wt0Ts+tHdQlreLv+7zMB+CWODnkaXAiRqB8mr1O1\nmFZApPHnx3HUrxRsiHfvf9m2N2gpzyVcK86zbQSti5PB9sqEMw5eHd1qtlPSOV31\nJUG9qpLL/Jf6+AsZCNGOrjMQD99Sh3x/tPZVbK49OyOe6HxV5Ht0\n-----END RSA PRIVATE KEY-----\n",
                          "format": "base64 certificate",
                          "type": "string"
                        },
                        "key_id": {
                          "description": "The private key's ID.",
                          "example": "e0054_da789_101721a053024156a34e0df8a9c388d4",
                          "type": "string"
                        },
                        "keyfile": {
                          "description": "The absolute file path to the private key.",
                          "example": "/var/cpanel/ssl/system/keys/e0054_da789_101721a053024156a34e0df8a9c388d4.key",
                          "format": "path",
                          "type": "string"
                        },
                        "sender": {
                          "description": "The username that generated the request.",
                          "example": "admin",
                          "type": "string"
                        },
                        "sender_host": {
                          "description": "The host that generated the request.",
                          "example": "hostname.example.com",
                          "format": "domain",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "generatessl",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Key, Certificate, and CSR generated OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create self-signed SSL certificate",
        "tags": [
          "SSL",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 generatessl domains='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/generatessl?api.version=1&domains=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/get_adjusted_market_providers_products": {
      "get": {
        "description": "This function lists all available cPanel Market products from enabled providers,\nwith the prices that the adjustments database modifies.",
        "operationId": "get_adjusted_market_providers_products",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "group_ssl_certificate": {
                    "summary": "product_group=ssl_certificate",
                    "value": {
                      "data": {
                        "products": [
                          {
                            "base_name": "",
                            "billing_type": "one-time",
                            "description": "An extended-validated (EV) SSL certificate signed by cPanel.",
                            "display_name": "cPanel EV SSL Certificate",
                            "enabled": 1,
                            "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=",
                            "icon_mime_type": "image/svg+xml",
                            "license_term": 0,
                            "max_users": null,
                            "maximum_server_price": null,
                            "minimum_server_price": null,
                            "price": null,
                            "price_unit": "USD",
                            "product": "cPanel EV Certificate",
                            "product_category": "N/A",
                            "product_group": "ssl_certificate",
                            "product_id": 209,
                            "provider_display_name": "cPanel Store",
                            "provider_name": "cPStore",
                            "recommended": 0,
                            "requires_ip": 0,
                            "x_certificate_term": [
                              1,
                              "year"
                            ],
                            "x_identity_verification": [
                              {
                                "label": "Organization Name",
                                "name": "organizationName"
                              },
                              {
                                "is_optional": 1,
                                "label": "Department Name",
                                "name": "organizationalUnitName"
                              },
                              {
                                "description": "9 consecutive digits or “##-###-####” (More information (https://go.cpanel.net/get_duns))",
                                "is_optional": 1,
                                "label": "Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number",
                                "name": "duns_number",
                                "pattern": "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                              },
                              {
                                "label": "Street Address",
                                "name": "streetAddress"
                              },
                              {
                                "label": "City",
                                "name": "localityName"
                              },
                              {
                                "label": "State or Province",
                                "name": "stateOrProvinceName"
                              },
                              {
                                "label": "Postal Code",
                                "name": "postalCode"
                              },
                              {
                                "label": "Country Code",
                                "name": "countryName",
                                "type": "country_code"
                              },
                              {
                                "label": "Representative’s Given (First) Name",
                                "name": "rep_forename"
                              },
                              {
                                "label": "Representative’s Surname (Last Name)",
                                "name": "rep_surname"
                              },
                              {
                                "label": "Representative’s Email Address",
                                "name": "rep_email_address",
                                "type": "email"
                              },
                              {
                                "description": "This should be one of the organization’s publicly-listed telephone numbers.",
                                "is_optional": 1,
                                "label": "Representative’s Telephone Number",
                                "name": "rep_telephone",
                                "type": "tel"
                              },
                              {
                                "description": "Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/) for more information about this field’s options.",
                                "label": "Business Category",
                                "name": "business_category",
                                "options": [
                                  [
                                    "b",
                                    "Incorporated Business (“Private Organization”)"
                                  ],
                                  [
                                    "d",
                                    "Non-incorporated Business (“Business Entity”)"
                                  ],
                                  [
                                    "c",
                                    "Government Entity (“Government Entity”)"
                                  ]
                                ],
                                "type": "choose_one"
                              },
                              {
                                "is_optional": 1,
                                "label": "City Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                "name": "joi_locality_name"
                              },
                              {
                                "is_optional": 1,
                                "label": "State or Province Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                "name": "joi_state_or_province_name"
                              },
                              {
                                "label": "Country Code Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                "name": "joi_country_name",
                                "type": "country_code"
                              },
                              {
                                "is_optional": 1,
                                "label": "Date of Incorporation",
                                "name": "date_of_incorporation",
                                "type": "date"
                              },
                              {
                                "is_optional": 1,
                                "label": "Assumed Name (DBA (Doing Business As))",
                                "name": "assumed_name"
                              }
                            ],
                            "x_max_http_redirects": 0,
                            "x_payment_trigger": "checkout",
                            "x_price_per_domain": 60,
                            "x_price_per_domain_maximum": 600,
                            "x_price_per_domain_minimum": 60,
                            "x_ssl_per_domain_pricing": 1,
                            "x_supports_dns_dcv": 1,
                            "x_validation_type": "ev",
                            "x_warn_after": 604800
                          }
                        ]
                      },
                      "metadata": {
                        "command": "get_adjusted_market_providers_products",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "products": {
                          "description": "An array of objects that contains information about the products in the cPanel Market.",
                          "items": {
                            "additionalProperties": {
                              "description": "Any product-specific additional properties. Each additional property value begins with the `x_` prefix.",
                              "x-additionalPropertiesName": "x_properties"
                            },
                            "properties": {
                              "base_name": {
                                "description": "The base name, if one exists.",
                                "type": "string"
                              },
                              "billing_type": {
                                "description": "The billing type.",
                                "example": "one-time",
                                "type": "string"
                              },
                              "description": {
                                "description": "The product's description.",
                                "example": "Get an SSL Certificate today.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "The product's display name.",
                                "example": "Extended Validated cPanel SSL Certificate",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Whether the product is enabled.\n\n* `0` - Disabled.\n* `1` - Enabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "icon": {
                                "description": "The icon to display in the product list.",
                                "example": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAKq2lDQ1BJQ0MgUHJvZmlsZQAASImV\nlgdQU+kWx7970xstAQEpoffeQUroofcmKiGhhBJiICDYEXEFVhQRacqCrjQFV6XIKiIWRFkUG/YF\nWRTUdbFgQ+Vd4BHee/N23rwzc3J/c+Z8/3vul++b+QNAvsfi81NgCQBSeRmCIA9nekRkFB33O8AC\nJUAC2kCFxU7nMwICfMDfxoe7AJp73jKY0/r7vv8akpy4dDYAUADCsZx0dirCp5DsZvMFGQCgkARq\nWRn8OS5HmCZABkT46BwnLHDPHMcu8O35npAgF4QnAMCTWSxBAgCk90idnslOQHTINISNeRwuD2FX\nhB3YiSwOwnkI66emps3xcYS1Y/9FJ+HfNGNFmixWgogXvmU+8K7cdH4KK/v/3I7/HakpwsV3qCJJ\nThR4BiFPGWTPGpLTvEXMi/XzX2QuZ75/nhOFnqGLzE53iVpkDsvVe5GFyaGMRWYJltZyM5ghiyxI\nCxLpx6W7BYv045g+ohlS/EQcz3VnLnJOYkj4Imdyw/wWOT052Hupx0VUFwiDRDPHC9xF35iavjQb\nm7U0Q0ZiiOfSbBGiGThxrm6iOi9U1M/PcBZp8lMCRP1xKR6ienpmsGhtBnLAFjmJ5RWwpBMg2h/A\nAMEgFEk6CAOewBSYI4lMlRG3bu5MA5c0fraAm5CYQWcgtyaOzuSxDfXppsYmFgDM3cGFv/jd9fm7\nBcnGLtWykPUrviNnkbBUi3gKwDGkJs9aqmluBkAaBUBbL1soyFyooed+MIAIxAENyCF3XA254wbI\nZJbADjgBN+AF/EEIiASrARskglQgAFlgA9gK8kEh2A32gUpQAw6BBnAMnAAd4Aw4Dy6Da+AGuAMe\nghEwDl6CKfABzEAQhIMoEBWSg5QhDUgPMoWsIQfIDfKBgqBIKAZKgHiQENoAbYMKoRKoEqqFGqFf\noNPQeagfGoLuQ6PQJPQW+gKjYDJMgxVhTdgItoYZsDccAq+CE+C1cA6cB++Cy+E6+CjcDp+Hr8F3\n4BH4JTyNAigSSgalgjJAWaNcUP6oKFQ8SoDahCpAlaHqUC2oLlQf6hZqBPUK9RmNRVPRdLQB2g7t\niQ5Fs9Fr0ZvQRehKdAO6HX0RfQs9ip5Cf8dQMAoYPYwthomJwCRgsjD5mDLMEUwb5hLmDmYc8wGL\nxcpgtbBWWE9sJDYJux5bhD2AbcX2YIewY9hpHA4nh9PD2eP8cSxcBi4fV4E7ijuHu4kbx33Ck/DK\neFO8Oz4Kz8Pn4svwTfhu/E38c/wMQYKgQbAl+BM4hGxCMeEwoYtwnTBOmCFKErWI9sQQYhJxK7Gc\n2EK8RHxEfEcikVRJNqRAEpe0hVROOk66QholfSZLkXXJLuRospC8i1xP7iHfJ7+jUCiaFCdKFCWD\nsovSSLlAeUL5JEYVMxRjinHENotVibWL3RR7LU4Q1xBniK8WzxEvEz8pfl38lQRBQlPCRYIlsUmi\nSuK0xLDEtCRV0kTSXzJVskiySbJfckIKJ6Up5SbFkcqTOiR1QWqMiqKqUV2obOo26mHqJeo4DUvT\nojFpSbRC2jHaIG1KWkraXDpMep10lfRZ6REZlIymDFMmRaZY5oTMXZkvyxSXMZbFLdu5rGXZzWUf\nZZfLOsnGyRbItsrekf0iR5dzk0uW2yPXIfdYHi2vKx8onyV/UP6S/KvltOV2y9nLC5afWP5AAVbQ\nVQhSWK9wSGFAYVpRSdFDka9YoXhB8ZWSjJKTUpJSqVK30qQyVdlBmatcqnxO+QVdms6gp9DL6Rfp\nUyoKKp4qQpValUGVGVUt1VDVXNVW1cdqRDVrtXi1UrVetSl1ZXVf9Q3qzeoPNAga1hqJGvs1+jQ+\nampphmvu0OzQnNCS1WJq5Wg1az3Spmg7aq/VrtO+rYPVsdZJ1jmgc0MX1rXQTdSt0r2uB+tZ6nH1\nDugN6WP0bfR5+nX6wwZkA4ZBpkGzwaihjKGPYa5hh+FrI3WjKKM9Rn1G340tjFOMDxs/NJEy8TLJ\nNekyeWuqa8o2rTK9bUYxczfbbNZp9sZczzzO/KD5PQuqha/FDotei2+WVpYCyxbLSSt1qxiraqth\na5p1gHWR9RUbjI2zzWabMzafbS1tM2xP2P5lZ2CXbNdkN7FCa0XcisMrxuxV7Vn2tfYjDnSHGIef\nHEYcVRxZjnWOT53UnDhOR5yeM3QYSYyjjNfOxs4C5zbnjy62LhtdelxRrh6uBa6DblJuoW6Vbk/c\nVd0T3JvdpzwsPNZ79HhiPL0993gOMxWZbGYjc8rLymuj10Vvsnewd6X3Ux9dH4FPly/s6+W71/eR\nn4Yfz6/DH/gz/ff6Pw7QClgb8GsgNjAgsCrwWZBJ0IagvmBq8JrgpuAPIc4hxSEPQ7VDhaG9YeJh\n0WGNYR/DXcNLwkcijCI2RlyLlI/kRnZG4aLCoo5ETa90W7lv5Xi0RXR+9N1VWqvWrepfLb86ZfXZ\nNeJrWGtOxmBiwmOaYr6y/Fl1rOlYZmx17BTbhb2f/ZLjxCnlTMbZx5XEPY+3jy+Jn0iwT9ibMJno\nmFiW+Irrwq3kvknyTKpJ+pjsn1yfPJsSntKaik+NST3Nk+Il8y6mKaWtSxvi6/Hz+SNrbdfuWzsl\n8BYcSYfSV6V3ZtAQszMg1BZuF45mOmRWZX7KCss6uU5yHW/dQLZu9s7s5znuOT+vR69nr+/doLJh\n64bRjYyNtZugTbGbejerbc7bPL7FY0vDVuLW5K2/5RrnluS+3xa+rStPMW9L3th2j+3N+WL5gvzh\nHXY7an5A/8D9YXCn2c6Knd8LOAVXC40Lywq/FrGLrv5o8mP5j7O74ncNFlsWH9yN3c3bfXeP456G\nEsmSnJKxvb5720vppQWl7/et2ddfZl5Ws5+4X7h/pNynvLNCvWJ3xdfKxMo7Vc5VrdUK1TurPx7g\nHLh50OlgS41iTWHNl5+4P92r9ahtr9OsKzuEPZR56NnhsMN9P1v/3HhE/kjhkW/1vPqRhqCGi41W\njY1NCk3FzXCzsHnyaPTRG8dcj3W2GLTUtsq0Fh4Hx4XHX/wS88vdE94nek9an2w5pXGquo3aVtAO\ntWe3T3Ukdox0RnYOnfY63dtl19X2q+Gv9WdUzlSdlT5b3E3szuuePZdzbrqH3/PqfML5sd41vQ8v\nRFy4fTHw4uAl70tXLrtfvtDH6Dt3xf7KmX7b/tNXra92XLO81j5gMdD2m8VvbYOWg+3Xra533rC5\n0TW0Yqj7puPN87dcb12+zbx97Y7fnaG7oXfvDUcPj9zj3Ju4n3L/zYPMBzMPtzzCPCp4LPG47InC\nk7rfdX5vHbEcOTvqOjrwNPjpwzH22Ms/0v/4Op73jPKs7Lny88YJ04kzk+6TN16sfDH+kv9y5lX+\nn5J/Vr/Wfn3qL6e/BqYipsbfCN7Mvi16J/eu/r35+97pgOknH1I/zHws+CT3qeGz9ee+L+Ffns9k\nfcV9Lf+m863ru/f3R7Ops7N8loA1bwUQZwDg+HgA3tYDQIkEgHoDAKLYgkeeD2jB188T+Dte8NHz\nYQnA4R4A5qwa0wmACoS1EKZuAWDOIiHWCDYzE+U/Iz3ezHRBiyyPWJOe2dm3swDgYgD4Njg7O1M+\nO/utDBkW8dfn/Ba8+byP4QKg/g7AOjX9jXVbwH/EPwCGGQVDbR7I2wAAAAlwSFlzAAALEwAACxMB\nAJqcGAAAAgRpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRv\nYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6\ncmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAg\nPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6ZXhpZj0iaHR0\ncDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnRpZmY9Imh0dHA6\nLy9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIj4KICAgICAgICAgPGV4aWY6UGl4ZWxZRGltZW5zaW9u\nPjM5MzwvZXhpZjpQaXhlbFlEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWERpbWVuc2lv\nbj41MTU8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4x\nPC90aWZmOk9yaWVudGF0aW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRG\nPgo8L3g6eG1wbWV0YT4KxfVkQAAACgpJREFUWAmNV1lvG9cZPTMcLsN9EUmJlCzJ+9oEaZAu6WIU\nCVD0pb+lr31x3/oL8hKgaOOiQVugRV10SZG2dlGntqPElmzZliWLEimJkkhxEfchh5ye71LMQ2Cg\nHXI4w5k793zL+c53R3McZ4T/Y+M4NUrTNHUcjYYYDm11brgMaLpLnTtwoPHzv7YJrPHliV/1oIyZ\nAA/6XTx//CmKu3nYgyH6/QEE78rrb+HC5dehiZ3jn1dN9aVrGnSZeDK5AE32ycgJeHHnJSqlAtwe\nE51mHceVffQ6NTTqFRQL27j1y/ewuvIZwTWMRuNoTeZ41VECKsHUD4q76HbbaszEmIlBo9FIGbeb\n38CtX/wUrUZFjZs5dRr+oB8ejwfBkIlIPIFgfA4f/eG3KB3uQdd15cirgCfXxpnU4Dozl7mR29zA\nPg1pt5oYjmy4XC643W410WBg4Y8fvodWs4OF8+cxlV5QwAd7GzSoBZfhQnwqBq/P5PMWnj1+gFgy\nicRU+gsjJg5NwCdHuW643F40jluoVmp4uvoUhttAOBJBPJHA/OIi2rVDHOS34I/GGe4an+0TzIDH\n68dxowCfPwgzOMSFqxe4X8L6sw38+oMP8KMf/wTBQFBhSRplm6RT/ZH//Bg2may5NLgNLzyayUtA\nq9VBu9PFxtoKuod59G0X6kUJv0PiDWhkALMLZ7D29KlKkdc0MbB6+Oc//o3l53v4zpuXUC5uwz1/\nbhxJTVeYr4qEIXdUroXK2gjMOgxDg1ezkMu9RK9tMRKz+Nb3vst7OnIvPsfC6TOYnklhevYUKpUq\nU+bmuA5e5Kr45EUZ0zE/0o/v4b33f4ZAOIZsJouZ6TTS6TRi0RiCwSCjE4DP9MEYDGzmdJzvISVB\nrCwVC9h8toqdwwbOz6cxf3oej5ZX0Kx38e73r2Nl6QEuXbuKuYV5HB830LcsVkUVn9+7j93NEqw3\nstg/alEbdOXM/sEunj9/hkq1gS7H+v0mkskEMplpGH/501+Ryc4gNZ1CNB5HIBjA6vOXOCqUkT01\ni7m5Gdy9ex+f5i28/do5FHLb8IfCrJwen5vFTn4HAf5vVOpYnI4AzTJqlQpWn72ESQ4kOGf2VAap\nqZTihEGC2/aQz3dRrzfg8jj6jZer63jy6Cm2clsolcowmYJTmSnYFJlINIBHT9ZhUW9WN/IIDDs4\ne+40UjMM59QUmo0mfD4fRiRaMkrSuU3uHhgs0Xari4P9A2yu57C2to7t7QKqtSqEd5KGbDYDw8s8\nmAG/IsnAtrWVpcfOO+98jWXEXMWGWq8/cEL+APJPt5XAtFuzrJpjlp+blRBFeiaDWrVMHYjCzYq4\ndu0iljfyGlPruGmEyzDg9XhVuXY7PWxsbDEdG5TxIdOja/poOCKzbQgXmH4nkghj/7CCkdvFHM84\nNZaox+dHLGLira9eQIq5K1fr6Pb6NJq5TKdU5TSbTbhIrMpxE8f1uiNixLqDQzGzbVvt/MOqcCEU\nDmAqEUc0GnMMqUUpr5HDKmBbklotHpRx9z99xONhjJgvP6O0eO4s5skHw+OCTo8GtgVn2ACVS+V6\nUKqhzxK9/MZrqLR76PVtiszYiJEzlAJTBMdQg+3YPJDwOnuBAPKrrBULpSSFKM1Gh9qew1GFHtEr\nh5M0qA9dhk60/rjWQP1oh2NHiJLVsWgUnY6lyOVnSvd29tCllgw5dlz/DC+Bxl1U5hjvrlQ8foO+\nQwLA+9KZVJuVUtE9hkZeiEKgUathmhGYSsaVuHg8BlLRCCKJGDQaFaAU23Sk37dQKOzig5sfolNr\noUxSt6kRkgZp08IJg7vIvUaBUkI0JICgy5f4TAfoTRce0+cM+n006bmb0bSsvpLqKIGlEbXqdSQS\nEQST5+ANVfEV3cB6bgtrlPQgQrB6HVSKh1hfXqaEAeFYCkk6kWTJx6YS5EBUDKDbdF/CI+eOhIJW\nWATuk5hyTdJyjVq/ub6FK1cvYo51PTs7gw7Fp16tIBHJwGHTSqcSFJsqlj7+F+KZOWbUgS8SIFVZ\nnlwjCJ92Xmxi7fEjoRvi3giYgtgN3lVA45XMybmUBI3SGapyqY4LFxYRCQVUiNOsFL/XgOn1KRJG\nkmGs3L4NG26kZ7MUFzd+/+ePkGbFdFttusCokqzs/jB8HopdmDoQhsY0koQTcN7nKWOgTuQoBsjd\nTqevJHeBkpyjGH3y8R0Ut/NIZrPokPHN4gGqrR5uvv9zHLCCrr97nU+BXTMArxkg+JBz0QhZxjEK\n0tAGFLkheaEiMAGVhwRepUOWVSot7A0Mc4rCdO3qeaSnkySfH8lMho0miifLT3Dnb7dZuhVs7JSw\nVThk81pAkVXw6dIjhMMhpQVDgo+XamMMqTjBMtSv8pM3CKowxXtVtzo6vR5CpheF7T2l4abfhxBJ\nGI5PsVsWcO+zxziotGhMCKn5OeS2d2Dee4jM3Cmm5A4FzlLSSyw1pxIEpkKcFh+FnGqTC/JRFvAg\nobcZujZzGGRJFkoHVMgjyrwPJapjqXKM7fwu1pgSf8BUHbXB5mJ3W9jObamKCZF+smISLZCoisfi\noEJS/7kgcUSiFA8IOhISqGGKpV1670glcHkm205+D4uLc2rxsbu7rxqRTcUrU7qbzQaOKNE7+SLe\n+uabFKEeTK4XRzZXEeLNiQECr7KrrjECCk9NLz8CLhvlkmSRRYZouiZPcOuzNK12F/IG0OL60SGz\nq/Um7t5/iFxhDy222KNGGVeunOGiZQalZlUq+gRc/JZKkBAw/yxtkWhyQCbnKMk/zyaWihBpDJ0u\n5o/xWUKiYroy5JjipDkuZGen8WB5HSOOYwPE21//Bi5fPoNc3iuzcbnHfIuyjcOg4E6mU/Oy88vG\nS2Icj5INa0ARojeqmchVGilkabLkNOqCpEVC17O6XNWk8cMffFtx5ezZWVykXkQpPpFIiE/wjUlW\n11xzDhkt6QnKzS8sUCQUwSHISZglPF0VZnlroXCI5SRjOhbHk2ebBO1DI7Es8kOiIxGZyyRx9dJp\nzGeTFBifCm+AxIVBIwjqD/uVECnckx8xRD66m8vwkdTcyQ0BGHL54+bEkmu+OinS+Px+VI4OsXtQ\nYo/g5Lwr7BYDfaJuAR9Ljrxh5ERocly6wa6pdaE/HOH0KsQKRqBU5Hmim14vJ1LtiI46ir0Crlqo\njDoZqR4y/Li/tIIBx8diIZYe1wbMsURClRkHieqVyxXcuXOfD5toNNtclh1xHOlG4k1IILQQr3Uv\nu5pcFJweV6w0X02osBX4eKCLQCm24pWVJ0zFBvXeBS/zyzdBjNcdLDcSRafxD6iAS9xnZuIq9/LO\nMM7+JPCCLhFhmoVo8no9YNlZJ8RT6jQB51idr94Wjev2LIRCEfzmd3/H9s6hYrjX64bJpiIeyLRL\nD5/j5q9ucd0wTTKPu6mLTkqEtBNHxRj15f//Ah9jPXoBZ9CgAAAAAElFTkSuQmCC",
                                "format": "base64 image",
                                "type": "string"
                              },
                              "icon_mime_type": {
                                "description": "The icon's image format.",
                                "example": "image/svg+xml",
                                "type": "string"
                              },
                              "license_term": {
                                "description": "The license term.",
                                "example": 0,
                                "type": "integer"
                              },
                              "max_users": {
                                "description": "The maximum number of users.",
                                "minimum": 1,
                                "nullable": true,
                                "type": "integer"
                              },
                              "maximum_server_price": {
                                "description": "\nThe product's maximum price.\n\n* null - The produce does **not** possess a maximum price.",
                                "example": 888.88,
                                "format": "currency",
                                "minimum": 0,
                                "nullable": true,
                                "type": "number"
                              },
                              "minimum_server_price": {
                                "description": "\nThe product's minimum price.\n\n* null - The product does **not** possess a minimum price.",
                                "example": 3,
                                "format": "currency",
                                "minimum": 0,
                                "nullable": true,
                                "type": "number"
                              },
                              "price": {
                                "description": "The product's price.\n\n* null - The product does **not** possess a static price.",
                                "example": 6,
                                "format": "currency",
                                "minimum": 0,
                                "nullable": true,
                                "type": "number"
                              },
                              "price_unit": {
                                "description": "The currency code of the product's price, in [ISO-4217 format](https://en.wikipedia.org/wiki/ISO_4217) format.",
                                "example": "USD",
                                "type": "string"
                              },
                              "product": {
                                "description": "The product's display name.",
                                "example": "cPanel EV Certificate",
                                "type": "string"
                              },
                              "product_category": {
                                "description": "The product's category.",
                                "example": "N/A",
                                "nullable": true,
                                "type": "string"
                              },
                              "product_group": {
                                "description": "The product's group.",
                                "example": "ssl_certificate",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "The product ID.",
                                "example": 209,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "provider_display_name": {
                                "description": "The cPanel Market provider's display name.",
                                "example": "cPanel Store",
                                "type": "string"
                              },
                              "provider_name": {
                                "description": "The cPanel Market provider's name.",
                                "example": "cPStore",
                                "type": "string"
                              },
                              "recommended": {
                                "description": "Whether we recommend the product.\n* `1` - We recommend the product.\n* `0` - We do **not** recommend the product.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "requires_ip": {
                                "description": "Whether the product requires an IP.\n* `1` - Requires an IP address.\n* `0` - Does **not** require an IP address.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            }
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_adjusted_market_providers_products",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Market providers' products adjusted prices",
        "tags": [
          "Market",
          "Product Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_adjusted_market_providers_products"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_adjusted_market_providers_products?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/get_all_contact_importances": {
      "get": {
        "description": "This function lists the importance of all application events in\nWHM's\n[*Contact Manager*](https://docs.cpanel.net/whm/server-contacts/contact-manager/)\ninterface (*WHM >> Home >> Server Contacts >> Contact Manager*).",
        "operationId": "get_all_contact_importances",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "importances": {
                          "description": "An array of objects containing event importance information.",
                          "items": {
                            "properties": {
                              "app": {
                                "description": "The cPanel & WHM module's name.",
                                "example": "wwwacct",
                                "type": "string"
                              },
                              "event": {
                                "description": "The event's name.\n\n**Note:**\n\nAn asterisk character (`*`) represents all events in the module.",
                                "example": "*",
                                "type": "string"
                              },
                              "importance": {
                                "description": "The importance of the contact event:\n\n* `1` — High.\n* `2` — Medium.\n* `3` — Low.\n* `0` — Disabled.",
                                "example": 0,
                                "type": "integer"
                              },
                              "name": {
                                "description": "The contact event's name:\n\n* `High`\n* `Medium`\n* `Low`\n* `Disabled`",
                                "example": "High",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_all_contact_importances",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Contact Manager event importance settings",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_all_contact_importances"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_all_contact_importances?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_api_calls": {
      "get": {
        "description": "This function returns the cPanel API 1 functions that the system called on specific dates.\nThis is useful, for example, to check whether your system calls any cPanel API 1 functions.\n\n**Important:**\n\nThe function **only** returns cPanel API 1 functions. We deprecated cPanel API 1 and plan\nto remove those functions at a later date. For more information, read our\n[Guide to Replacing cPanel API 1 Functions with UAPI Equivalents](https://documentation.cpanel.net/display/DD/Guide+to+Replacing+cPanel+API+1+Functions+with+UAPI+Equivalents)\ndocumentation.",
        "operationId": "get_api_calls",
        "parameters": [
          {
            "description": "The cPanel API 1 function to query.\n\n**Note:**\n\n`cpapi1` is the **only** possible value.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "default": "cpapi1",
              "example": "cpapi1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "result": {
                          "items": {
                            "properties": {
                              "count": {
                                "description": "The total number of times that the system called\nthe function on the day in the `timestamp` return.",
                                "example": 200000,
                                "type": "integer"
                              },
                              "entry": {
                                "description": "The cPanel API 1 module and function that the system executed.\n\nFor a complete list of cPanel API 1 functions, read our\n[Guide to cPanel API 1](https://documentation.cpanel.net/display/DD/Guide+to+cPanel+API+1)\ndocumentation.",
                                "example": "Email::printdomainoptions",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "The date that the system called the function, in\n[Unix time format](https://wikipedia.org/wiki/Unix_time).",
                                "example": 1548828000,
                                "format": "unix_timestamp",
                                "type": "integer"
                              }
                            }
                          },
                          "type": "array"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_api_calls",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return deprecated cPanel API 1 functions by date",
        "tags": [
          "Server Administration",
          "API Statistics"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_api_calls"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_api_calls?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/get_api_pages": {
      "get": {
        "description": "This function returns the daily interface use of cPanel API 1 functions. Use this function to find out which API calls your custom interfaces or third-party plugins use.\n\n**Important:**\n\n  The function *only* returns cPanel API 1 functions. We *deprecated* cPanel API 1 and plan to remove those functions at a later date. For more information, read our [Guide to Replacing cPanel API 1 Functions with UAPI Equivalents](https://documentation.cpanel.net/display/DD/Guide+to+Replacing+cPanel+API+1+Functions+with+UAPI+Equivalents) documentation.",
        "operationId": "get_api_pages",
        "parameters": [
          {
            "description": "The cPanel API type to query.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "default": "cpapi1",
              "enum": [
                "cpapi1"
              ],
              "example": "cpapi1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "count": {
                          "description": "The total number of times that the system called the function on the day in the `timestamp` return.",
                          "example": 200000,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "entry": {
                          "description": "The path to the file where the function executes.",
                          "example": "/usr/local/cpanel/base/frontend/paper_lantern/plugin1/index.html.tt",
                          "type": "string"
                        },
                        "timestamp": {
                          "description": "The date that the system called the function.\n\n**Note:**\n\n  The time portion of this value is arbitrary. Only the date is valid.",
                          "example": 1548828000,
                          "format": "unix_timestamp",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_api_pages",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return deprecated cPanel API 1 functions ",
        "tags": [
          "Server Administration",
          "API Statistics"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_api_pages"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_api_pages?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/get_appconfig_application_list": {
      "get": {
        "description": "This function lists registered [AppConfig](https://go.cpanel.net/appconfig) applications.",
        "operationId": "get_appconfig_application_list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cpanel": {
                          "description": "An array of objects representing the values set for application installed for cPanel.",
                          "items": {
                            "$ref": "#/components/schemas/AppConfig"
                          },
                          "type": "array"
                        },
                        "webmail": {
                          "description": "An array of objects representing the values set for application installed for Webmail.",
                          "items": {
                            "$ref": "#/components/schemas/AppConfig"
                          },
                          "type": "array"
                        },
                        "whostmgr": {
                          "description": "An array of objects representing the values set for application installed for WHM.",
                          "items": {
                            "$ref": "#/components/schemas/AppConfig"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_appconfig_application_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Got application list",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return registered applications",
        "tags": [
          "Server Administration",
          "Applications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_appconfig_application_list"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_appconfig_application_list?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38.1"
      }
    },
    "/get_application_contact_event_importance": {
      "get": {
        "description": "This function retrieves the importance level of an application event for WHM's Contact Manager interface (Home >> Server Contacts >> Contact Manager).\n\n**Note:**\n\n  The system will create a notification setting for the application's events if one does not already exist.",
        "operationId": "get_application_contact_event_importance",
        "parameters": [
          {
            "description": "The application module's name.",
            "in": "query",
            "name": "app",
            "required": true,
            "schema": {
              "example": "Check",
              "type": "string"
            }
          },
          {
            "description": "The event's name.",
            "in": "query",
            "name": "event",
            "required": true,
            "schema": {
              "example": "SecurityAdvisorStateChange",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "importance": {
                          "description": "The importance level at which to send the notification.\n* `1` - High.\n* `2` - Medium.\n* `3` - Low.\n* `0` - Disabled.",
                          "enum": [
                            1,
                            2,
                            3,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The text version of the importance.\n- `High`\n- `Medium`\n- `Low`\n- `Disabled`",
                          "enum": [
                            "High",
                            "Medium",
                            "Low",
                            "Disabled"
                          ],
                          "example": "Disabled",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_application_contact_event_importance",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return app's event contact importance setting",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_application_contact_event_importance app='Check' event='SecurityAdvisorStateChange'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_application_contact_event_importance?api.version=1&app=Check&event=SecurityAdvisorStateChange"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_application_contact_importance": {
      "get": {
        "description": "This function retrieves the importance level of an application's events for WHM's\n[*Contact Manager*](https://docs.cpanel.net/whm/server-contacts/contact-manager/)\ninterface (*WHM >> Home >> Server Contacts >> Contact Manager*).\n\n**Note:**\n\nThe system creates a notification setting for the application's events if one does\nnot already exist.",
        "operationId": "get_application_contact_importance",
        "parameters": [
          {
            "description": "The cPanel & WHM application module's name.",
            "in": "query",
            "name": "app",
            "required": true,
            "schema": {
              "example": "Check",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "importance": {
                          "description": "The importance level at which to send the notification.\n* `1` — High.\n* `2` — Medium.\n* `3` — Low.\n* `0` — Disabled.",
                          "enum": [
                            1,
                            2,
                            3,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The text version of the importance setting.\n* `High`\n* `Medium`\n* `Low`\n* `Disabled`",
                          "enum": [
                            "High",
                            "Medium",
                            "Low",
                            "Disabled"
                          ],
                          "example": "Disabled",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_application_contact_importance",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return app contact importance setting",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_application_contact_importance app='Check'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_application_contact_importance?api.version=1&app=Check"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_autossl_check_schedule": {
      "get": {
        "description": "This function returns the cron entry for the `autossl_check.pl` AutoSSL certificate check script.",
        "operationId": "get_autossl_check_schedule",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cron": {
                          "description": "A list of the time elements of a cron entry that schedules when the script will run. For more information about each element in a cron entry, read the [Cron Wikipedia article](https://en.wikipedia.org/wiki/Cron).",
                          "items": {
                            "example": "54 1 * * *",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "next_time": {
                          "description": "The next time that the script will run. A time value, in [ISO-8601](http://www.iso.org/iso/home/standards/iso8601.htm) format.",
                          "example": "2016-06-09T06:00:00.000Z",
                          "format": "ISO-8601 Date Time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_check_schedule",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return AutoSSL check script cron entry",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_check_schedule"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_check_schedule?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_autossl_log": {
      "get": {
        "description": "This function returns the contents of an AutoSSL log file.",
        "operationId": "get_autossl_log",
        "parameters": [
          {
            "description": "When the system created the log file.",
            "in": "query",
            "name": "start_time",
            "required": true,
            "schema": {
              "example": "2016-06-09T14:25:37.000Z",
              "format": "ISO-8601 Date Time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "Entries from an AutoSSL log.",
                          "items": {
                            "properties": {
                              "contents": {
                                "description": "The contents of an entry.",
                                "example": "This system has AutoSSL set to use cPanel (powered by Sectigo).",
                                "type": "string"
                              },
                              "indent": {
                                "description": "The level of indentation to display.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "partial": {
                                "description": "We do not currently use this return.",
                                "enum": [
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "pid": {
                                "description": "The AutoSSL process’s ID.",
                                "example": 29189,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "timestamp": {
                                "description": "When the system created the log file entry.",
                                "example": "2016-06-09T14:25:37.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of log file entry.\n\n* `out` (WHM's _Manage AutoSSL_ interface represents this type as `info`.)\n* `warn`\n* `success`\n* `failure`",
                                "enum": [
                                  "out",
                                  "warn",
                                  "success",
                                  "failure"
                                ],
                                "example": "out",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_log",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return AutoSSL log file's contents",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_log start_time='2016-06-09T14:25:37Z'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_log?api.version=1&start_time=2016-06-09T14%3a25%3a37Z"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_autossl_logs_catalog": {
      "get": {
        "description": "This function lists the AutoSSL feature's log files.",
        "operationId": "get_autossl_logs_catalog",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contain information about an AutoSSL log file.",
                          "items": {
                            "properties": {
                              "in_progress": {
                                "description": "Whether AutoSSL is in progress.\n* `1` — AutoSSL is in progress.\n* `0` — AutoSSL is **not** in progress.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "provider": {
                                "description": "The AutoSSL provider's name.",
                                "example": "cPanel",
                                "type": "string"
                              },
                              "start_time": {
                                "description": "When the system created the log file.",
                                "example": "2016-06-09T14:25:37.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              },
                              "username": {
                                "description": "The user that corresponds to the AutoSSL log entry.\n* The username of a cPanel user that the account owns.\n* `*` — All users.",
                                "example": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_logs_catalog",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return AutoSSL log files",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_logs_catalog"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_logs_catalog?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_autossl_metadata": {
      "get": {
        "description": "This function retrieves values for the currently authenticated user's AutoSSL's metadata keys.",
        "operationId": "get_autossl_metadata",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An object containing the user's AutoSSL metadata key values.",
                          "properties": {
                            "clobber_externally_signed": {
                              "description": "This option will allow AutoSSL to replace certificates that none of this systems AutoSSL modules issued.\nWhen you enable this option, AutoSSL will install certificates that replace users Certificate Authority (CA) issued certificates if they are invalid or expire within three days.\n* `1` - Replace the certificate.\n* `0` - Do **not** replace the certificate.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_expiry": {
                              "description": "This option will send a notification when an AutoSSL certificate expires. This occurs when AutoSSL cannot request a new certificate.\n\n**Note:**\n\nThis can happen if all of a websites domains fail Domain Control Validation (DCV), or if the AutoSSL provider has not issued a certificate in response to a request.\n* `1` -  Notify.\n* `0` -  Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_expiry_coverage": {
                              "description": "This option will send a notification if at least one currently-secured domain will lose coverage when the certificate renews.\n\n* `1` -  Notify.\n* `0` -  Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_expiry_coverage_user": {
                              "description": "This option will send a notification if at least\none of a user's currently-secured domains will lose\ncoverage when the certificate renews.\n\n* `1` - Notify.\n* `0` - Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_expiry_user": {
                              "description": "This option will send a notification when a\nuser's AutoSSL certificate expires. This occurs when\nAutoSSL cannot request a new certificate for a user.\n\n* `1` - Notify.\n* `0` - Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_renewal": {
                              "description": "This option will send a notification when AutoSSL\nsuccessfully renews a certificate.\n\n* `1` - Notify.\n* `0` - Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_renewal_coverage": {
                              "description": "This option will send a notification if a currently-secured\ndomain fails DCV and the certificate has not reached its\nrenewal period.\n\n* `1` -  Notify.\n* `0` -  Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_renewal_coverage_reduced": {
                              "description": "This option will send a notification when AutoSSL\nhas renewed a certificate and the new certificate lacks\nat least one domain that the previous certificate secured.\n\n\n* `1` - Notify.\n* `0` - Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_renewal_coverage_reduced_user": {
                              "description": "This option will send a notification when AutoSSL\nhas renewed a certificate for a user and the new certificate\nlacks at least one domain that the previous certificate\nsecured.\n\n* `1` - Notify.\n* `0` - Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_renewal_coverage_user": {
                              "description": "This option will send a notification if a currently-secured\ndomain fails DCV and the certificate has not reached its\nrenewal period.\n\n* `1` - Notify.\n* `0` - Do **not** notify.",
                              "type": "integer"
                            },
                            "notify_autossl_renewal_uncovered_domains": {
                              "description": "This option will send a notification when AutoSSL\nhas renewed a certificate and the new certificate lacks\none or more of the websites domains.\n\n* `1` - Notify.\n* `0` - Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_renewal_uncovered_domains_user": {
                              "description": "This option will send a notification when AutoSSL\nhas renewed a certificate for a user and the new certificate\nlacks one or more of the websites domains.\n\n* `1` - Notify.\n* `0` - Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_autossl_renewal_user": {
                              "description": "This option will send a notification when AutoSSL\nsuccessfully renews a certificate for a user.\n\n* `1` - Notify\n* `0` - Do **not** notify.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_metadata",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is 0. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return current user's AutoSSL metadata",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_metadata"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_metadata?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60"
      }
    },
    "/get_autossl_pending_queue": {
      "get": {
        "description": "This function lists the items in the AutoSSL pending queue.",
        "operationId": "get_autossl_pending_queue",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pending_certificates": {
                          "description": "Information about each item in the AutoSSL queue.",
                          "items": {
                            "properties": {
                              "dcv_method": {
                                "description": "The method of Domain Control Validation\n(DCV) that the system requested the Certificate Authority\n(CA) to perform for this domain.\n\n* `http`\n* `dns`",
                                "enum": [
                                  "http",
                                  "dns"
                                ],
                                "example": "http",
                                "type": "string"
                              },
                              "domain": {
                                "description": "The domain's name.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "order_item_id": {
                                "description": "The certificate's order item ID at the provider. A valid string.",
                                "example": "8675309",
                                "type": "string"
                              },
                              "request_time": {
                                "description": "When AutoSSL made the request to the provider.",
                                "example": "2016-10-12T21:02:56.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              },
                              "user": {
                                "description": "The name of the cPanel user who owns the `domain`.",
                                "example": "username",
                                "format": "username",
                                "type": "string"
                              },
                              "virtual_host": {
                                "description": "The name of the virtual host that contains the domain.",
                                "example": "example.com",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_pending_queue",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return queued AutoSSL items",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_pending_queue"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_pending_queue?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/get_autossl_pending_queue_for_domain": {
      "get": {
        "description": "This function returns the most recent AutoSSL pending queue information for a specific domain.",
        "operationId": "get_autossl_pending_queue_for_domain",
        "parameters": [
          {
            "description": "The domain for which to check the AutoSSL pending queue.\n\n**Note:**\n\n You can **only** enter one domain when you call this function. To check the most recent list of all AutoSSL queued domains that a user owns, read our `get_autossl_pending_queue_for_user` documentation.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "queue_by_domain": {
                          "description": "An array of objects that contains information about the AutoSSL pending queue for the specific domain.",
                          "items": {
                            "properties": {
                              "dcv_methods": {
                                "description": "The methods of Domain Control Validation (DCV) that the system requested the Certificate Authority (CA) to perform for the given domains.",
                                "example": [
                                  "http",
                                  "dns"
                                ],
                                "items": {
                                  "enum": [
                                    "http",
                                    "dns"
                                  ],
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "domains": {
                                "description": "An array that contains information about the domains from the certificate's `order_item_id` parameter.",
                                "example": [
                                  "example.com",
                                  "www.example.com"
                                ],
                                "items": {
                                  "format": "domain",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "last_poll_time": {
                                "description": "The time of the most recent poll of the provider for the DCV status.",
                                "example": "2017-08-19T13:27:03.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              },
                              "order_item_id": {
                                "description": "The provider's order item ID for the certificate.",
                                "example": "12345678",
                                "type": "string"
                              },
                              "request_time": {
                                "description": "When AutoSSL made the request to the provider.",
                                "example": "2017-08-12T21:02:56.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              },
                              "vhost_name": {
                                "description": "The virtual host that contains the domain.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_pending_queue_for_domain",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domain AutoSSL pending queue information",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_pending_queue_for_domain domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_pending_queue_for_domain?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/get_autossl_pending_queue_for_user": {
      "get": {
        "description": "This function returns the most recent list of AutoSSL queued domains on a cPanel user's account.",
        "operationId": "get_autossl_pending_queue_for_user",
        "parameters": [
          {
            "description": "The cPanel user's account for which to check the AutoSSL pending queue.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "queue_by_domain": {
                          "description": "An array of objects that contain information about the AutoSSL pending queue for each domain.",
                          "items": {
                            "properties": {
                              "dcv_method": {
                                "description": "The method of Domain Control Validation (DCV) that the system requested the Certificate Authority (CA) to perform for this domain.",
                                "example": [
                                  "http",
                                  "dns"
                                ],
                                "items": {
                                  "enum": [
                                    "http",
                                    "dns"
                                  ],
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "domain": {
                                "description": "An array of domains on the virtual host in the AutoSSL pending queue.",
                                "example": [
                                  "example.com",
                                  "www.example.com"
                                ],
                                "items": {
                                  "format": "domain",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "last_poll_time": {
                                "description": "The time of the most recent poll of the provider for the the AutoSSL pending queue.",
                                "example": "2017-08-19T13:27:03.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              },
                              "order_item_id": {
                                "description": "The provider's order item ID for the certificate. A valid order item ID.",
                                "example": "12345678",
                                "type": "string"
                              },
                              "request_time": {
                                "description": "When AutoSSL made the request to the provider.",
                                "example": "2017-08-12T21:02:56.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              },
                              "vhost_name": {
                                "description": "The virtual host that contains the domain.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_pending_queue_for_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account AutoSSL-queued domains",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_pending_queue_for_user username='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_pending_queue_for_user?api.version=1&username=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/get_autossl_problems_for_domain": {
      "get": {
        "description": "This function returns a list of objects that contains the latest Domain Control Validation (DCV) problems for a specific domain.",
        "operationId": "get_autossl_problems_for_domain",
        "parameters": [
          {
            "description": "The domain for which to poll the DCV status.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "problems_by_domain": {
                          "description": "An array of objects that contains DCV problems for a domain.",
                          "items": {
                            "description": "An object containing information about a DCV problem for a domain.",
                            "properties": {
                              "domain": {
                                "description": "The domain queried for problems.",
                                "example": "example.tld",
                                "format": "domain",
                                "type": "string"
                              },
                              "log": {
                                "description": "The name of the directory containing the log files for this problem. This directory is located under `/var/cpanel/logs/autossl/`.",
                                "example": "2017-08-19T13:41:04.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              },
                              "problem": {
                                "description": "The problem the domain encountered during DCV.",
                                "example": "The domain does not resolve to any IPv4 addresses on the internet.",
                                "type": "string"
                              },
                              "time": {
                                "description": "The time that the problem occurred.",
                                "example": "2017-08-19T13:41:04.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_problems_for_domain",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domain DCV issues",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_problems_for_domain domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_problems_for_domain?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/get_autossl_problems_for_user": {
      "get": {
        "description": "This function returns the list of the latest Domain Control Validation (DCV) problems for a cPanel user.",
        "operationId": "get_autossl_problems_for_user",
        "parameters": [
          {
            "description": "The user for whom to poll the DCV status.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "problems_by_domain": {
                          "description": "An array of objects that contain information about DCV problems for each domain.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The domain's name",
                                "example": "doesnotexist.example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "log": {
                                "description": "The log folder of the last run in the `/var/cpanel/logs/autossl/` directory.",
                                "example": "2017-09-07T03:51:01.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              },
                              "problem": {
                                "description": "The human readable explanation of the DCV problem.\n\n**Note**\n\nThe system does **not** localize this return.",
                                "example": "doesnotexist.example.com does not resolve to any IPv4 addresses on the internet.",
                                "type": "string"
                              },
                              "time": {
                                "description": "The last run time of the AutoSSL queue.",
                                "example": "2017-08-12T21:02:56.000Z",
                                "format": "ISO-8601 Date Time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_problems_for_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return account DCV issues",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_problems_for_user username='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_problems_for_user?api.version=1&username=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/get_autossl_providers": {
      "get": {
        "description": "This function lists available AutoSSL providers on the server.",
        "operationId": "get_autossl_providers",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "This array of objects contains information about available AutoSSL providers.",
                          "example": [
                            {
                              "display_name": "cPanel (powered by Sectigo)",
                              "enabled": 1,
                              "module_name": "cPanel",
                              "specs": {
                                "AVERAGE_DELIVERY_TIME": 120,
                                "DCV_METHODS": [
                                  "http",
                                  "dns"
                                ],
                                "DELIVERY_METHOD": "queue",
                                "HTTP_DCV_MAX_REDIRECTS": 0,
                                "MAX_DOMAINS_PER_CERTIFICATE": 1000,
                                "RATE_LIMIT_CERTIFICATES_PER_REGISTERED_DOMAIN_PER_WEEK": 0,
                                "SUPPORTS_ANCESTOR_DCV": 1,
                                "SUPPORTS_WILDCARD": 0,
                                "VALIDITY_PERIOD": 7776000
                              }
                            },
                            {
                              "display_name": "Let’s Encrypt™",
                              "enabled": 0,
                              "module_name": "LetsEncrypt",
                              "specs": {
                                "AVERAGE_DELIVERY_TIME": 5,
                                "DCV_METHODS": [
                                  "http",
                                  "dns"
                                ],
                                "DELIVERY_METHOD": "api",
                                "HTTP_DCV_MAX_REDIRECTS": 10,
                                "MAX_DOMAINS_PER_CERTIFICATE": 100,
                                "RATE_LIMIT_CERTIFICATES_PER_REGISTERED_DOMAIN_PER_WEEK": 50,
                                "SUPPORTS_ANCESTOR_DCV": 0,
                                "SUPPORTS_WILDCARD": 1,
                                "VALIDITY_PERIOD": 7776000
                              },
                              "x_account_id": "https://acme-v01.api.letsencrypt.org/acme/reg/12345678",
                              "x_terms_of_service": "https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf",
                              "x_terms_of_service_accepted": 1
                            }
                          ],
                          "items": {
                            "additionalProperties": {
                              "description": "Additional returns specific to the AutoSSL provider module. The name of the property will always start with `x_`."
                            },
                            "properties": {
                              "display_name": {
                                "description": "The AutoSSL provider module's display name.",
                                "example": "cPanel (powered by Sectigo)",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Whether the AutoSSL provider is enabled.\n* `1` - The provider is enabled.\n* `0` - The provider is disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "module_name": {
                                "description": "The AutoSSL provider module's name.",
                                "example": "cPanel",
                                "type": "string"
                              },
                              "specs": {
                                "description": "The provider's specifications.",
                                "properties": {
                                  "AVERAGE_DELIVERY_TIME": {
                                    "description": "The amount of time in seconds that the provider requires to issue a certificate.",
                                    "example": 120,
                                    "type": "integer"
                                  },
                                  "DCV_METHODS": {
                                    "description": "The methods that the provider uses\nto validate the domain.\n\n* `dns` - DNS Validation Method.\n* `http` - HTTP Validation Method.",
                                    "items": {
                                      "enum": [
                                        "dns",
                                        "http"
                                      ],
                                      "example": "http",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "DELIVERY_METHOD": {
                                    "description": "The method that the provider uses\nto issue the certificate.\n\n* `queue` - The provider delivers certificates through a download queue.\n* `api` - The provider delivers certificates through API calls.",
                                    "enum": [
                                      "queue",
                                      "api"
                                    ],
                                    "example": "queue",
                                    "type": "string"
                                  },
                                  "HTTP_DCV_MAX_REDIRECTS": {
                                    "description": "The maximum number of redirections a domain can use and still pass an HTTP-based DCV.",
                                    "example": 10,
                                    "type": "integer"
                                  },
                                  "MAX_DOMAINS_PER_CERTIFICATE": {
                                    "description": "The number of unique domains each certificate can contain.",
                                    "example": 100,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "RATE_LIMIT_CERTIFICATES_PER_REGISTERED_DOMAIN_PER_WEEK": {
                                    "description": "The maximum number of certificates that the provider will allow per domain in a week.",
                                    "example": 50,
                                    "type": "integer"
                                  },
                                  "SUPPORTS_ANCESTOR_DCV": {
                                    "description": "Whether the successful Domain Control\nValidation (DCV) of a parent domain implies the\nsuccess of a subdomain.\n\n* `1` - The provider supports DCV.\n* `0` - The provider does **not** support DCV.\"",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "SUPPORTS_WILDCARD": {
                                    "description": "Whether the provider supports wildcard\ndomains on an SSL certificate.\n\n* `1` - The provider supports wildcard domains.\n* `0` - The provider does **not** support wildcard domains.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "VALIDITY_PERIOD": {
                                    "description": "The amount of time before the certificate expired, in seconds.\n\n**Note:**\n\n\n A valid integer.",
                                    "example": 7776000,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "x_account_id": {
                                "description": "The user's account profile URL at the provider.",
                                "example": "https://acme-v01.api.letsencrypt.org/acme/reg/12345678",
                                "type": "string"
                              },
                              "x_terms_of_service": {
                                "description": "The URL of the provider's current terms of service.\n\n**Note:**\n\nIf the terms of service available at the `x_terms_of_service` location is newer than the `x_terms_of_service_accepted` location, the system administrator will need to accept the new terms of service.",
                                "example": "https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf",
                                "format": "url",
                                "type": "string"
                              },
                              "x_terms_of_service_accepted": {
                                "description": "Whether the AutoSSL provider is Enabled.\n\n* `1` - The AutoSSL provider is enabled.\n* `0` - The AutoSSL provider is **not** enabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_providers",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return available AutoSSL providers",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_providers"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_providers?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_autossl_user_excluded_domains": {
      "get": {
        "description": "This function lists an account's domains the system excludes from AutoSSL.",
        "operationId": "get_autossl_user_excluded_domains",
        "parameters": [
          {
            "description": "The cPanel user's account.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contain a list of domains excluded from AutoSSL.",
                          "items": {
                            "properties": {
                              "excluded_domain": {
                                "description": "A list of domains excluded from AutoSSL.",
                                "example": "cpcalendars.example.com",
                                "format": "domain",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_autossl_user_excluded_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all AutoSSL-excluded domains",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_autossl_user_excluded_domains username='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_autossl_user_excluded_domains?api.version=1&username=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "66"
      }
    },
    "/get_available_applications": {
      "get": {
        "description": "This function returns the contents of a `dynamicui` file. For more\ninformation, read our\n[Guide to WHM dynamicui Files](https://go.cpanel.net/GuidetoWHMdynamicuiFiles)\ndocumentation.",
        "operationId": "get_available_applications",
        "parameters": [
          {
            "description": "A comma-separated list of the application entries to return.\n\nTo determine the application's name, find its\n[`file` value in the `dynamicui.conf` file](https://go.cpanel.net/GuidetoWHMdynamicuiFiles),\nand then remove the file extension.\n\nIf you do not specify this value, the function returns the entire `dynamicui.conf`\nfile.",
            "in": "query",
            "name": "applications_list",
            "required": false,
            "schema": {
              "example": "create_support_ticket",
              "type": "string"
            }
          },
          {
            "description": "The `dynamicui` configuration file to retrieve, relative to the `/usr/local/cpanel/whostmgr/docroot/themes/x/` directory.",
            "in": "query",
            "name": "file",
            "required": false,
            "schema": {
              "default": "dynamicui.conf",
              "example": "dynamicui.conf",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "groups": {
                          "description": "An array of objects containing the file's contents.",
                          "items": {
                            "$ref": "#/components/schemas/Group"
                          }
                        },
                        "raw": {
                          "description": "An array of objects containing the file's raw data for template directives.",
                          "items": {
                            "$ref": "#/components/schemas/Raw"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_available_applications",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return dynamicui file",
        "tags": [
          "Packages",
          "Feature Lists"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_available_applications"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_available_applications?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/get_available_authentication_providers": {
      "get": {
        "description": "This function lists available external authentication identity providers for all services.",
        "operationId": "get_available_authentication_providers",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "providers": {
                          "description": "An array of available identity provider names and settings. Each hash in the array includes the cpaneld_link , whostmgrd_link , webmaild_link , icon , icon_type , provider_name , display_name , documentation_url , color , configured , id , label , textcolor , whostmgr_enabled , cpaneld_enabled , and webmaild_enabled returns.",
                          "items": {
                            "properties": {
                              "color": {
                                "description": "The background color of the button on the cPanel interface. A valid RGB hexadecimal color value.",
                                "example": "dd4b39",
                                "type": "string"
                              },
                              "configured": {
                                "description": "Whether the identity provider is configured on the server.\n- 1  The provider is configured.\n- 0  The provider is not configured.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "cpaneld_enabled": {
                                "description": "Whether the identity provider is enabled for the cpaneld service.\n- 1  The provider is enabled for the cpaneld service..\n- 0  The provider is not enabled for the cpaneld service.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "cpaneld_link": {
                                "description": "link to the identity provider's configuration for the cpaneld service on the system. A valid URL .",
                                "example": "https://hostname.example.com:2083/openid_connect/cpanelid",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "The display name of the identity provider. A valid string.",
                                "example": "cPanel",
                                "type": "string"
                              },
                              "documentation_url": {
                                "description": "The URL to the identity provider's documentation. A valid URL.",
                                "example": "http://go.cpanel.net/cpanelidmanage",
                                "type": "string"
                              },
                              "icon": {
                                "description": "The icon file to display in the button on the cPanel login interface. A valid Base64-encoded, JPG or PNG-formatted image file.",
                                "example": "Click to view...iVBORw0KGgoAAAANSUhEUgAAACEAAAAhCAYAAABX5MJvAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAV1JREFUeNrsVtGNwjAMJegGYIRucBmhtwEjdAMyQjYoG2SEG6HcBGUDugFskHOQg1zTlFaN\\/\\/KkqMh2yYvt53S3KygomIZaE+y9P8BDJ9xXpdSDxT9jwX7dxDJsDMvCuvl33GF1sBwS5O8GX7eVgCabGyRkGJF25v0sJHrcyDH7iMhWEl9zWSD1\\/xs1klJn8J\\/gZ4WxNdgu8KyiDXGIfmJ7LO6R8CI5rJnwO+Kv0Wb9Z7xlZr+wMt8f\\/ANmyCoCMF3CUmP8rOmHip1AM\\/8tdbLcjfnL5NigYmIp+ilp5iYRJNkmajtLIBuJiUZ1S+aDKGDjI8tGk+N\\/9yuy0ODcGIjL8UEmcXKLDelRDQ5tHcuIkSLQE1WYhIRfMRIEmiV1Z7NES5Rh9nIisRGVWGOyyyflC5fSkDsTmk1KnVBMbForqQw+IVtUCP3KEpdojffHnRGKcq3LZ3pBgST+BRgANXt+WPKE7tYAAAAASUVORK5CYII=",
                                "type": "string"
                              },
                              "icon_type": {
                                "description": "The icon file's MIME type. A valid image format's MIME type.",
                                "example": "image/svg+xml",
                                "type": "string"
                              },
                              "id": {
                                "description": "The ID of the identity provider. A valid string.",
                                "example": "cpanelid",
                                "type": "string"
                              },
                              "label": {
                                "description": "The text label that will appear on the cPanel login interface. A valid string.",
                                "example": "Log in with a cPanelID Account",
                                "type": "string"
                              },
                              "provider_name": {
                                "description": "The name of the identity provider. A valid string.",
                                "example": "cpanel",
                                "type": "string"
                              },
                              "textcolor": {
                                "description": "The color of the text label on the cPanel login interface. A valid RGB hexadecimal color value.",
                                "example": "FFFFFF",
                                "type": "string"
                              },
                              "webmaild_enabled": {
                                "description": "Whether the identity provider is enabled for the webmaild service.\n- 1  The provider is enabled for the webmaild service.\n- 0  The provider is not enabled for the webmaild service.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "webmaild_link": {
                                "description": "link to the identity provider's configuration for the webmaild service on the system. A valid URL .",
                                "example": "https://hostname.example.com:2096/openid_connect/cpanelid",
                                "type": "string"
                              },
                              "whostmgr_enabled": {
                                "description": "Whether the identity provider is enabled for the whostmgr service.\n- 1  The provider is enabled for the whostmgr service.\n- 0  The provider is not enabled for the whostmgr service.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "whostmgrd_link": {
                                "description": "link to the identity provider's configuration for the whostmgrd service on the system. A valid URL.",
                                "example": "https://hostname.example.com:2087/openid_connect/cpanelid",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_available_authentication_providers",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return available identity providers",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_available_authentication_providers"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_available_authentication_providers?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/get_available_profiles": {
      "get": {
        "description": "This function returns a list of available server profiles.",
        "operationId": "get_available_profiles",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "profiles": {
                          "description": "An array of objects that contains the available server profiles.",
                          "example": [
                            {
                              "code": "STANDARD",
                              "description": "The Standard Node profile provides all services and access to every cPanel feature.",
                              "enabled_roles": [
                                {
                                  "description": "Calendars and Contacts provides CalDAV and CardDAV services.",
                                  "module": "CalendarContact",
                                  "name": "Calendars and Contacts"
                                },
                                {
                                  "description": "DNS allows users to create and edit Domain Name System zone files.",
                                  "module": "DNS",
                                  "name": "DNS"
                                },
                                {
                                  "description": "FTP allows users to manage the files associated with their site with an FTP client.",
                                  "module": "FTP",
                                  "name": "FTP"
                                },
                                {
                                  "description": "File Storage allows users to access the File Manager and Git™ Version Control features.",
                                  "module": "FileStorage",
                                  "name": "File Storage"
                                },
                                {
                                  "description": "Receive Mail allows users to receive email, as well as create and manage their email accounts.",
                                  "module": "MailReceive",
                                  "name": "Receive Mail"
                                },
                                {
                                  "description": "Send Mail allows users to send email.",
                                  "module": "MailSend",
                                  "name": "Send Mail"
                                },
                                {
                                  "description": "Local Mail allows the system to process email.",
                                  "module": "MailLocal",
                                  "name": "Local Mail"
                                },
                                {
                                  "description": "MySQL®/MariaDB allows users to create and manage MySQL/MariaDB databases.",
                                  "module": "MySQL",
                                  "name": "MySQL/MariaDB"
                                },
                                {
                                  "description": "PostgreSQL allows users to create and manage PostgreSQL databases.",
                                  "module": "Postgres",
                                  "name": "PostgreSQL"
                                },
                                {
                                  "description": "Spam Filter allows users to use Apache SpamAssassin™ to identify, sort, and delete unsolicited mail.",
                                  "module": "SpamFilter",
                                  "name": "Spam Filter"
                                },
                                {
                                  "description": "Webmail provides access to webmail services.",
                                  "module": "Webmail",
                                  "name": "Webmail"
                                },
                                {
                                  "description": "Web Disk allows users to manage and manipulate files on the server with multiple types of devices.",
                                  "module": "WebDisk",
                                  "name": "Web Disk"
                                },
                                {
                                  "description": "Web Server allows users to create and manage websites for their domains.",
                                  "module": "WebServer",
                                  "name": "Web Server"
                                }
                              ],
                              "experimental": 0
                            }
                          ],
                          "items": {
                            "properties": {
                              "code": {
                                "description": "The profile's ID.",
                                "example": "MAILNODE",
                                "type": "string"
                              },
                              "description": {
                                "description": "The profile's description.",
                                "example": "The Mail Node profile provides only services and cPanel features that allow the system to serve mail.",
                                "type": "string"
                              },
                              "disabled_roles": {
                                "description": "The roles that this profile disables. The function returns an empty array if no disabled roles exist.",
                                "items": {
                                  "properties": {
                                    "description": {
                                      "description": "The role's description.",
                                      "example": "File Storage allows users to access the File Manager and Git™ Version Control features.",
                                      "type": "string"
                                    },
                                    "module": {
                                      "description": "The role's module name.",
                                      "example": "FileStorage",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The role's name.",
                                      "example": "File Storage",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "enabled_roles": {
                                "description": "The roles that this profile enables.",
                                "items": {
                                  "properties": {
                                    "description": {
                                      "description": "The role's description.",
                                      "example": "Receive Mail allows users to receive email, as well as create and manage their email accounts.",
                                      "type": "string"
                                    },
                                    "module": {
                                      "description": "The role's module name.",
                                      "example": "MailReceive",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The role's name.",
                                      "example": "Receive Mail",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "experimental": {
                                "description": "Whether the profile is experimental.\n* `1` - Experimental.\n* `0` - **Not** experimental.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "name": {
                                "description": "The profile's name.",
                                "example": "Mail Node",
                                "type": "string"
                              },
                              "optional_roles": {
                                "description": "The optional roles that this profile enables. The function returns an empty array if no optional roles exist.",
                                "items": {
                                  "properties": {
                                    "description": {
                                      "description": "The role's description.",
                                      "example": "DNS allows users to create and edit Domain Name System zone files.",
                                      "type": "string"
                                    },
                                    "module": {
                                      "description": "The role's module name.",
                                      "example": "DNS",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The role's name.",
                                      "example": "DNS",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_available_profiles",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return available server profiles",
        "tags": [
          "Server Administration",
          "Server Profiles"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_available_profiles"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_available_profiles?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/get_available_tiers": {
      "get": {
        "description": "This function lists of each available version of cPanel & WHM, and each\nversion's latest maintenance release. This function also lists the cPanel & WHM\nversion for each\n[release tier](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/).",
        "operationId": "get_available_tiers",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "The latest maintenance release for a cPanel & WHM version number.",
                        "type": "string"
                      },
                      "description": "A list of the latest available version of cPanel & WHM.",
                      "example": {
                        "11.30": "11.30.8.0",
                        "11.32": "11.32.7.3",
                        "11.34": "11.34.2.8",
                        "11.36": "11.36.2.12",
                        "11.38": "11.38.2.23",
                        "11.40": "11.40.1.22",
                        "11.42": "11.42.1.31",
                        "11.44": "11.44.3.5",
                        "11.46": "11.46.4.0",
                        "11.48": "11.48.5.3",
                        "11.50": "11.50.6.2",
                        "11.52": "11.52.6.6",
                        "11.54": "11.54.0.36",
                        "11.56": "11.56.0.52",
                        "11.58": "11.58.0.52",
                        "11.60": "11.60.0.48",
                        "11.62": "11.62.0.48",
                        "11.64": "11.64.0.42",
                        "11.66": "11.66.0.35",
                        "11.68": "11.68.0.39",
                        "11.70": "11.70.0.69",
                        "11.72": "11.72.0.12",
                        "11.74": "11.74.0.12",
                        "11.76": "11.76.0.22",
                        "11.78": "11.78.0.49",
                        "11.80": "11.80.0.24",
                        "11.82": "11.82.0.19",
                        "11.84": "11.84.0.22",
                        "11.86": "11.86.0.24",
                        "11.88": "11.88.0.13",
                        "11.90": "11.90.0.3",
                        "current": "11.90.0.3",
                        "edge": "11.90.0.3",
                        "lts": "11.86.0.24",
                        "release": "11.88.0.13",
                        "stable": "11.88.0.13"
                      },
                      "properties": {
                        "current": {
                          "description": "The version of cPanel & WHM that is currently on the CURRENT tier.",
                          "type": "string"
                        },
                        "edge": {
                          "description": "The version of cPanel & WHM that is currently on the EDGE tier.",
                          "type": "string"
                        },
                        "lts": {
                          "description": "The version of cPanel & WHM that is currently on the LTS tier.",
                          "type": "string"
                        },
                        "release": {
                          "description": "The version of cPanel & WHM that is currently on the RELEASE tier.",
                          "type": "string"
                        },
                        "stable": {
                          "description": "The version of cPanel & WHM that is currently on the STABLE tier.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_available_tiers",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Got tiers list",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel & WHM available versions",
        "tags": [
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_available_tiers"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_available_tiers?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/get_best_ssldomain_for_service": {
      "get": {
        "description": "This function retrieves the most appropriate SSL-encrypted domain to use to access a service.",
        "operationId": "get_best_ssldomain_for_service",
        "parameters": [
          {
            "description": "The service's name.",
            "in": "query",
            "name": "service",
            "required": true,
            "schema": {
              "example": "whostmgr",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cert_match_method": {
                          "description": "The method that the system used to match the domain with the certificate.\n* `none` — No domain matches the certificate.\n* `exact` — The domain exactly matches the certificate.\n* `exact-wildcard` — The domain exactly matches the domain of a wildcard certificate.\n* `mail-wildcard` — The mail subdomain of the domain matches the domain of the wildcard certificate.\n* `www-wildcard` — The `www` subdomain of the domain matches the domain of the wildcard certificate.\n* `hostname-wildcard` — The hostname's domain matches the domain of the wildcard certificate.\n* `hostname` — The hostname matches the domain of the certificate.\n* `localdomain_on_cert-mail-wildcard` — Any `mail` subdomain of any domain on the server matches the certificate.\n* `localdomain_on_cert-www-wildcard` — Any `www` subdomain of any domain on the server matches the certificate.\n* `localdomain_on_cert` — Any domain on the server matches the certificate.",
                          "enum": [
                            "none",
                            "exact",
                            "exact-wildcard",
                            "mail-wildcard",
                            "www-wildcard",
                            "hostname-wildcard",
                            "hostname",
                            "localdomain_on_cert-mail-wildcard",
                            "localdomain_on_cert-www-wildcard",
                            "localdomain_on_cert"
                          ],
                          "example": "none",
                          "type": "string"
                        },
                        "cert_valid_not_after": {
                          "description": "The expiration date of the certificate.",
                          "example": 1457452989,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "is_currently_valid": {
                          "description": "Whether the certificate is currently valid.\n\n* `1` — The certificate is valid.\n* `0` — The certificate is **not** valid.\n\n**Note:**\n\nIf the certificate is valid, the following statements are true:\n\n* The certificate is **not** self-signed (the `is_self_signed` value is `0`).\n* The certificate matches the SSL domain (the `ssldomain_matches_cert` value is `1`).\n* The certificate is within its validity period (the `cert_valid_not_after` value is less than the current time and date).",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "is_self_signed": {
                          "description": "Whether the certificate is self-signed.\n\n* `1` — The certificate is self-signed.\n* `0` — The certificate is **not** self-signed.\n\n**Note:**\n\nFor legacy reasons, if the `ssldomain_matches_cert` value is `0`, then the function will **always** return a value\nof `1` for the `is_self_signed return` return, regardless of whether the certificate is actually self-signed.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "is_wild_card": {
                          "description": "Whether the service uses a wildcard certificate.\n* `1` — The service uses a wildcard certificate.\n* `0` — The service does **not** use a wildcard certificate.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "ssldomain": {
                          "description": "The domain of the service's SSL certificate.",
                          "example": "hostname.example.com",
                          "format": "domain",
                          "type": "string"
                        },
                        "ssldomain_matches_cert": {
                          "description": "Whether an SSL-encrypted domain matches the certificate.\n* `1` — Matches.\n* `0` — Does **not** match.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_best_ssldomain_for_service",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return SSL-encrypted domain for service access",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_best_ssldomain_for_service service='whostmgr'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_best_ssldomain_for_service?api.version=1&service=whostmgr"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/get_countries_with_known_ip_ranges": {
      "get": {
        "description": "This function lists the country codes available for whitelist and blacklist functions.",
        "operationId": "get_countries_with_known_ip_ranges",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "countries": {
                          "description": "A list of the [ISO 3166-1 alpha-2 country codes](https://www.iso.org/iso-3166-country-codes.html).\nYou can enter these codes to whitelist or blacklist a country's\nrange of IP addresses in the WHM API 1 function `set_cphulk_config_key`.",
                          "items": {
                            "properties": {
                              "code": {
                                "description": "A valid [ISO 3166-1 alpha-2 country code](https://www.iso.org/iso-3166-country-codes.html).",
                                "example": "US",
                                "format": "ISO-3166-1 (alpha-2)",
                                "pattern": "^[A-Z]{2}$",
                                "type": "string"
                              },
                              "name": {
                                "description": "The country's name.",
                                "example": "United States",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_countries_with_known_ip_ranges",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- `1` — Success.\n- `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return login security country codes",
        "tags": [
          "cPHulk",
          "Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_countries_with_known_ip_ranges"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_countries_with_known_ip_ranges?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "70"
      }
    },
    "/get_cphulk_brutes": {
      "get": {
        "description": "This function lists brute force attack entries from the cPHulk database.",
        "operationId": "get_cphulk_brutes",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "brutes": {
                          "description": "An array of information about each brute force attack.",
                          "items": {
                            "properties": {
                              "exptime": {
                                "description": "When the login request will time out.",
                                "example": "2014-12-07T00:00:00.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "ip": {
                                "description": "The IP address of the login attempt.",
                                "example": "192.168.0.1",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "logintime": {
                                "description": "When the login attempt occurred.",
                                "example": "2014-11-20T00:00:00.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "notes": {
                                "description": "The login entry's notes.",
                                "example": "this was a triumph",
                                "type": "string"
                              },
                              "timeleft": {
                                "description": "The number of minutes that remain before cPHulk removes the block.",
                                "example": 14,
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_cphulk_brutes",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return login security brute force attacks",
        "tags": [
          "cPHulk",
          "Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_cphulk_brutes"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_cphulk_brutes?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/get_cphulk_excessive_brutes": {
      "get": {
        "description": "This function retrieves excessive brute force attack entries from the cPHulk database.",
        "operationId": "get_cphulk_excessive_brutes",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "excessive_brutes": {
                          "description": "Information about each brute force attack.",
                          "items": {
                            "properties": {
                              "exptime": {
                                "description": "When the login request will time out.",
                                "example": "2014-12-07T00:00:00.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "ip": {
                                "description": "The IP address of the login attempt.",
                                "example": "192.168.0.1",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "logintime": {
                                "description": "When the login attempt occurred.",
                                "example": "2014-11-20T00:00:00.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "notes": {
                                "description": "The login entry's notes.",
                                "example": "this was a triumph",
                                "type": "string"
                              },
                              "timeleft": {
                                "description": "The number of minutes that remain before cPHulk removes the block.",
                                "example": 14,
                                "minimum": 1,
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_cphulk_excessive_brutes",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return login security excessive brute force attacks",
        "tags": [
          "cPHulk",
          "Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_cphulk_excessive_brutes"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_cphulk_excessive_brutes?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/get_cphulk_failed_logins": {
      "get": {
        "description": "This function lists failed login attempt entries from the cPHulk database.",
        "operationId": "get_cphulk_failed_logins",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "failed_logins": {
                          "description": "Information about each failed login attempt.",
                          "items": {
                            "properties": {
                              "authservice": {
                                "description": "The name of the authentication service that the login attempt used.",
                                "example": "dovecot",
                                "type": "string"
                              },
                              "exptime": {
                                "description": "When the login request will time out.",
                                "example": "2014-12-07T00:00:00.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "ip": {
                                "description": "The login attempt's IP address.",
                                "example": "192.168.0.1",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "logintime": {
                                "description": "When the login attempt occurred.",
                                "example": "2014-11-20T00:00:00.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "service": {
                                "description": "The login attempt's service. name.",
                                "example": "ftp",
                                "type": "string"
                              },
                              "timeleft": {
                                "description": "The number of minutes that remain before cPHulk removes the block.",
                                "example": 14,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "user": {
                                "description": "The login attempt's username.",
                                "example": "example",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_cphulk_failed_logins",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return login security failed logins",
        "tags": [
          "cPHulk",
          "Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_cphulk_failed_logins"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_cphulk_failed_logins?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/get_cphulk_user_brutes": {
      "get": {
        "description": "This function lists brute force attack entries from the cPHulk database, ordered by user accounts.",
        "operationId": "get_cphulk_user_brutes",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "user_brutes": {
                          "description": "Information about each brute force attempt.",
                          "items": {
                            "properties": {
                              "authservice": {
                                "description": "The authentication service on which the login attempt occurred.",
                                "example": "dovecot",
                                "type": "string"
                              },
                              "exptime": {
                                "description": "When the login request will time out.",
                                "example": "2014-12-07T00:00:00.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "ip": {
                                "description": "The IP address of the login attempt.",
                                "example": "192.168.0.1",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "logintime": {
                                "description": "When the login attempt occurred.",
                                "example": "2014-11-20T00:00:00.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "service": {
                                "description": "The name of the service on which the login attempt occurred.",
                                "example": "ftp",
                                "type": "string"
                              },
                              "timeleft": {
                                "description": "The number of minutes that remain before cPHulk removes the block.",
                                "example": 14,
                                "type": "integer"
                              },
                              "user": {
                                "description": "The username for which login attempt occurred.",
                                "example": "example",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_cphulk_user_brutes",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return login security brute force attacks by user",
        "tags": [
          "cPHulk",
          "Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_cphulk_user_brutes"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_cphulk_user_brutes?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/get_current_lts_expiration_status": {
      "get": {
        "description": "This function determines whether a branch's Long-Term Support (LTS) version expires within three months. For more information about LTS, read our [cPanel Long-Term Support documentation](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/#more-about-lts).",
        "operationId": "get_current_lts_expiration_status",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "expiration": {
                          "description": "When support for the build version expires.",
                          "example": 1585612801,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "expires_in_next_three_months": {
                          "description": "Whether the LTS version expires within the next three months.\n- `1` — LTS expires within the next three months.\n- `0` — LTS does **not** expire within the next three months.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "full_version": {
                          "description": "The full version number.",
                          "example": "11.88.1.11",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_current_lts_expiration_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Long Term Support expiration status",
        "tags": [
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_current_lts_expiration_status"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_current_lts_expiration_status?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/get_current_profile": {
      "get": {
        "description": "This function returns details about the server's current\n[cPanel & WHM server profile](https://docs.cpanel.net/whm/server-configuration/server-profile/).",
        "operationId": "get_current_profile",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "code": {
                          "description": "The code ID of the current profile.",
                          "example": "MAILNODE",
                          "type": "string"
                        },
                        "description": {
                          "description": "A description about the current profile.",
                          "example": "The Mail Node profile provides only services and cPanel features that allow the system to serve mail.",
                          "type": "string"
                        },
                        "disabled_roles": {
                          "description": "The disabled roles of the current profile.",
                          "example": [
                            {
                              "description": "FTP allows users to manage the files associated with their site with an FTP client.",
                              "module": "FTP",
                              "name": "FTP"
                            },
                            {
                              "description": "File Storage allows users to access the File Manager and Git™ Version Control features.",
                              "module": "FileStorage",
                              "name": "File Storage"
                            },
                            {
                              "description": "MySQL®/MariaDB allows users to create and manage MySQL/MariaDB databases.",
                              "module": "MySQL",
                              "name": "MySQL/MariaDB"
                            },
                            {
                              "description": "PostgreSQL allows users to create and manage PostgreSQL databases.",
                              "module": "Postgres",
                              "name": "PostgreSQL"
                            },
                            {
                              "description": "Web Disk allows users to manage and manipulate files on the server with multiple types of devices.",
                              "module": "WebDisk",
                              "name": "Web Disk"
                            },
                            {
                              "description": "Web Server allows users to create and manage websites for their domains.",
                              "module": "WebServer",
                              "name": "Web Server"
                            }
                          ],
                          "items": {
                            "properties": {
                              "description": {
                                "description": "The role's description.",
                                "type": "string"
                              },
                              "module": {
                                "description": "The role's module name.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The role's name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "enabled_roles": {
                          "description": "The current profile's enabled roles.",
                          "example": [
                            {
                              "description": "Calendars and Contacts provides CalDAV and CardDAV services.",
                              "module": "CalendarContact",
                              "name": "Calendars and Contacts"
                            },
                            {
                              "description": "Receive Mail allows users to receive email, as well as create and manage their email accounts.",
                              "module": "MailReceive",
                              "name": "Receive Mail"
                            },
                            {
                              "description": "Send Mail allows users to send email.",
                              "module": "MailSend",
                              "name": "Send Mail"
                            },
                            {
                              "description": "Local Mail allows the system to process email.",
                              "module": "MailLocal",
                              "name": "Local Mail"
                            },
                            {
                              "description": "Webmail provides access to webmail services.",
                              "module": "Webmail",
                              "name": "Webmail"
                            }
                          ],
                          "items": {
                            "properties": {
                              "description": {
                                "description": "The role's description.",
                                "type": "string"
                              },
                              "module": {
                                "description": "The role's module name.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The role's name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "experimental": {
                          "description": "Whether the profile is experimental.\n\n* `1` — Experimental.\n* `0` — Not experimental.\n\n**Important:**\n\nWe do **not** recommend using experimental profiles on production environments.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the system's current server profile.",
                          "example": "Mail Node",
                          "type": "string"
                        },
                        "optional_roles": {
                          "description": "The optional roles of the current server profile.",
                          "example": [
                            {
                              "description": "DNS allows users to create and edit Domain Name System zone files.",
                              "module": "DNS",
                              "name": "DNS"
                            },
                            {
                              "description": "Spam Filter allows users to use Apache SpamAssassin™ to identify, sort, and delete unsolicited mail.",
                              "module": "SpamFilter",
                              "name": "Spam Filter"
                            }
                          ],
                          "items": {
                            "properties": {
                              "description": {
                                "description": "The role's description.",
                                "type": "string"
                              },
                              "module": {
                                "description": "The role's module name.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The role's name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_current_profile",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return server's node profile",
        "tags": [
          "Server Administration",
          "Server Profiles"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_current_profile"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_current_profile?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/get_current_users_count": {
      "get": {
        "description": "This function returns the number of cPanel accounts on the server.",
        "operationId": "get_current_users_count",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "users": {
                          "description": "The number of cPanel accounts.",
                          "example": 100,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_current_users_count",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- `1` - Success\n- `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel accounts total number",
        "tags": [
          "Accounts",
          "Account Creation"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_current_users_count"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_current_users_count?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/get_disk_usage": {
      "get": {
        "description": "This function lists the disk usage status of the system's user accounts. This also lists information about file system object (inode) usage.",
        "operationId": "get_disk_usage",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "accounts": {
                          "description": "A list of objects containing the disk usage data for all accounts on the server.",
                          "items": {
                            "properties": {
                              "blocks_limit": {
                                "description": "The account's disk space quota, in kibibytes (KiB).\n* `null` - The account has unlimited disk space.",
                                "example": null,
                                "minimum": 0,
                                "nullable": true,
                                "type": "integer"
                              },
                              "blocks_used": {
                                "description": "The account's current disk space usage, in kibibytes (KiB).",
                                "example": 2632,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "inodes_limit": {
                                "description": "The account's inode quota.\n* `null` - The account has an unlimited number of inodes.",
                                "example": 9999,
                                "minimum": 0,
                                "nullable": true,
                                "type": "integer"
                              },
                              "inodes_used": {
                                "description": "The account's current inode usage.",
                                "example": 340,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "user": {
                                "description": "The cPanel or Reseller account username.",
                                "example": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_disk_usage",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all cPanel accounts disk usage",
        "tags": [
          "Accounts",
          "Bandwidth and Disk Quotas"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_disk_usage"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_disk_usage?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "80"
      }
    },
    "/get_domain_info": {
      "get": {
        "description": "This function returns information about each domain on the server.",
        "operationId": "get_domain_info",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "domains": {
                          "description": "array of objects representing the domain's data.\n\n**Note:**\n\n This return only includes domains that you manually created. This does not include service subdomain (proxy subdomains) or automatically-created domains.",
                          "items": {
                            "properties": {
                              "docroot": {
                                "description": "The document root for the addon domain. An absolute file path.",
                                "example": "/home/user1/public_html/example.com",
                                "type": "string"
                              },
                              "domain": {
                                "description": "The account's main domain. A valid domain.",
                                "example": "example.com",
                                "type": "string"
                              },
                              "domain_type": {
                                "description": "The domain's type.",
                                "example": "addon",
                                "type": "string"
                              },
                              "ipv4": {
                                "description": "The domain's IPv4 address. A valid IPv4 address.",
                                "example": "192.0.2.255",
                                "type": "string"
                              },
                              "ipv4_ssl": {
                                "description": "The domain's secure IPv4 address. A valid IPv4 address.",
                                "example": "192.0.2.255",
                                "type": "string"
                              },
                              "ipv6": {
                                "description": "The domain's IPv6 address.\n* A valid IPv6 address.\n* `null` An IPv6 address does not exist for this domain.",
                                "example": "2001:DB8:g1m:0N3y::1",
                                "nullable": true,
                                "type": "string"
                              },
                              "ipv6_is_dedicated": {
                                "description": "The domain possesses an IPv6 address.\n* `1` An IPv6 address exists for this domain.\n* `0` An IPv6 address does not exist for this domain.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "modsecurity_enabled": {
                                "description": "Whether ModSecurity is enabled on the server.\n* `1` ModSecurity is enabled.\n* `0` ModSecurity is not enabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "parent_domain": {
                                "description": "The parent domain. A valid domain name.",
                                "example": "example.com",
                                "type": "string"
                              },
                              "php_version": {
                                "description": "The installed PHP versions.",
                                "example": "ea-php54",
                                "type": "string"
                              },
                              "port": {
                                "description": "The server's port number.",
                                "example": 80,
                                "type": "integer"
                              },
                              "port_ssl": {
                                "description": "The server's secure port number.",
                                "example": 443,
                                "type": "integer"
                              },
                              "user": {
                                "description": "The account username. A cPanel account or reseller username on the server.",
                                "example": "username",
                                "type": "string"
                              },
                              "user_owner": {
                                "description": "The domain's owner.",
                                "example": "user1",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_domain_info",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` Success\n* `0` Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all domains information",
        "tags": [
          "Accounts",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_domain_info"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_domain_info?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "70"
      }
    },
    "/get_feature_metadata": {
      "get": {
        "description": "This function lists the details of the authenticated user's available feature lists.",
        "operationId": "get_feature_metadata",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "features": {
                          "description": "An array of objects containing information about a feature.",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The feature's ID.",
                                "example": "addondomains",
                                "type": "string"
                              },
                              "is_cpaddon": {
                                "description": "Whether the feature is a\n[cPAddon](https://docs.cpanel.net/cpanel/software/site-software/).\n\n* `1` — cPAddon.\n* `0` — **Not** a cPAddon.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "is_plugin": {
                                "description": "Whether the feature is a plugin.\n\n* `1` — Plugin.\n* `0` — **Not** a plugin.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "name": {
                                "description": "The feature's name.",
                                "example": "Addon Domain Manager",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_feature_metadata",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return current user's available feature lists info",
        "tags": [
          "Packages",
          "Feature Lists"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_feature_metadata"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_feature_metadata?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/get_feature_names": {
      "get": {
        "description": "This function lists all available features.",
        "operationId": "get_feature_names",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "feature": {
                          "description": "An array of objects that contain a list of available features.",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The feature's ID.",
                                "example": "sslmanager",
                                "type": "string"
                              },
                              "name": {
                                "description": "The feature's name.",
                                "example": "SSL Manager",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_feature_names",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all features",
        "tags": [
          "Packages",
          "Feature Lists"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_feature_names"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_feature_names?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/get_featurelist_data": {
      "get": {
        "description": "This function lists features in a specific feature list.",
        "operationId": "get_featurelist_data",
        "parameters": [
          {
            "description": "The feature list for which to list information.",
            "in": "query",
            "name": "featurelist",
            "required": true,
            "schema": {
              "example": "\"Mail Only\"",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "featurelist": {
                          "description": "The feature list's name.",
                          "example": "Mail Only",
                          "type": "string"
                        },
                        "features": {
                          "description": "An array of objects containing the feature's information.",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The feature's ID.",
                                "example": "email_trace",
                                "type": "string"
                              },
                              "is_disabled": {
                                "description": "Whether the feature is disabled.\n\n* `1` — Disabled.\n* `0` — **Not** disabled.\n\n**Note:**\n\n* The `disabled` feature list does **not** use this return.\n* Users on your server can't access disabled features. For more\ninformation, read our\n[Feature Manager](https://go.cpanel.net/whmdocsFeatureManager)\ndocumentation.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "value": {
                                "description": "Whether the feature list includes the feature.\n\n* `1` — The feature list includes this feature.\n* `0` — The feature list does **not** include this feature.\n\n**Note:**\n\nThe `disabled` feature list uses the **opposite** logic for this return.\n\n* `1` — The `disabled` feature list does **not** include this feature.\n* `0` — The `disabled` feature list includes this feature.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_featurelist_data",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return feature list configuration",
        "tags": [
          "Packages",
          "Feature Lists"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_featurelist_data featurelist='\"Mail Only\"'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_featurelist_data?api.version=1&featurelist=%22Mail%20Only%22"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/get_featurelists": {
      "get": {
        "description": "This function lists the authenticated user's available feature lists.\n\n**Notes:**\n\n* When you call this function with the `root` account, it returns **all** feature lists on the server.\n* When you call this function with a reseller account, it **only** returns feature lists that the account owns.",
        "operationId": "get_featurelists",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "featurelists": {
                          "description": "An array of available feature lists.",
                          "example": [
                            "default",
                            "disabled",
                            "reseller1_test1",
                            "reseller1_test2"
                          ],
                          "items": {
                            "example": "default",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_featurelists",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return current user's available feature lists",
        "tags": [
          "Packages",
          "Feature Lists"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_featurelists"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_featurelists?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/get_fpm_count_and_utilization": {
      "get": {
        "description": "This function provides information that will help you to determine\nwhether your server can handle the workload if you enable PHP-FPM for all domains.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://go.cpanel.net/howtouseserverprofiles),\nthe system **disables** this function.\n\n**Warning:**\n\nWe **strongly** recommend that you only activate Apache PHP-FPM if your server\nhas at least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable\nPHP-FPM on a server with less than the required RAM, your server may experience severe\nperformance issues.",
        "operationId": "get_fpm_count_and_utilization",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "domains_to_be_enabled": {
                          "description": "The number of domains that you will enable with PHP-FPM when you run the `/scripts/php_fpm_config_convert` script.",
                          "example": 2,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "domains_using_fpm": {
                          "description": "The number of domains with PHP-FPM enabled.",
                          "example": 20,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "memory_needed": {
                          "description": "The approximate number of megabytes of memory that your system will require to convert the remaining domains to PHP-FPM.",
                          "example": 90000,
                          "format": "megabytes",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "number_of_new_fpm_accounts_we_can_handle": {
                          "description": "The approximate number of domains on which you can enable PHP-FPM without a server overload.",
                          "example": 8,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "show_warning": {
                          "description": "Whether you **may** overload your server when you convert all domains\nto PHP-FPM.\n\n* `1` — **High** risk of server overload when you enable PHP-FPM.\n* `0` — **Low** risk of server overload when you enable PHP-FPM.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "total_domains": {
                          "description": "The total number of domains on the server.",
                          "example": 22,
                          "minimum": 0,
                          "type": "integer"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_fpm_count_and_utilization",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return workload data for PHP-FPM on all domains",
        "tags": [
          "PHP",
          "PHP-FPM"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_fpm_count_and_utilization"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_fpm_count_and_utilization?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "66"
      }
    },
    "/get_homedir_roots": {
      "get": {
        "description": "This function returns all the directories where the system stores\nusers' home directories. It returns them in descending order, based on the\ncurrent amount of available free disk space for each directory. For example,\nthe first directory the function lists has the most available free disk space.\n\n**Note:**\n\nUse WHM's Basic WebHost Manager Setup (WHM >> Home >> Server Configuration >> Basic WebHost Manager Setup) to configure where the system will create a new user's home directory.",
        "operationId": "get_homedir_roots",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array containing data for each home parent directory. This array contains the path return.",
                          "items": {
                            "properties": {
                              "path": {
                                "description": "directory where the system can store users' home directories. A valid directory path.",
                                "example": "/home",
                                "format": "local_path",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_homedir_roots",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return home directories list",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_homedir_roots"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_homedir_roots?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "88"
      }
    },
    "/get_integration_link_user_config": {
      "get": {
        "description": "This function retrieves configuration information about a specified integration link in a specified user's cPanel interface.",
        "operationId": "get_integration_link_user_config",
        "parameters": [
          {
            "description": "The integration link's app name.\n\n**Warning:**\n\nIf you create a link with an app value that already exists, the function will replace the existing link with the newly-created link.",
            "in": "query",
            "name": "app",
            "required": true,
            "schema": {
              "example": "WHMCS_billing",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account name.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "userconfig": {
                          "description": "An object with information about the user's integration link.",
                          "properties": {
                            "app": {
                              "description": "The application to link.",
                              "example": "WHMCS_billing",
                              "type": "string"
                            },
                            "autologin_token_url": {
                              "description": "A publicly-available URL to which the server will send the\n`app`, `token`, `user`, and `subscriber_unique_id` values through\nan HTTP POST request. The destination server will respond\nwith a JSON-encoded object with either a `redirect_url`\nkey or the `retry` and `attempt` keys.\n\n* If the response contains `redirect_url`, the system will redirect\nthe user to that URL (for example, `{\"redirect_url\":\"http://www.whmcs.com/client_area/login/?one_time_user_token_that_expires_in_120_seconds=d41d8cd98f00}`\nwill send the user to that URL).\n* If the response contains `retry` and `attempt`, the system will wait for\nthe `retry` value in seconds for a maximum of 60 seconds\nand then attempt the call again. The `attempt` value indicates\nthe number of attempts that the system tried. The system\nwill stop after three attempts (for example, `{\"retry\":30,\n\"attempt\":2}` represents the second attempt to connect,\nand the system will pause the user for 30 seconds before\nit tries again).",
                              "example": "http://www.example.com/login.cgi",
                              "format": "url",
                              "type": "string"
                            },
                            "base64_png_image": {
                              "description": "The image to display for the application on the cPanel *Home* interface.",
                              "example": "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA%2fwD%2fAP%2bgvaeTAAAACXBIWXMAAABIAAAASABGyWs%2bAAALVUlEQVRo3sWZe3BU1R3HP79z793dZAPkBYIg4RUSBKkIEfCNog5WbaWOHevUWttOVXxVtFWctmpb2xGptVOt1ken1bbSVsVSxVba8UkrsRIxYhbRJEqRVxJCErK7d%2b89%2fePcTW6WTdj4mH5nLuTunj3n%2b%2f2d3%2fn9fucc4f%2bAbdu2ISJkMhmxbXupiMwH0lrr33qet7W6uhoRKaivwlp9TCQSCQAFVAEdwL7gqxLgCeB0wAOuSqVSvywvLyeZTIrWeqLWukdrvVcpRXV19UF9q0%2bbeEC%2bEvgOsA74EVAaNBkP1AR%2fW0BdNBq1enp68Dyvzvf9P2qtVwNn%2bb5vh%2frrg%2f1JEP3hG0ehROFpt8qW2CLAymRceax7aXeHv2PtFSM3LtD4NwNxYAqQAn4CnAwcFupqLjADiAG%2fAOqCz2PAq0Bb7tjDFrC8Pj7gfVVdD%2b3p9xAUoJcCKzGuKUCHhWyPSWmiV7fvCQQ4wGXAKcAEIBrqbibweMBrSujzt4HOfHwKEhAiXR5YqQHYs6quJ%2fSdHwGOxbgCGg8NZQp7zhGxyvu39rY3AJOCxkXAnDxDWcD0nM9c4AUgA1BTUzPgyyEFhIhHgcXA1cBC4DHgxuX18fZQ89HALNBEZRRTnDPo8rdLt79r4aaelx%2bLqzHJ%2fKMIAmjo%2bzePAA8oBiYlEok6YNf06dP%2f1tTUpAeNQiHyDnAT8C36F18G%2bBWwgv6pPQVYo9GjjopcxMLYcjxSpPzO9mI1%2bg1BzQ9IBLQVGk1ad%2bFyAIfiroiUKIyb5aIFeAeoBQ4HtsZisQs6OzsbC3EhDUwMkc%2fO3DeAJPCDYOoXa%2fTImIximrMECxtBcFRRuUYvClscNHu8LWxzn2Gn9wZJ3ZGptI788ZLiu193de%2fZwNKAaBaT6Hc%2fgFrP886ePXt2YyEzAPAV4EEOdrle4EWgDBM9RgiKGudc5seuJSalaPwca3i8nX6CTakH6dY7s6J2CNaSmJRtvnjEehs4HrgDs6YOgoisi0QiV2%2fdunXboHlgVV1P%2bPU1YGeeZkXAmcFAIwxBnyZ3DRuSK%2bnVbYRzpSAk3LX8O3UX3XoXgpV93qpQ1c0%2bKTDu%2bQJwObAlD%2flnIpHIsmQyuW3u3LkFJ7IWYHMhDTUaH49t7jr2eFtQwRCCYp%2ffQkPqYVx9IAi7Bgr7lRV7NnWNsWbj6TTj7em0%2bTteV9h3YnJGFp7jOGu6urqaa2trqaioMC4RcpdRmOy4HeiiPyz0AE3AWUORFxRFUspIdQSHWUdTYdUOcKGWzPN0%2bu8PII9xwzevLIe4jOXp3m8y0T3Bakg9UjbZXtxyYtGN7yjsWUFby%2fO8C%2bPx%2bIetra2NjuPsskPkFbAMuCIg%2b0rwvAXMAs4e2vI%2bY61jOD72bUaq8ThS0jcjAB5pdmU2o9G5BVjMx%2f16qapqas48l3b1gTm7M1tO8MksTLhrKqY4i9RE%2b8Q%2bQ3iet8jzvAWu625Pp9OvhRflvMDvxgfPqYHlWzERaPyhXKdYjabCmg6hyJ6dG1%2b7JPW%2bfNWjAGcmdftUjW8D4zV%2b1PTp0eE36ypOys0QRUC17%2fsVWQGxgPyEnI5LMOn9UOgE%2fVpMStuA00GPYkChqBGxsCWGJm8JrDR%2bbgZGUDgUDRYpXRFpywqIMzDuFooU8HfgXl%2b7G%2bZELvFdfWCuEmeuhXMccAZBdLKJUmnVpj7IvGwTlBtDQ%2bNInDJrygDrK6UaReRZy7I2KaW2ZK3Uhil3XxkG%2bX3AbcDFwLO2FO0%2fZsZJ3TEpewH4KfA1TAUZ0IGZkS82l8i4J0GnDtW5j88Y6ygqVE04EHiWZd3V2Nh4w6RJk35fVVXVoELxvgFTJb5QAPku4LuYynPfqrqeUN7QaDIIMh0YF7ZoiYydtLTkd42C%2fQDozOC29ymSCj4T%2bTIRKSG0nsTzvCPr6upKWltb0VobPw2JaAxE%2fHNI48B9wAOAm%2f3t9fUjeP6tPzDtzclYRI7TcD8560fjx4pl9GXnl6xuUTjrNV6YXF8OKZZKFsSu1RPs43IzufJ9%2f8re3t7bo9FoZSKR6F9oIRFNwBoGKQ2BTZjNxkFuMNk5jddnvlSpsG8Hna9cRuOPLVfTVpxVfE%2fZYdacdERGoLBROMRlNNOcM1lcfAc1zrmDLd6o53lX9Pb2XlpbW9tf24TyQTFwDPn3yz7wKPB%2bvp5TuoudXkPnFLV4k6BODozQhalYD6dvr%2bCXH24fO3%2bJVUOn%2fz69ug2Fwwg1jhFqAjbRXMt3iUiH1nosEBGRNqVU%2fcaNG5Hl9fEYZltXGxA%2fFrPVK8vDcTsmG7%2bZM2sALNsIN5R%2bSI%2b%2fZ5otsZtAvw%2b8hAkSq4DTBnYnCKrPUjpwoly7AN%2bLRCJPicg8z%2fNOFZF3y8rKVrqu69qYzUktJgcUM%2fRJxTuYxJYXcSmlyhlLqyvveiQvd%2fUBV7B0YPn%2f5nOoYOc2FHwgkU6nE8XFxYnKysrVqVRK2tra3KlTp2IDn6NwbMdk57y4o24fdxj9GkiHThAOx2T6MKn99O%2bRw%2bgJfl8SvBcBJ6TT6adEhO7u7syMGTP6Gis4lAEGoBuzvRsuZjFwQ%2fIc8HngZwR73QCtwCWYemxH6PP5kUikVGt90IGXzfAOt%2bIYdxiuiGbMmdASTHK7CuOOXZjN0pigXT2wVpC0RvuYdeMCT5Mn6mUFPI5ZAxMx0zaUoAmBiP3DFNAEXIoJDu8ET9bi74UEbBypJqT2egksia62sHcL0pEhtUlQnq0ieQVchDlRqMEcmdRhKtHyPESmB0IbC2GdcwSyH1gL0JRoQuOhsDs87f4ZdA%2bQFFEvZnSKh%2fefxF3HdmcwrjYk%2bqwdygNFwD3AV%2fO094DrgJ9nP8gNpYXipS2rcaSSlL%2fbsSTiaLT2dCoF%2bKfMvKjgfga4S0jEVcDd5HenesypwfaPI%2bCTQr5MfGRAcLC1MBezc%2fs%2bkB7ugME45cA5mFI7XxQUTPZ%2bGmgfylCSQ%2f4oTJ1z0iF47MeU3w8CmUJnIRhnJHArJlQ6Qwhwgd8IskKj9w4qIET%2bGIxvH1%2bgMTswJ8z3BYIGtVJojAnAzZiIFDnkCCZHPGpJ0Y31bXt33bdgPdUjF6Gkfz%2bUFVABrOagWuWQSAHPAPdi4ntXWEjQt2DuB04HrgTmM7x7CQ1q5Sljr1nx2t5HvFuObkak%2f%2bfZNdCFSTbDRRQ4D3MuWo%2fZ0TUtr493BsRHA7OBE4P%2fiz7CGK4Sq%2fmcv%2f7Qe%2bi089F6oMeFXWgeJqlN7FdONybRlGKuhwpBOngkEFjI%2bauHOYWLBOPEQuZ%2fTkn0wm63ve3eBT5KBk5euPP%2fYBbwMsyFwobgacTUMvfQfx00FCIU5t8hjqwFrg%2bEzMGsw4VAhSCrtN7fticJuw%2b0HPTj3Cg0ArOP3UF%2fVZjFncDyYRArFL2YauBJgJHOOErs0WpncktZxu%2bt8NEtvs6kF429lqVVd%2bUXMBhCwuLAnzDF2KeBW4Fbsi%2fDSY6FRoPJmEX4aeF4gvOj4WJQATn3A%2fMYeJuYRS%2bmTP4XQ1eouzAHYBvg4D0jJvtPBgbE%2bI8lIAQbk5lzo0kaE%2f8vBD6LqZ3yZdVOTNY9D%2bPr6%2fK0OYxBLjM%2bCQGCCaXhCz0XE5VuCwh2AP8g%2fyy0YCx%2fIPj7GmB9TptmYI8Su%2b80%2b2MLCC0kF3Pd8yVMcbUfeAiz8MKEtwEf5OmqAdgben8XU%2b0%2bD%2bzGXBZ%2bAfiLr93gzrJwFNQ6tB7KMHF6M7B34D0xEeDXgdAs%2fIDsvVmjhNpXY0qYTUDqo5blw72p7yB07Li8Ps6quh6uqy9GUGngVQ0X0D%2bz7YJuAOk77wkRDW8tPzIKEnAo60RVORErhq%2b9dUrsKIgjIL722l0%2fucVSDh2pDwoZatj4H%2bRdIAdHBVWZAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE1LTA5LTAyVDEyOjM5OjQ4LTA1OjAwppVa9QAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNS0wOS0wMlQxMjozOTo0OC0wNTowMNfI4kkAAAAASUVORK5CYII%3d",
                              "format": "base64 image",
                              "type": "string"
                            },
                            "implements": {
                              "description": "The service for which to implement authentication. The `implements` value is a string from the WHM API 1 `get_users_links` function. Typically, this function returns one of the following values:\n* `billing` — This link appears in the user menu.\n* `customer_service` — This link appears in the user menu.\n* `support` — This link appears in the user menu.\n* `upgrade` — This link appears in the user menu and context-sensitive areas when the user may require more of a resource.",
                              "example": "billing",
                              "type": "string"
                            },
                            "label": {
                              "description": "The label to display for the application on the cPanel *Home* interface.",
                              "example": "WHMCS Billing",
                              "type": "string"
                            },
                            "subscriber_unique_id": {
                              "description": "The subscriber's unique ID that the system will present to the URL in the `autologin_token_url` endpoint.",
                              "example": "1234",
                              "type": "string"
                            },
                            "url": {
                              "description": "A publicly-available URL to which to send the user if the\nlocation in the `autologin_token_url` parameter does not\nrespond.",
                              "example": "http://www.example.com",
                              "format": "url",
                              "type": "string"
                            },
                            "user": {
                              "description": "The cPanel account name.",
                              "example": "username",
                              "format": "username",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_integration_link_user_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return integration link configuration",
        "tags": [
          "Integration",
          "Links"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_integration_link_user_config user='username' app='WHMCS_billing'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_integration_link_user_config?api.version=1&user=username&app=WHMCS_billing"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/get_linked_server_node": {
      "get": {
        "description": "This function returns details about a linked remote server node.",
        "operationId": "get_linked_server_node",
        "parameters": [
          {
            "description": "The name of a linked remote server node.",
            "in": "query",
            "name": "alias",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "enabled_services": {
                          "description": "The services enabled on the linked remote server node.",
                          "items": {
                            "example": "apache_php_fpm",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "hostname": {
                          "description": "The remote server node's hostname.",
                          "example": "example.com",
                          "format": "domain",
                          "type": "string"
                        },
                        "last_check": {
                          "description": "The last time that the server queried the current status of the remote server node.",
                          "example": 1556576165,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "system_settings": {
                          "additionalProperties": {
                            "type": "object"
                          },
                          "description": "A list of the `worker_capabilities` return's system settings.\nThe key is a role name and the value is an object with system settings for the role.",
                          "example": {
                            "Mail": {
                              "globalspamassassin": 0
                            }
                          }
                        },
                        "tls_verified": {
                          "description": "Whether the remote server node has a valid SSL certificate.\n* `1` - The remote server node has a valid SSL certificate.\n* `0` - The remote server node does not have a valid SSL certificate.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "username": {
                          "description": "The username required to make API calls to the linked remote server node.",
                          "example": "root",
                          "format": "username",
                          "type": "string"
                        },
                        "version": {
                          "description": "The version of cPanel & WHM installed on the remote server node.",
                          "example": "11.86.0.0",
                          "type": "string"
                        },
                        "worker_capabilities": {
                          "additionalProperties": {
                            "type": "object"
                          },
                          "description": "A group of services required for a remote server node to perform a specific task. The key is a role name\nand the value is an object with required options for the role.",
                          "example": {
                            "Mail": {}
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_linked_server_node",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return linked remote server node settings",
        "tags": [
          "Server Administration",
          "Server Nodes"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_linked_server_node alias='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_linked_server_node?api.version=1&alias=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/get_login_url": {
      "get": {
        "description": "This function retrieves the login URL for the cPanel Store or a\ncPanel Market provider.",
        "operationId": "get_login_url",
        "parameters": [
          {
            "description": "The cPanel Store or cPanel Market provider's name.",
            "in": "query",
            "name": "provider",
            "required": true,
            "schema": {
              "example": "cPStore",
              "type": "string"
            }
          },
          {
            "description": "The location to which the cPanel Store or cPanel Market provider\nredirects the user's browser after they log in.",
            "in": "query",
            "name": "url_after_login",
            "required": true,
            "schema": {
              "example": "http://hostname.example.com/redirectionlocation.cgi?state",
              "format": "url",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "The URL to which to redirect the browser after login.",
                          "example": "https://account.cpanel.net/oauth2/auth/login?client_id=d5eff4a09e29d5b20752674c0ab2c799c428eb23df4db2df10a5c9d96c37472c76013a41e9a0c714e852965ceaed2e8e05e2f738bc27ee562cfb683fbfc75a01&email=&redirect_uri=http%3A%2F%2Fhostname.example.com%2Fredirectionlocation.cgi%3Fstate&response_type=token",
                          "format": "url",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_login_url",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel Store or cPanel Market login URL",
        "tags": [
          "Authentication",
          "Login URL"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_login_url provider='cPStore' url_after_login='http://hostname.example.com/redirectionlocation.cgi?state'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_login_url?api.version=1&provider=cPStore&url_after_login=http%3a%2f%2fhostname.example.com%2fredirectionlocation.cgi%3fstate"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/get_lts_wexpire": {
      "get": {
        "description": "This function parses the `/etc/cpanel/TIERS.json` file and returns whether a branch qualifies for Long-Term Support (LTS). For more information about LTS, read our [cPanel Long-Term Support](https://go.cpanel.net/cpanel-lts) documentation.",
        "operationId": "get_lts_wexpire",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "branch": {
                          "additionalProperties": {
                            "description": "The branch.",
                            "items": {
                              "properties": {
                                "build": {
                                  "description": "The build version number.",
                                  "example": "11.90.0.5",
                                  "type": "string"
                                },
                                "is_main": {
                                  "description": "Whether the build represents the main build of the branch.\n* `1` - The build is the main build of the branch.\n* `0` - The build is **not** the main build of the branch.\n\n**Note:**\n\nThis will be `1` for exactly one of the entries in this array.",
                                  "enum": [
                                    0,
                                    1
                                  ],
                                  "example": 0,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "description": "An object that lists information about available branch builds.",
                          "example": {
                            "11.78.0": [
                              {
                                "build": "11.78.0.49",
                                "is_main": 1
                              }
                            ],
                            "11.80.0": [
                              {
                                "build": "11.80.0.24",
                                "is_main": 1
                              }
                            ],
                            "11.82.0": [
                              {
                                "build": "11.82.0.19",
                                "is_main": 1
                              }
                            ],
                            "11.84.0": [
                              {
                                "build": "11.84.0.22",
                                "is_main": 1
                              }
                            ],
                            "11.86.0": [
                              {
                                "build": "11.86.0.25",
                                "is_main": 1
                              }
                            ],
                            "11.88.0": [
                              {
                                "build": "11.88.0.14",
                                "is_main": 1
                              }
                            ],
                            "11.90.0": [
                              {
                                "build": "11.90.0.5",
                                "is_main": 1
                              }
                            ]
                          },
                          "type": "object"
                        },
                        "flags": {
                          "additionalProperties": {
                            "description": "Feature or flag in the output format.\n\n* `1` - Feature is present in the returned data.\n* `0` - Feature is **not** present in the returned data.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "description": "An object containing Features or flags supported by this output.",
                          "example": {
                            "is_main": 1
                          },
                          "type": "object"
                        },
                        "tiers": {
                          "additionalProperties": {
                            "description": "The release tier.",
                            "items": {
                              "properties": {
                                "build": {
                                  "description": "The build version number.",
                                  "type": "string"
                                },
                                "expires": {
                                  "description": "When cPanel, L.L.C. support for the build version expires.\nEncoded as a Unix Timestamp.\n\n**Note:**\n\nThis item is only present when the version is LTS.",
                                  "example": "1617148801",
                                  "type": "string"
                                },
                                "is_lts": {
                                  "description": "Whether cPanel offers this version as LTS.\n* `1` — Long-term support.\n* `0` — No Long-term support.\n\n**Note:**\n\nThis item is only present when the version is LTS.",
                                  "enum": [
                                    1
                                  ],
                                  "example": 1,
                                  "type": "integer"
                                },
                                "is_main": {
                                  "description": "Whether the build represents the main build of the tier.\n* `1` - The build is the main build of the tier.\n* `0` - The build is **not** the main build of the tier.\n\n**Note:**\n\nThis will be `1` for exactly one of the entries in this array.",
                                  "enum": [
                                    0,
                                    1
                                  ],
                                  "example": 1,
                                  "type": "integer"
                                },
                                "named": {
                                  "description": "The release tier or tiers which currently offer this branch, if applicable.\n\n**Note:**\n\nThis item is only present when the version is part of a named tier.",
                                  "example": [
                                    "edge",
                                    "current",
                                    "release"
                                  ],
                                  "items": {
                                    "enum": [
                                      "edge",
                                      "current",
                                      "release",
                                      "stable",
                                      "lts"
                                    ],
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "description": "An object that lists information about build versions in release tiers.",
                          "example": {
                            "11.78": [
                              {
                                "build": "11.78.0.49",
                                "expires": "1588636799",
                                "is_lts": 1,
                                "is_main": 1
                              }
                            ],
                            "11.80": [
                              {
                                "build": "11.80.0.24",
                                "is_main": 1
                              }
                            ],
                            "11.82": [
                              {
                                "build": "11.82.0.19",
                                "is_main": 1
                              }
                            ],
                            "11.84": [
                              {
                                "build": "11.84.0.22",
                                "is_main": 1
                              }
                            ],
                            "11.86": [
                              {
                                "build": "11.86.0.25",
                                "expires": "1617148801",
                                "is_lts": 1,
                                "is_main": 1,
                                "named": [
                                  "lts"
                                ]
                              }
                            ],
                            "11.88": [
                              {
                                "build": "11.88.0.13",
                                "is_main": 0,
                                "named": [
                                  "stable"
                                ]
                              },
                              {
                                "build": "11.88.0.14",
                                "is_main": 1
                              }
                            ],
                            "11.90": [
                              {
                                "build": "11.90.0.5",
                                "is_main": 1,
                                "named": [
                                  "current",
                                  "edge",
                                  "release"
                                ]
                              }
                            ]
                          },
                          "type": "object"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_lts_wexpire",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Long Term Support status for all versions",
        "tags": [
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_lts_wexpire"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_lts_wexpire?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/get_mailbox_status": {
      "get": {
        "description": "This function lists the status of a cPanel's mail account's mailboxes.\n\n**Important:**\n\n  When you disable the [*Receive Mail* role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "get_mailbox_status",
        "parameters": [
          {
            "description": "An email account or cPanel account's username.\n\n**Note:**\n\n`_mainaccount` is an alias representing the cPanel user's mailbox (for example, `_mainaccount@example.com represents the example mailbox.)",
            "in": "query",
            "name": "account",
            "required": true,
            "schema": {
              "example": "user@example.com",
              "oneOf": [
                {
                  "format": "email",
                  "type": "string"
                },
                {
                  "format": "username",
                  "type": "string"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "An object containing information about the mailbox's contents.\n\n**Note:**\n\nThe mailbox name is the return's name.",
                        "properties": {
                          "guid": {
                            "description": "The mailbox globally unique identifier (GUID).",
                            "example": "1234560f0c58d158c92a000044f0d230",
                            "type": "string"
                          },
                          "messages": {
                            "description": "The total number of messages in the mailbox.",
                            "example": 0,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "vsize": {
                            "description": "The total virtual size of the mailbox's contents with `CRLF` line terminators.",
                            "example": 0,
                            "format": "bytes",
                            "minimum": 0,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "example": {
                        "INBOX": {
                          "guid": "111111234560f0c58d158c92a000044f",
                          "messages": 42000,
                          "vsize": 42
                        },
                        "INBOX.Drafts": {
                          "guid": "11111111234560f0c58d158c92a00000",
                          "messages": 5,
                          "vsize": 522
                        },
                        "INBOX.Sent": {
                          "guid": "1111111234560f0c58d158c92a000004",
                          "messages": 1,
                          "vsize": 56
                        },
                        "INBOX.Trash": {
                          "guid": "1111234560f0c58d158c92a000044f0d",
                          "messages": 2001,
                          "vsize": 5643
                        },
                        "INBOX.angel_face@example_com": {
                          "guid": "11234560f0c58d158c92a000044f0d23",
                          "messages": 3,
                          "vsize": 1524
                        },
                        "INBOX.marla_singer@example_com": {
                          "guid": "1234560f0c58d158c92a000044f0d230",
                          "messages": 5,
                          "vsize": 100
                        },
                        "INBOX.narrator@example_com": {
                          "guid": "11111234560f0c58d158c92a000044f0",
                          "messages": 0,
                          "vsize": 0
                        },
                        "INBOX.robert_paulsen@example_com": {
                          "guid": "111111111234560f0c58d158c92a0001",
                          "messages": 2,
                          "vsize": 2222
                        },
                        "INBOX.tyler_durden@example_com": {
                          "guid": "111234560f0c58d158c92a000044f0d2",
                          "messages": 55,
                          "vsize": 12244
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_mailbox_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account mailboxes status by name",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_mailbox_status account='user@example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_mailbox_status?api.version=1&account=user%40example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_mailbox_status_list": {
      "get": {
        "description": "This function lists the status of a cPanel's mail account's mailboxes.\n\n**Important:**\n\n  When you disable the [Receive Mail role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "get_mailbox_status_list",
        "parameters": [
          {
            "description": "The email account's name.",
            "example": "user@example.com",
            "in": "query",
            "name": "account",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "description": "A valid email account that exists on the server",
                  "example": "user@example.com",
                  "format": "email",
                  "type": "string"
                },
                {
                  "description": "The cPanel user's account name.",
                  "example": "example",
                  "format": "username",
                  "type": "string"
                },
                {
                  "description": "An alias that represents the cPanel user's mailbox",
                  "example": "_mainaccount@example.com",
                  "format": "email",
                  "type": "string"
                }
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "mailboxes": {
                          "description": "An array that contains information about the mailbox's contents.",
                          "items": {
                            "properties": {
                              "guid": {
                                "description": "The alpha-numeric 32-byte mailbox GUID.",
                                "example": "1234560f0c58d158c92a000044f0d230",
                                "type": "string"
                              },
                              "mailbox": {
                                "description": "The mailbox name.",
                                "example": "INBOX.marla_singer@example_com",
                                "type": "string"
                              },
                              "messages": {
                                "description": "The total number of messages in the mailbox.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "vsize": {
                                "description": "The total virtual size of the mailbox's contents, computed with CRLF line terminators.",
                                "example": 0,
                                "format": "bytes",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_mailbox_status_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account mailboxes status list",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_mailbox_status_list account='user@example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_mailbox_status_list?api.version=1&account=user%40example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/get_market_providers_commission_config": {
      "get": {
        "description": "This function returns the commission configuration of all available cPanel Market providers.",
        "operationId": "get_market_providers_commission_config",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contains commission ID information about a cPanel Market provider.",
                          "items": {
                            "properties": {
                              "local_commission_id": {
                                "description": "The locally-cached commission ID that the server owner uses for the cPanel Market provider.",
                                "example": "user@example.com",
                                "format": "email",
                                "type": "string"
                              },
                              "provider_display_name": {
                                "description": "The cPanel Market provider's display name.",
                                "example": "cPanel Store",
                                "type": "string"
                              },
                              "provider_name": {
                                "description": "The cPanel Market provider's name.",
                                "example": "cPStore",
                                "type": "string"
                              },
                              "remote_commission_id": {
                                "description": "The commission ID that the server owner uses for the cPanel Market provider.",
                                "example": "user@example.com",
                                "format": "email",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_market_providers_commission_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Market providers' commission configuration",
        "tags": [
          "Market",
          "Provider Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_market_providers_commission_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_market_providers_commission_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/get_market_providers_list": {
      "get": {
        "description": "This function lists the available cPanel Market providers.",
        "operationId": "get_market_providers_list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects with information about each cPanel Market provider.",
                          "items": {
                            "properties": {
                              "display_name": {
                                "description": "The cPanel Market provider's display name.",
                                "example": "cPanel Store",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Whether the cPanel Market provider is enabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "even_commission_divisor": {
                                "description": "The price of the Market provider's products must be a multiple of this value.\n\n**Note:**\n\n This function returns the even_commission_divisor value only if the `supports_commission` value is `1`.",
                                "example": 6,
                                "type": "integer"
                              },
                              "name": {
                                "description": "The cPanel Market provider's name.",
                                "example": "cPStore",
                                "type": "string"
                              },
                              "supports_commission": {
                                "description": "Whether the cPanel Market provider supports sales commissions.\n* `1` - The provider supports commissions.\n* `0` - The provider does **not** support commissions.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_market_providers_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Market providers",
        "tags": [
          "Market",
          "Provider Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_market_providers_list"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_market_providers_list?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/get_market_providers_product_metadata": {
      "get": {
        "description": "This function lists all available cPanel Market providers' products and the attributes of\neach product that can be managed by an adminstrator.\n\nThe return list includes different `attribute` data depending the `product_group` for each product.\n\n<table>\n  <tr>\n    <th>Product Group</th>\n    <th>Attributes Returned</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>ssl_certificate</td>\n    <td>SSLMarketProviderMetaData</td>\n    <td>Contains additional attributes only applicable to SSL Certificates</td>\n  </tr>\n  <tr>\n    <td>*</td>\n    <td>MarketProviderMetaData</td>\n    <td>Any products not in a <code>product_group</code> listed above will include only these attributes.</td>\n  </tr>\n</table>\n\n**Note:**\n\nThe function does **not** return the `product_group` name.\n\nTo get the `product_group` name for a `product_id`, run WHM API 1's [get_market_providers_products](#operation/get_market_providers_products) function.",
        "operationId": "get_market_providers_product_metadata",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "product_metadata": {
                          "items": {
                            "properties": {
                              "attributes": {
                                "oneOf": [
                                  {
                                    "$ref": "#/components/schemas/MarketProviderMetaData"
                                  },
                                  {
                                    "$ref": "#/components/schemas/SSLMarketProviderMetaData"
                                  }
                                ]
                              },
                              "product_id": {
                                "description": "The product's ID.",
                                "example": "123",
                                "type": "string"
                              },
                              "provider_display_name": {
                                "description": "The cPanel Market provider's display name.",
                                "example": "cPanel Store",
                                "type": "string"
                              },
                              "provider_name": {
                                "description": "The cPanel Market provider's name.",
                                "example": "cPStore",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_market_providers_product_metadata",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Market providers' products metadata",
        "tags": [
          "Market",
          "Product Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_market_providers_product_metadata"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_market_providers_product_metadata?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/get_market_providers_products": {
      "get": {
        "description": "This function lists products available in the server's cPanel Market.",
        "operationId": "Market-get_market_providers_products",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "products": {
                          "description": "A list of the products in the cPanel Market.\n\n**Note:**\n\nAdditional returns that correspond to each product may appear.",
                          "example": [
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "An extended-validated (EV) SSL certificate signed by COMODO.",
                              "display_name": "Comodo EV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "Comodo EV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "155",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "1",
                                "year"
                              ],
                              "x_identity_verification": [
                                {
                                  "label": "Organization Name",
                                  "name": "organizationName"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Department Name",
                                  "name": "organizationalUnitName"
                                },
                                {
                                  "description": "9 consecutive digits or “##-###-####” (More information (https://go.cpanel.net/get_duns))",
                                  "is_optional": 1,
                                  "label": "Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number",
                                  "name": "duns_number",
                                  "pattern": "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                                },
                                {
                                  "label": "Street Address",
                                  "name": "streetAddress"
                                },
                                {
                                  "label": "City",
                                  "name": "localityName"
                                },
                                {
                                  "label": "State or Province",
                                  "name": "stateOrProvinceName"
                                },
                                {
                                  "label": "Postal Code",
                                  "name": "postalCode"
                                },
                                {
                                  "label": "Country Code",
                                  "name": "countryName",
                                  "type": "country_code"
                                },
                                {
                                  "label": "Representative’s Given (First) Name",
                                  "name": "rep_forename"
                                },
                                {
                                  "label": "Representative’s Surname (Last Name)",
                                  "name": "rep_surname"
                                },
                                {
                                  "label": "Representative’s Email Address",
                                  "name": "rep_email_address",
                                  "type": "email"
                                },
                                {
                                  "description": "This should be one of the organization’s publicly-listed telephone numbers.",
                                  "is_optional": 1,
                                  "label": "Representative’s Telephone Number",
                                  "name": "rep_telephone",
                                  "type": "tel"
                                },
                                {
                                  "description": "Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/) for more information about this field’s options.",
                                  "label": "Business Category",
                                  "name": "business_category",
                                  "options": [
                                    [
                                      "b",
                                      "Incorporated Business (“Private Organization”)"
                                    ],
                                    [
                                      "d",
                                      "Non-incorporated Business (“Business Entity”)"
                                    ],
                                    [
                                      "c",
                                      "Government Entity (“Government Entity”)"
                                    ]
                                  ],
                                  "type": "choose_one"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "City Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_locality_name"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "State or Province Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_state_or_province_name"
                                },
                                {
                                  "label": "Country Code Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_country_name",
                                  "type": "country_code"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Date of Incorporation",
                                  "name": "date_of_incorporation",
                                  "type": "date"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Assumed Name (DBA (Doing Business As))",
                                  "name": "assumed_name"
                                }
                              ],
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "checkout",
                              "x_price_per_domain": 108,
                              "x_price_per_domain_maximum": 1080,
                              "x_price_per_domain_minimum": 108,
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "ev",
                              "x_warn_after": 604800
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "A 2-year extended-validated (EV) SSL certificate signed by Comodo.",
                              "display_name": "2-Year Comodo EV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "Comodo EV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "261",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "2",
                                "year"
                              ],
                              "x_identity_verification": [
                                {
                                  "label": "Organization Name",
                                  "name": "organizationName"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Department Name",
                                  "name": "organizationalUnitName"
                                },
                                {
                                  "description": "9 consecutive digits or “##-###-####” (More information (https://go.cpanel.net/get_duns))",
                                  "is_optional": 1,
                                  "label": "Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number",
                                  "name": "duns_number",
                                  "pattern": "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                                },
                                {
                                  "label": "Street Address",
                                  "name": "streetAddress"
                                },
                                {
                                  "label": "City",
                                  "name": "localityName"
                                },
                                {
                                  "label": "State or Province",
                                  "name": "stateOrProvinceName"
                                },
                                {
                                  "label": "Postal Code",
                                  "name": "postalCode"
                                },
                                {
                                  "label": "Country Code",
                                  "name": "countryName",
                                  "type": "country_code"
                                },
                                {
                                  "label": "Representative’s Given (First) Name",
                                  "name": "rep_forename"
                                },
                                {
                                  "label": "Representative’s Surname (Last Name)",
                                  "name": "rep_surname"
                                },
                                {
                                  "label": "Representative’s Email Address",
                                  "name": "rep_email_address",
                                  "type": "email"
                                },
                                {
                                  "description": "This should be one of the organization’s publicly-listed telephone numbers.",
                                  "is_optional": 1,
                                  "label": "Representative’s Telephone Number",
                                  "name": "rep_telephone",
                                  "type": "tel"
                                },
                                {
                                  "description": "Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/) for more information about this field’s options.",
                                  "label": "Business Category",
                                  "name": "business_category",
                                  "options": [
                                    [
                                      "b",
                                      "Incorporated Business (“Private Organization”)"
                                    ],
                                    [
                                      "d",
                                      "Non-incorporated Business (“Business Entity”)"
                                    ],
                                    [
                                      "c",
                                      "Government Entity (“Government Entity”)"
                                    ]
                                  ],
                                  "type": "choose_one"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "City Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_locality_name"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "State or Province Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_state_or_province_name"
                                },
                                {
                                  "label": "Country Code Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_country_name",
                                  "type": "country_code"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Date of Incorporation",
                                  "name": "date_of_incorporation",
                                  "type": "date"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Assumed Name (DBA (Doing Business As))",
                                  "name": "assumed_name"
                                }
                              ],
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "checkout",
                              "x_price_per_domain": 216,
                              "x_price_per_domain_maximum": 2160,
                              "x_price_per_domain_minimum": 216,
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "ev",
                              "x_warn_after": 604800
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "An organization-validated (OV) SSL certificate signed by COMODO.",
                              "display_name": "Comodo OV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "Comodo OV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "217",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "1",
                                "year"
                              ],
                              "x_identity_verification": [
                                {
                                  "label": "Organization Name",
                                  "name": "organizationName"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Department Name",
                                  "name": "organizationalUnitName"
                                },
                                {
                                  "description": "9 consecutive digits or “##-###-####” (More information (https://go.cpanel.net/get_duns))",
                                  "is_optional": 1,
                                  "label": "Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number",
                                  "name": "duns_number",
                                  "pattern": "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                                },
                                {
                                  "label": "Street Address",
                                  "name": "streetAddress"
                                },
                                {
                                  "label": "City",
                                  "name": "localityName"
                                },
                                {
                                  "label": "State or Province",
                                  "name": "stateOrProvinceName"
                                },
                                {
                                  "label": "Postal Code",
                                  "name": "postalCode"
                                },
                                {
                                  "label": "Country Code",
                                  "name": "countryName",
                                  "type": "country_code"
                                },
                                {
                                  "label": "Representative’s Given (First) Name",
                                  "name": "rep_forename"
                                },
                                {
                                  "label": "Representative’s Surname (Last Name)",
                                  "name": "rep_surname"
                                },
                                {
                                  "label": "Representative’s Email Address",
                                  "name": "rep_email_address",
                                  "type": "email"
                                },
                                {
                                  "description": "This should be one of the organization’s publicly-listed telephone numbers.",
                                  "is_optional": 1,
                                  "label": "Representative’s Telephone Number",
                                  "name": "rep_telephone",
                                  "type": "tel"
                                }
                              ],
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "checkout",
                              "x_price_per_domain": 36,
                              "x_price_per_domain_maximum": 360,
                              "x_price_per_domain_minimum": 36,
                              "x_price_per_wildcard_domain": "150.00",
                              "x_price_per_wildcard_domain_maximum": "1500.00",
                              "x_price_per_wildcard_domain_minimum": "150.00",
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "ov",
                              "x_warn_after": 604800,
                              "x_wildcard_parent_domain_free": 1
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "A 2-year organization-validated (OV) SSL certificate signed by Comodo.",
                              "display_name": "2-Year Comodo OV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "Comodo OV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "253",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "2",
                                "year"
                              ],
                              "x_identity_verification": [
                                {
                                  "label": "Organization Name",
                                  "name": "organizationName"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Department Name",
                                  "name": "organizationalUnitName"
                                },
                                {
                                  "description": "9 consecutive digits or “##-###-####” (More information (https://go.cpanel.net/get_duns))",
                                  "is_optional": 1,
                                  "label": "Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number",
                                  "name": "duns_number",
                                  "pattern": "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                                },
                                {
                                  "label": "Street Address",
                                  "name": "streetAddress"
                                },
                                {
                                  "label": "City",
                                  "name": "localityName"
                                },
                                {
                                  "label": "State or Province",
                                  "name": "stateOrProvinceName"
                                },
                                {
                                  "label": "Postal Code",
                                  "name": "postalCode"
                                },
                                {
                                  "label": "Country Code",
                                  "name": "countryName",
                                  "type": "country_code"
                                },
                                {
                                  "label": "Representative’s Given (First) Name",
                                  "name": "rep_forename"
                                },
                                {
                                  "label": "Representative’s Surname (Last Name)",
                                  "name": "rep_surname"
                                },
                                {
                                  "label": "Representative’s Email Address",
                                  "name": "rep_email_address",
                                  "type": "email"
                                },
                                {
                                  "description": "This should be one of the organization’s publicly-listed telephone numbers.",
                                  "is_optional": 1,
                                  "label": "Representative’s Telephone Number",
                                  "name": "rep_telephone",
                                  "type": "tel"
                                }
                              ],
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "checkout",
                              "x_price_per_domain": 72,
                              "x_price_per_domain_maximum": 720,
                              "x_price_per_domain_minimum": 72,
                              "x_price_per_wildcard_domain": "300.00",
                              "x_price_per_wildcard_domain_maximum": "3000.00",
                              "x_price_per_wildcard_domain_minimum": "300.00",
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "ov",
                              "x_warn_after": 604800,
                              "x_wildcard_parent_domain_free": 1
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "A domain-validated (DV) SSL certificate signed by cPanel.",
                              "display_name": "cPanel DV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "cPanel DV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "159",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "1",
                                "year"
                              ],
                              "x_identity_verification": null,
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "issuance",
                              "x_price_per_domain": 9,
                              "x_price_per_domain_maximum": 30,
                              "x_price_per_domain_minimum": 3,
                              "x_price_per_wildcard_domain": "75.00",
                              "x_price_per_wildcard_domain_maximum": "750.00",
                              "x_price_per_wildcard_domain_minimum": "75.00",
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "dv",
                              "x_warn_after": 604800,
                              "x_wildcard_parent_domain_free": 1
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "A 2-year domain-validated (DV) SSL certificate signed by cPanel.",
                              "display_name": "2-Year cPanel DV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "cPanel DV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "225",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "2",
                                "year"
                              ],
                              "x_identity_verification": null,
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "issuance",
                              "x_price_per_domain": 18,
                              "x_price_per_domain_maximum": 60,
                              "x_price_per_domain_minimum": 6,
                              "x_price_per_wildcard_domain": "150.00",
                              "x_price_per_wildcard_domain_maximum": "1500.00",
                              "x_price_per_wildcard_domain_minimum": "150.00",
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "dv",
                              "x_warn_after": 604800,
                              "x_wildcard_parent_domain_free": 1
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "An organization-validated (OV) SSL certificate signed by cPanel.",
                              "display_name": "cPanel OV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "cPanel OV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "213",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "1",
                                "year"
                              ],
                              "x_identity_verification": [
                                {
                                  "label": "Organization Name",
                                  "name": "organizationName"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Department Name",
                                  "name": "organizationalUnitName"
                                },
                                {
                                  "description": "9 consecutive digits or “##-###-####” (More information (https://go.cpanel.net/get_duns))",
                                  "is_optional": 1,
                                  "label": "Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number",
                                  "name": "duns_number",
                                  "pattern": "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                                },
                                {
                                  "label": "Street Address",
                                  "name": "streetAddress"
                                },
                                {
                                  "label": "City",
                                  "name": "localityName"
                                },
                                {
                                  "label": "State or Province",
                                  "name": "stateOrProvinceName"
                                },
                                {
                                  "label": "Postal Code",
                                  "name": "postalCode"
                                },
                                {
                                  "label": "Country Code",
                                  "name": "countryName",
                                  "type": "country_code"
                                },
                                {
                                  "label": "Representative’s Given (First) Name",
                                  "name": "rep_forename"
                                },
                                {
                                  "label": "Representative’s Surname (Last Name)",
                                  "name": "rep_surname"
                                },
                                {
                                  "label": "Representative’s Email Address",
                                  "name": "rep_email_address",
                                  "type": "email"
                                },
                                {
                                  "description": "This should be one of the organization’s publicly-listed telephone numbers.",
                                  "is_optional": 1,
                                  "label": "Representative’s Telephone Number",
                                  "name": "rep_telephone",
                                  "type": "tel"
                                }
                              ],
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "checkout",
                              "x_price_per_domain": 30,
                              "x_price_per_domain_maximum": 300,
                              "x_price_per_domain_minimum": 30,
                              "x_price_per_wildcard_domain": "99.00",
                              "x_price_per_wildcard_domain_maximum": "990.00",
                              "x_price_per_wildcard_domain_minimum": "99.00",
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "ov",
                              "x_warn_after": 604800,
                              "x_wildcard_parent_domain_free": 1
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "A 2-year organization-validated (OV) SSL certificate signed by cPanel.",
                              "display_name": "2-Year cPanel OV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "cPanel OV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "233",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "2",
                                "year"
                              ],
                              "x_identity_verification": [
                                {
                                  "label": "Organization Name",
                                  "name": "organizationName"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Department Name",
                                  "name": "organizationalUnitName"
                                },
                                {
                                  "description": "9 consecutive digits or “##-###-####” (More information (https://go.cpanel.net/get_duns))",
                                  "is_optional": 1,
                                  "label": "Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number",
                                  "name": "duns_number",
                                  "pattern": "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                                },
                                {
                                  "label": "Street Address",
                                  "name": "streetAddress"
                                },
                                {
                                  "label": "City",
                                  "name": "localityName"
                                },
                                {
                                  "label": "State or Province",
                                  "name": "stateOrProvinceName"
                                },
                                {
                                  "label": "Postal Code",
                                  "name": "postalCode"
                                },
                                {
                                  "label": "Country Code",
                                  "name": "countryName",
                                  "type": "country_code"
                                },
                                {
                                  "label": "Representative’s Given (First) Name",
                                  "name": "rep_forename"
                                },
                                {
                                  "label": "Representative’s Surname (Last Name)",
                                  "name": "rep_surname"
                                },
                                {
                                  "label": "Representative’s Email Address",
                                  "name": "rep_email_address",
                                  "type": "email"
                                },
                                {
                                  "description": "This should be one of the organization’s publicly-listed telephone numbers.",
                                  "is_optional": 1,
                                  "label": "Representative’s Telephone Number",
                                  "name": "rep_telephone",
                                  "type": "tel"
                                }
                              ],
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "checkout",
                              "x_price_per_domain": 60,
                              "x_price_per_domain_maximum": 600,
                              "x_price_per_domain_minimum": 60,
                              "x_price_per_wildcard_domain": "198.00",
                              "x_price_per_wildcard_domain_maximum": "1980.00",
                              "x_price_per_wildcard_domain_minimum": "198.00",
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "ov",
                              "x_warn_after": 604800,
                              "x_wildcard_parent_domain_free": 1
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "A domain-validated (DV) SSL certificate signed by COMODO.",
                              "display_name": "Comodo DV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "Comodo DV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "151",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "1",
                                "year"
                              ],
                              "x_identity_verification": null,
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "issuance",
                              "x_price_per_domain": 12,
                              "x_price_per_domain_maximum": 120,
                              "x_price_per_domain_minimum": 12,
                              "x_price_per_wildcard_domain": "99.00",
                              "x_price_per_wildcard_domain_maximum": "990.00",
                              "x_price_per_wildcard_domain_minimum": "99.00",
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "dv",
                              "x_warn_after": 604800,
                              "x_wildcard_parent_domain_free": 1
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "A 2-year domain-validated (DV) SSL certificate signed by Comodo.",
                              "display_name": "2-Year Comodo DV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "Comodo DV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "245",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "2",
                                "year"
                              ],
                              "x_identity_verification": null,
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "issuance",
                              "x_price_per_domain": 24,
                              "x_price_per_domain_maximum": 240,
                              "x_price_per_domain_minimum": 24,
                              "x_price_per_wildcard_domain": "198.00",
                              "x_price_per_wildcard_domain_maximum": "1980.00",
                              "x_price_per_wildcard_domain_minimum": "198.00",
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "dv",
                              "x_warn_after": 604800,
                              "x_wildcard_parent_domain_free": 1
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "An extended-validated (EV) SSL certificate signed by cPanel.",
                              "display_name": "cPanel EV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "cPanel EV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "209",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "1",
                                "year"
                              ],
                              "x_identity_verification": [
                                {
                                  "label": "Organization Name",
                                  "name": "organizationName"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Department Name",
                                  "name": "organizationalUnitName"
                                },
                                {
                                  "description": "9 consecutive digits or “##-###-####” (More information (https://go.cpanel.net/get_duns))",
                                  "is_optional": 1,
                                  "label": "Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number",
                                  "name": "duns_number",
                                  "pattern": "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                                },
                                {
                                  "label": "Street Address",
                                  "name": "streetAddress"
                                },
                                {
                                  "label": "City",
                                  "name": "localityName"
                                },
                                {
                                  "label": "State or Province",
                                  "name": "stateOrProvinceName"
                                },
                                {
                                  "label": "Postal Code",
                                  "name": "postalCode"
                                },
                                {
                                  "label": "Country Code",
                                  "name": "countryName",
                                  "type": "country_code"
                                },
                                {
                                  "label": "Representative’s Given (First) Name",
                                  "name": "rep_forename"
                                },
                                {
                                  "label": "Representative’s Surname (Last Name)",
                                  "name": "rep_surname"
                                },
                                {
                                  "label": "Representative’s Email Address",
                                  "name": "rep_email_address",
                                  "type": "email"
                                },
                                {
                                  "description": "This should be one of the organization’s publicly-listed telephone numbers.",
                                  "is_optional": 1,
                                  "label": "Representative’s Telephone Number",
                                  "name": "rep_telephone",
                                  "type": "tel"
                                },
                                {
                                  "description": "Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/) for more information about this field’s options.",
                                  "label": "Business Category",
                                  "name": "business_category",
                                  "options": [
                                    [
                                      "b",
                                      "Incorporated Business (“Private Organization”)"
                                    ],
                                    [
                                      "d",
                                      "Non-incorporated Business (“Business Entity”)"
                                    ],
                                    [
                                      "c",
                                      "Government Entity (“Government Entity”)"
                                    ]
                                  ],
                                  "type": "choose_one"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "City Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_locality_name"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "State or Province Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_state_or_province_name"
                                },
                                {
                                  "label": "Country Code Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_country_name",
                                  "type": "country_code"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Date of Incorporation",
                                  "name": "date_of_incorporation",
                                  "type": "date"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Assumed Name (DBA (Doing Business As))",
                                  "name": "assumed_name"
                                }
                              ],
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "checkout",
                              "x_price_per_domain": 60,
                              "x_price_per_domain_maximum": 600,
                              "x_price_per_domain_minimum": 60,
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "ev",
                              "x_warn_after": 604800
                            },
                            {
                              "base_name": "",
                              "billing_type": "one-time",
                              "description": "A 2-year extended-validated (EV) SSL certificate signed by cPanel.",
                              "display_name": "2-Year cPanel EV SSL Certificate",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=",
                              "icon_mime_type": "image/svg+xml",
                              "license_term": "0",
                              "max_users": null,
                              "maximum_server_price": null,
                              "minimum_server_price": null,
                              "price": null,
                              "price_unit": "USD",
                              "product": "cPanel EV Certificate",
                              "product_category": "N/A",
                              "product_group": "ssl_certificate",
                              "product_id": "241",
                              "provider_display_name": "cPanel Store",
                              "provider_name": "cPStore",
                              "requires_ip": "0",
                              "x_certificate_term": [
                                "2",
                                "year"
                              ],
                              "x_identity_verification": [
                                {
                                  "label": "Organization Name",
                                  "name": "organizationName"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Department Name",
                                  "name": "organizationalUnitName"
                                },
                                {
                                  "description": "9 consecutive digits or “##-###-####” (More information (https://go.cpanel.net/get_duns))",
                                  "is_optional": 1,
                                  "label": "Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number",
                                  "name": "duns_number",
                                  "pattern": "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                                },
                                {
                                  "label": "Street Address",
                                  "name": "streetAddress"
                                },
                                {
                                  "label": "City",
                                  "name": "localityName"
                                },
                                {
                                  "label": "State or Province",
                                  "name": "stateOrProvinceName"
                                },
                                {
                                  "label": "Postal Code",
                                  "name": "postalCode"
                                },
                                {
                                  "label": "Country Code",
                                  "name": "countryName",
                                  "type": "country_code"
                                },
                                {
                                  "label": "Representative’s Given (First) Name",
                                  "name": "rep_forename"
                                },
                                {
                                  "label": "Representative’s Surname (Last Name)",
                                  "name": "rep_surname"
                                },
                                {
                                  "label": "Representative’s Email Address",
                                  "name": "rep_email_address",
                                  "type": "email"
                                },
                                {
                                  "description": "This should be one of the organization’s publicly-listed telephone numbers.",
                                  "is_optional": 1,
                                  "label": "Representative’s Telephone Number",
                                  "name": "rep_telephone",
                                  "type": "tel"
                                },
                                {
                                  "description": "Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/) for more information about this field’s options.",
                                  "label": "Business Category",
                                  "name": "business_category",
                                  "options": [
                                    [
                                      "b",
                                      "Incorporated Business (“Private Organization”)"
                                    ],
                                    [
                                      "d",
                                      "Non-incorporated Business (“Business Entity”)"
                                    ],
                                    [
                                      "c",
                                      "Government Entity (“Government Entity”)"
                                    ]
                                  ],
                                  "type": "choose_one"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "City Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_locality_name"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "State or Province Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_state_or_province_name"
                                },
                                {
                                  "label": "Country Code Where Incorporated (JOI (Jurisdiction of Incorporation))",
                                  "name": "joi_country_name",
                                  "type": "country_code"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Date of Incorporation",
                                  "name": "date_of_incorporation",
                                  "type": "date"
                                },
                                {
                                  "is_optional": 1,
                                  "label": "Assumed Name (DBA (Doing Business As))",
                                  "name": "assumed_name"
                                }
                              ],
                              "x_max_http_redirects": 0,
                              "x_payment_trigger": "checkout",
                              "x_price_per_domain": 120,
                              "x_price_per_domain_maximum": 1200,
                              "x_price_per_domain_minimum": 120,
                              "x_ssl_per_domain_pricing": 1,
                              "x_supports_dns_dcv": 1,
                              "x_validation_type": "ev",
                              "x_warn_after": 604800
                            }
                          ],
                          "items": {
                            "$ref": "#/components/schemas/MarketItemType"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_market_providers_products",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`.\nThis field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Market providers products",
        "tags": [
          "Market",
          "Product Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_market_providers_products"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_market_providers_products?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/get_maximum_users": {
      "get": {
        "description": "This function returns the maximum number of cPanel accounts that the server's license allows.",
        "operationId": "get_maximum_users",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "users": {
                          "description": "The maximum number of cPanel accounts that the server's license allows.\n* `0` - Unlimited",
                          "example": 100,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_maximum_users",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return maximum accounts for license",
        "tags": [
          "Accounts",
          "Account Creation"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_maximum_users"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_maximum_users?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/get_nameserver_config": {
      "get": {
        "description": "This function retrieves the default nameservers for the currently-authenticated user.",
        "operationId": "get_nameserver_config",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "nameservers": {
                          "description": "The currently-authenticated user's nameservers.",
                          "example": [
                            "ns1.example.com",
                            "ns2.example.com"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_nameserver_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return current user's nameservers",
        "tags": [
          "DNS",
          "Resolvers"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_nameserver_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_nameserver_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/get_password_strength": {
      "get": {
        "description": "This function measures the strength of a password.",
        "operationId": "get_password_strength",
        "parameters": [
          {
            "description": "The password.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "12345luggage",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "strength": {
                          "description": "The password's strength.",
                          "example": 21,
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_password_strength",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return password strength",
        "tags": [
          "Server Administration",
          "Passwords"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_password_strength password='12345luggage'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_password_strength?api.version=1&password=12345luggage"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/get_pkgacct_session_state": {
      "get": {
        "description": "This function returns the state of a `start_background_pkgacct` session.",
        "operationId": "get_pkgacct_session_state",
        "parameters": [
          {
            "description": "The `start_background_pkgacct` session ID.",
            "in": "query",
            "name": "session_id",
            "required": true,
            "schema": {
              "example": "username20200323154328kDJ2Kx4xua2KtG",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "state": {
                          "description": "The `start_background_pkgacct` session's state.\n* `COMPLETED`\n* `FAILED`\n* `RUNNING`",
                          "enum": [
                            "COMPLETED",
                            "FAILED",
                            "RUNNING"
                          ],
                          "example": "COMPLETED",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_pkgacct_session_state",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return start_background_pkgacct session state",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_pkgacct_session_state session_id='username20200323154328kDJ2Kx4xua2KtG'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_pkgacct_session_state?api.version=1&session_id=username20200323154328kDJ2Kx4xua2KtG"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "88"
      }
    },
    "/get_provider_client_configurations": {
      "get": {
        "description": "This function retrieves the configuration details for the client of an external authentication identity provider.",
        "operationId": "get_provider_client_configurations",
        "parameters": [
          {
            "description": "The identity provider's key.",
            "in": "query",
            "name": "provider_id",
            "required": true,
            "schema": {
              "example": "cpanelid",
              "type": "string"
            }
          },
          {
            "description": "The cPanel & WHM service's name.\n* `cpaneld` — The cPanel daemon.\n* `whostmgrd` — The WHM daemon.\n* `webmaild` — The Webmail daemon.",
            "in": "query",
            "name": "service_name",
            "required": true,
            "schema": {
              "enum": [
                "cpaneld",
                "whostmgrd",
                "webmaild"
              ],
              "example": "cpaneld",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "client_configurations": {
                          "description": "An object that contains the client configuration information.",
                          "properties": {
                            "client_id": {
                              "description": "The client ID for the identity provider.",
                              "example": "1234567890",
                              "type": "string"
                            },
                            "client_secret": {
                              "description": "The secret for the client ID.",
                              "example": "victoria",
                              "type": "string"
                            },
                            "redirect_uris": {
                              "description": "The redirection URIs for each interface that the identity provider uses.",
                              "example": [
                                "https://hostname.example.com:2083/openid_connect_callback/cpanelid",
                                "https://hostname.example.com:2087/openid_connect_callback/cpanelid",
                                "https://hostname.example.com:2096/openid_connect_callback/cpanelid"
                              ],
                              "items": {
                                "format": "url",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_provider_client_configurations",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return identity provider client configuration",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_provider_client_configurations service_name='cpaneld' provider_id='cpanelid'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_provider_client_configurations?api.version=1&service_name=cpaneld&provider_id=cpanelid"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/get_provider_configuration_fields": {
      "get": {
        "description": "This function retrieves the configuration fields for a external authentication identity provider.",
        "operationId": "get_provider_configuration_fields",
        "parameters": [
          {
            "description": "The identity provider's key.",
            "in": "query",
            "name": "provider_id",
            "required": true,
            "schema": {
              "example": "cpanelid",
              "type": "string"
            }
          },
          {
            "description": "The cPanel & WHM service's name.\n\n* `cpaneld`\n* `whostmgrd`\n* `webmaild`",
            "in": "query",
            "name": "service_name",
            "required": true,
            "schema": {
              "enum": [
                "cpaneld",
                "whostmgrd",
                "webmaild"
              ],
              "example": "cpaneld",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "configuration_fields": {
                          "description": "An array of objects containing the configuration information for each field.",
                          "example": [
                            {
                              "description": "The Secret of the Client",
                              "display_order": 1,
                              "field_id": "client_secret",
                              "label": "Client Secret",
                              "value": null
                            },
                            {
                              "description": "The ID of the Client.",
                              "display_order": 0,
                              "field_id": "client_id",
                              "label": "Client ID",
                              "value": null
                            }
                          ],
                          "items": {
                            "properties": {
                              "description": {
                                "description": "The description of the configuration field.",
                                "type": "string"
                              },
                              "display_order": {
                                "description": "The display order of the configuration field.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "field_id": {
                                "description": "The name of the configuration field.",
                                "type": "string"
                              },
                              "label": {
                                "description": "The label of the configuration field.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of the configuration field, if available.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_provider_configuration_fields",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return identity provider configuration fields",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_provider_configuration_fields service_name='cpaneld' provider_id='cpanelid'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_provider_configuration_fields?api.version=1&service_name=cpaneld&provider_id=cpanelid"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/get_provider_display_configurations": {
      "get": {
        "description": "This function retrieves the display configuration for the login button of an external authentication identity provider.",
        "operationId": "get_provider_display_configurations",
        "parameters": [
          {
            "description": "The identity provider's key.",
            "in": "query",
            "name": "provider_id",
            "required": true,
            "schema": {
              "example": "google",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "configurations": {
                          "description": "An array of objects containing information about each service's external authentication display information.",
                          "example": [
                            {
                              "color": "dd4b39",
                              "display_name": "Google",
                              "documentation_url": "https://developers.google.com/identity/protocols/OpenIDConnect",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMiIgaGVpZ2h0PSIxNCIgdmlld0JveD0iMCAwIDIyIDE0Ij48ZyBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPjxwYXRoIGQ9Ik03IDZ2Mi40aDMuOTdjLS4xNiAxLjAzLTEuMiAzLjAyLTMuOTcgMy4wMi0yLjM5IDAtNC4zNC0xLjk4LTQuMzQtNC40MlM0LjYxIDIuNTggNyAyLjU4YzEuMzYgMCAyLjI3LjU4IDIuNzkgMS4wOGwxLjktMS44M0MxMC40Ny42OSA4Ljg5IDAgNyAwIDMuMTMgMCAwIDMuMTMgMCA3czMuMTMgNyA3IDdjNC4wNCAwIDYuNzItMi44NCA2LjcyLTYuODQgMC0uNDYtLjA1LS44MS0uMTEtMS4xNkg3ek0yMiA2aC0yVjRoLTJ2MmgtMnYyaDJ2MmgyVjhoMiIvPjwvZz48L3N2Zz4=",
                              "icon_type": "image/svg+xml",
                              "label": "Log in via Google",
                              "link": "/openid_connect/google",
                              "provider_name": "google",
                              "service": "cpaneld",
                              "textcolor": "FFFFFF"
                            },
                            {
                              "color": "dd4b39",
                              "display_name": "Google",
                              "documentation_url": "https://developers.google.com/identity/protocols/OpenIDConnect",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMiIgaGVpZ2h0PSIxNCIgdmlld0JveD0iMCAwIDIyIDE0Ij48ZyBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPjxwYXRoIGQ9Ik03IDZ2Mi40aDMuOTdjLS4xNiAxLjAzLTEuMiAzLjAyLTMuOTcgMy4wMi0yLjM5IDAtNC4zNC0xLjk4LTQuMzQtNC40MlM0LjYxIDIuNTggNyAyLjU4YzEuMzYgMCAyLjI3LjU4IDIuNzkgMS4wOGwxLjktMS44M0MxMC40Ny42OSA4Ljg5IDAgNyAwIDMuMTMgMCAwIDMuMTMgMCA3czMuMTMgNyA3IDdjNC4wNCAwIDYuNzItMi44NCA2LjcyLTYuODQgMC0uNDYtLjA1LS44MS0uMTEtMS4xNkg3ek0yMiA2aC0yVjRoLTJ2MmgtMnYyaDJ2MmgyVjhoMiIvPjwvZz48L3N2Zz4=",
                              "icon_type": "image/svg+xml",
                              "label": "Log in via Google",
                              "link": "/openid_connect/google",
                              "provider_name": "google",
                              "service": "webmaild",
                              "textcolor": "FFFFFF"
                            },
                            {
                              "color": "dd4b39",
                              "display_name": "Google",
                              "documentation_url": "https://developers.google.com/identity/protocols/OpenIDConnect",
                              "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMiIgaGVpZ2h0PSIxNCIgdmlld0JveD0iMCAwIDIyIDE0Ij48ZyBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPjxwYXRoIGQ9Ik03IDZ2Mi40aDMuOTdjLS4xNiAxLjAzLTEuMiAzLjAyLTMuOTcgMy4wMi0yLjM5IDAtNC4zNC0xLjk4LTQuMzQtNC40MlM0LjYxIDIuNTggNyAyLjU4YzEuMzYgMCAyLjI3LjU4IDIuNzkgMS4wOGwxLjktMS44M0MxMC40Ny42OSA4Ljg5IDAgNyAwIDMuMTMgMCAwIDMuMTMgMCA3czMuMTMgNyA3IDdjNC4wNCAwIDYuNzItMi44NCA2LjcyLTYuODQgMC0uNDYtLjA1LS44MS0uMTEtMS4xNkg3ek0yMiA2aC0yVjRoLTJ2MmgtMnYyaDJ2MmgyVjhoMiIvPjwvZz48L3N2Zz4=",
                              "icon_type": "image/svg+xml",
                              "label": "Log in via Google",
                              "link": "/openid_connect/google",
                              "provider_name": "google",
                              "service": "whostmgrd",
                              "textcolor": "FFFFFF"
                            }
                          ],
                          "items": {
                            "properties": {
                              "color": {
                                "description": "The background color of the button in the cPanel interface.",
                                "format": "RGB",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "The display name of the identity provider.",
                                "type": "string"
                              },
                              "documentation_url": {
                                "description": "The URL to the identity provider's documentation.",
                                "format": "url",
                                "type": "string"
                              },
                              "icon": {
                                "description": "The icon file in the button that the cPanel login interface displays.",
                                "format": "byte",
                                "type": "string"
                              },
                              "icon_type": {
                                "description": "The icon file's MIME type.",
                                "type": "string"
                              },
                              "label": {
                                "description": "The text label in the button that the cPanel login interface displays.",
                                "type": "string"
                              },
                              "link": {
                                "description": "A reference URL to the identity provider's configuration for the system.",
                                "type": "string"
                              },
                              "provider_name": {
                                "description": "The name of the identity provider.",
                                "type": "string"
                              },
                              "service": {
                                "description": "The service's name.\n\n* `cpaneld`\n* `whostmgrd`\n* `webmaild`",
                                "enum": [
                                  "cpaneld",
                                  "whostmgrd",
                                  "webmaild"
                                ],
                                "type": "string"
                              },
                              "textcolor": {
                                "description": "The color of the text label in the button that the cPanel login interface displays.",
                                "format": "RGB",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_provider_display_configurations",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return identity provider login interface appearance",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_provider_display_configurations provider_id='google'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_provider_display_configurations?api.version=1&provider_id=google"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58.0.12"
      }
    },
    "/get_public_contact": {
      "get": {
        "description": "This function retrieves an account's [public contact information](https://docs.cpanel.net/whm/cpanel/customization/#public-contact).",
        "operationId": "get_public_contact",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "name": {
                          "description": "The public contact name of the reseller.",
                          "example": "Bob's Hosting",
                          "type": "string"
                        },
                        "url": {
                          "description": "The public contact URL.",
                          "example": "https://bobshosting.net",
                          "format": "url",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_public_contact",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return current user's public contact information",
        "tags": [
          "Resellers",
          "Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_public_contact"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_public_contact?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/get_public_ip": {
      "get": {
        "description": "This function returns the public IP address for a specified public or private IP address. You can use this function to determine the system's main public IP address, especially for [systems that use a 1:1 NAT configuration](https://go.cpanel.net/11NAT).\n* cPanel & WHM uses the main public IP address to perform many different functions. For example, the system uses this IP address to verify the server's license status with cPanel, L.L.C.\n* System administrators can configure the main public IP address in WHM's [Basic WebHost Manager Setup](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) interface (_Home >> Server Configuration >> Basic WebHost Manager Setup_).",
        "operationId": "get_public_ip",
        "parameters": [
          {
            "description": "A valid public or private IP address to query.",
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "example": "192.0.2.0",
              "format": "ipv4",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "public_ip": {
                          "description": "The public IP address.",
                          "example": "192.0.2.0",
                          "format": "ipv4",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_public_ip",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return public IP address of private IP address",
        "tags": [
          "IP Addresses",
          "Network Address Translation"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_public_ip ip='192.0.2.0'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_public_ip?api.version=1&ip=192.0.2.0"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/get_remote_access_hash": {
      "get": {
        "deprecated": true,
        "description": "This function retrieves a hash from a remote access file.\n\n**Warning:**\n\nWe deprecated this function. We **strongly** suggest that you use the WHM API 1 `api_token_list` function.",
        "operationId": "get_remote_access_hash",
        "parameters": [
          {
            "description": "The server's hostname.",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "example": "hostname.example.com",
              "type": "string"
            }
          },
          {
            "description": "The user's password.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "The user's username.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "user",
              "type": "string"
            }
          },
          {
            "description": "Whether to generate a new hash for the user, if one does not exist.\n\n* `1` — Generate a new hash.\n* `0` — Do **not** generate a new hash.",
            "in": "query",
            "name": "generate",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "accesshash": {
                          "description": "The account's remote access hash.",
                          "example": "6b355856c00606648b803a7d896186632472d584eaf0dad878b8885e1f64edad24b31ff79f2675303a598ac211ad5188c589fb60c5786a3e8d85c2029ca4ea76edb62becff7e3f7c5421f51bb4896737c22eda761e2a6fd96404bf513ee9051480ea86c800ab9b45f5255590836c7b769816a8f7f5def1e0c6cb19c212f01f56bb3392854ce51178a943eab6d1ce5d44857e980f70724f50964d2fbe01cb076a119dc5bf421051c2a0882550cdc69872832167c91e11bbe5c95d98474096ebe14b6ca9da2d73faecea5ec37f208912f5da578d5f8ab7c257584002e1808614f9859dceae564e8f30a9790c232d005ebd44f912e20b72e731fc600156e5b9f2902b0dd913010022e6b0deb6a2fb0d38ff3fd005c53f321ec812d3be10643dce81c46e1b9e2abe8814d46ba49b8a173b3e01ec677ea182cabb55db6d9eab2240755be1bbb1d7094a155fd262934ec099fdba3b10f409dced62d3d570ab6478a269a95da1314a45a5916da07312bf7e5a53d57b090e9c24932776f7ffdcf90ba2fa5cd935995795348b67311185f54da6b90da8771585e78c5f587e427bead9198faaa631b8216099c25373c8d4c26a011f295188963840777d09d95b6385df8337098b7e231534323457b9388fe9ea8046",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_remote_access_hash",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return remote access file's hash",
        "tags": [
          "Server Administration",
          "API Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_remote_access_hash username='user' password='123456luggage' host='hostname.example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_remote_access_hash?api.version=1&username=user&password=123456luggage&host=hostname.example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/get_rpm_version_data": {
      "get": {
        "description": "This function lists a key's available RPMs. For more information, read our\n[rpm.versions system](https://go.cpanel.net/rpm-versions)\ndocumentation.",
        "operationId": "get_rpm_version_data",
        "parameters": [
          {
            "description": "The RPM's section.",
            "in": "query",
            "name": "section",
            "required": true,
            "schema": {
              "example": "rpm_groups",
              "type": "string"
            }
          },
          {
            "description": "The RPM's key. If you do **not** specify a value, the function returns all RPM categories.",
            "in": "query",
            "name": "key",
            "required": false,
            "schema": {
              "example": "3rdparty",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "The RPM section and its associated RPMs.\n\n**Note:**\n\n* This function uses the RPM section's name and RPM key's name for each return value.\n* If you specify the `key` parameter, this function returns **only** the called RPM key.\n* If you do **not** specify the `key` parameter, the function returns **all** RPM keys\nin the called `section` parameter. ",
                      "oneOf": [
                        {
                          "additionalProperties": {
                            "description": "A list of all available RPMs. The system uses the RPM key's name as the return name.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "example": {
                            "3rdparty": [
                              "cpanel-pcre",
                              "cpanel-pixman",
                              "cpanel-analog"
                            ]
                          }
                        },
                        {
                          "additionalProperties": {
                            "additionalProperties": {
                              "description": "A list of all available RPMs. The system uses the RPM key's name as the return name.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "description": "A list containing the RPM section's RPM information. The system uses the RPM section name as the return name.",
                            "type": "object"
                          },
                          "example": {
                            "rpm_groups": {
                              "3rdparty": [
                                "cpanel-pcre",
                                "cpanel-pixman",
                                "cpanel-analog"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_rpm_version_data",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return available RPM packages",
        "tags": [
          "RPM",
          "List Package Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_rpm_version_data section='rpm_groups'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_rpm_version_data?api.version=1&section=rpm_groups"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/get_server_node_status": {
      "get": {
        "description": "This function returns the status of a linked remote server node. It returns the linked remote server's status with the WHM API 1 `version` and `get_current_profile` functions.\n\n**Important:**\nThis function **requires** that the remote server node uses cPanel & WHM version 76 or later.",
        "operationId": "get_server_node_status",
        "parameters": [
          {
            "description": "The required API token to make API calls to the remote server node.\n\n**Note:**\n\n The API token **must** have `root`-level access on the remote server node.",
            "in": "query",
            "name": "api_token",
            "required": true,
            "schema": {
              "example": "23ZX8RA1FTE1IVJRL90MB5CREDS4UE2H",
              "type": "string"
            }
          },
          {
            "description": "The remote server node's hostname or IP address.\n\n**Note:**\n\nIf you use an IP address, you **must** use the `skip_tls_verification=1` parameter.",
            "in": "query",
            "name": "hostname",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The username required to make API calls to the remote server node.\n\n**Note:**\n\nThe username **must** have `root`-level access on the remote server node.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "root",
              "type": "string"
            }
          },
          {
            "description": "Whether to skip [SSL/TLS verification](https://go.cpanel.net/guidetoSSL). The system performs this action when it queries the remote server node.\n\n* `1` - Skip SSL/TLS verification.\n* `0` - Do **not** skip SSL/TLS verification.",
            "in": "query",
            "name": "skip_tls_verification",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "enabled_services": {
                          "description": "An list of the remote server node's enabled services.",
                          "items": {
                            "example": "apache_php_fpm",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "remote_node_linkages": {
                          "description": "An array of objects of the remote server's [child nodes](https://go.cpanel.net/cPanelGlossary#child-node). This function returns this information via the `list_linked_server_nodes` function.\n\n**Note:**\n\nIf you call this function on a parent node for its child node, this function returns an empty object.",
                          "items": {
                            "example": {
                              "alias": "MailNode",
                              "enabled_services": [
                                "apache_php_fpm",
                                "cpanellogd",
                                "cpdavd",
                                "cpgreylistd",
                                "cphulkd",
                                "cpsrvd",
                                "crond",
                                "dnsadmin",
                                "exim",
                                "imap",
                                "ipaliases",
                                "lmtp",
                                "mailman",
                                "mysql",
                                "named",
                                "nscd",
                                "pop",
                                "queueprocd",
                                "rsyslogd",
                                "spamd",
                                "sshd",
                                "tailwatchd"
                              ],
                              "hostname": "mailnode.example.com",
                              "last_check": 1583934071,
                              "system_settings": {
                                "Mail": {
                                  "globalspamassassin": "1"
                                }
                              },
                              "tls_verified": 0,
                              "username": "root",
                              "version": "11.90.0.0",
                              "worker_capabilities": {
                                "Mail": {}
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "system_settings": {
                          "description": "An object containing the remote server's child node system settings.",
                          "example": {
                            "Mail": {
                              "globalspamassassin": 1
                            }
                          },
                          "type": "object"
                        },
                        "tls_verified": {
                          "description": "Whether the remote server node has a valid [SSL certificate](https://go.cpanel.net/guidetoSSL).\n* `1` - The remote server node has a valid SSL certificate.\n* `0` - The remote server node does **not** have a valid SSL certificate.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The installed version of cPanel & WHM on the remote server node.",
                          "example": "11.90.0.0",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_server_node_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return linked server node status",
        "tags": [
          "Server Administration",
          "Server Nodes"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_server_node_status api_token='23ZX8RA1FTE1IVJRL90MB5CREDS4UE2H' hostname='example.com' username='root'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_server_node_status?api.version=1&api_token=23ZX8RA1FTE1IVJRL90MB5CREDS4UE2H&hostname=example.com&username=root"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/get_service_config": {
      "get": {
        "description": "This function returns a service's configuration settings.",
        "operationId": "get_service_config",
        "parameters": [
          {
            "description": "The service's name.\n\n* `dovecot` — The Dovecot service.",
            "in": "query",
            "name": "service",
            "required": true,
            "schema": {
              "enum": [
                "dovecot"
              ],
              "example": "dovecot",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "object"
                          }
                        ],
                        "description": "A configuration key's setting.\n\n**Note:**\n\nThe key name is the return's name."
                      },
                      "description": "A list of the configuration key's settings.",
                      "example": {
                        "auth_cache_negative_ttl": 3600,
                        "auth_cache_size": "1M",
                        "auth_cache_ttl": 3600,
                        "auth_policy_hash_nonce": 91057590,
                        "compress_messages": 0,
                        "config_vsz_limit": 2048,
                        "disable_plaintext_auth": "no",
                        "expire_trash": 0,
                        "hulk_auth_passwd": "FAMONex4Bn9Hv1BO",
                        "include_trash_in_quota": 0,
                        "incoming_reached_quota": "bounce",
                        "ipv6": "on",
                        "lmtp_process_limit": 500,
                        "lmtp_process_min_avail": 0,
                        "lmtp_user_concurrency_limit": 4,
                        "login_max_processes_count": 50,
                        "login_process_per_connection": "no",
                        "login_process_size": 128,
                        "login_processes_count": 2,
                        "mail_process_size": 512,
                        "mdbox_rotate_interval": 0,
                        "mdbox_rotate_size": "10M",
                        "protocol_imap": {
                          "mail_max_userip_connections": 20,
                          "map_idle_notify_interval": 24
                        },
                        "protocol_pop3": {
                          "mail_max_userip_connections": 3
                        },
                        "protocols": "imap pop3",
                        "ssl_cipher_list": "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384",
                        "ssl_min_protocol": "TLSv1.2"
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_service_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return service configuration settings",
        "tags": [
          "Server Administration",
          "Services"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_service_config service='dovecot'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_service_config?api.version=1&service=dovecot"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_service_config_key": {
      "get": {
        "description": "This function returns a specific configuration key for a service.",
        "operationId": "get_service_config_key",
        "parameters": [
          {
            "description": "The configuration key's name.",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "mail_process_size",
              "type": "string"
            }
          },
          {
            "description": "The service's name.",
            "in": "query",
            "name": "service",
            "required": true,
            "schema": {
              "example": "dovecot",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "key name": {
                          "description": "configuration key's current setting.\n\n**Note:**\n\n This return's name is the value that you pass in this function's key parameter. A valid setting.",
                          "example": "512",
                          "type": "string"
                        },
                        "mail_process_size": {}
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_service_config_key",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return service configuration key",
        "tags": [
          "Server Administration",
          "Services"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_service_config_key service='dovecot' key='mail_process_size'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_service_config_key?api.version=1&service=dovecot&key=mail_process_size"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_shared_ip": {
      "get": {
        "description": "This function retrieves the IP address that an account shares with the accounts that it owns.",
        "operationId": "get_shared_ip",
        "parameters": [
          {
            "description": "The WHM user's username.\n\n**Note:**\n\nThis parameter defaults to the currently-authenticated user.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ip": {
                          "description": "The IP address that the WHM user shares.\n\n**Note:**\n\n If the user does **not** have a shared IP address, the function returns the tilde ( `~` ) character.",
                          "example": "192.168.0.1",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_shared_ip",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return shared IP address",
        "tags": [
          "IP Addresses",
          "IPv4 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_shared_ip"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_shared_ip?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/get_tcp4_sockets": {
      "get": {
        "description": "This function returns data about the system's transmission control protocol (TCP) IPv4 sockets.",
        "operationId": "get_tcp4_sockets",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contains the status of the system's TCP IPv4 sockets.",
                          "items": {
                            "properties": {
                              "dport": {
                                "description": "The source port that the Linux kernel reports for the socket.",
                                "example": 443,
                                "type": "integer"
                              },
                              "dst": {
                                "description": "The destination IPv4 address.",
                                "example": "10.0.0.2",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "inode": {
                                "description": "The inode number the Linux kernel assigned to the socket.",
                                "example": 27171,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "rqueue": {
                                "description": "The number of bytes in the socket's read buffer.",
                                "example": 0,
                                "format": "bytes",
                                "type": "integer"
                              },
                              "sport": {
                                "description": "The source port number.",
                                "example": 2087,
                                "type": "integer"
                              },
                              "src": {
                                "description": "The source IPv4 address.",
                                "example": "10.0.0.1",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "state": {
                                "description": "The socket's current state, in the Linux kernel's numeric format.",
                                "example": 10,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "uid": {
                                "description": "The socket's user ID (UID).",
                                "example": 102,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "wqueue": {
                                "description": "The number of bytes the system is waiting to send.",
                                "example": 45,
                                "format": "bytes",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_tcp4_sockets",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return TCP IPv4 sockets data",
        "tags": [
          "Server Administration",
          "Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_tcp4_sockets"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_tcp4_sockets?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "80"
      }
    },
    "/get_tcp6_sockets": {
      "get": {
        "description": "This function returns data about the system's transmission control protocol (TCP) IPv6 sockets.",
        "operationId": "get_tcp6_sockets",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contains the status of the system's TCP IPv6 sockets.",
                          "items": {
                            "properties": {
                              "dport": {
                                "description": "The source port that the Linux kernel reports for the socket.",
                                "example": 443,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "dst": {
                                "description": "The destination IPv6 address.",
                                "example": "2001:0db8:0:0:1:0:0:1",
                                "format": "bytes",
                                "type": "string"
                              },
                              "inode": {
                                "description": "The inode number the Linux kernel assigned to the socket.",
                                "example": 27171,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "rqueue": {
                                "description": "The number of bytes in the socket's read buffer.",
                                "example": 0,
                                "format": "bytes",
                                "type": "integer"
                              },
                              "sport": {
                                "description": "The source port number.",
                                "example": 2087,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "src": {
                                "description": "The source IPv6 address.",
                                "example": "2001:0db8:0:0:1:0:0:2",
                                "format": "ipv6",
                                "type": "string"
                              },
                              "state": {
                                "description": "The socket's current state, in the Linux kernel's numeric format.",
                                "example": 10,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "uid": {
                                "description": "The socket's user ID (UID).",
                                "example": 102,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "wqueue": {
                                "description": "The number of bytes that the system is waiting to send.",
                                "example": 45,
                                "format": "bytes",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_tcp6_sockets",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return TCP IPv6 sockets data",
        "tags": [
          "Server Administration",
          "Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_tcp6_sockets"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_tcp6_sockets?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "80"
      }
    },
    "/get_transfer_session_state": {
      "get": {
        "description": "This function retrieves the state of a transfer session.\n\n**Note:**\n\nFor more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.",
        "operationId": "get_transfer_session_state",
        "parameters": [
          {
            "description": "The transfer session's ID.",
            "in": "query",
            "name": "transfer_session_id",
            "required": true,
            "schema": {
              "example": "exampleservercopya20140206192428NtyW",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "state_name": {
                          "description": "The transfer session's state.\n* `TRANSFER_PENDING`\n* `TRANSFER_INPROGRESS`\n* `RESTORE_PENDING`\n* `RESTORE_INPROGRESS`\n* `RUNNING`\n* `PAUSED`\n* `PENDING`\n* `COMPLETED`\n* `ABORTED`\n* `FAILED`",
                          "enum": [
                            "TRANSFER_PENDING",
                            "TRANSFER_INPROGRESS",
                            "RESTORE_PENDING",
                            "RESTORE_INPROGRESS",
                            "RUNNING",
                            "PAUSED",
                            "PENDING",
                            "COMPLETED",
                            "ABORTED",
                            "FAILED"
                          ],
                          "example": "TRANSFER_INPROGRESS",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_transfer_session_state",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return transfer session's status",
        "tags": [
          "Transfers",
          "Transfer Monitoring"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_transfer_session_state transfer_session_id='exampleservercopya20140206192428NtyW'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_transfer_session_state?api.version=1&transfer_session_id=exampleservercopya20140206192428NtyW"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/get_tweaksetting": {
      "get": {
        "description": "This function retrieves values from the\n[`/var/cpanel/cpanel.config`](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-config-file/84/)\nfile.\n\n**Note:**\n\n  In cPanel & WHM version 86 and later, this function also retrieves values from the user's\n  [Exim configuration](https://docs.cpanel.net/whm/service-configuration/exim-configuration-manager-basic-editor/).",
        "operationId": "get_tweaksetting",
        "parameters": [
          {
            "description": "The [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/) option.",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "defaultmailaction",
              "type": "string"
            }
          },
          {
            "description": "One of the following *Tweak Settings* module names:\n* `Apache`\n* `Basic`\n* `Mail`\n* `Main`",
            "in": "query",
            "name": "module",
            "required": false,
            "schema": {
              "default": "Main",
              "enum": [
                "Apache",
                "Basic",
                "Mail",
                "Main"
              ],
              "example": "Main",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "tweaksetting": {
                          "description": "A list of the *Tweak Settings* option's information.",
                          "properties": {
                            "key": {
                              "description": "A key name in the `cpanel.config` file.",
                              "example": "defaultmailaction",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value. This value depends on the `key` value's requirements.",
                              "example": "localuser",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_tweaksetting",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Tweak Settings option's value",
        "tags": [
          "Server Administration",
          "Configurations"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_tweaksetting key='defaultmailaction'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_tweaksetting?api.version=1&key=defaultmailaction"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/get_udp4_sockets": {
      "get": {
        "description": "This function returns data about the system's user datagram protocol (UDP) IPv4 sockets.",
        "operationId": "get_udp4_sockets",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contains the status of the system's UDP IPv4 sockets.",
                          "items": {
                            "properties": {
                              "dport": {
                                "description": "The source port that the Linux kernel reports for the socket.",
                                "example": 443,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "dst": {
                                "description": "The destination IPv4 address.",
                                "example": "10.0.0.2",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "inode": {
                                "description": "The inode number the Linux kernel assigned to the socket.",
                                "example": 27171,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "rqueue": {
                                "description": "The number of bytes in the socket's read buffer.",
                                "example": 0,
                                "format": "bytes",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "sport": {
                                "description": "The source port number.",
                                "example": 53,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "src": {
                                "description": "The source IPv4 address.",
                                "example": "10.0.0.1",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "state": {
                                "description": "The socket's current state, in the Linux kernel's numeric format.",
                                "example": 10,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "uid": {
                                "description": "The socket's user ID (UID).",
                                "example": 25,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "wqueue": {
                                "description": "The number of bytes that the system is waiting to send.",
                                "example": 45,
                                "format": "bytes",
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_udp4_sockets",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return UDP IPv4 sockets data",
        "tags": [
          "Server Administration",
          "Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_udp4_sockets"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_udp4_sockets?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "80"
      }
    },
    "/get_udp6_sockets": {
      "get": {
        "description": "This function returns data about the system's user datagram protocol (UDP) IPv6 sockets.\n\n**Important:**\n\n  This function may perform slower on a CentOS 6 system with a large number of UDP sockets.",
        "operationId": "get_udp6_sockets",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contains the status of the system's UDP IPv6 sockets.",
                          "items": {
                            "properties": {
                              "dport": {
                                "description": "The source port that the Linux kernel reports for the socket.",
                                "example": 443,
                                "maximum": 65535,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "dst": {
                                "description": "The destination IPv6 address.",
                                "example": "2001:0db8:0:0:1:0:0:2",
                                "format": "ipv6",
                                "type": "string"
                              },
                              "inode": {
                                "description": "The inode number the Linux kernel assigned to the socket.",
                                "example": 27171,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "rqueue": {
                                "description": "The number of bytes in the socket's read buffer.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "sport": {
                                "description": "The source port number.",
                                "example": 53,
                                "maximum": 65535,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "src": {
                                "description": "The source IPv6 address.",
                                "example": "2001:0db8:0:0:1:0:0:1",
                                "format": "ipv6",
                                "type": "string"
                              },
                              "state": {
                                "description": "The socket's current state, in the Linux kernel's numeric format.",
                                "example": 10,
                                "type": "integer"
                              },
                              "uid": {
                                "description": "The socket's user ID (UID).",
                                "example": 25,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "wqueue": {
                                "description": "The number of bytes that the system is waiting to send.",
                                "example": 45,
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_udp6_sockets",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return UDP IPv6 sockets data",
        "tags": [
          "Server Administration",
          "Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_udp6_sockets"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_udp6_sockets?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "80"
      }
    },
    "/get_unique_recipient_count_per_sender_for_user": {
      "get": {
        "description": "This function gets the number of unique recipients that a system user sent mail to within a period of time. It groups this data by each of the user's email accounts.",
        "operationId": "get_unique_recipient_count_per_sender_for_user",
        "parameters": [
          {
            "description": "An end time to query.",
            "in": "query",
            "name": "end_time",
            "required": true,
            "schema": {
              "example": 1550923200,
              "format": "unix_timestamp",
              "type": "integer"
            }
          },
          {
            "description": "A start time to query.",
            "in": "query",
            "name": "start_time",
            "required": true,
            "schema": {
              "example": 1550872800,
              "format": "unix_timestamp",
              "type": "integer"
            }
          },
          {
            "description": "The system user's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contain a count of the number of unique recipients a system user sent mail to.",
                          "items": {
                            "properties": {
                              "sender": {
                                "description": "The user's email address.",
                                "example": "username@example.com",
                                "type": "string"
                              },
                              "unique_recipient_count": {
                                "description": "The number of unique recipients that the email account sent mail to.",
                                "example": 51,
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_unique_recipient_count_per_sender_for_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account unique email recipients",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_unique_recipient_count_per_sender_for_user user='username' start_time='1550872800' end_time='1550923200'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_unique_recipient_count_per_sender_for_user?api.version=1&user=username&start_time=1550872800&end_time=1550923200"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "80"
      }
    },
    "/get_unique_sender_recipient_count_per_user": {
      "get": {
        "description": "This function gets a count of the email addresses that each system account sent mail to within a specific period of time. It groups the data by each system user for all the system's users.",
        "operationId": "get_unique_sender_recipient_count_per_user",
        "parameters": [
          {
            "description": "An end time to query.",
            "in": "query",
            "name": "end_time",
            "required": true,
            "schema": {
              "example": 1551192100,
              "format": "unix_timestamp",
              "type": "integer"
            }
          },
          {
            "description": "A start time to query.",
            "in": "query",
            "name": "start_time",
            "required": true,
            "schema": {
              "example": 1550702383,
              "format": "unix_timestamp",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contain a count for all system users' unique email recipients.",
                          "items": {
                            "properties": {
                              "unique_sender_recipient_count": {
                                "description": "A count of the unique sender-recipient pairs for mail sent during a period of time.",
                                "example": 120,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "user": {
                                "description": "A system user's username.",
                                "example": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_unique_sender_recipient_count_per_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all cPanel account unique email recipients",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_unique_sender_recipient_count_per_user start_time='1550702383' end_time='1551192100'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_unique_sender_recipient_count_per_user?api.version=1&start_time=1550702383&end_time=1551192100"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "80"
      }
    },
    "/get_update_availability": {
      "get": {
        "description": "This function checks whether your server uses the\n[latest version of cPanel & WHM for your release tier](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/).",
        "operationId": "get_update_availability",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "current_version": {
                          "description": "The server's current version of cPanel & WHM.",
                          "example": "88.0.12",
                          "type": "string"
                        },
                        "newest_version": {
                          "description": "The available version of cPanel & WHM available for the server's support tier.",
                          "example": "88.0.12",
                          "type": "string"
                        },
                        "tier": {
                          "description": "The server's\n[support tier](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/#release-tiers):\n\n* `edge` — EDGE.\n* `current` — CURRENT.\n* `release` — RELEASE.\n* `stable` — STABLE.\n* `lts` — Long-Term Support (LTS).",
                          "enum": [
                            "edge",
                            "current",
                            "release",
                            "stable",
                            "lts"
                          ],
                          "example": "current",
                          "type": "string"
                        },
                        "update_available": {
                          "description": "Whether a new version of cPanel & WHM is available for the server's support tier.\n\n- `1` — Available.\n- `0` — Not available.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_update_availability",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return if server uses the default update version",
        "tags": [
          "Server Administration",
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_update_availability"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_update_availability?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/get_user_email_forward_destination": {
      "get": {
        "description": "This function retrieves the destination to which the system forwards a system account's email.\n\n**Note:**\n\n* Usually, the system sends notices about the server's problems and activity to the `root` account.\n* If you do **not** use the `suexec` module, the `nobody` user receives bounce messages from email that CGI scripts send.\n\n**Important:**\n\nWhen you disable the [Receive Mail](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles) role, the system **disables** this function.",
        "operationId": "get_user_email_forward_destination",
        "parameters": [
          {
            "description": "The system account name.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "root",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "forward_to": {
                          "description": "The system accounts or email addresses to which the system forwards the account's email.",
                          "items": {
                            "example": "user@example.com",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_user_email_forward_destination",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account forward destination",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_user_email_forward_destination user='root'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_user_email_forward_destination?api.version=1&user=root"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/get_users_and_domains_with_backup_metadata": {
      "get": {
        "description": "This function lists all users and their domains that have backup metadata.",
        "operationId": "get_users_and_domains_with_backup_metadata",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "The cPanel user account's associated domain.",
                        "example": "example.com",
                        "format": "domain",
                        "type": "string"
                      },
                      "description": "Keys are cPanel user accounts that contain backup metadata.",
                      "example": {
                        "username": "example.com",
                        "username2": "example.net",
                        "username3": "example.org"
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_users_and_domains_with_backup_metadata",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return users and domains with backup metadata",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_users_and_domains_with_backup_metadata"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_users_and_domains_with_backup_metadata?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "74"
      }
    },
    "/get_users_authn_linked_accounts": {
      "get": {
        "description": "This function lists all accounts that link to available external authentication identity providers.",
        "operationId": "get_users_authn_linked_accounts",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "username_linked_accounts": {
                          "description": "An array of objects containing user accounts with their linked identity provider accounts.",
                          "items": {
                            "properties": {
                              "link_time": {
                                "description": "When the user linked the account.",
                                "example": 1443124003,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "preferred_username": {
                                "description": "The preferred username of the account on the identity provider that the interface will display.",
                                "example": "username@example.com",
                                "type": "string"
                              },
                              "provider_id": {
                                "description": "The system's internal key for the identity provider.",
                                "example": "cpanelid",
                                "type": "string"
                              },
                              "provider_protocol": {
                                "description": "The identity provider's protocol.",
                                "example": "openid_connect",
                                "type": "string"
                              },
                              "subject_unique_identifier": {
                                "description": "The unique identifier for the user at the identity provider.",
                                "example": "123456789012345678901",
                                "type": "string"
                              },
                              "username": {
                                "description": "The cPanel account's username.",
                                "example": "username",
                                "format": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_users_authn_linked_accounts",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return accounts linked to identity providers",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_users_authn_linked_accounts"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_users_authn_linked_accounts?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/get_users_features_settings": {
      "get": {
        "description": "This function lists the features settings of cPanel accounts.",
        "operationId": "get_users_features_settings",
        "parameters": [
          {
            "description": "The user's username.\n\n**Note:**\n\nTo check multiple users, increment the parameter name. For example, `user-1`, `user-2`, and `user-3`.",
            "examples": {
              "multiple": {
                "description": "Multiple users.",
                "value": "user-1=example1 user-2=example2 user-3=example3"
              },
              "single": {
                "description": "A single user.",
                "value": "example"
              }
            },
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The feature's name.\n\n**Note:**\n\n* To check multiple features, increment the parameter name. For example, `feature-1`, `feature-2`, and `feature-3`.\n* If you use this parameter, you **must** enter a feature name, or the function returns an error. If you do **not** use this parameter, the function returns data for all features on the server.",
            "examples": {
              "multiple": {
                "description": "Multiple feature.",
                "value": "feature-1=autossl feature-2=addoncgi feature-3=addondomains"
              },
              "single": {
                "description": "A single feature.",
                "value": "autossl"
              }
            },
            "in": "query",
            "name": "feature",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "users_features_settings": {
                          "description": "An array of objects that contain information about the feature list settings.",
                          "items": {
                            "properties": {
                              "cpuser_setting": {
                                "description": "The user's setting for the feature in their `cpuser` file, which overrides the `feature_list_setting` return.\n* `1` - Enabled.\n* `0` - Disabled.\n* `null` — The feature is **not** defined in the feature list.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "nullable": true,
                                "type": "integer"
                              },
                              "feature": {
                                "description": "The feature name.",
                                "example": "autossl",
                                "type": "string"
                              },
                              "feature_list": {
                                "description": "The feature list's name.",
                                "example": "autossl",
                                "type": "string"
                              },
                              "feature_list_setting": {
                                "description": "The user's feature list setting.\n* `1` - Enabled.\n* `0` - Disabled.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "user": {
                                "description": "The user's username.",
                                "example": "example",
                                "format": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_users_features_settings",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel accounts' feature settings",
        "tags": [
          "Packages",
          "Feature Access"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_users_features_settings user='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_users_features_settings?api.version=1&user=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/get_users_links": {
      "get": {
        "description": "This function returns a list of\n[application keys](https://documentation.cpanel.net/display/DD/Guide+to+cPanel+Interface+Customization+-+Appkeys)\n(appkeys) and the URLs that correspond to applications for the cPanel user's theme.\nUse the appkey values for the `app` parameter's value in the WHM API 1 `create_user_session`\nfunction.",
        "operationId": "get_users_links",
        "parameters": [
          {
            "description": "The requested user's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "user",
              "type": "string"
            }
          },
          {
            "description": "The interface for which to filter results:\n\n* `cpanel` — cPanel\n* `webmail` — Webmail",
            "in": "query",
            "name": "service",
            "required": false,
            "schema": {
              "default": "cpaneld",
              "enum": [
                "cpaneld",
                "webmail"
              ],
              "example": "cpaneld",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "The name of the appkey and its corresponding URL to the specific\napplication.\n\n**Note:**\n\nThis function returns this value as the appkey name and the appkey's\napplication URL.",
                        "type": "string"
                      },
                      "description": "A list of appkeys and their corresponding file locations.",
                      "example": {
                        "Backups_Home": "frontend/paper_lantern/backup/index.html",
                        "Calendar_Configure": "frontend/paper_lantern/mail/calendars_and_contacts/index.html",
                        "ContactInfo_Change": "frontend/paper_lantern/contact/index.html",
                        "Cron_Home": "frontend/paper_lantern/cron/index.html",
                        "Database_MySQL": "frontend/paper_lantern/sql/index.html",
                        "Database_phpMyAdmin": "frontend/paper_lantern/sql/PhpMyAdmin.html",
                        "Domains_AddonDomains": "frontend/paper_lantern/addon/index.html",
                        "Domains_SubDomains": "frontend/paper_lantern/subdomain/index.html",
                        "Email_AccountLevelFiltering": "frontend/paper_lantern/mail/filters/userfilters.html",
                        "Email_Accounts": "frontend/paper_lantern/mail/pops/index.html",
                        "Email_Archive": "frontend/paper_lantern/mail/archive.html",
                        "Email_Authentication": "frontend/paper_lantern/mail/auth.html",
                        "Email_AutoResponders": "frontend/paper_lantern/mail/autores.html",
                        "Email_BoxTrapper": "frontend/paper_lantern/mail/boxtrapper.html",
                        "Email_DefaultAddress": "frontend/paper_lantern/mail/def.html",
                        "Email_DeliveryReport": "frontend/paper_lantern/mail/def.html",
                        "Email_Disk_Usage": "frontend/paper_lantern/mail/manage_disk_usage/",
                        "Email_Forwarders": "frontend/paper_lantern/mail/fwds.html",
                        "Email_GreyListing": "frontend/paper_lantern/mail/greylisting/index.html",
                        "Email_MailingLists": "frontend/paper_lantern/mail/lists.html",
                        "Email_Routing": "frontend/paper_lantern/mail/email_routing.html",
                        "Email_SpamFilter": "frontend/paper_lantern/mail/spam/spam.html",
                        "Email_UserLevelFiltering": "frontend/paper_lantern/mail/filters/managefilters.html",
                        "FileManager_Home": "frontend/paper_lantern/filemanager/index.html",
                        "Locale_Change": "frontend/paper_lantern/setlang/index.html",
                        "Password_Change": "frontend/paper_lantern/passwd/index.html",
                        "SSL_TLS_Manager": "frontend/paper_lantern/ssl/index.html",
                        "SSL_TLS_Status": "frontend/paper_lantern/security/tls_status/",
                        "SSL_TLS_Wizard": "frontend/paper_lantern/security/tls_wizard/",
                        "Site_Software": "frontend/paper_lantern/addoncgi/cpaddons.html",
                        "Solr_Disk_Usage": "frontend/paper_lantern/mail/search_index/",
                        "Stats_AWStats": "frontend/paper_lantern/stats/awstats_landing.html"
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_users_links",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account theme's app keys and URLs",
        "tags": [
          "Server Administration",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_users_links user='user'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_users_links?api.version=1&user=user"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/get_users_with_backup_metadata": {
      "get": {
        "description": "This function lists users with backup metadata.",
        "operationId": "get_users_with_backup_metadata",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "accounts": {
                          "description": "The cPanel user accounts on the server that contain backup metadata.",
                          "items": {
                            "example": "username",
                            "format": "username",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "get_users_with_backup_metadata",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return users with backup metadata",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 get_users_with_backup_metadata"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/get_users_with_backup_metadata?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "70"
      }
    },
    "/getdiskusage": {
      "get": {
        "description": "This function retrieves the server's drive partition information.",
        "operationId": "getdiskusage",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "partition": {
                          "description": "An array of objects that contain drive partition information.",
                          "items": {
                            "properties": {
                              "available": {
                                "description": "The partition's unused disk space, measured in kilobytes.",
                                "example": 377856,
                                "format": "kilobytes",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "device": {
                                "description": "The partition's device name.",
                                "example": "/dev/vda1",
                                "type": "string"
                              },
                              "disk": {
                                "description": "The partition's label.",
                                "example": "vda1",
                                "type": "string"
                              },
                              "filesystem": {
                                "description": "The partition's absolute directory path.",
                                "example": "/",
                                "type": "string"
                              },
                              "inodes_available": {
                                "description": "The number of unused inodes on the partition.",
                                "example": 20575847,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "inodes_ipercentage": {
                                "description": "The percentage of the partition's total",
                                "example": 2,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "inodes_total": {
                                "description": "The total number of inodes that the partition will allow.",
                                "example": 20970944,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "inodes_used": {
                                "description": "The number of inodes used on the partition.",
                                "example": 395097,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "mount": {
                                "description": "The partition's mount point.",
                                "example": "/boot",
                                "type": "string"
                              },
                              "percentage": {
                                "description": "The percentage of the partition's total disk space used.",
                                "example": 20,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "total": {
                                "description": "The partition's total allocated disk space, measured in kilobytes.",
                                "example": 495844,
                                "format": "kilobytes",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "used": {
                                "description": "The partition's disk space used, measured in kilobytes.",
                                "example": 92388,
                                "format": "kilobytes",
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "getdiskusage",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Successfully retrieved disk usage",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return server's drive partition information",
        "tags": [
          "Server Administration",
          "System Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 getdiskusage"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/getdiskusage?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/getdomainowner": {
      "get": {
        "description": "This function lists the owner of a domain.",
        "operationId": "getdomainowner",
        "parameters": [
          {
            "description": "A domain on the system that is owned by the user calling this function.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "user": {
                          "description": "The user who owns the domain.\n\n**Note:**\n\nThis value returns `null` if the user calling the function does not own the account for the domain **or** the domain does not exist on the server.",
                          "example": "username",
                          "format": "username",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "getdomainowner",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domain owner",
        "tags": [
          "Accounts",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 getdomainowner domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/getdomainowner?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/gethostname": {
      "get": {
        "description": "This function retrieves the server's hostname.",
        "operationId": "gethostname",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "hostname": {
                          "description": "The server's hostname.",
                          "example": "hostname.example.com",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "gethostname",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return server's hostname",
        "tags": [
          "Server Administration",
          "System Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 gethostname"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/gethostname?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/getminimumpasswordstrengths": {
      "get": {
        "description": "This function retrieves the minimum password strength for cPanel & WHM accounts.",
        "operationId": "getminimumpasswordstrengths",
        "parameters": [
          {
            "description": "The service for which to display the minimum password value.\nIf you do not use this parameter, this function returns the minimum password\nsetting for all values.\n* `default` - All services\n* `cpaddons` - cPAddons\n* `createacct` - New cPanel accounts\n* `list` - Mailing lists\n* `mysql` - MySQL® database users\n* `passwd` - WHM user or system accounts\n* `postgres` -  PostgreSQL database users\n* `sshkey` - SSH keys\n* `virtual` - Mail, FTP, Web Disk, and WebDAV accounts",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "enum": [
                "default",
                "cpaddons",
                "createacct",
                "list",
                "mysql",
                "passwd",
                "postgres",
                "sshkey",
                "virtual"
              ],
              "example": "default",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cpaddons": {
                          "description": "The minimum password strength for cPAddons.",
                          "example": 50,
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "createacct": {
                          "description": "The minimum password strength for new cPanel accounts.",
                          "example": 50,
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "default": {
                          "description": "The minimum password strength for **all** services.",
                          "example": 50,
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "list": {
                          "description": "The minimum password strength for mailing lists.",
                          "example": 50,
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "mysql": {
                          "description": "The minimum password strength for MySQL® database users.",
                          "example": 50,
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "passwd": {
                          "description": "The minimum password strength for WHM user or system accounts.",
                          "example": 50,
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "postgres": {
                          "description": "The minimum password strength for PostgreSQL database users.",
                          "example": 50,
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "sshkey": {
                          "description": "The minimum password strength for SSH keys.",
                          "example": 50,
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "virtual": {
                          "description": "The minimum password strength for mail, FTP, Web Disk, and WebDAV accounts.",
                          "example": 50,
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "getminimumpasswordstrengths",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return minimum password strength",
        "tags": [
          "Accounts",
          "Passwords"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 getminimumpasswordstrengths"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/getminimumpasswordstrengths?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "82"
      }
    },
    "/getpkginfo": {
      "get": {
        "description": "This function lists a hosting plan's (package's) settings.",
        "operationId": "getpkginfo",
        "parameters": [
          {
            "description": "The hosting plan's name.",
            "in": "query",
            "name": "pkg",
            "required": true,
            "schema": {
              "example": "package1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pkg": {
                          "description": "A list of the hosting plan's settings.\n\n**Note:**\n\n* The function will only return the package's enabled resources and settings.\n* If the account or its hosting plan use package extensions, the list also\nincludes the extension's variables.",
                          "properties": {
                            "BWLIMIT": {
                              "description": "The hosting plan's bandwidth limit, in megabytes (MB).\n\n* `unlimited` — The hosting plan allows unlimited bandwidth.",
                              "example": "unlimited",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited bandwidth.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "CGI": {
                              "description": "Whether CGI is enabled for the hosting plan.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "CPMOD": {
                              "description": "The hosting plan's cPanel interface theme.",
                              "example": "paper_lantern",
                              "type": "string"
                            },
                            "DIGESTAUTH": {
                              "description": "Whether the hosting plan enables Digest Authentication.\n\n* `y` — Enabled.\n* `n` — Disabled.",
                              "example": "n",
                              "type": "string"
                            },
                            "FEATURELIST": {
                              "description": "The hosting plan's [feature list](https://go.cpanel.net/whmdocsFeatureManager).",
                              "example": "myfeaturelist",
                              "type": "string"
                            },
                            "FRONTPAGE": {
                              "deprecated": true,
                              "description": "Whether Microsoft® FrontPage Extensions are enabled for the account.\n\n**Note:**\n\ncPanel & WHM ignores all FrontPage settings and parameters.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "HASSHELL": {
                              "description": "Whether shell access is enabled for the hosting plan.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "IP": {
                              "description": "Whether the hosting plan grants accounts a dedicated IP address.\n\n* `1` — Dedicated IP address.\n* `0` — Shared IP address.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "LANG": {
                              "description": "The hosting plan's locale.",
                              "example": "en",
                              "format": "ISO-3166-1 (alpha-2)",
                              "type": "string"
                            },
                            "MAXADDON": {
                              "description": "The hosting plan's maximum number of addon domains.\n\n* `unlimited` — The hosting plan allows unlimited addon domains.",
                              "example": 1,
                              "nullable": true,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited addon domains.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXFTP": {
                              "description": "The hosting plan's maximum number of FTP accounts.\n\n* `unlimited` — The hosting plan allows unlimited FTP accounts.",
                              "example": 2,
                              "nullable": true,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited FTP accounts.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXLST": {
                              "description": "The hosting plan's maximum number of mailing lists.\n\n* `unlimited` — The hosting plan allows unlimited mailing lists.",
                              "example": "unlimited",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited mailing lists.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXPARK": {
                              "description": "The hosting plan's maximum number of parked domains (aliases).\n\n* `unlimited` — The hosting plan allows unlimited parked domains.",
                              "example": 1,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited parked domains.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXPOP": {
                              "description": "The hosting plan's maximum number of email accounts.\n\n* `unlimited` — The hosting plan allows unlimited email accounts.",
                              "example": 20,
                              "nullable": true,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited email accounts.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXSQL": {
                              "description": "The hosting plan's maximum number of SQL databases.\n\n* `unlimited` — The hosting plan allows unlimited SQL databases.",
                              "example": 1,
                              "nullable": true,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited SQL databases.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXSUB": {
                              "description": "The hosting plan's maximum number of subdomains.\n\n* `unlimited` — The hosting plan allows unlimited subdomains.",
                              "example": 5,
                              "nullable": true,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited subdomains.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAX_DEFER_FAIL_PERCENTAGE": {
                              "description": "The\n[percentage of failed or deferred email messages](https://go.cpanel.net/howtopreventspam)\nthat the hosting plan can send per hour before the system rate-limits\noutgoing mail.\n\n* `unlimited` — The hosting plan allows unlimited email messages.",
                              "example": 10,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited email messages.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAX_EMAILACCT_QUOTA": {
                              "description": "The hosting plan's maximum email account quota size, in megabytes (MB).\n\n* `unlimited` — The hosting plan allows an unlimited email account quota size.",
                              "example": "unlimited",
                              "oneOf": [
                                {
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows an unlimited email account quota size.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAX_EMAIL_PER_HOUR": {
                              "description": "The [maximum number of emails](https://go.cpanel.net/howtopreventspam)\nthat the hosting plan can send in one hour.\n\n* `unlimited` — The hosting plan allows unlimited emails per hour.",
                              "example": 100,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited emails per hour.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "QUOTA": {
                              "description": "The hosting plan's disk space limit, in megabytes (MB).\n\n * `unlimited` — The hosting plan has unlimited disk space.",
                              "example": 100,
                              "nullable": true,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan has unlimited disk space.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "_PACKAGE_EXTENSIONS": {
                              "description": "A list of one or more of the hosting plan's package extensions, if any exist.",
                              "example": "",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "getpkginfo",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return hosting plan configuration",
        "tags": [
          "Packages",
          "Hosting Plans"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 getpkginfo pkg='package1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/getpkginfo?api.version=1&pkg=package1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/getresellerips": {
      "get": {
        "description": "This function lists a reseller's available IP addresses.",
        "operationId": "getresellerips",
        "parameters": [
          {
            "description": "A reseller's username, to query only that reseller.\n\n**Note:**\n\nIf you do **not** specify a value, the function lists available IP addresses for the `root`\nuser.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "all": {
                          "description": "Whether all of the reseller's IP addresses are available.\n* `1` — All of the reseller's IP addresses are available.\n* `0` — Some or all IP addresses are unavailable.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "ip": {
                          "description": "The reseller's available IP addresses.",
                          "items": {
                            "example": "192.168.0.20",
                            "format": "ipv4",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "getresellerips",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return reseller's available IP addresses",
        "tags": [
          "Resellers",
          "Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 getresellerips"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/getresellerips?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/getzonerecord": {
      "get": {
        "description": "This function returns a line from a domain's DNS zone configuration.\n\n**Note:**\n\nOn servers that run CentOS 7, you may see a named warning about the absence of SPF resource records on DNS.\n * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.\n * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).\n\n**Important:**\n\n  When you disable the [DNS Role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "getzonerecord",
        "parameters": [
          {
            "description": "The zone record's domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The zone record's line number.",
            "in": "query",
            "name": "line",
            "required": true,
            "schema": {
              "example": 2,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "record": {
                          "description": "An array of objects containing the domain's zone record data.",
                          "items": {
                            "$ref": "#/components/schemas/getzonerecordResponseBase"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "getzonerecord",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Record obtained.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return specific line from domain's DNS configuration",
        "tags": [
          "DNS",
          "DNS Zones"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 getzonerecord domain='example.com' line='2'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/getzonerecord?api.version=1&domain=example.com&line=2"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/has_digest_auth": {
      "get": {
        "description": "This function checks whether Digest Authentication is enabled for\na cPanel user. Windows® Vista, Windows® 7, and Windows® 8 require Digest Authentication\nsupport in order to access [Web Disk](https://docs.cpanel.net/cpanel/files/web-disk/) over an unencrypted connection.",
        "operationId": "has_digest_auth",
        "parameters": [
          {
            "description": "The cPanel account username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "digestauth": {
                          "description": "Whether Digest Authentication support is enabled.\n* `1` — Enabled.\n* `0` — Disabled.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "has_digest_auth",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate cPanel account Digest Authentication",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 has_digest_auth user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/has_digest_auth?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.34"
      }
    },
    "/has_local_authority": {
      "get": {
        "description": "This function checks whether the local server has the authority to publish changes for the domain's DNS records.\n\n**Important:**\n\nWhen you disable the [DNS role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "has_local_authority",
        "parameters": [
          {
            "description": "The domain to check whether the local server is authoritative for the domain's DNS records.\n\n**Note:**\n\nTo check multiple domains, duplicate or increment the parameter name. For example, to check three domains, use the `domain` parameter multiple times. Or the `domain`, `domain-1`, and `domain-2` parameters.",
            "examples": {
              "multiple": {
                "summary": "Multiple domains",
                "value": "domain=example.com domain-1=example1.com domain-2=example2.com"
              },
              "single": {
                "summary": "A single domain",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "records": {
                          "description": "An array of objects that contains information about about the authoritative status of a domain's local DNS zone files.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The queried domain.",
                                "example": "example.com",
                                "type": "string"
                              },
                              "error": {
                                "description": "A message that details the reason why the local server's authoritative check failed.\n\n**Note:**\n\n The function **only** returns this value when the check fails.",
                                "example": "(XID qdbmuk) DNS query (example3.com/SOA) timeout!",
                                "type": "string"
                              },
                              "local_authority": {
                                "description": "Whether the local server is authoritative for the domain's DNS records.\n* `1` — The local server is authoritative for the domain's DNS records.\n* `0` — The local server is **not** authoritative for the domain's DNS records.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "nameservers": {
                                "description": "The domain's authoritative nameservers, if any exist.",
                                "example": [
                                  "ns1.example.com",
                                  "ns2.example.com"
                                ],
                                "items": {
                                  "format": "domain",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "zone": {
                                "description": "The DNS zone that contains the domain's DNS records, if one exists.",
                                "example": "example.com",
                                "format": "domain",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "has_local_authority",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate local server is authoritative",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 has_local_authority domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/has_local_authority?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/has_mycnf_for_cpuser": {
      "get": {
        "description": "This function checks whether a cPanel user's home directory contains\na valid .my.cnf file.",
        "operationId": "has_mycnf_for_cpuser",
        "parameters": [
          {
            "description": "The cPanel account username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "user",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "has_mycnf_for_cpuser": {
                          "description": "Whether a valid .my.cnf file exists in the account's home directory.\n- `1` -  Exists.\n- `0` -  Does not exist.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "has_mycnf_for_cpuser",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- `1` - Success\n- `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate MySQL Configuration file",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 has_mycnf_for_cpuser user='user'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/has_mycnf_for_cpuser?api.version=1&user=user"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/hold_outgoing_email": {
      "get": {
        "description": "This function sets Exim's queue to hold email that a user sends to an external address.\n\n**Note:**\n\n  If mail for a cPanel user's account is suspended, the system will reject their email before the mail server puts it in the queue.",
        "operationId": "hold_outgoing_email",
        "parameters": [
          {
            "description": "The cPanel account.\n\n**Note**\n\nYou **cannot** suspend the root user's outgoing email with this function.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "hold_outgoing_email",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add cPanel account to outbound email hold queue",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 hold_outgoing_email user='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/hold_outgoing_email?api.version=1&user=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/import_zone_key": {
      "get": {
        "description": "This function imports a DNSSEC security key.\n\n**Note:**\n\nOnly servers that run PowerDNS can use DNSSEC. If you call this function on a server\nthat doesn't use PowerDNS, you will receive an error.",
        "operationId": "import_zone_key",
        "parameters": [
          {
            "description": "The domain for which to import the security key.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The security key's data that the\n[pdnsuti](https://doc.powerdns.com/authoritative/manpages/pdnsutil.1.html)\nutility's `export-zone-key` call returns.",
            "in": "query",
            "name": "key_data",
            "required": true,
            "schema": {
              "example": "Private-key-format:%20v1.2%0AAlgorithm:%2013%20\\(ECDSAP256SHA256\\)%0APrivateKey:%20xCM281KtWE9oCsUX8fP1hDZ02/X7JCjp4QZA/DZjfX0=%0A%0A",
              "type": "string"
            }
          },
          {
            "description": "The security key's type.\n\n* `ksk` — Key-Signing Key\n* `zsk` — Zone Signing Key\n\n**Note:**\n\nYou **must** call these values in lowercase.",
            "in": "query",
            "name": "key_type",
            "required": true,
            "schema": {
              "example": "ksk",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "import_key_id": {
                          "description": "The system's assigned ID for the imported security key.",
                          "example": 1,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "import_zone_key",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Import DNSSEC key",
        "tags": [
          "DNS",
          "DNS Security"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 import_zone_key domain='example.com' key_type='ksk' key_data='Private-key-format:%20v1.2%0AAlgorithm:%2013%20\\(ECDSAP256SHA256\\)%0APrivateKey:%20xCM281KtWE9oCsUX8fP1hDZ02/X7JCjp4QZA/DZjfX0=%0A%0A'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/import_zone_key?api.version=1&domain=example.com&key_type=ksk&key_data=Private-key-format%3a%2520v1.2%250AAlgorithm%3a%252013%2520%5c%28ECDSAP256SHA256%5c%29%250APrivateKey%3a%2520xCM281KtWE9oCsUX8fP1hDZ02%2fX7JCjp4QZA%2fDZjfX0%3d%250A%250A"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/importsshkey": {
      "get": {
        "description": "This function imports an SSH key.",
        "operationId": "importsshkey",
        "parameters": [
          {
            "description": "The key's contents.",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "-----BEGIN RSA PRIVATE KEY----- hPH+o4NgZrky7iGBb5iUg8R4aQzLPexpYfet25bLESvHOtutsBkbN7UWAaoM0pgM hytunlM8UU4BArJWlJyY6AD59aluZowBbuowKeU+f+TRaeJNJvkxTCOAipzp6LyG nrSVJ5hxSN/RPfntho1MEsdWYewVI4eLayuiZJyD+VONCYJh/vPLaZ9AVUJuMerl s/ZJ24AwCW8cILG+C3TWJRCjl4Ji+sJ9A5P29p/ad18cyJc1F+wmAzMULWitCaB7 mmE0i1nkiZRygQzzKjqdBYWCjujxfoE2+nPufAJg8ZdIEI1xSVBe5jKnj8DRX67w NAnNjXANMRePo39/RbDOSEXsD62h1qH93SnPsAhYT1JE6xHKV85AVIVOe8ktTA8t jMBBioCudBFngqPHknUrIJZ2QfUm0fkKBZaoKW4yr3JjGk+5y6kg02gSDIA7/jGc 8rs3iKN+QJ/ug2x/v7Xe0OozVqpl5QTltEMGJzJ1jFh9WnqgsgLTiJWlE7x5VSv8 fV8A5WTafOhBHnKuOpmpjAel1GD5DT1jNx3LhWXMHOayawC0WY04lT5kkLLWhuN2 pNqY6UBk6Z3m1ifPINq85RdnHriJiD3H/+6P+cUyGSOznni8yqU764LId4nNClWd Xc+VvM1Udw0Sm7xF7err9CKHYUg3HfFYQPBQOfI0ib9wqOi7zWq2vhH21B5OgcTg Bsw/HJUQ/IVnTbsqgZSn0sckaRguv/ifmwbISO1aQ4Yxcohe/4miOw05r6ihbYGW LO5kP0I8SBMCibkGFh5AxVnNgoGAW0l33hOPPSIVUTkE+8d3zYXLzupTFXCvmohl jq0it7uIGOxSglf7XH3eXlNKaZjK7pBJgS5HeXM80JI8FCfifqnkaik8XTE66Ll0 s1ySaGevGkPpX5Rhbgsm4IqddAeFvlmKIND8Zvh/wfT++bbD7bbFwFlrWCU3chce 8KaNVUP+whCAlaS7oGcs38ygaRFXIE3vug4Ra8Xiy/qfyp4YR67sMg46avHyoVky uFbVv2n7HphZb7g3WS3ns3/gCQQv9TYcdBoRnKW2yEqbzOQb9Fdt7EjgMohT/bdS pM6nRWFNdmWoihLzLbSi3bnc9iDwXZA8KyE3mpVi4QFfijR4dfrVWxEz5Ln2l9HC SZA6VPGzEOwOVVND98/HTu3oViJUV1gyDIWlyggSUDTyhfo/Z+c3tTHa+cv0f7xY oL63hWLgZQD2m/g6rKpsN3NhC77tCyCNZavdKy7usvZyCsoH/mPR2129LcwAwbJ3 u2Ec7qLncztSePHOmfmCTTED00a0YzFhKIQoJf7GrgLCMapYN/YPu0vgTDMPSi11 RH0rdyzd6MuPVDZwLnWO+SltjX85yz1ba/Q199HZwQOw6ZyejDaPSWJHOndD3k+r Q0T38gci9k4D87EwmfpK7zOaCoaiGiRQ6+DdYOv6hlzQ6Fdb2FOtlGQZharQ9WTC jOJBEj2oGUruc6P3fqhfUVllWi4cck0GgWZwcsmG1dDr8W6K9lrGA1dPbXoOns1B l58ghMGtHG7D0VlHs6SIqFmHr5kUgSQ4jJ2KZkVU8CrPBZ2HRtHQJJyjZWW2AbrE -----END RSA PRIVATE KEY-----",
              "type": "string"
            }
          },
          {
            "description": "The key's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "TestKey",
              "type": "string"
            }
          },
          {
            "description": "Whether to extract and save only the private key.\n* `1` — Private key only.\n* `0` — All data.\n\n**Note:**\n\nThis parameter defaults to `1` for\nPPK [(PuTTY Key Generator)](https://www.puttygen.com/)\nfiles and `0` for all other imports.",
            "in": "query",
            "name": "extract_private",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to extract and save only the public key.\n* `1` — Public key only.\n* `0` — All data.\n\n**Note:**\n\nThis parameter defaults to `1` for\nPPK [(PuTTY Key Generator)](https://www.puttygen.com/)\nfiles and `0` for all other imports.",
            "in": "query",
            "name": "extract_public",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The key's passphrase.\n\n**Note:**\n\nThis parameter is **required** whenever you import a PPK file.",
            "in": "query",
            "name": "passphrase",
            "required": false,
            "schema": {
              "default": null,
              "example": "123456luggage",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "deprecated": true,
            "description": "The key's owner.\n\n**Note:**\n\nYou can specify this parameter, but the system does **not** use it.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "importsshkey",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Import SSH key",
        "tags": [
          "Security",
          "SSH Keys and Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 importsshkey name='TestKey' key='-----BEGIN RSA PRIVATE KEY----- hPH+o4NgZrky7iGBb5iUg8R4aQzLPexpYfet25bLESvHOtutsBkbN7UWAaoM0pgM hytunlM8UU4BArJWlJyY6AD59aluZowBbuowKeU+f+TRaeJNJvkxTCOAipzp6LyG nrSVJ5hxSN/RPfntho1MEsdWYewVI4eLayuiZJyD+VONCYJh/vPLaZ9AVUJuMerl s/ZJ24AwCW8cILG+C3TWJRCjl4Ji+sJ9A5P29p/ad18cyJc1F+wmAzMULWitCaB7 mmE0i1nkiZRygQzzKjqdBYWCjujxfoE2+nPufAJg8ZdIEI1xSVBe5jKnj8DRX67w NAnNjXANMRePo39/RbDOSEXsD62h1qH93SnPsAhYT1JE6xHKV85AVIVOe8ktTA8t jMBBioCudBFngqPHknUrIJZ2QfUm0fkKBZaoKW4yr3JjGk+5y6kg02gSDIA7/jGc 8rs3iKN+QJ/ug2x/v7Xe0OozVqpl5QTltEMGJzJ1jFh9WnqgsgLTiJWlE7x5VSv8 fV8A5WTafOhBHnKuOpmpjAel1GD5DT1jNx3LhWXMHOayawC0WY04lT5kkLLWhuN2 pNqY6UBk6Z3m1ifPINq85RdnHriJiD3H/+6P+cUyGSOznni8yqU764LId4nNClWd Xc+VvM1Udw0Sm7xF7err9CKHYUg3HfFYQPBQOfI0ib9wqOi7zWq2vhH21B5OgcTg Bsw/HJUQ/IVnTbsqgZSn0sckaRguv/ifmwbISO1aQ4Yxcohe/4miOw05r6ihbYGW LO5kP0I8SBMCibkGFh5AxVnNgoGAW0l33hOPPSIVUTkE+8d3zYXLzupTFXCvmohl jq0it7uIGOxSglf7XH3eXlNKaZjK7pBJgS5HeXM80JI8FCfifqnkaik8XTE66Ll0 s1ySaGevGkPpX5Rhbgsm4IqddAeFvlmKIND8Zvh/wfT++bbD7bbFwFlrWCU3chce 8KaNVUP+whCAlaS7oGcs38ygaRFXIE3vug4Ra8Xiy/qfyp4YR67sMg46avHyoVky uFbVv2n7HphZb7g3WS3ns3/gCQQv9TYcdBoRnKW2yEqbzOQb9Fdt7EjgMohT/bdS pM6nRWFNdmWoihLzLbSi3bnc9iDwXZA8KyE3mpVi4QFfijR4dfrVWxEz5Ln2l9HC SZA6VPGzEOwOVVND98/HTu3oViJUV1gyDIWlyggSUDTyhfo/Z+c3tTHa+cv0f7xY oL63hWLgZQD2m/g6rKpsN3NhC77tCyCNZavdKy7usvZyCsoH/mPR2129LcwAwbJ3 u2Ec7qLncztSePHOmfmCTTED00a0YzFhKIQoJf7GrgLCMapYN/YPu0vgTDMPSi11 RH0rdyzd6MuPVDZwLnWO+SltjX85yz1ba/Q199HZwQOw6ZyejDaPSWJHOndD3k+r Q0T38gci9k4D87EwmfpK7zOaCoaiGiRQ6+DdYOv6hlzQ6Fdb2FOtlGQZharQ9WTC jOJBEj2oGUruc6P3fqhfUVllWi4cck0GgWZwcsmG1dDr8W6K9lrGA1dPbXoOns1B l58ghMGtHG7D0VlHs6SIqFmHr5kUgSQ4jJ2KZkVU8CrPBZ2HRtHQJJyjZWW2AbrE -----END RSA PRIVATE KEY-----'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/importsshkey?api.version=1&name=TestKey&key=-----BEGIN%20RSA%20PRIVATE%20KEY-----%20hPH%2bo4NgZrky7iGBb5iUg8R4aQzLPexpYfet25bLESvHOtutsBkbN7UWAaoM0pgM%20hytunlM8UU4BArJWlJyY6AD59aluZowBbuowKeU%2bf%2bTRaeJNJvkxTCOAipzp6LyG%20nrSVJ5hxSN%2fRPfntho1MEsdWYewVI4eLayuiZJyD%2bVONCYJh%2fvPLaZ9AVUJuMerl%20s%2fZJ24AwCW8cILG%2bC3TWJRCjl4Ji%2bsJ9A5P29p%2fad18cyJc1F%2bwmAzMULWitCaB7%20mmE0i1nkiZRygQzzKjqdBYWCjujxfoE2%2bnPufAJg8ZdIEI1xSVBe5jKnj8DRX67w%20NAnNjXANMRePo39%2fRbDOSEXsD62h1qH93SnPsAhYT1JE6xHKV85AVIVOe8ktTA8t%20jMBBioCudBFngqPHknUrIJZ2QfUm0fkKBZaoKW4yr3JjGk%2b5y6kg02gSDIA7%2fjGc%208rs3iKN%2bQJ%2fug2x%2fv7Xe0OozVqpl5QTltEMGJzJ1jFh9WnqgsgLTiJWlE7x5VSv8%20fV8A5WTafOhBHnKuOpmpjAel1GD5DT1jNx3LhWXMHOayawC0WY04lT5kkLLWhuN2%20pNqY6UBk6Z3m1ifPINq85RdnHriJiD3H%2f%2b6P%2bcUyGSOznni8yqU764LId4nNClWd%20Xc%2bVvM1Udw0Sm7xF7err9CKHYUg3HfFYQPBQOfI0ib9wqOi7zWq2vhH21B5OgcTg%20Bsw%2fHJUQ%2fIVnTbsqgZSn0sckaRguv%2fifmwbISO1aQ4Yxcohe%2f4miOw05r6ihbYGW%20LO5kP0I8SBMCibkGFh5AxVnNgoGAW0l33hOPPSIVUTkE%2b8d3zYXLzupTFXCvmohl%20jq0it7uIGOxSglf7XH3eXlNKaZjK7pBJgS5HeXM80JI8FCfifqnkaik8XTE66Ll0%20s1ySaGevGkPpX5Rhbgsm4IqddAeFvlmKIND8Zvh%2fwfT%2b%2bbbD7bbFwFlrWCU3chce%208KaNVUP%2bwhCAlaS7oGcs38ygaRFXIE3vug4Ra8Xiy%2fqfyp4YR67sMg46avHyoVky%20uFbVv2n7HphZb7g3WS3ns3%2fgCQQv9TYcdBoRnKW2yEqbzOQb9Fdt7EjgMohT%2fbdS%20pM6nRWFNdmWoihLzLbSi3bnc9iDwXZA8KyE3mpVi4QFfijR4dfrVWxEz5Ln2l9HC%20SZA6VPGzEOwOVVND98%2fHTu3oViJUV1gyDIWlyggSUDTyhfo%2fZ%2bc3tTHa%2bcv0f7xY%20oL63hWLgZQD2m%2fg6rKpsN3NhC77tCyCNZavdKy7usvZyCsoH%2fmPR2129LcwAwbJ3%20u2Ec7qLncztSePHOmfmCTTED00a0YzFhKIQoJf7GrgLCMapYN%2fYPu0vgTDMPSi11%20RH0rdyzd6MuPVDZwLnWO%2bSltjX85yz1ba%2fQ199HZwQOw6ZyejDaPSWJHOndD3k%2br%20Q0T38gci9k4D87EwmfpK7zOaCoaiGiRQ6%2bDdYOv6hlzQ6Fdb2FOtlGQZharQ9WTC%20jOJBEj2oGUruc6P3fqhfUVllWi4cck0GgWZwcsmG1dDr8W6K9lrGA1dPbXoOns1B%20l58ghMGtHG7D0VlHs6SIqFmHr5kUgSQ4jJ2KZkVU8CrPBZ2HRtHQJJyjZWW2AbrE%20-----END%20RSA%20PRIVATE%20KEY-----"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/install_dkim_private_keys": {
      "get": {
        "description": "This function installs existing keys for use in a DomainKeys Identified Mail (DKIM) record. This is useful if you do not want the system to generate keys for DKIM records.\n\n**Notes:**\n\n* This function does **not** update the local DNS server's records.\n* If the local DNS server is authoritative for the domain's DNS records, use the WHM API 1 `enable_dkim` function to update the local DNS server's DNS records.\n* We recommend that you use the WHM API 1 `install_dkim_private_keys` and `enable_dkim` functions in a batch WHM API 1 call.",
        "operationId": "install_dkim_private_keys",
        "parameters": [
          {
            "description": "The domain for which to install an RSA private key to the local server's DKIM record.\n\n**Note:**\n\nTo install RSA private keys for multiple domains, increment the parameter name. For example, use the `domain-1=example-1.com`, `domain-2=example-2.com`, and `domain-3=example-3.com` parameters.",
            "examples": {
              "multiple": {
                "summary": "The domains for which to install an RSA private key to the local server's DKIM record.",
                "value": "domain-1=example-1.com&domain-2=example-2.com&domain-3=example-3.com"
              },
              "single": {
                "summary": "The domain for which to install an RSA private key to the local server's DKIM record.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "An RSA key in [Privacy-Enhanced Mail (PEM)](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.\n\n**Note:**\n\n * You **must** provide this parameter for each `domain` parameter.\n * To install multiple RSA keys for a domain, increment the parameter name. For example, use the `key-1`, `key-2` parameters.\nexamples:\n  single:\n    summary: An RSA key in [Privacy-Enhanced Mail (PEM)](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.\n    value: key\n  multiple:\n    summary: RSA keys in [Privacy-Enhanced Mail (PEM)](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.\n    value: key-1=KEYKEYKEY&key-2=KEYKEYKEY",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "AAAAB3NzaC1yc2EAAAABIwAAAQEA5kSivOqhs0U9ZMN20nxFe27QZ3t0lT2zbH7OSXylKd1rjAjYXGnSXC9j2uaZlemHlptBKVziMJC86ha7Hcj6dVOVrDQ6vF4q34bOCjtKLphQ0IjBzVIvqILH9eLJdRaOrS34CmgmPaisrCk5wKVlakygvUfcj3HzaTKS6THyZDGx5shdTpa9lby8tpOD3JceV7ay4w8r0DipoKPC0OLpvS4EABEeMo9sx8zQEaKv03XygjNCCYtFvxlQQIRGlVoL7mPaHSaL3anI05RpNbm/PS+9BhZg+BqNjU4ofHBbfkXk5MiN6M7ieR4Sk5BquccboGF13U5slNgmCEekdt0amw",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects containing information about the RSA private key installation to the local server's DKIM record.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The RSA private key's associated domain.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "msg": {
                                "description": "The RSA private key's installation status message.",
                                "example": "Installed Keys",
                                "type": "string"
                              },
                              "status": {
                                "description": "Whether the system installed the RSA private key to the local server's DKIM record.\n* `1` — The system installed the RSA private key.\n* `0` — The system **cannot** install the RSA private key.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "install_dkim_private_keys",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Install existing private key to DKIM record",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 install_dkim_private_keys domain='example.com' key='AAAAB3NzaC1yc2EAAAABIwAAAQEA5kSivOqhs0U9ZMN20nxFe27QZ3t0lT2zbH7OSXylKd1rjAjYXGnSXC9j2uaZlemHlptBKVziMJC86ha7Hcj6dVOVrDQ6vF4q34bOCjtKLphQ0IjBzVIvqILH9eLJdRaOrS34CmgmPaisrCk5wKVlakygvUfcj3HzaTKS6THyZDGx5shdTpa9lby8tpOD3JceV7ay4w8r0DipoKPC0OLpvS4EABEeMo9sx8zQEaKv03XygjNCCYtFvxlQQIRGlVoL7mPaHSaL3anI05RpNbm/PS+9BhZg+BqNjU4ofHBbfkXk5MiN6M7ieR4Sk5BquccboGF13U5slNgmCEekdt0amw'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/install_dkim_private_keys?api.version=1&domain=example.com&key=AAAAB3NzaC1yc2EAAAABIwAAAQEA5kSivOqhs0U9ZMN20nxFe27QZ3t0lT2zbH7OSXylKd1rjAjYXGnSXC9j2uaZlemHlptBKVziMJC86ha7Hcj6dVOVrDQ6vF4q34bOCjtKLphQ0IjBzVIvqILH9eLJdRaOrS34CmgmPaisrCk5wKVlakygvUfcj3HzaTKS6THyZDGx5shdTpa9lby8tpOD3JceV7ay4w8r0DipoKPC0OLpvS4EABEeMo9sx8zQEaKv03XygjNCCYtFvxlQQIRGlVoL7mPaHSaL3anI05RpNbm%2fPS%2b9BhZg%2bBqNjU4ofHBbfkXk5MiN6M7ieR4Sk5BquccboGF13U5slNgmCEekdt0amw"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/install_rpm_plugin": {
      "get": {
        "description": "This function starts a plugin installation. The installation runs as a background process.",
        "operationId": "install_rpm_plugin",
        "parameters": [
          {
            "description": "The name of a plugin RPM to install.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "plugin name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "log_entry": {
                          "description": "The name of the RPM plugin log entry for this installation, which includes a timestamp.",
                          "example": "2017-01-01T19:39:27Z_plugin_name",
                          "type": "string"
                        },
                        "pid": {
                          "description": "The PID of the process that will install the RPM.",
                          "example": 1234,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "install_rpm_plugin",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Install WHM plugin RPM package",
        "tags": [
          "RPM",
          "Install or Uninstall Package"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 install_rpm_plugin name='plugin name'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/install_rpm_plugin?api.version=1&name=plugin%20name"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/install_service_ssl_certificate": {
      "get": {
        "description": "This function installs a new SSL certificate on a service.\n\n**Important:**\n\nYou **must** restart the selected service after you install a new SSL certificate.",
        "operationId": "install_service_ssl_certificate",
        "parameters": [
          {
            "description": "The certificate to install.\n\n**Note:**\n\nYou **must** URI-encode this value.",
            "in": "query",
            "name": "crt",
            "required": true,
            "schema": {
              "example": "-----BEGIN CERTIFICATE-----\nMIIE3f4g5h7j73f235gy54hvcNAQELBQAwgYYxEDAOBgNVBAcMB2hvd097342boi0w389w0BCQEWEmMubGFycnl8293rhqurpg9qfgm5ldDEOMAwGA1UECAwFdGV4YXMxCzAJBgNVBAYTAlVTMSEwHwYDVQQDDBhiaW5hcnlhZ2Fpbi5jcGFuZWwubmluamExDzANBgNVBAoMBmNwYW5lbDAeFw0yMDA1MTgxODQ3NTFaFw0yMTA1MTgxODQ3NTFaMIGGMRAwDgYDVQQHDAdob3VzdG9uMSEwHwYJKoZIhvcNAQkBFhJjLmxhcnJ5QGNwYW5lbC5uZXQxDjAMBgNVBAgMBXRleGFzMQswCQYDVQQGEwJVUzEhMB8GA1UEAwwYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMQ8wDQYDVQQKDAZjcGFuZWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3i1fOlIUoURJf4BkMgoVvCeq5GZjzuCl6WXzz5WsADYUl84UzgXJIWtwBoTc2l32zyeWkIAkM/eNR12YMb0kXbgihbZtEsH0XimqcXmtiicoM3tjBi6u0cDEFr8TMdI396oArnnTc0CASfdXUGGtReZ6vOwxXOPPK5nYCvyFqBl1n0pQ2AV/Co9/WwhOCvV/Bm9aTzueZrbYB/9uW31LOpjs+0s1QNGHv6PTvH8HZFW/7Z9M3gSwUxfOOOQHEiiHRWfb/UqcTZZxjZhfY/IN6/SOsc3Z2t2KmQ5XI6ijCrjjJeaZSQYsge8LpHskr8G3WeTV9M9+1YnI7GRqs3+GdAgMBAAGjggEsMIIBKDAdBgNVHQ4EFgQUYWWThQj2tRL5PNkdPhUJdqEIcrswCQYDVR0TBAIwADCBtwYDVR0jBIGvMIGsgBRhZZOFCPa1Evk82R0+FQl2oQhyu6GBjKSBiTCBhjEQMA4GA1UEBwwHaG91c3RvbjEhMB8GCSqGSIb3DQEJARYSYy5sYXJyeUBjcGFuZWwubmV0MQ4wDAYDVQQIDAV0ZXhhczELMAkGA1UEBhMCVVMxITAfBgNVBAMMGGJpbmFyeWFnYWluLmNwYW5lbC5uaW5qYTEPMA0GA1UECgwGY3BhbmVsggUCGG94JTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwIwYDVR0RBBwwGoIYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMA0GCSqGSIb3DQEBCwUAA4IBAQBhKmds+XDTycHc2bsSH+zDkWIw58+J26Re9Q9VnUcrSKtV3mmtW88r8FuEHEZdAOzFPTJ3Tdd1fha15wuS5dzOV+bCRrDTvJmD4vRPkQ5TSdyJgpIjpjwiOP1+ZwaF7xZ+FLMTcEl8SXM+lkoKEUQpHFKyQ0zGIaLCVt0QyXx16lesPMgPeb/KRXJPy7ZrUtyF0z0LgvOSDGNsGt4rD8FVgtdHRlMJf/XIoFeV5Zk+rHNoCXIQXh4nBzM8X2r3IrQ1Qh0Z3njN2Ld8ZUlxsWctlLzvzmjARzIzvbglO3wod5XoRLS+fU6oVyQ9yuQLGG6r6Y7iBYSHfAO8e0pLkp7G\n-----END CERTIFICATE-----",
              "format": "pem-certificate",
              "type": "string"
            }
          },
          {
            "description": "The certificate's key.\n\n**Note:**\n\nYou **must** URI-encode this value.",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEA4FIdZcIKVK5+PtdzVm4CN45BXG5wX7KZ1/dP84MGIwtwxkkX\nhBqw7BawbHlexYXuarSnrHA8hm6RRxv/fRy+zOeg7y8v5CWG52m91GK7qSLxpruY\ngCJGJEK8fj6spbbLjxNd5XAmDwT80uMsq/3E9rGmg/ELY9X9vn5WlErRfi2Qjsiq\nx7AYUvcIkBHPOlRWzZgx2KjMjBU2U0w2RCUjgKgww/6xx2ccnTvn7HGvVjQMkh+1\nUYCdGvT8fR2qJBKHZ5Cjdfc9N304qZCqYMhcrHX2gJqc+9zLtLk7PoEYXu17l6nU\nO3C/IdzBXYWu+UoMzpZ5tc5jKRA3+I7ggKjJlwIDAQABAoIBAQDR4GI648qQolXh\n6+iws+qFGibTGU0wbET+SBjYx/0E6t5P1vEWm3Zu3WehhgkCm6WO1omOj9BBIs/w\nDSUEZNGrmwf64VZYijfm6gs+3EWiINyhWCF9uRORN5NuNquHvDhGHCOc2EnzgYIe\nuYgBP0R6X4phJjS26u8mvMO6qSnKd4wRrOf9ZU73L1VTmhMItshVxH2tuhKurkMV\njWDAjWeJfycWe4JVgYxM4GA6g5kKi5nrkhpVEsklh1FJZn65U0aWXUpHAm2ihhKf\nFq9FgC+8Xz8UAtf8JYbAW3D1E/0lRZuLt+5cosK8b2+9CIUNRjYMtyXlbI0RGwl9\nFO/9sv05AoGBAP0jfp8qUqf4u4pkE1W2SzzbQ6oYKYHTMiORVHi2qysgrxAZFKGj\nfW7c7UTpxlCaqqDBRQA+lZH16xVD3idwYvmw/9AKxSozxe3wKbQFRM+XYHc7la+2\nTiQiJgjflEadSa57FNgBB7SpeEzaIfmGBYWJXkM+6wuaGUz5qZs/SFJNAoGBAOLb\nOuh7CWTk5oISVBfqxnwFEpaMHT5vpzNBwUWUVMhrxNZP3OVSN++qKxpJhCF/M2no\nOdxX7CYkrGvHFTvV9WKpa0kYQGms+ybyoMOYxJax8rV+Zq9gg2QKwaakoJljaAlX\n5yUuy32YhLxWodQhE7mlhAUyXIuNLVuYee0Y2ZVzAoGAaV6tBnQHlAPljOW7ZqJL\nDzn2IIeOP4w6ArQsBVOETJ9+P6UxAVecjtlHqrfk5Qh8ng3VOxTSDb/f6yok/yW5\nDVawJVlWWQrUCQc/VMActIy+iuMym8G3JTNRwb/PaNVwJkD1nDRRkNI6UUM7gTJY\neg2EP1mhXWL3xSLnhsgAwsECgYEAqnm2xfeXsqM0+bAOU77RE2e4dTuryjybeDBE\nriXupIIf9DElvYrQkCDfrSxrx8RP/ZlOyd+kjXFnxMJhmYqKkW7hOZeo6ADe54DT\nAMmvidMFog/v2ID9m9NdfP4f1cTW7JaLE+0bbDGOJf4wNDn7GbphAIq88v3PhRKL\nJXpUIDMCgYEA2P7D/oZu+dEPW8JhUsDDXY238ZDbQzWBi6n1uUnMJCnUABd/mvuV\nILR/iSBHmt9UdH2YECwry58xFjhXwfTvPc155PiJddjENGFUqohjl0wh0VzLEyfF\nVb6iVMIdrycD/O4U26I3Qco2lQYPoPgrBkAGJ5/GCjkTiL0JssoMXa4=\n-----END RSA PRIVATE KEY-----",
              "format": "pem-private-key",
              "type": "string"
            }
          },
          {
            "description": "The service on which to install the SSL certificate.\n\n* `ftp`\n* `exim`\n* `dovecot`\n* `mail_apns`\n* `cpanel`\n\n**Important:**\n\nYou **must** restart the selected service after you install a new SSL certificate.",
            "in": "query",
            "name": "service",
            "required": true,
            "schema": {
              "enum": [
                "ftp",
                "exim",
                "dovecot",
                "mail_apns",
                "cpanel"
              ],
              "example": "cpanel",
              "type": "string"
            }
          },
          {
            "description": "The certificate's Certificate Authority (CA) bundle.\n\n**Note:**\n\nYou **must** URI-encode this value.",
            "in": "query",
            "name": "cabundle",
            "required": false,
            "schema": {
              "default": "",
              "example": "-----BEGIN CERTIFICATE-----\nMIIE3f4g5h7j73f235gy54hvcNAQELBQAwgYYxEDAOBgNVBAcMB2hvd097342boi0w389w0BCQEWEmMubGFycnl8293rhqurpg9qfgm5ldDEOMAwGA1UECAwFdGV4YXMxCzAJBgNVBAYTAlVTMSEwHwYDVQQDDBhiaW5hcnlhZ2Fpbi5jcGFuZWwubmluamExDzANBgNVBAoMBmNwYW5lbDAeFw0yMDA1MTgxODQ3NTFaFw0yMTA1MTgxODQ3NTFaMIGGMRAwDgYDVQQHDAdob3VzdG9uMSEwHwYJKoZIhvcNAQkBFhJjLmxhcnJ5QGNwYW5lbC5uZXQxDjAMBgNVBAgMBXRleGFzMQswCQYDVQQGEwJVUzEhMB8GA1UEAwwYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMQ8wDQYDVQQKDAZjcGFuZWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3i1fOlIUoURJf4BkMgoVvCeq5GZjzuCl6WXzz5WsADYUl84UzgXJIWtwBoTc2l32zyeWkIAkM/eNR12YMb0kXbgihbZtEsH0XimqcXmtiicoM3tjBi6u0cDEFr8TMdI396oArnnTc0CASfdXUGGtReZ6vOwxXOPPK5nYCvyFqBl1n0pQ2AV/Co9/WwhOCvV/Bm9aTzueZrbYB/9uW31LOpjs+0s1QNGHv6PTvH8HZFW/7Z9M3gSwUxfOOOQHEiiHRWfb/UqcTZZxjZhfY/IN6/SOsc3Z2t2KmQ5XI6ijCrjjJeaZSQYsge8LpHskr8G3WeTV9M9+1YnI7GRqs3+GdAgMBAAGjggEsMIIBKDAdBgNVHQ4EFgQUYWWThQj2tRL5PNkdPhUJdqEIcrswCQYDVR0TBAIwADCBtwYDVR0jBIGvMIGsgBRhZZOFCPa1Evk82R0+FQl2oQhyu6GBjKSBiTCBhjEQMA4GA1UEBwwHaG91c3RvbjEhMB8GCSqGSIb3DQEJARYSYy5sYXJyeUBjcGFuZWwubmV0MQ4wDAYDVQQIDAV0ZXhhczELMAkGA1UEBhMCVVMxITAfBgNVBAMMGGJpbmFyeWFnYWluLmNwYW5lbC5uaW5qYTEPMA0GA1UECgwGY3BhbmVsggUCGG94JTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwIwYDVR0RBBwwGoIYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMA0GCSqGSIb3DQEBCwUAA4IBAQBhKmds+XDTycHc2bsSH+zDkWIw58+J26Re9Q9VnUcrSKtV3mmtW88r8FuEHEZdAOzFPTJ3Tdd1fha15wuS5dzOV+bCRrDTvJmD4vRPkQ5TSdyJgpIjpjwiOP1+ZwaF7xZ+FLMTcEl8SXM+lkoKEUQpHFKyQ0zGIaLCVt0QyXx16lesPMgPeb/KRXJPy7ZrUtyF0z0LgvOSDGNsGt4rD8FVgtdHRlMJf/XIoFeV5Zk+rHNoCXIQXh4nBzM8X2r3IrQ1Qh0Z3njN2Ld8ZUlxsWctlLzvzmjARzIzvbglO3wod5XoRLS+fU6oVyQ9yuQLGG6r6Y7iBYSHfAO8e0pLkp7G\n-----END CERTIFICATE-----",
              "format": "pem-certificate",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "certificate": {
                          "description": "The SSL certificate's contents.",
                          "example": "-----BEGIN CERTIFICATE-----\nMIIE3f4g5h7j73f235gy54hvcNAQELBQAwgYYxEDAOBgNVBAcM\nB2hvd097342boi0w389w0BCQEWEmMubGFycnl8293rhqurpg9qfgm5ldDEOMAwG\nA1UECAwFdGV4YXMxCzAJBgNVBAYTAlVTMSEwHwYDVQQDDBhiaW5hcnlhZ2Fpbi5j\ncGFuZWwubmluamExDzANBgNVBAoMBmNwYW5lbDAeFw0yMDA1MTgxODQ3NTFaFw0y\nMTA1MTgxODQ3NTFaMIGGMRAwDgYDVQQHDAdob3VzdG9uMSEwHwYJKoZIhvcNAQkB\nFhJjLmxhcnJ5QGNwYW5lbC5uZXQxDjAMBgNVBAgMBXRleGFzMQswCQYDVQQGEwJV\nUzEhMB8GA1UEAwwYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMQ8wDQYDVQQKDAZj\ncGFuZWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3i1fOlIUoURJf\n4BkMgoVvCeq5GZjzuCl6WXzz5WsADYUl84UzgXJIWtwBoTc2l32zyeWkIAkM/eNR\n12YMb0kXbgihbZtEsH0XimqcXmtiicoM3tjBi6u0cDEFr8TMdI396oArnnTc0CAS\nfdXUGGtReZ6vOwxXOPPK5nYCvyFqBl1n0pQ2AV/Co9/WwhOCvV/Bm9aTzueZrbYB\n/9uW31LOpjs+0s1QNGHv6PTvH8HZFW/7Z9M3gSwUxfOOOQHEiiHRWfb/UqcTZZxj\nZhfY/IN6/SOsc3Z2t2KmQ5XI6ijCrjjJeaZSQYsge8LpHskr8G3WeTV9M9+1YnI7\nGRqs3+GdAgMBAAGjggEsMIIBKDAdBgNVHQ4EFgQUYWWThQj2tRL5PNkdPhUJdqEI\ncrswCQYDVR0TBAIwADCBtwYDVR0jBIGvMIGsgBRhZZOFCPa1Evk82R0+FQl2oQhy\nu6GBjKSBiTCBhjEQMA4GA1UEBwwHaG91c3RvbjEhMB8GCSqGSIb3DQEJARYSYy5s\nYXJyeUBjcGFuZWwubmV0MQ4wDAYDVQQIDAV0ZXhhczELMAkGA1UEBhMCVVMxITAf\nBgNVBAMMGGJpbmFyeWFnYWluLmNwYW5lbC5uaW5qYTEPMA0GA1UECgwGY3BhbmVs\nggUCGG94JTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwIwYDVR0RBBww\nGoIYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMA0GCSqGSIb3DQEBCwUAA4IBAQBh\nKmds+XDTycHc2bsSH+zDkWIw58+J26Re9Q9VnUcrSKtV3mmtW88r8FuEHEZdAOzF\nPTJ3Tdd1fha15wuS5dzOV+bCRrDTvJmD4vRPkQ5TSdyJgpIjpjwiOP1+ZwaF7xZ+\nFLMTcEl8SXM+lkoKEUQpHFKyQ0zGIaLCVt0QyXx16lesPMgPeb/KRXJPy7ZrUtyF\n0z0LgvOSDGNsGt4rD8FVgtdHRlMJf/XIoFeV5Zk+rHNoCXIQXh4nBzM8X2r3IrQ1\nQh0Z3njN2Ld8ZUlxsWctlLzvzmjARzIzvbglO3wod5XoRLS+fU6oVyQ9yuQLGG6r\n6Y7iBYSHfAO8e0pLkp7G\n-----END CERTIFICATE-----",
                          "format": "pem-certificate",
                          "type": "string"
                        },
                        "certificate_info": {
                          "description": "An object containing the service's certificate information.",
                          "properties": {
                            "domains": {
                              "description": "A list of domains that correspond to the certificate.",
                              "items": {
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "ecdsa_curve_name": {
                              "description": "The ECDSA curve that the certificate's key uses.\n\n* `prime256v1`\n* `secp384r1`\n* `null` — The certificate's key is **not** an ECDSA key.",
                              "enum": [
                                "prime256v1",
                                "secp384r1"
                              ],
                              "example": null,
                              "nullable": true,
                              "type": "string"
                            },
                            "ecdsa_public": {
                              "description": "The certificate's key's ECDSA compressed public point, in hexadecimal format.\n\n* `null` — The certificate's key is **not** an ECDSA key.",
                              "example": null,
                              "nullable": true,
                              "type": "string"
                            },
                            "is_self_signed": {
                              "description": "Whether the certificate is self-signed.\n\n* `1` — Self-signed.\n* `0` — **Not** self-signed.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "issuer.commonName": {
                              "description": "The certificate's Common Name.",
                              "example": "example.com",
                              "nullable": true,
                              "type": "string"
                            },
                            "issuer.organizationName": {
                              "description": "The certificate's Organization Name.",
                              "example": "Organization",
                              "type": "string"
                            },
                            "issuer_text": {
                              "description": "The certificate's issuer information.",
                              "example": "localityName\ncity\nemailaddress\nc.example@example.com\nstateOrProvinceName\nstate\ncountryName\nUS\ncommonName\nhostname\norganizationName\ncpanel",
                              "type": "string"
                            },
                            "key_algorithm": {
                              "description": "The certificate's key's algorithm.\n\n* `rsaEncryption` — RSA.\n* `id-ecPublicKey` — ECDSA.",
                              "enum": [
                                "rsaEncryption",
                                "id-ecPublicKey"
                              ],
                              "example": "rsaEncryption",
                              "type": "string"
                            },
                            "modulus": {
                              "description": "The certificate's key's modulus, in hexadecimal format.\n\n* `null` — The certificate's key is **not** an RSA key.",
                              "example": "a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db",
                              "nullable": true,
                              "type": "string"
                            },
                            "modulus_length": {
                              "description": "The certificate's key's modulus size, in bits.\n\n* `null` — The certificate's key is **not** an RSA key.",
                              "example": 2048,
                              "type": "integer"
                            },
                            "not_after": {
                              "description": "The date the certificate expires.",
                              "example": 1601467200,
                              "format": "unix_timestamp",
                              "type": "integer"
                            },
                            "not_before": {
                              "description": "The certificate's validation date.",
                              "example": 1601467200,
                              "format": "unix_timestamp",
                              "type": "integer"
                            },
                            "signature_algorithm": {
                              "description": "The certificate's OID hash algorithm signature.",
                              "example": "sha256WithRSAEncryption",
                              "type": "string"
                            },
                            "validation_type": {
                              "description": "The certificate's validation type.\n\n* `ev` — Extended Validation.\n* `ov` — Organization Validation.\n* `dv` — Domain Validation.\n* `null` — The certificate does not match one of the system’s recognized validation types.",
                              "enum": [
                                "ev",
                                "ov",
                                "dv"
                              ],
                              "example": "dv",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "service": {
                          "description": "The service that the certificate corresponds to.\n\n* `ftp`\n* `exim`\n* `dovecot`\n* `cpanel`\n* `mail_apns`",
                          "enum": [
                            "ftp",
                            "exim",
                            "dovecot",
                            "cpanel",
                            "mail_apns"
                          ],
                          "example": "cpanel",
                          "type": "string"
                        },
                        "service_description": {
                          "description": "The service's description.",
                          "example": "Calendar, cPanel, WebDisk, Webmail, and WHM Services",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "install_service_ssl_certificate",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Install SSL certificate for service",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 install_service_ssl_certificate service='cpanel' crt='-----BEGIN CERTIFICATE-----\nMIIE3f4g5h7j73f235gy54hvcNAQELBQAwgYYxEDAOBgNVBAcMB2hvd097342boi0w389w0BCQEWEmMubGFycnl8293rhqurpg9qfgm5ldDEOMAwGA1UECAwFdGV4YXMxCzAJBgNVBAYTAlVTMSEwHwYDVQQDDBhiaW5hcnlhZ2Fpbi5jcGFuZWwubmluamExDzANBgNVBAoMBmNwYW5lbDAeFw0yMDA1MTgxODQ3NTFaFw0yMTA1MTgxODQ3NTFaMIGGMRAwDgYDVQQHDAdob3VzdG9uMSEwHwYJKoZIhvcNAQkBFhJjLmxhcnJ5QGNwYW5lbC5uZXQxDjAMBgNVBAgMBXRleGFzMQswCQYDVQQGEwJVUzEhMB8GA1UEAwwYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMQ8wDQYDVQQKDAZjcGFuZWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3i1fOlIUoURJf4BkMgoVvCeq5GZjzuCl6WXzz5WsADYUl84UzgXJIWtwBoTc2l32zyeWkIAkM/eNR12YMb0kXbgihbZtEsH0XimqcXmtiicoM3tjBi6u0cDEFr8TMdI396oArnnTc0CASfdXUGGtReZ6vOwxXOPPK5nYCvyFqBl1n0pQ2AV/Co9/WwhOCvV/Bm9aTzueZrbYB/9uW31LOpjs+0s1QNGHv6PTvH8HZFW/7Z9M3gSwUxfOOOQHEiiHRWfb/UqcTZZxjZhfY/IN6/SOsc3Z2t2KmQ5XI6ijCrjjJeaZSQYsge8LpHskr8G3WeTV9M9+1YnI7GRqs3+GdAgMBAAGjggEsMIIBKDAdBgNVHQ4EFgQUYWWThQj2tRL5PNkdPhUJdqEIcrswCQYDVR0TBAIwADCBtwYDVR0jBIGvMIGsgBRhZZOFCPa1Evk82R0+FQl2oQhyu6GBjKSBiTCBhjEQMA4GA1UEBwwHaG91c3RvbjEhMB8GCSqGSIb3DQEJARYSYy5sYXJyeUBjcGFuZWwubmV0MQ4wDAYDVQQIDAV0ZXhhczELMAkGA1UEBhMCVVMxITAfBgNVBAMMGGJpbmFyeWFnYWluLmNwYW5lbC5uaW5qYTEPMA0GA1UECgwGY3BhbmVsggUCGG94JTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwIwYDVR0RBBwwGoIYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMA0GCSqGSIb3DQEBCwUAA4IBAQBhKmds+XDTycHc2bsSH+zDkWIw58+J26Re9Q9VnUcrSKtV3mmtW88r8FuEHEZdAOzFPTJ3Tdd1fha15wuS5dzOV+bCRrDTvJmD4vRPkQ5TSdyJgpIjpjwiOP1+ZwaF7xZ+FLMTcEl8SXM+lkoKEUQpHFKyQ0zGIaLCVt0QyXx16lesPMgPeb/KRXJPy7ZrUtyF0z0LgvOSDGNsGt4rD8FVgtdHRlMJf/XIoFeV5Zk+rHNoCXIQXh4nBzM8X2r3IrQ1Qh0Z3njN2Ld8ZUlxsWctlLzvzmjARzIzvbglO3wod5XoRLS+fU6oVyQ9yuQLGG6r6Y7iBYSHfAO8e0pLkp7G\n-----END CERTIFICATE-----' key='-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEA4FIdZcIKVK5+PtdzVm4CN45BXG5wX7KZ1/dP84MGIwtwxkkX\nhBqw7BawbHlexYXuarSnrHA8hm6RRxv/fRy+zOeg7y8v5CWG52m91GK7qSLxpruY\ngCJGJEK8fj6spbbLjxNd5XAmDwT80uMsq/3E9rGmg/ELY9X9vn5WlErRfi2Qjsiq\nx7AYUvcIkBHPOlRWzZgx2KjMjBU2U0w2RCUjgKgww/6xx2ccnTvn7HGvVjQMkh+1\nUYCdGvT8fR2qJBKHZ5Cjdfc9N304qZCqYMhcrHX2gJqc+9zLtLk7PoEYXu17l6nU\nO3C/IdzBXYWu+UoMzpZ5tc5jKRA3+I7ggKjJlwIDAQABAoIBAQDR4GI648qQolXh\n6+iws+qFGibTGU0wbET+SBjYx/0E6t5P1vEWm3Zu3WehhgkCm6WO1omOj9BBIs/w\nDSUEZNGrmwf64VZYijfm6gs+3EWiINyhWCF9uRORN5NuNquHvDhGHCOc2EnzgYIe\nuYgBP0R6X4phJjS26u8mvMO6qSnKd4wRrOf9ZU73L1VTmhMItshVxH2tuhKurkMV\njWDAjWeJfycWe4JVgYxM4GA6g5kKi5nrkhpVEsklh1FJZn65U0aWXUpHAm2ihhKf\nFq9FgC+8Xz8UAtf8JYbAW3D1E/0lRZuLt+5cosK8b2+9CIUNRjYMtyXlbI0RGwl9\nFO/9sv05AoGBAP0jfp8qUqf4u4pkE1W2SzzbQ6oYKYHTMiORVHi2qysgrxAZFKGj\nfW7c7UTpxlCaqqDBRQA+lZH16xVD3idwYvmw/9AKxSozxe3wKbQFRM+XYHc7la+2\nTiQiJgjflEadSa57FNgBB7SpeEzaIfmGBYWJXkM+6wuaGUz5qZs/SFJNAoGBAOLb\nOuh7CWTk5oISVBfqxnwFEpaMHT5vpzNBwUWUVMhrxNZP3OVSN++qKxpJhCF/M2no\nOdxX7CYkrGvHFTvV9WKpa0kYQGms+ybyoMOYxJax8rV+Zq9gg2QKwaakoJljaAlX\n5yUuy32YhLxWodQhE7mlhAUyXIuNLVuYee0Y2ZVzAoGAaV6tBnQHlAPljOW7ZqJL\nDzn2IIeOP4w6ArQsBVOETJ9+P6UxAVecjtlHqrfk5Qh8ng3VOxTSDb/f6yok/yW5\nDVawJVlWWQrUCQc/VMActIy+iuMym8G3JTNRwb/PaNVwJkD1nDRRkNI6UUM7gTJY\neg2EP1mhXWL3xSLnhsgAwsECgYEAqnm2xfeXsqM0+bAOU77RE2e4dTuryjybeDBE\nriXupIIf9DElvYrQkCDfrSxrx8RP/ZlOyd+kjXFnxMJhmYqKkW7hOZeo6ADe54DT\nAMmvidMFog/v2ID9m9NdfP4f1cTW7JaLE+0bbDGOJf4wNDn7GbphAIq88v3PhRKL\nJXpUIDMCgYEA2P7D/oZu+dEPW8JhUsDDXY238ZDbQzWBi6n1uUnMJCnUABd/mvuV\nILR/iSBHmt9UdH2YECwry58xFjhXwfTvPc155PiJddjENGFUqohjl0wh0VzLEyfF\nVb6iVMIdrycD/O4U26I3Qco2lQYPoPgrBkAGJ5/GCjkTiL0JssoMXa4=\n-----END RSA PRIVATE KEY-----'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/install_service_ssl_certificate?api.version=1&service=cpanel&crt=-----BEGIN%20CERTIFICATE-----%0aMIIE3f4g5h7j73f235gy54hvcNAQELBQAwgYYxEDAOBgNVBAcMB2hvd097342boi0w389w0BCQEWEmMubGFycnl8293rhqurpg9qfgm5ldDEOMAwGA1UECAwFdGV4YXMxCzAJBgNVBAYTAlVTMSEwHwYDVQQDDBhiaW5hcnlhZ2Fpbi5jcGFuZWwubmluamExDzANBgNVBAoMBmNwYW5lbDAeFw0yMDA1MTgxODQ3NTFaFw0yMTA1MTgxODQ3NTFaMIGGMRAwDgYDVQQHDAdob3VzdG9uMSEwHwYJKoZIhvcNAQkBFhJjLmxhcnJ5QGNwYW5lbC5uZXQxDjAMBgNVBAgMBXRleGFzMQswCQYDVQQGEwJVUzEhMB8GA1UEAwwYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMQ8wDQYDVQQKDAZjcGFuZWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3i1fOlIUoURJf4BkMgoVvCeq5GZjzuCl6WXzz5WsADYUl84UzgXJIWtwBoTc2l32zyeWkIAkM%2feNR12YMb0kXbgihbZtEsH0XimqcXmtiicoM3tjBi6u0cDEFr8TMdI396oArnnTc0CASfdXUGGtReZ6vOwxXOPPK5nYCvyFqBl1n0pQ2AV%2fCo9%2fWwhOCvV%2fBm9aTzueZrbYB%2f9uW31LOpjs%2b0s1QNGHv6PTvH8HZFW%2f7Z9M3gSwUxfOOOQHEiiHRWfb%2fUqcTZZxjZhfY%2fIN6%2fSOsc3Z2t2KmQ5XI6ijCrjjJeaZSQYsge8LpHskr8G3WeTV9M9%2b1YnI7GRqs3%2bGdAgMBAAGjggEsMIIBKDAdBgNVHQ4EFgQUYWWThQj2tRL5PNkdPhUJdqEIcrswCQYDVR0TBAIwADCBtwYDVR0jBIGvMIGsgBRhZZOFCPa1Evk82R0%2bFQl2oQhyu6GBjKSBiTCBhjEQMA4GA1UEBwwHaG91c3RvbjEhMB8GCSqGSIb3DQEJARYSYy5sYXJyeUBjcGFuZWwubmV0MQ4wDAYDVQQIDAV0ZXhhczELMAkGA1UEBhMCVVMxITAfBgNVBAMMGGJpbmFyeWFnYWluLmNwYW5lbC5uaW5qYTEPMA0GA1UECgwGY3BhbmVsggUCGG94JTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwIwYDVR0RBBwwGoIYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMA0GCSqGSIb3DQEBCwUAA4IBAQBhKmds%2bXDTycHc2bsSH%2bzDkWIw58%2bJ26Re9Q9VnUcrSKtV3mmtW88r8FuEHEZdAOzFPTJ3Tdd1fha15wuS5dzOV%2bbCRrDTvJmD4vRPkQ5TSdyJgpIjpjwiOP1%2bZwaF7xZ%2bFLMTcEl8SXM%2blkoKEUQpHFKyQ0zGIaLCVt0QyXx16lesPMgPeb%2fKRXJPy7ZrUtyF0z0LgvOSDGNsGt4rD8FVgtdHRlMJf%2fXIoFeV5Zk%2brHNoCXIQXh4nBzM8X2r3IrQ1Qh0Z3njN2Ld8ZUlxsWctlLzvzmjARzIzvbglO3wod5XoRLS%2bfU6oVyQ9yuQLGG6r6Y7iBYSHfAO8e0pLkp7G%0a-----END%20CERTIFICATE-----&key=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0aMIIEpQIBAAKCAQEA4FIdZcIKVK5%2bPtdzVm4CN45BXG5wX7KZ1%2fdP84MGIwtwxkkX%0ahBqw7BawbHlexYXuarSnrHA8hm6RRxv%2ffRy%2bzOeg7y8v5CWG52m91GK7qSLxpruY%0agCJGJEK8fj6spbbLjxNd5XAmDwT80uMsq%2f3E9rGmg%2fELY9X9vn5WlErRfi2Qjsiq%0ax7AYUvcIkBHPOlRWzZgx2KjMjBU2U0w2RCUjgKgww%2f6xx2ccnTvn7HGvVjQMkh%2b1%0aUYCdGvT8fR2qJBKHZ5Cjdfc9N304qZCqYMhcrHX2gJqc%2b9zLtLk7PoEYXu17l6nU%0aO3C%2fIdzBXYWu%2bUoMzpZ5tc5jKRA3%2bI7ggKjJlwIDAQABAoIBAQDR4GI648qQolXh%0a6%2biws%2bqFGibTGU0wbET%2bSBjYx%2f0E6t5P1vEWm3Zu3WehhgkCm6WO1omOj9BBIs%2fw%0aDSUEZNGrmwf64VZYijfm6gs%2b3EWiINyhWCF9uRORN5NuNquHvDhGHCOc2EnzgYIe%0auYgBP0R6X4phJjS26u8mvMO6qSnKd4wRrOf9ZU73L1VTmhMItshVxH2tuhKurkMV%0ajWDAjWeJfycWe4JVgYxM4GA6g5kKi5nrkhpVEsklh1FJZn65U0aWXUpHAm2ihhKf%0aFq9FgC%2b8Xz8UAtf8JYbAW3D1E%2f0lRZuLt%2b5cosK8b2%2b9CIUNRjYMtyXlbI0RGwl9%0aFO%2f9sv05AoGBAP0jfp8qUqf4u4pkE1W2SzzbQ6oYKYHTMiORVHi2qysgrxAZFKGj%0afW7c7UTpxlCaqqDBRQA%2blZH16xVD3idwYvmw%2f9AKxSozxe3wKbQFRM%2bXYHc7la%2b2%0aTiQiJgjflEadSa57FNgBB7SpeEzaIfmGBYWJXkM%2b6wuaGUz5qZs%2fSFJNAoGBAOLb%0aOuh7CWTk5oISVBfqxnwFEpaMHT5vpzNBwUWUVMhrxNZP3OVSN%2b%2bqKxpJhCF%2fM2no%0aOdxX7CYkrGvHFTvV9WKpa0kYQGms%2bybyoMOYxJax8rV%2bZq9gg2QKwaakoJljaAlX%0a5yUuy32YhLxWodQhE7mlhAUyXIuNLVuYee0Y2ZVzAoGAaV6tBnQHlAPljOW7ZqJL%0aDzn2IIeOP4w6ArQsBVOETJ9%2bP6UxAVecjtlHqrfk5Qh8ng3VOxTSDb%2ff6yok%2fyW5%0aDVawJVlWWQrUCQc%2fVMActIy%2biuMym8G3JTNRwb%2fPaNVwJkD1nDRRkNI6UUM7gTJY%0aeg2EP1mhXWL3xSLnhsgAwsECgYEAqnm2xfeXsqM0%2bbAOU77RE2e4dTuryjybeDBE%0ariXupIIf9DElvYrQkCDfrSxrx8RP%2fZlOyd%2bkjXFnxMJhmYqKkW7hOZeo6ADe54DT%0aAMmvidMFog%2fv2ID9m9NdfP4f1cTW7JaLE%2b0bbDGOJf4wNDn7GbphAIq88v3PhRKL%0aJXpUIDMCgYEA2P7D%2foZu%2bdEPW8JhUsDDXY238ZDbQzWBi6n1uUnMJCnUABd%2fmvuV%0aILR%2fiSBHmt9UdH2YECwry58xFjhXwfTvPc155PiJddjENGFUqohjl0wh0VzLEyfF%0aVb6iVMIdrycD%2fO4U26I3Qco2lQYPoPgrBkAGJ5%2fGCjkTiL0JssoMXa4%3d%0a-----END%20RSA%20PRIVATE%20KEY-----"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/install_spf_records": {
      "get": {
        "description": "This function installs a Sender Policy Framework (SPF) record for a domain on the DNS server.",
        "operationId": "install_spf_records",
        "parameters": [
          {
            "description": "The domain for which to install an SPF record on the DNS server.\n\n**Note:**\n\nTo install multiple SPF records, increment the parameter name. For example, use the `domain-1=example-1.com`, `domain-2=example-2.com`, and `domain-3=example3.com` parameters.",
            "examples": {
              "multiple": {
                "summary": "Multiple domains",
                "value": "domain-1=example-1.com&domain-2=example-2.com&domain-3=example-3.com"
              },
              "single": {
                "summary": "Single domain",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "An SPF record.\n\nYou **must** provide this parameter for every `domain` parameter.",
            "in": "query",
            "name": "record",
            "required": true,
            "schema": {
              "example": "v%3Dspf1%20%2Bip4%3A1192.0.2.0%20-all",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects containing information about the domain's SPF record installation to the DNS server.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The SPF record's associated domain on the DNS server.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "msg": {
                                "description": "The SPF record's installation status to the DNS server.",
                                "example": "[REPLACE:TXT@example.com.:v=spf1 ip4:192.0.2.0 -all]",
                                "type": "string"
                              },
                              "status": {
                                "description": "Whether the system installed the SPF record to the DNS server.\n* `1` — The system installed the SPF record on the DNS server.\n* `0` — The system **cannot** install the SPF record on the DNS server.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "install_spf_records",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Install domain SPF record",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 install_spf_records domain='example.com' record='v%3Dspf1%20%2Bip4%3A1192.0.2.0%20-all'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/install_spf_records?api.version=1&domain=example.com&record=v%253Dspf1%2520%252Bip4%253A1192.0.2.0%2520-all"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/installable_mysql_versions": {
      "get": {
        "description": "This function lists all available versions of MySQL® and MariaDB.\n\n**Important:**\n\nWhen you disable the [MySQL/MariaDB](https://go.cpanel.net/howtouseserverprofiles#roles) role **and** remote MySQL is **not** already configured, the system disables this function.",
        "operationId": "installable_mysql_versions",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "versions": {
                          "description": "An array of objects that contain information about the database version information.",
                          "items": {
                            "properties": {
                              "server": {
                                "description": "The server's database engine.\n* `mysql`\n* `mariadb`",
                                "enum": [
                                  "mysql",
                                  "mariadb"
                                ],
                                "example": "mariadb",
                                "type": "string"
                              },
                              "version": {
                                "description": "The version number in `major.minor` format.",
                                "example": "10.0",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "installable_mysql_versions",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return available MySQL versions",
        "tags": [
          "Databases",
          "Manage MySQL Server"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 installable_mysql_versions"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/installable_mysql_versions?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "cPanel 11.48"
      }
    },
    "/installed_versions": {
      "get": {
        "description": "This function lists the versions of third-party software that ship with cPanel & WHM.",
        "operationId": "installed_versions",
        "parameters": [
          {
            "description": "Whether to list the server's installed RPMs in the function's\n`cpanel_packages`, `ea_4_packages`, and `os_packages` arrays.\n\n* `1` - List.\n* `0` - Do **not** list.",
            "in": "query",
            "name": "packages",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": {
                        "apache": "2.4.12",
                        "apache_php_default_version": 0,
                        "apache_php_versions": [
                          0
                        ],
                        "bind": "9.9.4-29",
                        "clamav": "0.99.2-1",
                        "cpanel_and_whm": "11.64.0.9999",
                        "cpanel_packages": [
                          "cpanel-ace-editor-1.2.6-1.cp1166.noarch",
                          "cpanel-yui-2.9.0-5.cp1136.noarch"
                        ],
                        "cpanel_php": "7.2.7-4",
                        "dovecot": "2.2.31 (65cde28)",
                        "ea_4_packages": [],
                        "easyapache": "4",
                        "exim": "4.89-2",
                        "horde": "5.2.10",
                        "linux_kernel": "3.10.0-327.18.2.el7.x86_64",
                        "mailman": "2.1.23-9",
                        "mariadb": 0,
                        "mariadb_build": 0,
                        "munin": 0,
                        "mydns": 0,
                        "mysql": "5.7.61",
                        "mysql_build": "5.7.61-1",
                        "nscd": "2.17-222",
                        "nsd": 0,
                        "openssh": "7.4p1-21",
                        "operating_system_name": "centos",
                        "operating_system_version": "7.2",
                        "os_packages": [
                          "ImageMagick-6.7.8.9-15.el7_2.x86_64",
                          "zsh-5.0.2-14.el7.x86_64"
                        ],
                        "p0f": "3.09b-1",
                        "postgresql": 0,
                        "postgresql_build": 0,
                        "powerdns": 0,
                        "proftpd": 0,
                        "pureftpd": "1.0.45",
                        "roundcube": "1.2.4-1",
                        "rsyslog": "8.24.0-16",
                        "spamd": "3.4.2",
                        "squirrelmail": 0
                      },
                      "properties": {
                        "apache": {
                          "description": "The Apache® version.\n\n* `0` - Apache is **not** installed on the server.",
                          "example": "2.4.12",
                          "oneOf": [
                            {
                              "description": "A version of Apache.",
                              "type": "string"
                            },
                            {
                              "description": "Apache is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "apache_php_default_version": {
                          "description": "The default PHP version for Apache.\n\n* `0` - PHP for Apache is **not** installed on the server.",
                          "example": "7.3.21-1.1.1",
                          "oneOf": [
                            {
                              "description": "A version for Apache of default PHP.",
                              "type": "string"
                            },
                            {
                              "description": "default PHP is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "apache_php_versions": {
                          "description": "An array of PHP versions that the system installs for Apache.\n\nIf PHP for Apache is **not** installed, this will return an array containing `0`.\n\n**Note:**\n\nUnlike other keys in this object, this returns a `[0]` value when PHP for Apache is **not** installed.",
                          "example": [
                            "7.1.33-3.4.2",
                            "7.2.33-1.1.1",
                            "7.3.21-1.1.1"
                          ],
                          "items": {
                            "oneOf": [
                              {
                                "description": "A version of PHP for Apache.",
                                "type": "string"
                              },
                              {
                                "description": "PHP for Apache is **not** installed on the server.",
                                "enum": [
                                  0
                                ],
                                "type": "integer"
                              }
                            ]
                          },
                          "type": "array"
                        },
                        "bind": {
                          "description": "The BIND version.\n\n* `0` - BIND is **not** installed on the server.",
                          "example": "9.9.4-29",
                          "oneOf": [
                            {
                              "description": "A version of BIND.",
                              "type": "string"
                            },
                            {
                              "description": "BIND is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "clamav": {
                          "description": "The ClamAV version.\n\n* `0` - ClamAV is **not** installed on the server.",
                          "example": "0.99.2-1",
                          "oneOf": [
                            {
                              "description": "A version of ClamAV.",
                              "type": "string"
                            },
                            {
                              "description": "ClamAV is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "cpanel_and_whm": {
                          "description": "The cPanel & WHM version.",
                          "example": "11.64.0.9999",
                          "type": "string"
                        },
                        "cpanel_packages": {
                          "description": "An array of cPanel-provided RPMs.\n\n**Note:**\n\nThe function **only** returns this array if you set the `packages` parameter to `1`.",
                          "example": [
                            "cpanel-ace-editor-1.1.9-1.cp1152.noarch",
                            "cpanel-analog-6.0-2.cp1136.x86_64",
                            "cpanel-angular-chosen-1.4.0-1.cp1158.noarch"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cpanel_php": {
                          "description": "The system PHP version.\n\n* `0` - System PHP is **not** installed on the server.",
                          "example": "7.2.7-4",
                          "oneOf": [
                            {
                              "description": "A version of cPanel & WHM.",
                              "type": "string"
                            },
                            {
                              "description": "cPanel & WHM is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "dovecot": {
                          "description": "The Dovecot version.\n\n* `0` - Dovecot is **not** installed on the server.",
                          "example": "2.2.31 (65cde28)",
                          "oneOf": [
                            {
                              "description": "A version of Dovecot.",
                              "type": "string"
                            },
                            {
                              "description": "Dovecot is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "ea_4_packages": {
                          "description": "An array of EasyApache 4 (EA4)-provided RPMs.\n\n**Note:**\n\nThe function **only** returns this array if you set the `packages` parameter to `1`.",
                          "example": [],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "easyapache": {
                          "description": "The EasyApache version.\n\n* `0` - EasyApache is **not** installed on the server.",
                          "example": "4",
                          "oneOf": [
                            {
                              "description": "A version of EasyApache.",
                              "type": "string"
                            },
                            {
                              "description": "EasyApache is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "exim": {
                          "description": "The Exim version.\n\n* `0` - Exim is **not** installed on the server.",
                          "example": "4.89-2",
                          "oneOf": [
                            {
                              "description": "A version of Exim.",
                              "type": "string"
                            },
                            {
                              "description": "Exim is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "horde": {
                          "description": "The Horde version.\n\n* `0` - Horde is **not** installed on the server.",
                          "example": "5.2.10",
                          "oneOf": [
                            {
                              "description": "A version of Horde.",
                              "type": "string"
                            },
                            {
                              "description": "Horde is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "linux_kernel": {
                          "description": "The Linux® kernel version.",
                          "example": "3.10.0-327.18.2.e17.x86_64",
                          "type": "string"
                        },
                        "mailman": {
                          "description": "The Mailman version.\n\n* `0` - Mailman is **not** installed on the server.",
                          "example": "2.1.23-9",
                          "oneOf": [
                            {
                              "description": "A version of Mailman.",
                              "type": "string"
                            },
                            {
                              "description": "Mailman is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "mariadb": {
                          "description": "The MariaDB® version number.\n\n* `0` - MariaDB is **not** installed on the server.",
                          "example": "5.5.65",
                          "oneOf": [
                            {
                              "description": "A version number of MariaDB.",
                              "type": "string"
                            },
                            {
                              "description": "MariaDB is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "mariadb_build": {
                          "description": "The MariaDB RPM's version number.\n\n* `0` - MariaDB RPM's is **not** installed on the server.",
                          "example": "5.5.65-1",
                          "oneOf": [
                            {
                              "description": "A version number of MariaDB RPM's.",
                              "type": "string"
                            },
                            {
                              "description": "MariaDB RPM's is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "munin": {
                          "description": "The Munin version.\n\n* `0` - Munin is **not** installed on the server.",
                          "example": "2.0.30",
                          "oneOf": [
                            {
                              "description": "A version of Munin.",
                              "type": "string"
                            },
                            {
                              "description": "Munin is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "mydns": {
                          "deprecated": true,
                          "description": "The MyDNS version.\n\n* `0` - MyDNS is **not** installed on the server.\n\n**Warning:**\n\nWe deprecated the MyDNS and NSD nameservers and plan to remove them a future release. We **strongly** recommend that you migrate to PowerDNS. For more information, read our [cPanel Deprecation Plan](https://go.cpanel.net/deprecation).",
                          "example": 0,
                          "oneOf": [
                            {
                              "description": "A version of MyDNS.",
                              "type": "string"
                            },
                            {
                              "description": "MyDNS is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "mysql": {
                          "description": "The MySQL® version number.\n\n* `0` - MySQL is **not** installed on the server.",
                          "example": "5.7.61",
                          "oneOf": [
                            {
                              "description": "A version number of MySQL.",
                              "type": "string"
                            },
                            {
                              "description": "MySQL is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "mysql_build": {
                          "description": "The MySQL RPM's version number.\n\n* `0` - MySQL RPM's is **not** installed on the server.",
                          "example": "5.7.61-1",
                          "oneOf": [
                            {
                              "description": "A version number of MySQL RPM's.",
                              "type": "string"
                            },
                            {
                              "description": "MySQL RPM's is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "nscd": {
                          "description": "The Name Service Cache Daemon version number.\n\n* `0` - Name Service Cache Daemon is **not** installed on the server.",
                          "example": "2.17-222",
                          "oneOf": [
                            {
                              "description": "A version number of Name Service Cache Daemon.",
                              "type": "string"
                            },
                            {
                              "description": "Name Service Cache Daemon is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "nsd": {
                          "deprecated": true,
                          "description": "The NSD version.\n\n* `0` - NSD is **not** installed on the server.\n\n**Warning:**\n\n We deprecated the MyDNS and NSD nameservers and plan to remove them a future release. We **strongly** recommend that you migrate to PowerDNS. For more information, read our [cPanel Deprecation Plan](https://go.cpanel.net/deprecation).",
                          "example": 0,
                          "oneOf": [
                            {
                              "description": "A version of NSD.",
                              "type": "string"
                            },
                            {
                              "description": "NSD is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "openssh": {
                          "description": "The OpenSSH version.\n\n* `0` - OpenSSH is **not** installed on the server.",
                          "example": "clients-6.6.1p1-25",
                          "oneOf": [
                            {
                              "description": "A version of OpenSSH.",
                              "type": "string"
                            },
                            {
                              "description": "OpenSSH is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "operating_system_name": {
                          "description": "The server's operating system (OS).",
                          "example": "centos",
                          "type": "string"
                        },
                        "operating_system_version": {
                          "description": "The version of the server's OS.",
                          "example": "7.2",
                          "type": "string"
                        },
                        "os_packages": {
                          "description": "An array of OS-provided RPMs.\n\n**Note:**\n\n The function **only** returns this array if you set the `packages` parameter to `1`.",
                          "example": [
                            "GeoIP-1.5.0-11.el7.x86_64",
                            "ImageMagick-6.7.8.9-15.el7_2.x86_64",
                            "ModemManager-glib-1.6.0-2.el7.x86_64"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "p0f": {
                          "description": "The Passive OS Fingerprinting version number.\n\n* `0` - Passive OS Fingerprinting is **not** installed on the server.",
                          "example": "3.09b-1",
                          "oneOf": [
                            {
                              "description": "A version number of Passive OS Fingerprinting.",
                              "type": "string"
                            },
                            {
                              "description": "Passive OS Fingerprinting is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "postgresql": {
                          "description": "The PostgreSQL® version.\n\n* `0` - PostgreSQL is **not** installed on the server.",
                          "example": "9.2",
                          "oneOf": [
                            {
                              "description": "A version of PostgreSQL.",
                              "type": "string"
                            },
                            {
                              "description": "PostgreSQL is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "postgresql_build": {
                          "description": "The PostgreSQL RPM's version number.\n\n* `0` - PostgreSQL RPM's is **not** installed on the server.",
                          "example": "0",
                          "oneOf": [
                            {
                              "description": "A version number of PostgreSQL RPM's.",
                              "type": "string"
                            },
                            {
                              "description": "PostgreSQL RPM's is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "powerdns": {
                          "description": "The PowerDNS version.\n\n* `0` - PowerDNS is **not** installed on the server.",
                          "example": "4.1.10-15",
                          "oneOf": [
                            {
                              "description": "A version of PowerDNS.",
                              "type": "string"
                            },
                            {
                              "description": "PowerDNS is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "proftpd": {
                          "description": "The ProFTP version.\n\n* `0` - ProFTP is **not** installed on the server.",
                          "example": "1.3.6c",
                          "oneOf": [
                            {
                              "description": "A version of ProFTP.",
                              "type": "string"
                            },
                            {
                              "description": "ProFTP is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "pureftpd": {
                          "description": "The Pure-FTPd version.\n\n* `0` - Pure-FTPd is **not** installed on the server.",
                          "example": "1.0.45",
                          "oneOf": [
                            {
                              "description": "A version of Pure-FTPd.",
                              "type": "string"
                            },
                            {
                              "description": "Pure-FTPd is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "roundcube": {
                          "description": "The Roundcube version.\n\n* `0` - Roundcube is **not** installed on the server.",
                          "example": "1.2.4-1",
                          "oneOf": [
                            {
                              "description": "A version of Roundcube.",
                              "type": "string"
                            },
                            {
                              "description": "Roundcube is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "rsyslog": {
                          "description": "The Rsyslog version number.\n\n* `0` - Rsyslog is **not** installed on the server.",
                          "example": "8.24.0-16",
                          "oneOf": [
                            {
                              "description": "A version number of Rsyslog.",
                              "type": "string"
                            },
                            {
                              "description": "Rsyslog is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        },
                        "spamd": {
                          "description": "The Apache SpamAssassin™ version number.\n\n* `0` - Apache SpamAssassin is **not** installed on the server.",
                          "example": "3.4.2",
                          "oneOf": [
                            {
                              "description": "A version number of Apache SpamAssassin.",
                              "type": "string"
                            },
                            {
                              "description": "Apache SpamAssassin is **not** installed.",
                              "enum": [
                                0
                              ],
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "installed_versions",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return third-party software versions",
        "tags": [
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 installed_versions"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/installed_versions?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/installssl": {
      "get": {
        "description": "This function installs an SSL certificate.",
        "operationId": "installssl",
        "parameters": [
          {
            "description": "The certificate's text.\n\n**Note:**\n\nYou **must** URI-encode this value.",
            "in": "query",
            "name": "crt",
            "required": true,
            "schema": {
              "example": "-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----",
              "type": "string"
            }
          },
          {
            "description": "The domain's name.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The certificate's key.\n\n**Note:**\n\nYou **must** URI-encode this value.",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEpAIBAAKCAQEA4AVM6J4Qg3DIFWr/eJ5GRmIATYsJIepKbrDy70sq+udcO8R8xxak0oMZ/9mUdpjSNK/fLVTuCO0kxTfQ9VUWJllX7ThD6Zh9ZvlC/nf/OEZLm3ZbnBgu8rbC8E9wuDOkKbJLnINgdhtowIydLK2MJ++q62bFV89jkHWTMcKyyqHENo3hc+lkpd9vnp8rZTinaVb7nX26uQqAFZYRo+WU0G/NPsq40QVSMoqPxyEz4qXo0hvuIlCXmzFZq/6fCVPEKPLhQgMmpdBkMz4dVOazREfqXdjMD2+QXSNiA1AwWr8l0r4rtzlxEYDJIR41yXp0xMl3KoolxMyvLBqZy32niQIDAQABAoIBAQCmbGmhWmPsMeoCt1WJFxQgD4goE0U6k+Kt7vjbOt14Pk6v/B2yjaju1wSGpO59WLS4/XrwI2se6IXrmba7u3VUEgWXLriNHoLy7/SMNTs+ZEKhAMG36eNe3tVdT7busTag31r6sEMGGwCsIwpU+azosk0oylWLEX/m/uHWEs1eaIEWWWtgHB+KZrrP7Rr9RYfVQ144DxmOxS3Ca9+mST62WqAVPR6POWGEfZqnZl/ePWZPcQYbFrhwnnefNoYBl/bnLZBo8rbNWxAqOEOuKfkrBzglKG/39WKPw8rj4JIVzY0yOuFCW6xCDWRkOrhU8Ol/3FvwDa3uJpkpmgPr4TgxAoGBAPGPLmxSuOYR97mDAXxrs037F2GCbqWvI6m7/ezWe9yn+bMpjSIWfsgtq4FsyqzPueEkDdQWi3xh6nu2WI/1Tl875opGAqEIJMqss/u11tnva5wzu1cCL6H85A5+HMOBvP3sm6CObKcVw92h7kxynVIUJJWhjfeZMN8gBFFpKIVFAoGBAO1ptXBmXLC/YKKvtHI3M16/ZopvM8ZqU2HcAHaw214Refw9JJ/e3/xTNfSerVTyCAQO1AdWTzJKBN8jmSYv1Mk1D3RpQPNR7wVzi46KR081AU41uMpqIGVOwHtyVnW/ZfLrc1DLIK8Cx8aHfoxffwzoMO5SEQSooeZfOLhsfDN1AoGBAKQTUEINsj+75psgbAr6ELGgItJ9yPBLVRr+cUzEpx9LDWVvjMihpP4NX1gq8EOPWT+ewLHVmmsjCyV6xw8JXXF8e2xif3in0m3D/wCzE7u2T06rKM3B017hKnrZmGoHnrqPU2osM4sOUpshWX6dv1Q4EF1+fbK3YCW+VpCBsB9NAoGAQo+uhNLODee56iKkzpjXWCsFTq6ar3hD5F3P63buKdNwhd2GlSPhXFbf+7M5GWW6BZk6rMvv7EOAVice2uvyFm8/4/1WbmF8R+T7LX1rPLO5p/m701QpvP11TabiwqRkqtSEQhSRF0AKTojSW/yyHCZFAawUhV/Z9EKiHmKb97kCgYAyzmFc2it0HqnsOnRybop603nqMtWGTQO4cxa93HUDpYajuK2K3DfrxUj6lG3z/oKJGGE2JqgZ6LBAhNJtJWJu2ox3pKGE63QjLJnVwb8y1NFYpe/crbLePuBwIR0L7drXxfv7O5btY7h6QI2d1/UIAQPAWbxLoTM+ndQ/uPEdfA%3D%3D-----END%20RSA%20PRIVATE%20KEY-----",
              "type": "string"
            }
          },
          {
            "description": "The certificate's certificate authority (CA) bundle.\n\nIf you do not use this parameter, the system automatically determines the\nappropriate CA bundle file to use.\n\n**Note:**\n\nYou **must** URI-encode this value.",
            "in": "query",
            "name": "cab",
            "required": false,
            "schema": {
              "example": "-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----",
              "type": "string"
            }
          },
          {
            "description": "The IP address of the certificate's domain.\n\nThis parameter defaults to the domain's local IP address.",
            "in": "query",
            "name": "ip",
            "required": false,
            "schema": {
              "example": "192.168.0.20",
              "format": "ipv4",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "action": {
                          "description": "The action for the function to execute.",
                          "enum": [
                            "install"
                          ],
                          "example": "install",
                          "type": "string"
                        },
                        "aliases": {
                          "description": "A list of domain aliases on the account.",
                          "example": [
                            "mail.example.com",
                            "subdomain.example.com"
                          ],
                          "items": {
                            "format": "domain",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "domain": {
                          "description": "The domain on which the function installed the SSL certificate.",
                          "example": "example.com",
                          "format": "domain",
                          "type": "string"
                        },
                        "extra_certificate_domains": {
                          "description": "A list of domains that possess additional SSL certificates.",
                          "example": [
                            "mail.example.com",
                            "subdomain.example.com"
                          ],
                          "items": {
                            "format": "domain",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "html": {
                          "description": "The function's raw HTML output.",
                          "example": "Certificate verification passed<br/> <br /> The Certificate for the domain example.com was installed on the IP 192.168.0.20. </html><br><b>Finished SSL Install Process for example.com (www.example.com).</b>",
                          "type": "string"
                        },
                        "ip": {
                          "description": "The domain's IP address.",
                          "example": "192.168.0.20",
                          "format": "ipv4",
                          "type": "string"
                        },
                        "message": {
                          "description": "A message of success or a reason for failure.",
                          "example": "The SSL certificate is now installed onto the domain \"example.com\" using the IP address \"192.168.0.20\". Apache is restarting in the background.",
                          "type": "string"
                        },
                        "servername": {
                          "description": "The server's hostname.",
                          "example": "example.com",
                          "format": "hostname",
                          "type": "string"
                        },
                        "status": {
                          "description": "Whether the function was successful.\n\n* `1` — Success.\n* `0` — Failure.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "statusmsg": {
                          "description": "A message of success or a reason for failure.",
                          "example": "The SSL certificate is now installed onto the domain \"example.com\" using the IP address \"192.168.0.20\". Apache is restarting in the background.",
                          "type": "string"
                        },
                        "user": {
                          "description": "The username for the account on which the function installed the SSL certificate.",
                          "example": "username",
                          "format": "username",
                          "type": "string"
                        },
                        "warning_domains": {
                          "description": "A list of domains associated with the main domain on which the function did **not** install the SSL certificate.",
                          "items": {
                            "example": "subdomain.example.com",
                            "format": "domain",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "working_domains": {
                          "description": "An list of domains on which the function installed the SSL certificates.",
                          "example": [
                            "example.com",
                            "mail.example.com"
                          ],
                          "items": {
                            "format": "domain",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "installssl",
                          "type": "string"
                        },
                        "output": {
                          "description": "The function's raw HTML output.",
                          "example": "<br>The SSL certificate is now installed onto the domain “example.com“ using the IP address“192.168 .0 .20“. < br / > Apache is restarting in the background.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "The SSL certificate is now installed onto the domain “example.com“ using the IP address “192.168.0.20“.Apache is restarting in the background.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Install SSL certificate",
        "tags": [
          "SSL",
          "cPanel Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 installssl domain='example.com' crt='-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----' key='-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEpAIBAAKCAQEA4AVM6J4Qg3DIFWr/eJ5GRmIATYsJIepKbrDy70sq+udcO8R8xxak0oMZ/9mUdpjSNK/fLVTuCO0kxTfQ9VUWJllX7ThD6Zh9ZvlC/nf/OEZLm3ZbnBgu8rbC8E9wuDOkKbJLnINgdhtowIydLK2MJ++q62bFV89jkHWTMcKyyqHENo3hc+lkpd9vnp8rZTinaVb7nX26uQqAFZYRo+WU0G/NPsq40QVSMoqPxyEz4qXo0hvuIlCXmzFZq/6fCVPEKPLhQgMmpdBkMz4dVOazREfqXdjMD2+QXSNiA1AwWr8l0r4rtzlxEYDJIR41yXp0xMl3KoolxMyvLBqZy32niQIDAQABAoIBAQCmbGmhWmPsMeoCt1WJFxQgD4goE0U6k+Kt7vjbOt14Pk6v/B2yjaju1wSGpO59WLS4/XrwI2se6IXrmba7u3VUEgWXLriNHoLy7/SMNTs+ZEKhAMG36eNe3tVdT7busTag31r6sEMGGwCsIwpU+azosk0oylWLEX/m/uHWEs1eaIEWWWtgHB+KZrrP7Rr9RYfVQ144DxmOxS3Ca9+mST62WqAVPR6POWGEfZqnZl/ePWZPcQYbFrhwnnefNoYBl/bnLZBo8rbNWxAqOEOuKfkrBzglKG/39WKPw8rj4JIVzY0yOuFCW6xCDWRkOrhU8Ol/3FvwDa3uJpkpmgPr4TgxAoGBAPGPLmxSuOYR97mDAXxrs037F2GCbqWvI6m7/ezWe9yn+bMpjSIWfsgtq4FsyqzPueEkDdQWi3xh6nu2WI/1Tl875opGAqEIJMqss/u11tnva5wzu1cCL6H85A5+HMOBvP3sm6CObKcVw92h7kxynVIUJJWhjfeZMN8gBFFpKIVFAoGBAO1ptXBmXLC/YKKvtHI3M16/ZopvM8ZqU2HcAHaw214Refw9JJ/e3/xTNfSerVTyCAQO1AdWTzJKBN8jmSYv1Mk1D3RpQPNR7wVzi46KR081AU41uMpqIGVOwHtyVnW/ZfLrc1DLIK8Cx8aHfoxffwzoMO5SEQSooeZfOLhsfDN1AoGBAKQTUEINsj+75psgbAr6ELGgItJ9yPBLVRr+cUzEpx9LDWVvjMihpP4NX1gq8EOPWT+ewLHVmmsjCyV6xw8JXXF8e2xif3in0m3D/wCzE7u2T06rKM3B017hKnrZmGoHnrqPU2osM4sOUpshWX6dv1Q4EF1+fbK3YCW+VpCBsB9NAoGAQo+uhNLODee56iKkzpjXWCsFTq6ar3hD5F3P63buKdNwhd2GlSPhXFbf+7M5GWW6BZk6rMvv7EOAVice2uvyFm8/4/1WbmF8R+T7LX1rPLO5p/m701QpvP11TabiwqRkqtSEQhSRF0AKTojSW/yyHCZFAawUhV/Z9EKiHmKb97kCgYAyzmFc2it0HqnsOnRybop603nqMtWGTQO4cxa93HUDpYajuK2K3DfrxUj6lG3z/oKJGGE2JqgZ6LBAhNJtJWJu2ox3pKGE63QjLJnVwb8y1NFYpe/crbLePuBwIR0L7drXxfv7O5btY7h6QI2d1/UIAQPAWbxLoTM+ndQ/uPEdfA%3D%3D-----END%20RSA%20PRIVATE%20KEY-----'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/installssl?api.version=1&domain=example.com&crt=-----BEGIN%2520CERTIFICATE-----%250AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%250AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%250AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%250AggEBALer6vzwFt%252BO6ooHcXpq%252Bi%252FOVVQEY3oWxrqH6mB%252FPssVSxwcf6bLjoO4so%252Fn%250Adrymhb9mqfkOqYVHwnQ%252Fh2uM%252BIw1NKKDfwOljWcgCS24NykbfQUlW%252FSNDTovdDGl%250AT1Aner090Qse%252B19ta8KS%252F3Akz37bkgqMkPO%252FiEOHlF%252FLbLvjfighkoGco51wc6d7%250AHCQwPWR%252BUenbQWzUwR4%252F4Pqw%252FYrxDAv8O%252FEnNfOGwnCnlnFq4a390VGriqMAngzI%250AlRMVDu4qJGW3dFNStVUm71%252B16ba%252FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%250AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%250AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%250ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%250AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%252FBwM%250AfJEvlPO30%252FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%252FB36joYDrOhtiO6XsRw4Zm%250AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%252F0rQp1YPsVN9tBgiag754HPo%250AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%250A52gKM0u2%252BrK%252FzIYjh%252FhooqN%252BTY%252BJQ667JzLzPNenzAYFsoIQgVj6%252FZoFqJA4nbxC%250Azv%252Fspqc0OQ2W9m5egRPDhngKt%252Bi9804N7FeilBL%252FcpEgUHhgzMBi1T9n%252BYBrc6bO%250AjNjvnEQRbqZY%250A-----END%2520CERTIFICATE-----&key=-----BEGIN%2520RSA%2520PRIVATE%2520KEY-----%250AMIIEpAIBAAKCAQEA4AVM6J4Qg3DIFWr%2feJ5GRmIATYsJIepKbrDy70sq%2budcO8R8xxak0oMZ%2f9mUdpjSNK%2ffLVTuCO0kxTfQ9VUWJllX7ThD6Zh9ZvlC%2fnf%2fOEZLm3ZbnBgu8rbC8E9wuDOkKbJLnINgdhtowIydLK2MJ%2b%2bq62bFV89jkHWTMcKyyqHENo3hc%2blkpd9vnp8rZTinaVb7nX26uQqAFZYRo%2bWU0G%2fNPsq40QVSMoqPxyEz4qXo0hvuIlCXmzFZq%2f6fCVPEKPLhQgMmpdBkMz4dVOazREfqXdjMD2%2bQXSNiA1AwWr8l0r4rtzlxEYDJIR41yXp0xMl3KoolxMyvLBqZy32niQIDAQABAoIBAQCmbGmhWmPsMeoCt1WJFxQgD4goE0U6k%2bKt7vjbOt14Pk6v%2fB2yjaju1wSGpO59WLS4%2fXrwI2se6IXrmba7u3VUEgWXLriNHoLy7%2fSMNTs%2bZEKhAMG36eNe3tVdT7busTag31r6sEMGGwCsIwpU%2bazosk0oylWLEX%2fm%2fuHWEs1eaIEWWWtgHB%2bKZrrP7Rr9RYfVQ144DxmOxS3Ca9%2bmST62WqAVPR6POWGEfZqnZl%2fePWZPcQYbFrhwnnefNoYBl%2fbnLZBo8rbNWxAqOEOuKfkrBzglKG%2f39WKPw8rj4JIVzY0yOuFCW6xCDWRkOrhU8Ol%2f3FvwDa3uJpkpmgPr4TgxAoGBAPGPLmxSuOYR97mDAXxrs037F2GCbqWvI6m7%2fezWe9yn%2bbMpjSIWfsgtq4FsyqzPueEkDdQWi3xh6nu2WI%2f1Tl875opGAqEIJMqss%2fu11tnva5wzu1cCL6H85A5%2bHMOBvP3sm6CObKcVw92h7kxynVIUJJWhjfeZMN8gBFFpKIVFAoGBAO1ptXBmXLC%2fYKKvtHI3M16%2fZopvM8ZqU2HcAHaw214Refw9JJ%2fe3%2fxTNfSerVTyCAQO1AdWTzJKBN8jmSYv1Mk1D3RpQPNR7wVzi46KR081AU41uMpqIGVOwHtyVnW%2fZfLrc1DLIK8Cx8aHfoxffwzoMO5SEQSooeZfOLhsfDN1AoGBAKQTUEINsj%2b75psgbAr6ELGgItJ9yPBLVRr%2bcUzEpx9LDWVvjMihpP4NX1gq8EOPWT%2bewLHVmmsjCyV6xw8JXXF8e2xif3in0m3D%2fwCzE7u2T06rKM3B017hKnrZmGoHnrqPU2osM4sOUpshWX6dv1Q4EF1%2bfbK3YCW%2bVpCBsB9NAoGAQo%2buhNLODee56iKkzpjXWCsFTq6ar3hD5F3P63buKdNwhd2GlSPhXFbf%2b7M5GWW6BZk6rMvv7EOAVice2uvyFm8%2f4%2f1WbmF8R%2bT7LX1rPLO5p%2fm701QpvP11TabiwqRkqtSEQhSRF0AKTojSW%2fyyHCZFAawUhV%2fZ9EKiHmKb97kCgYAyzmFc2it0HqnsOnRybop603nqMtWGTQO4cxa93HUDpYajuK2K3DfrxUj6lG3z%2foKJGGE2JqgZ6LBAhNJtJWJu2ox3pKGE63QjLJnVwb8y1NFYpe%2fcrbLePuBwIR0L7drXxfv7O5btY7h6QI2d1%2fUIAQPAWbxLoTM%2bndQ%2fuPEdfA%253D%253D-----END%2520RSA%2520PRIVATE%2520KEY-----"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/ipv6_disable_account": {
      "get": {
        "description": "This function removes the IPv6 address from an account.\n\n**Notes:**\n\n- When you disable IPv6 on an account, the system unbinds that IPv6 address from your server and the account loses the address. If you enable IPv6 on that account again, the system assigns it a different IPv6 address.\n- For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select On for the *Listen on IPv6 Addresses* setting in the *System* section of WHM's [Tweak Settings](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "ipv6_disable_account",
        "parameters": [
          {
            "description": "A comma delimited list of account names.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "user1,user2,user3",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "fail_cnt": {
                          "description": "The number of accounts that failed to disable IPv6.\n\n**Note**\n\nThe function only returns this value if any failures exist.",
                          "example": 0,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "failures": {
                          "description": "List of accounts where IPv6 disable failed\n\n**Note**\n\nThe function only returns this value if any failures exist.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "The name of the account where IPv6 disable failed",
                                "example": "user1",
                                "format": "username",
                                "type": "string"
                              },
                              "reason": {
                                "description": "The reason for the IPv6 disable failure",
                                "example": "The “user1” account does not exist."
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ipv6_disable_account",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove IPv6 address range from account",
        "tags": [
          "IP Addresses",
          "IPv6 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ipv6_disable_account user='user1,user2,user3'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ipv6_disable_account?api.version=1&user=user1%2cuser2%2cuser3"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/ipv6_enable_account": {
      "get": {
        "description": "This function assigns an IPv6 address to one or more accounts.\n\n**Note:**\n\nYou **must** perform at least one of the following actions before you call this function:\n  * Use WHM's [*IPv6 Ranges*](https://go.cpanel.net/whmdocsIPv6Ranges) interface (*WHM >> Home >> IP Functions >> IPv6 Ranges*) or WHM API 1's `ipv6_range_add` function to add one or more IPv6 address ranges for use as dedicated IPv6 addresses.\n  * Use WHM's [*Basic WebHost Manager Setup*](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) interface (*WHM >> Home >> Server Configuration >> Basic WebHost Manager Setup*) or modify the [`/etc/wwwacct.conf`](https://go.cpanel.net/advancedinstall) file to add a shared IPv6 address to the server.\n  * For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select *On* for the *Listen on IPv6 Addresses* setting in the *System* section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings#system) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "ipv6_enable_account",
        "parameters": [
          {
            "description": "The IPv6 address range's name.\n\n**Note:**\n\nThe range name `SHARED` will assign the server's shared IPv6 address to the account(s).",
            "in": "query",
            "name": "range",
            "required": true,
            "schema": {
              "example": "Hosting_IPv6_Block",
              "type": "string"
            }
          },
          {
            "description": "A comma-delimited list of account names.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "user1,user2,user3",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": {
                        "fail_cnt": 2,
                        "failures": {
                          "brain": "The “brain” account does not exist.",
                          "pinky": "The “pinky” account does not exist."
                        },
                        "ipv6": {
                          "chewie": "2001:0db8:1a34:56cf:0000:0000:0000:0000",
                          "cptest": "2001:0db8:1a34:56cf:0000:0000:0000:0001",
                          "domain1": "2001:0db8:1a34:56cf:0000:0000:0000:0002"
                        }
                      },
                      "properties": {
                        "fail_cnt": {
                          "description": "The number of accounts that failed to enable IPv6.",
                          "example": 0,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "failures": {
                          "additionalProperties": {
                            "description": "The account and the reason why IPv6 enable failed.\n\n**Note:**\n\nThe function uses the account name as the return's name.",
                            "example": "Failed to enable IPv6",
                            "type": "string"
                          },
                          "description": "List of accounts where IPv6 enable failed.",
                          "type": "object"
                        },
                        "ipv6": {
                          "additionalProperties": {
                            "description": "The account and the IPv6 address assigned to the account.\n\n**Note:**\n\nThe function uses the account name as the return's name.",
                            "type": "string"
                          },
                          "description": "The IPv6 addresses that the system assigned to each account.",
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ipv6_enable_account",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add IPv6 address range to accounts",
        "tags": [
          "IP Addresses",
          "IPv6 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ipv6_enable_account user='user1,user2,user3' range='Hosting_IPv6_Block'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ipv6_enable_account?api.version=1&user=user1%2cuser2%2cuser3&range=Hosting_IPv6_Block"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/ipv6_range_add": {
      "get": {
        "description": "This function adds a range of IPv6 addresses to the server.\n\n**Notes:**\n\n- This function **cannot** modify the server's shared IPv6 address. To update that address, modify the [/etc/wwwacct.conf](https://go.cpanel.net/advancedinstall) file, or use WHM's [*Basic WebHost Manager Setup*](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) interface (*Home >> Server Configuration >> Basic WebHost Manager Setup*).\n- For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select *On* for the *Listen on IPv6 Addresses* setting in the [*System*](https://go.cpanel.net/whmdocsTweakSettings#system) section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "ipv6_range_add",
        "parameters": [
          {
            "description": "The IPv6 address range's name.\n\n**Note:**\n\nYou **cannot** use SHARED as a range's name.\nIt is reserved for the server's shared IPv6 address.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "ExampleRange",
              "type": "string"
            }
          },
          {
            "description": "The IPv6 address range and network portion\nin [CIDR format](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing).",
            "in": "query",
            "name": "range",
            "required": true,
            "schema": {
              "example": "2001:db8:66ac:cafe::/64",
              "type": "string"
            }
          },
          {
            "description": "Whether the IPv6 address range is available.\n\n**Note**\n\n* `1` - Available.\n* `0` - Reserved.",
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "A note for the IPv6 address range.",
            "in": "query",
            "name": "note",
            "required": false,
            "schema": {
              "default": null,
              "example": "Initial IPv6 address pool",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ipv6_range_add",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add IPv6 address range",
        "tags": [
          "IP Addresses",
          "IPv6 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ipv6_range_add range='2001:db8:66ac:cafe::/64' name='ExampleRange'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ipv6_range_add?api.version=1&range=2001%3adb8%3a66ac%3acafe%3a%3a%2f64&name=ExampleRange"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/ipv6_range_edit": {
      "get": {
        "description": "This function changes an IPv6 address range's name and/or note.\n\n**Notes:**\n\n- This function **cannot** modify the server's shared IPv6 address. To update that address, modify the [/etc/wwwacct.conf](https://go.cpanel.net/advancedinstall) file, or use WHM's [*Basic WebHost Manager Setup*](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) interface (*Home >> Server Configuration >> Basic WebHost Manager Setup*).\n- For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select *On* for the *Listen on IPv6 Addresses* setting in the [*System*](https://go.cpanel.net/whmdocsTweakSettings#system) section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "ipv6_range_edit",
        "parameters": [
          {
            "description": "The IPv6 address range's current name.\n\n**Note:**\n\nYou **cannot** edit the range named SHARED.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "ExampleRange",
              "type": "string"
            }
          },
          {
            "description": "The IPv6 address range's new name.\n\n**Note:**\n\n* If not supplied the range keeps its old name.\n* You **cannot** change range name to SHARED.",
            "in": "query",
            "name": "new_name",
            "required": false,
            "schema": {
              "default": null,
              "example": "AnotherRange",
              "type": "string"
            }
          },
          {
            "description": "The IPv6 address range's new note.\n\n**Note:**\n\nIf you don't specify this parameter, the function will not change the range's note.",
            "in": "query",
            "name": "note",
            "required": false,
            "schema": {
              "default": null,
              "example": "This is an update to the note.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ipv6_range_edit",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update IPv6 address range name or note",
        "tags": [
          "IP Addresses",
          "IPv6 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ipv6_range_edit name='ExampleRange'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ipv6_range_edit?api.version=1&name=ExampleRange"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/ipv6_range_list": {
      "get": {
        "description": "This function lists available IPv6 address ranges.\n\n**Note:**\n\nFor all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select *On* for the *Listen on IPv6 Addresses* setting in the [*System*](https://go.cpanel.net/whmdocsTweakSettings#system) section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "ipv6_range_list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "range": {
                          "description": "An array of the IPv6 address ranges.",
                          "items": {
                            "properties": {
                              "CIDR": {
                                "description": "The IPv6 address range, in CIDR format.",
                                "example": "2001:db8:100:6::/64",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Whether the IPv6 address range is available.\n* `1`  Available.\n* `0`  Reserved.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "first": {
                                "description": "The first IPv6 address in the range.",
                                "example": "2001:db8:0100:0006:0000:0000:0000:0000",
                                "format": "ipv6",
                                "type": "string"
                              },
                              "last": {
                                "description": "The last IPv6 address in the range.",
                                "example": "2001:db8:0100:0006:ffff:ffff:ffff:ffff",
                                "format": "ipv6",
                                "type": "string"
                              },
                              "mostrecent": {
                                "description": "The most recently assigned address from the IPv6 address range.",
                                "example": "2001:db8:0100:0006:0000:0000:0002:00ce",
                                "format": "ipv6",
                                "type": "string"
                              },
                              "name": {
                                "description": "The IPv6 address range's name.\n\n**Note:**\n\n`SHARED` represents the server's main IPv6 address.",
                                "example": "test_range",
                                "type": "string"
                              },
                              "note": {
                                "description": "The IPv6 address range's note.",
                                "example": "This is used for development.",
                                "type": "string"
                              },
                              "owner": {
                                "description": "The user who owns the IPv6 address range.",
                                "example": "root",
                                "format": "username",
                                "type": "string"
                              },
                              "range_users": {
                                "description": "The user or users who use addresses in the IPv6 address range.",
                                "items": {
                                  "example": "user1",
                                  "format": "username",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "reclaimed": {
                                "description": "IPv6 addresses within the range which have become available.",
                                "items": {
                                  "example": "2001:db8:0100:0006:0000:0000:0000:0002",
                                  "format": "ipv6",
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ipv6_range_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return available IPv6 address ranges",
        "tags": [
          "IP Addresses",
          "IPv6 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ipv6_range_list"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ipv6_range_list?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/ipv6_range_remove": {
      "get": {
        "description": "This function removes an IPv6 address range from the server.\n\n**Note:**\n\n* This function **cannot** modify the server's shared IPv6 address. To update that address, modify [the `/etc/wwwacct.conf` file](https://go.cpanel.net/advancedinstall), or use WHM's [_Basic WebHost Manager Setup_](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) interface (_Home >> Server Configuration >> Basic WebHost Manager Setup_).\n* For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select _On_ for the _Listen on IPv6 Addresses_ setting in the _System_ section of WHM's [_Tweak Settings_](https://go.cpanel.net/whmdocsTweakSettings) interface (_WHM >> Home >> Server Configuration >> Tweak Settings_).\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "ipv6_range_remove",
        "parameters": [
          {
            "description": "The IPv6 address range's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "Range1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ipv6_range_remove",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove IPv6 address range",
        "tags": [
          "IP Addresses",
          "IPv6 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ipv6_range_remove name='Range1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ipv6_range_remove?api.version=1&name=Range1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/ipv6_range_usage": {
      "get": {
        "description": "This function retrieves usage information for IPv6 addresses in an IPv6 range.\n\n**Note:**\n\nFor all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select *On* for the *Listen on IPv6 Addresses* setting in the [*System*](https://go.cpanel.net/whmdocsTweakSettings#system) section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "ipv6_range_usage",
        "parameters": [
          {
            "description": "The IPv6 address range's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "TestRange",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "usage": {
                          "description": "The IPv6 address range's information.",
                          "properties": {
                            "forbidden": {
                              "description": "The number of reserved IPv6 addresses.",
                              "example": 65536,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "free": {
                              "description": "The number of available IPv6 addresses.",
                              "example": 1000000,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "used": {
                              "description": "The number of assigned IPv6 addresses.",
                              "example": 20,
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ipv6_range_usage",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return IPv6 address usage",
        "tags": [
          "IP Addresses",
          "IPv6 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 ipv6_range_usage name='TestRange'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ipv6_range_usage?api.version=1&name=TestRange"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/is_conversion_in_progress": {
      "get": {
        "description": "This function indicates whether the system's process to convert all of WHM's accounts to use PHP-FPM is in progress.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.\n\n**Warning:**\n\nWe **strongly** recommend that you only activate Apache PHP-FPM if your server has at least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM on a server with less than the required RAM, your server may experience severe performance issues.",
        "operationId": "is_conversion_in_progress",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "inProgress": {
                          "description": "Whether the system's process to convert all of WHM's accounts to use PHP-FPM is in progress.\n* `1` — In progress.\n* `0` — **Not** currently in progress.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "is_conversion_in_progress",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return PHP-FPM conversion status",
        "tags": [
          "PHP",
          "PHP-FPM"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 is_conversion_in_progress"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/is_conversion_in_progress?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.72"
      }
    },
    "/is_role_enabled": {
      "get": {
        "description": "This function checks whether a specific server role is currently enabled\nfor the server.\n\nFor more information about server roles, read our [How to Use Server Profiles](https://go.cpanel.net/serverroles) documentation.",
        "operationId": "is_role_enabled",
        "parameters": [
          {
            "description": "The role to check. The role must be one of the following case-sensitive values:\n\n* `CalendarContact` - Allows users to access CalDAV and CardDAV services and features.\n* `DNS` - Allows users to create and edit Domain Name System (DNS) zone files. This role doesn’t convert your server to a cPanel DNSOnly™ server.\n* `FileStorage` - Allows users to access cPanel’s [File Manager](https://go.cpanel.net/cpaneldocsFileManager) and [Git™ Version Control](https://go.cpanel.net/cpaneldocsasisGitVersionControl) features. When a profile disables this role, you can’t enable the Shell Access setting when you create a new cPanel account.\n\n* `FTP` - Allows users to manage their account’s files with an FTP client.\n* `MailLocal` - Allows the control of local mail delivery and related features.\n* `MailReceive` - Allows users to receive mail from external sources.\n* `MailRelay` - Allows the server’s Message Transfer Agent (MTA) to forward mail from one remote host to another.\n* `MailSend` - Allows users to send mail and control the features necessary for sending mail.\n* `MySQL` - Allows users to create and manage MySQL® or MariaDB databases.\n* `MySQLClient` - This role checks whether the MySQL/MariaDB client access exists locally or remotely. You cannot directly enable or disable this role. The system enables or disables this role depending on the MySQL configuration.\n\n* `Postgres` - Allows users to create and manage [PostgreSQL](https://go.cpanel.net/whmdocsConfigurePostgreSQL) databases if cPanel & WHM manages the server’s PostgreSQL.\n* `PostgresClient` - This role checks whether the PostgreSQL client access exists locally.\n* `SpamFilter` - Allows users to use Apache SpamAssassin™ to identify, sort, and delete unsolicited mail.\n* `WebDisk` - Allows users to manage their account’s files with a WebDAV client.\n* `Webmail` - Allows users to access webmail services and features.\n* `WebServer` - Allows users to create and manage websites for their domains.",
            "in": "query",
            "name": "role",
            "required": true,
            "schema": {
              "enum": [
                "CalendarContact",
                "DNS",
                "FileStorage",
                "FTP",
                "MailLocal",
                "MailReceive",
                "MailRelay",
                "MailSend",
                "MySQL",
                "MySQLClient",
                "Postgres",
                "PostgresClient",
                "SpamFilter",
                "WebDisk",
                "Webmail",
                "WebServer"
              ],
              "example": "FTP",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "enabled": {
                          "description": "Whether a role is enabled or disabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "is_role_enabled",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return whether server role is enabled",
        "tags": [
          "Server Administration",
          "Server Profiles"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 is_role_enabled role='FTP'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/is_role_enabled?api.version=1&role=FTP"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/is_sni_supported": {
      "get": {
        "description": "This function checks whether the server supports SNI (Server Name Indication).\n\n**Note:**\n\n  * Functions that enable Mail SNI succeed with a warning that Mail SNI is always enabled.\n  * Functions that disable Mail SNI fail and make no changes.",
        "operationId": "is_sni_supported",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "sni": {
                          "description": "Whether the server supports SNI.\n- `1` — SNI supported.\n- `0` — SNI **not** supported.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "is_sni_supported",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return server SNI support status",
        "tags": [
          "Mail",
          "Mail Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 is_sni_supported"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/is_sni_supported?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/killdns": {
      "get": {
        "description": "This function deletes a DNS zone.\n\n**Important:**\n\n- The WHM API 1 adddns function adds an XDNS entry for a domain in the following locations:\n - The `/var/cpanel/users/USER` file, where `USER` represents the domain's owner.\n - The `/etc/vdomainaliases/DOMAIN` directory, where `DOMAIN` represents the new zone's domain.\n - The `/etc/vfilters/DOMAIN` directory, where `DOMAIN` represents the new zone's domain.\n- This function does **not** automatically delete these entries. You **must** manually delete these entries, or you **cannot** use this domain as a value in other API functions.\n- You cannot delete other DNS zones that reside on *Write-only* servers in a DNS cluster.\n\n**Important:**\n\nWhen you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "killdns",
        "parameters": [
          {
            "description": "The zone record's domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "killdns",
                          "type": "string"
                        },
                        "output": {
                          "properties": {
                            "raw": {
                              "description": "The raw response output.",
                              "example": "example.com => deleted from example.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Zones Removed",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete DNS zone",
        "tags": [
          "DNS",
          "DNS Zones"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 killdns domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/killdns?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/killpkg": {
      "get": {
        "description": "This function deletes a hosting plan (package).",
        "operationId": "killpkg",
        "parameters": [
          {
            "description": "The hosting plan's name.\n\n**Note:**\n\n You **cannot** delete a hosting plan that a cPanel account currently uses.",
            "in": "query",
            "name": "pkgname",
            "required": true,
            "schema": {
              "example": "package1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "killpkg",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete hosting plan",
        "tags": [
          "Packages",
          "Hosting Plans"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 killpkg pkgname='package1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/killpkg?api.version=1&pkgname=package1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/latest_available_mysql_version": {
      "get": {
        "description": "This function retrieves the latest available version of MySQL® or MariaDB®.\n\n**Important:**\n\nWhen you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles) and remote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "latest_available_mysql_version",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "server": {
                          "description": "The server's database engine.\n* `mysql`\n* `mariadb`",
                          "enum": [
                            "mysql",
                            "mariadb"
                          ],
                          "example": "mariadb",
                          "type": "string"
                        },
                        "version": {
                          "description": "The version number in `major.minor` format.",
                          "example": "10.0",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "latest_available_mysql_version",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return latest MySQL version",
        "tags": [
          "Databases",
          "Manage MySQL Server"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 latest_available_mysql_version"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/latest_available_mysql_version?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "cPanel 11.48"
      }
    },
    "/limitbw": {
      "get": {
        "description": "This function modifies a cPanel account's bandwidth quota.",
        "operationId": "limitbw",
        "parameters": [
          {
            "description": "The username of a cPanel account on the server.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "The account's new bandwidth quota, in megabytes (MB).\n* `0` and `unlimited` - Grant the user unlimited bandwidth",
            "in": "query",
            "name": "bwlimit",
            "required": false,
            "schema": {
              "default": "unlimited",
              "example": 0,
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "bwlimits": {
                          "description": "An array of objects containing account information.",
                          "items": {
                            "properties": {
                              "bwlimit": {
                                "description": "The account's new bandwidth quota, in megabytes (MB).\n* `0` - The user has unlimited bandwidth.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "bwlimitenable": {
                                "description": "Whether bandwidth limiting is enabled for the account.\n* `1` - Enabled.\n* `0` - Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "domains": {
                                "description": "An array of all of the cPanel account's domains.",
                                "example": [
                                  "example.com",
                                  "addondomain.com",
                                  "subdomain.example.com"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "human_bwlimit": {
                                "description": "The account's bandwidth quota, in human-readable format.\n* `unlimited` - The user has unlimited bandwidth.\n* A positive integer that represents a maximum monthly bandwidth use, a space, and the string MB.",
                                "example": "500 MB",
                                "pattern": "^(unlimited|\\d+ MB)$",
                                "type": "string"
                              },
                              "human_bwused": {
                                "description": "The account's current bandwidth usage, in human-readable format.\n* `none`\n* A positive integer that represents the amount of bandwidth used, a space, and the string MB.",
                                "example": "none",
                                "pattern": "^(none|\\d+ MB)$",
                                "type": "string"
                              },
                              "unlimited": {
                                "description": "Whether the account's bandwidth quota is unlimited.\n* `1` - Unlimited.\n* `0` - Not unlimited.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "limitbw",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Bandwidth Limit for username has been set to unlimited megabytes",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update cPanel account bandwidth quota",
        "tags": [
          "Accounts",
          "Bandwidth and Disk Quotas"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 limitbw user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/limitbw?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/link_server_node_with_api_token": {
      "get": {
        "description": "This function links your server to a remote server node. The server uses an API token\nto communicate with the remote server node.\n\n**Important:**\n\n* This function **only** runs on a\n[Standard Node profile](https://go.cpanel.net/whmlinkednodes)\nserver.\n* The remote server node **must** use a version that is the same as or greater than your\nserver version.\n* This function **requires** the use of an API token. For more information, read our\n[Guide to API Authentication - API Tokens in WHM](https://go.cpanel.net/APITokensinWHM)\ndocumentation.",
        "operationId": "link_server_node_with_api_token",
        "parameters": [
          {
            "description": "A unique name that refers to the remote server node.\n\n**Note:**\n\nThe alias may **only** contain alphanumeric characters, dashes (`-`), and underscores (`_`).\nIt also has a maximum length of 50 characters.",
            "in": "query",
            "name": "alias",
            "required": true,
            "schema": {
              "example": "example",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "The API token required to make API calls to the remote server node.\n\n**Note:**\n\nThe API token **must** have `root`-level access on the remote server node.",
            "in": "query",
            "name": "api_token",
            "required": true,
            "schema": {
              "example": "23ZX8RA1FTE1IVJRL90MB5CREDS4UE2H",
              "type": "string"
            }
          },
          {
            "description": "The remote server node's hostname.\n\n**Note:**\n\nThis parameter does **not** accept an IP address.",
            "in": "query",
            "name": "hostname",
            "required": true,
            "schema": {
              "example": "host.example.com",
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "The username required to make API calls to the remote server node.\n\n**Note:**\n\nThe username **must** have `root`-level access on the remote server node.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "root",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to skip\n[SSL/TLS verification](https://docs.cpanel.net/knowledge-base/security/guide-to-ssl/).\nThe system performs this action when it queries the remote server node.",
            "in": "query",
            "name": "skip_tls_verification",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "link_server_node_with_api_token",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add linked server node",
        "tags": [
          "Server Administration",
          "Server Nodes"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 link_server_node_with_api_token alias='example' api_token='23ZX8RA1FTE1IVJRL90MB5CREDS4UE2H' hostname='host.example.com' username='root'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/link_server_node_with_api_token?api.version=1&alias=example&api_token=23ZX8RA1FTE1IVJRL90MB5CREDS4UE2H&hostname=host.example.com&username=root"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/link_user_authn_provider": {
      "get": {
        "description": "This function adds an External Authentication authorization link to an account.",
        "operationId": "link_user_authn_provider",
        "parameters": [
          {
            "description": "The preferred username of the account on the identity provider.",
            "in": "query",
            "name": "preferred_username",
            "required": true,
            "schema": {
              "example": "Example",
              "type": "string"
            }
          },
          {
            "description": "The name of the identity provider.",
            "in": "query",
            "name": "provider_id",
            "required": true,
            "schema": {
              "example": "google",
              "type": "string"
            }
          },
          {
            "description": "The unique identifier for the user at the identity provider.",
            "in": "query",
            "name": "subject_unique_identifier",
            "required": true,
            "schema": {
              "example": "123456789012345678901",
              "type": "string"
            }
          },
          {
            "description": "The account's username.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "link_user_authn_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add identity provider to cPanel account",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 link_user_authn_provider username='example' provider_id='google' subject_unique_identifier='123456789012345678901' preferred_username='Example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/link_user_authn_provider?api.version=1&username=example&provider_id=google&subject_unique_identifier=123456789012345678901&preferred_username=Example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/list_blocked_incoming_email_countries": {
      "get": {
        "description": "This function lists which countries cannot send email to the server.",
        "operationId": "list_blocked_incoming_email_countries",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "countries": {
                          "description": "An array of objects that contain each blocked country.",
                          "items": {
                            "properties": {
                              "country_code": {
                                "description": "The [ISO-3166-1 alpha-2 code](https://www.iso.org/iso-3166-country-codes.html) of the blocked country.",
                                "example": "AD",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_blocked_incoming_email_countries",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return blocked email countries list",
        "tags": [
          "Mail",
          "Spam Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_blocked_incoming_email_countries"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_blocked_incoming_email_countries?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "84"
      }
    },
    "/list_blocked_incoming_email_domains": {
      "get": {
        "description": "This function lists which domains cannot send email to the server.",
        "operationId": "list_blocked_incoming_email_domains",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "domains": {
                          "description": "An array of objects that contains each blocked domain.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The blocked domain.",
                                "example": "example.com",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_blocked_incoming_email_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return blocked email domains list",
        "tags": [
          "Mail",
          "Spam Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_blocked_incoming_email_domains"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_blocked_incoming_email_domains?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "84"
      }
    },
    "/list_configclusterservers": {
      "get": {
        "description": "This function lists the servers in the server's configuration cluster.\n\n**Warning**:\n\n* We deprecated WHM's Remote Access Key feature in cPanel & WHM version 64. We **strongly** recommend that you use API tokens instead.\n\n* If you log in to a configuration cluster server that is **not** the parent server, **nothing** will indicate that the server is part of a configuration cluster. You can only view and modify this information from the parent server.",
        "operationId": "list_configclusterservers",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "Each return's name is the server name.",
                        "properties": {
                          "signature": {
                            "description": "A truncated version of the server's remote access key.",
                            "type": "string"
                          },
                          "user": {
                            "description": "The `root`-level username for the server.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "description": "Configuration cluster signatures and users for each server.",
                      "example": {
                        "example1.com": {
                          "signature": "d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0",
                          "user": "root"
                        },
                        "example2.com": {
                          "signature": "d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d1",
                          "user": "root"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_configclusterservers",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all configuration cluster servers",
        "tags": [
          "Server Administration",
          "Configuration Clusters"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_configclusterservers"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_configclusterservers?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/list_cparchive_files": {
      "get": {
        "description": "This function lists all available cparchive files.\n\n**Note:**\n\n* `MM.DD.YYYY` represents the file's date in month, date, and year format.\n* `HH-MM-SS` represents the file's timestamp in hour, minute, and second format.\n\nThe function checks the following filenames, where `USER` represents the cPanel account's filusername::\n* `cpmove-USER`\n* `cpmove-USER.tar`\n* `cpmove-USER.tar.gz`\n* `USER.tar`\n* `USER.tar.gz`\n* `backup-{MM.DD.YYYY}{HH-MM-SS}{USER}.tar`\n* `backup-{MM.DD.YYYY}{HH-MM-SS}{USER}.tar.gz`\n\nThe function checks for these filenames in the following locations:\n* `/home`\n* `/home2`\n* `/home3`\n* `/root`\n* `/usr`\n* `/usr/home`\n* `/web`",
        "operationId": "list_cparchive_files",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "quickrestore_files": {
                          "description": "An array of objects that contains information about each `cparchive` file.",
                          "items": {
                            "properties": {
                              "file": {
                                "description": "The backup file's name in one of the formats listed above.",
                                "example": "cpmove-username1.tar.gz",
                                "type": "string"
                              },
                              "path": {
                                "description": "The backup file's directory in one of the locations listed above.",
                                "example": "/home",
                                "type": "string"
                              },
                              "user": {
                                "description": "The backup file's account.",
                                "example": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_cparchive_files",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cparchive files list",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_cparchive_files"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_cparchive_files?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.42"
      }
    },
    "/list_database_users": {
      "get": {
        "description": "This function lists the server's database users.\n\n**Warning:**\n\nOn most servers, this function returns a large amount of output. We **strongly** suggest that you filter and sort the output.\n\n**Important:**\n\n  When you disable the [MySQL/MariaDB and PostgreSQL roles](https://go.cpanel.net/serverroles) and remote MySQL is not already configured, the system **disables** this function.",
        "operationId": "list_database_users",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of database data objects.",
                          "items": {
                            "properties": {
                              "cpuser": {
                                "description": "The database user's owner.",
                                "example": "example",
                                "type": "string"
                              },
                              "engine": {
                                "description": "The database user's database engine.\n* `mysql`\n* `postgresql`",
                                "enum": [
                                  "mysql",
                                  "postgresql"
                                ],
                                "example": "postgresql",
                                "type": "string"
                              },
                              "name": {
                                "description": "The database user's name.",
                                "example": "example_user1",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_database_users",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return MySQL users",
        "tags": [
          "Databases",
          "MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_database_users"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_database_users?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/list_databases": {
      "get": {
        "description": "This function lists the server's databases.\n\n**Warning:**\n\nOn most servers, this function returns a large amount of output. We strongly suggest that you [filter](https://go.cpanel.net/WHMAPI1FilterOutput) and [sort](https://go.cpanel.net/WHMAPI1SortOutput) the output.\n\n**Important:**\n\nWhen you disable the MySQL/MariaDB and PostgreSQL [roles](https://go.cpanel.net/serverroles) and remote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "list_databases",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contain of database data.",
                          "items": {
                            "properties": {
                              "cpuser": {
                                "description": "The database's owner.",
                                "example": "example",
                                "format": "username",
                                "type": "string"
                              },
                              "engine": {
                                "description": "The database's engine.\n- `mysql`\n- `postgresql`",
                                "enum": [
                                  "mysql",
                                  "postgresql"
                                ],
                                "example": "postgresql",
                                "type": "string"
                              },
                              "name": {
                                "description": "The database's name.",
                                "example": "example_db0",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_databases",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return MySQL databases",
        "tags": [
          "Databases",
          "MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_databases"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_databases?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/list_hooks": {
      "get": {
        "description": "This function lists the server's script hooks.",
        "operationId": "list_hooks",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "categories": {
                          "description": "An array of objects containing hook categories.",
                          "items": {
                            "properties": {
                              "category": {
                                "description": "The script hook's category.",
                                "example": "RPM::Versions",
                                "type": "string"
                              },
                              "events": {
                                "description": "An array of objects containing events.",
                                "items": {
                                  "properties": {
                                    "event": {
                                      "description": "The event that triggers the script hook.",
                                      "example": "MariaDB-server",
                                      "type": "string"
                                    },
                                    "stage_order": {
                                      "description": "When the hook script will execute. It is possible for a hook script\nto have both values.\n\n* `pre` — The script runs before the function.\n* `post` — The script runs after the function.",
                                      "example": [
                                        "pre",
                                        "post"
                                      ],
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "stages": {
                                      "description": "An array of objects containing stage information.",
                                      "items": {
                                        "properties": {
                                          "actions": {
                                            "description": "An array of objects containing information about hook script actions.",
                                            "items": {
                                              "properties": {
                                                "blocking": {
                                                  "description": "Whether the script hook has a blocking contest.\n\n* `1` — Blocking contest.\n* `0` — No blocking contest.",
                                                  "enum": [
                                                    1,
                                                    0
                                                  ],
                                                  "example": 0,
                                                  "type": "integer"
                                                },
                                                "category": {
                                                  "description": "The script hook's category.",
                                                  "example": "RPM::Versions",
                                                  "type": "string"
                                                },
                                                "check": {
                                                  "description": "The absolute file path to the script that runs after the hook script to check the results.",
                                                  "example": null,
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "description": {
                                                  "description": "The hook script's description.",
                                                  "example": "A script description.",
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "enabled": {
                                                  "description": "Whether the hook script is enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                                                  "enum": [
                                                    0,
                                                    1
                                                  ],
                                                  "example": 1,
                                                  "type": "integer"
                                                },
                                                "escalateprivs": {
                                                  "description": "Whether the hook script will run with escalated root privileges.\n\n* `1` — Runs with escalated privileges.\n* `0` — Does not run with escalated privileges.",
                                                  "enum": [
                                                    0,
                                                    1
                                                  ],
                                                  "example": 0,
                                                  "type": "integer"
                                                },
                                                "event": {
                                                  "description": "The event that triggers the script hook.",
                                                  "example": "MariaDB-server",
                                                  "type": "string"
                                                },
                                                "exectype": {
                                                  "description": "The type of function that the script hook launches.\n\n* `script` — A script function.\n* `module` — A Perl module function.",
                                                  "enum": [
                                                    "script",
                                                    "module"
                                                  ],
                                                  "example": "script",
                                                  "type": "string"
                                                },
                                                "hook": {
                                                  "description": "The absolute file path to the hook script.",
                                                  "example": "/scripts/postcourier-authlibup",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "description": "The script hook's ID.",
                                                  "example": "KQVO65K_8MWe__3JMPETn43S",
                                                  "type": "string"
                                                },
                                                "rollback": {
                                                  "description": "The absolute file path to the script that can roll back the hook script.",
                                                  "example": null,
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "stage": {
                                                  "description": "When the hook script will execute.\n\n* `pre` — The script runs before the function.\n* `post` — The script runs after the function.",
                                                  "example": "post",
                                                  "type": "string"
                                                },
                                                "weight": {
                                                  "description": "The priority of the script hook, where lower values run before higher values.",
                                                  "example": 100,
                                                  "minimum": 1,
                                                  "type": "integer"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "attributes": {
                                            "description": "A list of hook script attributes.",
                                            "properties": {
                                              "blocking": {
                                                "description": "Whether the script hook contains a blocking context.\n\n* `1` — Blocking context.\n* `0` — No blocking context.",
                                                "enum": [
                                                  1,
                                                  0
                                                ],
                                                "example": 0,
                                                "type": "integer"
                                              },
                                              "escalateprivs": {
                                                "description": "Whether the hook script will run with escalated root\nprivileges.\n\n* `1` — Runs with escalated privileges.\n* `0` — Does not run with escalated privileges.",
                                                "enum": [
                                                  1,
                                                  0
                                                ],
                                                "example": 0,
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "description": {
                                            "description": "The hook script's description.",
                                            "example": "My hook script.",
                                            "type": "string"
                                          },
                                          "stage": {
                                            "description": "When the hook script will execute.\n\n* `pre` — The script runs before the function.\n* `post` — The script runs after the function.",
                                            "example": "post",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_hooks",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return script hooks list",
        "tags": [
          "Script Hooks",
          "Scripts Hooks"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_hooks"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_hooks?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/list_integration_groups": {
      "get": {
        "description": "This function lists the groups of integration links in the cPanel interface.",
        "operationId": "list_integration_groups",
        "parameters": [
          {
            "description": "The cPanel account name.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "links": {
                          "description": "An array of objects that contain the integration link groups.",
                          "items": {
                            "properties": {
                              "group": {
                                "description": "The group ID.",
                                "example": "Group3",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_integration_groups",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return integration link groups",
        "tags": [
          "Integration",
          "Links"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_integration_groups user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_integration_groups?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/list_integration_links": {
      "get": {
        "description": "This function lists integration links in the cPanel interface.",
        "operationId": "list_integration_links",
        "parameters": [
          {
            "description": "The cPanel account name.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "links": {
                          "description": "An array of objects that contain information about the integration links.",
                          "items": {
                            "properties": {
                              "app": {
                                "description": "The integration link's app name.",
                                "example": "WHMCS_billing",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_integration_links",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return integration links",
        "tags": [
          "Integration",
          "Links"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_integration_links user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_integration_links?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/list_linked_server_nodes": {
      "get": {
        "description": "This function returns a list of all remote server nodes linked to the server. It also provides details about each remote server node.",
        "operationId": "list_linked_server_nodes",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects containing linked remote server nodes data.",
                          "items": {
                            "properties": {
                              "alias": {
                                "description": "The name of a linked remote server node.",
                                "example": "example",
                                "type": "string"
                              },
                              "enabled_services": {
                                "description": "An array of the services enabled on the linked remote server node.",
                                "example": [
                                  "apache_php_fpm",
                                  "cpanellogd",
                                  "cpdavd",
                                  "cpgreylistd",
                                  "cpsrvd",
                                  "crond",
                                  "dnsadmin",
                                  "exim",
                                  "ftpd",
                                  "imap",
                                  "ipaliases",
                                  "lmtp",
                                  "mailman",
                                  "mysql",
                                  "named",
                                  "nscd",
                                  "pop",
                                  "postgresql",
                                  "queueprocd",
                                  "rsyslogd",
                                  "spamd",
                                  "sshd",
                                  "tailwatchd"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "hostname": {
                                "description": "The remote server node's hostname.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "last_check": {
                                "description": "The last time that the server queried the current status of the remote server node.",
                                "example": 1556576165,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "tls_verified": {
                                "description": "Whether the remote server node has a valid [SSL certificate](https://go.cpanel.net/guidetoSSL).\n* `1` — The remote server node has a valid SSL certificate.\n* `0` — The remote server does **not** have a valid SSL certificate.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "username": {
                                "description": "The username required to make API calls to the linked remote server node.",
                                "example": "root",
                                "format": "username",
                                "type": "string"
                              },
                              "version": {
                                "description": "The version of cPanel & WHM installed on the remote server node.",
                                "example": "11.90.0.0",
                                "format": "cPanel version",
                                "type": "string"
                              },
                              "worker_capabilities": {
                                "additionalProperties": {
                                  "description": "The current role of the linked remote server node. This will return the required options for the role, if any exist.\n\n**Note:**\n\n* If **no** options exist for the role, this function returns an empty hash.\n* The object's key is the remote server node's current role.",
                                  "type": "object"
                                },
                                "description": "An object containing groups of services required for a remote server node to fulfill a specific role.",
                                "example": {
                                  "Mail": {}
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_linked_server_nodes",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all linked server nodes",
        "tags": [
          "Server Administration",
          "Server Nodes"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_linked_server_nodes"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_linked_server_nodes?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/list_mysql_databases_and_users": {
      "get": {
        "description": "This function retrieves the MySQL® database and user data for the specified account.\n\n**Important:**\n\nWhen you disable the [MySQL/MariaDB](https://go.cpanel.net/howtouseserverprofiles#roles) role **and** remote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "list_mysql_databases_and_users",
        "parameters": [
          {
            "description": "The username for a specified account.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "mysql_config": {
                          "description": "An object that contains the user's MySQL database configuration settings.",
                          "properties": {
                            "mysql-version": {
                              "description": "The MySQL version installed on the server.",
                              "example": "5.5",
                              "type": "string"
                            },
                            "prefix_length": {
                              "description": "The maximum number of characters allowed for the prefix on this server.",
                              "enum": [
                                8,
                                16
                              ],
                              "example": 8,
                              "type": "integer"
                            },
                            "use_db_prefix": {
                              "description": "Whether database prefixing is enabled on the server.\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "mysql_databases": {
                          "additionalProperties": {
                            "description": "The database's name is the key's name.",
                            "items": {
                              "description": "A database username with permissions on the database.",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "description": "An object that contains database names and users.",
                          "example": {
                            "user1_database1": [
                              "user1_user1"
                            ],
                            "user2_database2": [
                              "user2_user2"
                            ]
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_mysql_databases_and_users",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return MySQL databases and users for account",
        "tags": [
          "Databases",
          "MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_mysql_databases_and_users user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_mysql_databases_and_users?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/list_pops_for": {
      "get": {
        "description": "This function lists a cPanel account’s email accounts. To prevent falsified data or symlink exploitation, the function uses the specified cPanel account user, rather than `root` user, to read data from the user’s home directory. The system compares the collected data from the user’s home directory to a server-wide domains list. The comparison of the data validates whether you can trust the data.\n\n**Important:**\n\n  When you disable the [Receive Mail role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "list_pops_for",
        "parameters": [
          {
            "description": "The cPanel account user for which to list all owned email accounts.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pops": {
                          "description": "An array of email accounts that the cPanel user owns.",
                          "items": {
                            "example": "example1@example.com",
                            "format": "email",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_pops_for",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account's email accounts",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_pops_for user='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_pops_for?api.version=1&user=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/list_rpms": {
      "get": {
        "description": "This function lists RPMs that the server needs, but the server owner has not yet installed.\nWhen you call this function, it performs the same actions as the following command:\n\n`/usr/local/cpanel/scripts/check_cpanel_rpms --list-only --targets[target]`\n\nFor more information, read our\n[rpm.versions system](https://docs.cpanel.net/knowledge-base/rpm-versions/introduction-to-the-rpm-versions-system/)\ndocumentation.",
        "operationId": "list_rpms",
        "parameters": [
          {
            "description": "The target that depends on the uninstalled RPMs. If you do not specify a value, the function lists all of the required but uninstalled RPMs for all RPM targets.",
            "in": "query",
            "name": "target",
            "required": false,
            "schema": {
              "example": "3rdparty",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "rpms": {
                          "description": "A list of all RPM dependencies that the server owner has not yet installed.",
                          "items": {
                            "example": "cpanel-pcre",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_rpms",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return required but uninstalled server RPM package",
        "tags": [
          "RPM",
          "List Package Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_rpms"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_rpms?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/list_styles": {
      "get": {
        "description": "This function lists the server's cPanel styles.",
        "operationId": "list_styles",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "list": {
                          "description": "An array of objects containing cPanel styles on the server.",
                          "items": {
                            "properties": {
                              "default": {
                                "description": "Whether the style is the server's default style.\n* `1` — Default style.\n* `0` — **Not** the default style.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "display_name": {
                                "description": "The style's name as it appears within cPanel & WHM interfaces.",
                                "example": "Basic",
                                "type": "string"
                              },
                              "name": {
                                "description": "The style's name within the server's files.",
                                "example": "basic",
                                "type": "string"
                              },
                              "preview": {
                                "description": "Whether the style includes a preview image.\n* `1` — Includes a preview image.\n* `0` — Does **not** include a preview image.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The style type.\n* `default`\n* `global`\n* `reseller`\n* `user`",
                                "enum": [
                                  "default",
                                  "global",
                                  "reseller",
                                  "user"
                                ],
                                "example": "default",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_styles",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return the server's cPanel styles",
        "tags": [
          "Styles and Themes",
          "Styles"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_styles"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_styles?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60"
      }
    },
    "/list_user_child_nodes": {
      "get": {
        "description": "This function returns the system's cPanel accounts and the [linked cPanel & WHM server](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles) on which they exist.",
        "operationId": "list_user_child_nodes",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "A list of cPanel accounts and the linked cPanel & WHM servers on which they exist.",
                          "items": {
                            "properties": {
                              "alias": {
                                "description": "The name (alias) of the linked cPanel & WHM server.",
                                "example": "MailServer1",
                                "type": "string"
                              },
                              "type": {
                                "description": "The linked [cPanel & WHM server's profile](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles).\n* `Mail` - A server set as a mail node.",
                                "enum": [
                                  "Mail"
                                ],
                                "example": "Mail",
                                "type": "string"
                              },
                              "user": {
                                "description": "The cPanel account username.",
                                "example": "username1",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_user_child_nodes",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel accounts with server name and type",
        "tags": [
          "Server Administration",
          "Server Nodes"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_user_child_nodes"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_user_child_nodes?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "88"
      }
    },
    "/list_users": {
      "get": {
        "description": "This function lists the cPanel user accounts and the `root` user on the server.",
        "operationId": "list_users",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "users": {
                          "description": "A list of cPanel user accounts. The list may consist of the following types of accounts:\n\n* A valid cPanel username.\n* `root`",
                          "example": [
                            "example",
                            "root"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "list_users",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`.\n\n**Note:**\n\nThis field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return root and cPanel accounts",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 list_users"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/list_users?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listaccts": {
      "get": {
        "description": "This function lists the accounts on the server.",
        "operationId": "listaccts",
        "parameters": [
          {
            "description": "A [Perl Compatible Regular Expression (PCRE)](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions) that filters the results.\n\n**Note:**\n * The system matches the PCRE against the `searchtype` parameter's specified type.\n * If you do not specify a value for both the `searchtype` and `search` parameters,\n   the function returns all of the server's accounts.",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "The function's search method.\n* `exact` - The matched value and the `search` value **must** be identical.\n* `regex` - The matched value must contain the `search` value.",
            "in": "query",
            "name": "searchmethod",
            "required": false,
            "schema": {
              "enum": [
                "exact",
                "regex"
              ],
              "example": "exact",
              "type": "string"
            }
          },
          {
            "description": "The account information to query. If you do not specify a value\nfor both the `searchtype` and `search` parameters, the function returns all\nof the server's accounts.\n* `domain` - Match domains against the `search` regular expression.\n* `owner` - Match the WHM user who owns the account against the `search` regular expression.\n* `user` - Match usernames against the `search` regular expression.\n* `ip` - Match IP addresses against the `search` regular expression.\n* `package` - Match hosting plans (packages) against the `search` regular expression.",
            "in": "query",
            "name": "searchtype",
            "required": false,
            "schema": {
              "enum": [
                "domain",
                "owner",
                "user",
                "ip",
                "package"
              ],
              "example": "domain",
              "type": "string"
            }
          },
          {
            "description": "The returns to include in the output for each account.\n\nIf you do not specify a value, the function's output includes all of its returns.",
            "in": "query",
            "name": "want",
            "required": false,
            "schema": {
              "example": "domain,diskused",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "acct": {
                          "description": "An array of objects containing account data.",
                          "items": {
                            "properties": {
                              "backup": {
                                "description": "Whether backups are enabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "disklimit": {
                                "description": "The account's disk space quota.\n* `unlimited` — The account has unlimited disk space quota.\n* A maximum amount of disk space, in megabytes (MB).",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "diskused": {
                                "description": "The account's current disk space usage, in megabytes (MB), appended with `M`.\n\nFor example, `14M` represents 14 megabytes of current disk space usage.",
                                "example": "14M",
                                "type": "string"
                              },
                              "domain": {
                                "description": "The account's main domain.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "email": {
                                "description": "The account's contact email address.",
                                "example": "username@example.com",
                                "format": "email",
                                "type": "string"
                              },
                              "has_backup": {
                                "description": "Whether a backup of the account exists.\n* `1` - A backup of the account exists.\n* `0` - A backup of the account does **not** exist.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "inodeslimit": {
                                "description": "The limit on the number of files that the account owns.\n* `unlimited` — The account can own an unlimited number files.\n* A positive integer.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "inodesused": {
                                "description": "The number of files that the account owns.",
                                "example": 1,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "ip": {
                                "description": "The IPv4 address of the account's main domain.",
                                "example": "192.168.0.128",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "ipv6": {
                                "description": "The IPv6 address of the account's main domain.",
                                "items": {
                                  "example": "0101:ca75:0101:ca75:0101:ca75:0101:ca77",
                                  "format": "ipv6",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "is_locked": {
                                "description": "Whether the account is currently locked.\n* `1` - The account is locked.\n* `0` - The account is **not** locked.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "legacy_backup": {
                                "description": "Whether legacy backups are enabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "mailbox_format": {
                                "description": "The type of mailbox the account uses.\n\n* `mdbox`\n* `maildir`",
                                "enum": [
                                  "mdbox",
                                  "maildir"
                                ],
                                "example": "mdbox",
                                "type": "string"
                              },
                              "max_defer_fail_percentage": {
                                "description": "The [percentage of failed or deferred email\nmessages](https://go.cpanel.net/howtopreventspam)\nthat the account can send per hour before outgoing\nmail is rate-limited.\n* `unlimited` — The account can send unlimited emails per hour.\n* An integer that represents a precentage of messages.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "max_email_per_hour": {
                                "description": "The [maximum number of emails](https://go.cpanel.net/howtopreventspam)\nthat the account can send in one hour.\n* `unlimited` — The account can send unlimited emails per hour.\n* An integer that represents a number of sent emails.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "max_emailacct_quota": {
                                "description": "The maximum size, in megabytes (MB), that the account\ncan define when it creates an email account.\n\n* `unlimited` — The account can set unlimited quotas.\n* A positive integer that represents the allowable maximum\nsize of an email account, in megabytes (MB).",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxaddons": {
                                "description": "The account's maximum number of addon domains.\n* `unlimited` — The account can create unlimited addon domains.\n* `*unknown*` — The account cannot create addon domains.\n* An integer that represents a number of addon domains.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited",
                                      "*unknown*"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxftp": {
                                "description": "The account's maximum number of FTP accounts.\n* `unlimited` — The account can create unlimited FTP accounts.\n* An integer that represents a number of FTP accounts.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxlst": {
                                "description": "The account's maximum number of mailing lists.\n* `unlimited` — The account can create unlimited mailing lists.\n* An integer that represents a number of mailing lists.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxparked": {
                                "description": "The account's maximum number of parked domains (aliases).\n* `unlimited` — The account can create unlimited parked domains.\n* `*unknown*` — The account cannot use parked domains.\n* An integer that represents a number of parked domains.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited",
                                      "*unknown*"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxpop": {
                                "description": "The account's maximum number of email addresses.\n* `unlimited` — The account can create unlimited email addresses.\n* An integer that represents a number of email accounts.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxsql": {
                                "description": "The account's maximum number of each available type of SQL database.\n\nFor example, if you set this value to `5` and the system administrator allows MySQL® and PostgreSQL®\ndatabases, users can create up to five MySQL databases and up to five PostgreSQL databases.\n\n* `unlimited` — The account can create unlimited SQL databases.\n* An integer that represents a number of SQL databases.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "maxsub": {
                                "description": "The account's maximum number of subdomains.\n* `unlimited` — The account can create unlimited subdomains.\n* `*unknown*` - The account cannot use subdomains.\n* An integer that represents a number of subdomains.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited",
                                      "*unknown*"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "min_defer_fail_to_trigger_protection": {
                                "description": "The [minimum number of failed or deferred messages](https://go.cpanel.net/howtopreventspam) that the\naccount can send before outgoing mail is subject to rate-limiting.\n* `unlimited` — The account can send unlimited emails.\n* An integer that represents a number of failed or deferred messages.",
                                "oneOf": [
                                  {
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "outgoing_mail_hold": {
                                "description": "Whether to retain outgoing mail in the mail queue for the account's users.\n* `1` - Hold outgoing email in the mail queue.\n* `0` - Do **not** hold outgoingemail in the mail queue.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "outgoing_mail_suspended": {
                                "description": "Whether to suspend outgoing email from the account's users and force failure of any of their mail currently in the mail queue.\n* `1` - Suspend and forcefailure of outgoing email.\n* `0` - Do **not** suspend and forcefailure of outgoing email.\n\n**Note:**\n\nIf mail for a cPanel user's account is suspended, the system will reject their email before the system puts it in the mail server queue.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "owner": {
                                "description": "The reseller account username or `root` user that owns the account.",
                                "example": "root",
                                "type": "string"
                              },
                              "partition": {
                                "description": "The partition that contains the account's home directory.",
                                "example": "home",
                                "type": "string"
                              },
                              "plan": {
                                "description": "The account's hosting package.",
                                "example": "packagename",
                                "type": "string"
                              },
                              "shell": {
                                "description": "The absolute path of the account's shell location.",
                                "example": "/bin/bash",
                                "type": "string"
                              },
                              "startdate": {
                                "description": "The account creation date, in `YY Mon DD HH:mm` format.",
                                "example": "13 May 22 16:03",
                                "type": "string"
                              },
                              "suspended": {
                                "description": "Whether the account is currently suspended.\n* `1` - Suspended.\n* `0` - **Not** suspended.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "suspendreason": {
                                "description": "The reason for account suspension, if one was provided.",
                                "oneOf": [
                                  {
                                    "description": "If the account is **not** suspended, `suspendreason` will return `not suspended`.",
                                    "enum": [
                                      "not suspended"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "description": "If the account is suspended, `suspendreason` will return either:\n* A blank value, if the suspender did not provide a reason.\n* A message that explains the suspension.",
                                    "example": "suspended for non-payment",
                                    "nullable": true,
                                    "type": "string"
                                  }
                                ]
                              },
                              "suspendtime": {
                                "description": "The time of suspension.\n* `null` - The account is not currently suspended.\n* The time at which the account became suspended.",
                                "example": 1594040856,
                                "format": "unix_timestamp",
                                "nullable": true,
                                "type": "integer"
                              },
                              "temporary": {
                                "description": "Whether the Customer Support Ticket process created this user for temporary access to the system.\n* `1` - Temporary user.\n* `0` - Regular user.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "theme": {
                                "description": "The account's cPanel interface theme.",
                                "example": "paper_lantern",
                                "type": "string"
                              },
                              "uid": {
                                "description": "The account's user ID on the system.",
                                "example": 1001,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "unix_startdate": {
                                "description": "The account creation date.",
                                "example": 1369256589,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "user": {
                                "description": "The account username.",
                                "example": "username",
                                "format": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listaccts",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel accounts",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listaccts"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listaccts?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listacls": {
      "get": {
        "description": "This function lists the server's\n[Access Control Lists (ACLs)](https://go.cpanel.net/GuidetoWHMPluginsAccessControlLists)\nand each list's privileges.",
        "operationId": "listacls",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "acl": {
                          "description": "An array of objects containing ACL settings.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "The ACL's name.",
                                "example": "acl1",
                                "type": "string"
                              },
                              "privileges": {
                                "description": "A list of ACL privileges, including any third-party ACL privileges\nthat exist for the user.",
                                "properties": {
                                  "acct-summary": {
                                    "description": "Whether to allow the reseller to view an account summary.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "add-pkg": {
                                    "description": "Whether to allow the reseller to add and remove hosting plans\n(packages).\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "add-pkg-ip": {
                                    "description": "Whether to allow the reseller to create packages with a\ndedicated IP address.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "add-pkg-shell": {
                                    "description": "Whether to allow the reseller to create packages with shell\naccess.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "all": {
                                    "description": "Whether to grant the reseller **all** ACL privileges.\n\n**Warning:**\n\nA value of `1` grants `root`-level privileges to the reseller.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "allow-addoncreate": {
                                    "description": "Whether to allow the reseller to create packages with addon\ndomains.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "allow-emaillimits-pkgs": {
                                    "description": "Whether to allow the reseller to create packages with email quotas\nthat are **not** the default quotas.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "allow-parkedcreate": {
                                    "description": "Whether to allow the reseller to create packages with parked\ndomains (aliases).\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "allow-shell": {
                                    "description": "Whether to allow the reseller to create accounts with shell\naccess.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "allow-unlimited-bw-pkgs": {
                                    "description": "Whether to allow the reseller to create packages with unlimited\nbandwidth.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "allow-unlimited-disk-pkgs": {
                                    "description": "Whether to allow the reseller to create packages with unlimited\ndisk space.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "allow-unlimited-pkgs": {
                                    "description": "Whether to allow the reseller to create packages with unlimited\nfeatures.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "basic-system-info": {
                                    "description": "Whether to allow the user to retrieve basic system information.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "basic-whm-functions": {
                                    "description": "Whether to allow the reseller to access basic cPanel & WHM\noptions.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "clustering": {
                                    "description": "Whether to allow the reseller to use DNS clusters.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "cors-proxy-get": {
                                    "description": "Whether to allow the reseller to perform Cross-Origin Resource\nSharing (CORS) HTTP requests.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "cpanel-api": {
                                    "description": "Whether to allow the reseller to execute cPanel API 1, cPanel\nAPI 2 and UAPI functions via WHM.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "cpanel-integration": {
                                    "description": "Whether to allow the reseller to manage cPanel integration\nlinks.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "create-acct": {
                                    "description": "Whether to allow the reseller to create accounts.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "create-dns": {
                                    "description": "Whether to allow the reseller to add DNS zones.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "create-user-session": {
                                    "description": "Whether to allow the reseller to create a new temporary user\nsession for a specified service.\n\n* `1` — Allow.\n* `0` — Do not allow.\n\n**Note:**\n\nThis ACL privilege allows an API token user to bypass any\nrestrictions that you set on the API token. For more information,\nread our\n[Manage API Tokens](https://go.cpanel.net/ManageAPITokens)\ndocumentation.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "demo-setup": {
                                    "description": "Whether to allow the reseller to enable demo mode for accounts.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "digest-auth": {
                                    "description": "Whether to allow the reseller to manage Digest Authentication.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "edit-account": {
                                    "description": "Whether to allow the reseller to edit accounts.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "edit-dns": {
                                    "description": "Whether to allow the reseller to edit DNS zones.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "edit-mx": {
                                    "description": "Whether to allow the reseller to edit MX entries.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "edit-pkg": {
                                    "description": "Whether to allow the reseller to edit hosting plans (packages).\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "frontpage": {
                                    "deprecated": true,
                                    "description": "Whether to allow the reseller to manage Microsoft® FrontPage®\nExtensions.\n\n* `1` — Allow.\n* `0` — Do not allow.\n\n**Note:**\n\ncPanel & WHM ignores all Microsoft FrontPage settings and parameters.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "generate-email-config": {
                                    "description": "Whether to allow the reseller to generate a mobile configuration\nprofile for an email account.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "kill-acct": {
                                    "description": "Whether to allow the reseller to terminate accounts.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "kill-dns": {
                                    "description": "Whether to allow the reseller to remove DNS zones.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "limit-bandwidth": {
                                    "description": "Whether to allow the reseller to modify bandwidth limits\n(quotas).\n\n* `1` — Allow.\n* `0` — Do not allow.\n\n**Warning:**\n\nIf you do not use resource limits, a value of `1` allows\nresellers to circumvent package limits for disk space.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "list-accts": {
                                    "description": "Whether to allow the reseller to view the list of accounts.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "list-pkgs": {
                                    "description": "Whether to allow the reseller to view existing hosting plans.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "locale-edit": {
                                    "description": "Whether to allow the reseller to create and modify locales on\nthe server.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "mailcheck": {
                                    "description": "Whether to allow the reseller to troubleshoot mail delivery.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "manage-api-tokens": {
                                    "description": "Whether to allow the reseller to manage API tokens.\n\n* `1` — Allow.\n* `0` — Do not allow.\n\n**Note:**\n\nThis ACL privilege allows an API token user to bypass any\nrestrictions that you set on the API token. For more information,\nread our\n[Manage API Tokens](https://go.cpanel.net/ManageAPITokens)\ndocumentation.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "manage-dns-records": {
                                    "description": "Whether to allow the reseller to manage DNS records.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "manage-oidc": {
                                    "description": "Whether to allow the reseller to manage external authentication\nfor their accounts.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "manage-styles": {
                                    "description": "Whether to allow the reseller to manage their server's cPanel\nstyles.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "mysql-info": {
                                    "description": "Whether to allow the reseller to retrieve MySQL® database and\nuser data.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "news": {
                                    "description": "Whether to allow the reseller to modify the server's news.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "ns-config": {
                                    "description": "Whether to allow the reseller to manage nameserver records.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "park-dns": {
                                    "description": "Whether to allow the reseller to park DNS zones.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "passwd": {
                                    "description": "Whether to allow the reseller to change passwords.\n\n* `1` — Allow.\n* `0` — Do not allow.\n\n**Note:**\n\nThis privilege allows an API token user to change account\npasswords and log in with a new password. For more information,\nread our\n[Manage API Tokens](https://go.cpanel.net/ManageAPITokens)\ndocumentation.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "quota": {
                                    "description": "Whether to allow the reseller to modify quotas.\n\n* `1` — Allow.\n* `0` — Do not allow.\n\n**Warning:**\n\nIf you do not use resource limits, a value of `1`\nallows resellers to circumvent package limits for disk space.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "rearrange-accts": {
                                    "description": "Whether to allow the reseller to rearrange accounts.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "resftp": {
                                    "description": "Whether to allow the reseller to resync FTP passwords.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "restart": {
                                    "description": "Whether to allow the reseller to restart services.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "show-bandwidth": {
                                    "description": "Whether to allow the reseller to view account bandwidth usage.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "ssl": {
                                    "description": "Whether to allow the reseller to perform SSL site management.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "ssl-buy": {
                                    "description": "Whether to allow the reseller to purchase SSL certificates.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "ssl-gencrt": {
                                    "description": "Whether to allow the reseller to generate SSL certificates.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "ssl-info": {
                                    "description": "Whether to allow the reseller to view their server's SSL\ninformation.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "stats": {
                                    "description": "Whether to allow the reseller to view server information.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "status": {
                                    "description": "Whether to allow the reseller to view the server's status.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "suspend-acct": {
                                    "description": "Whether to allow the reseller to suspend or unsuspend accounts.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "thirdparty": {
                                    "description": "Whether to allow the reseller to manage third-party services.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "track-email": {
                                    "description": "Whether to allow resellers to view reports about email message\ndelivery attempts from their account.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "upgrade-account": {
                                    "description": "Whether to allow the reseller to upgrade or downgrade accounts.\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "viewglobalpackages": {
                                    "description": "Whether to allow the reseller to use all\n[global packages](https://go.cpanel.net/resellerpackages).\n\n* `1` — Allow.\n* `0` — Do not allow.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listacls",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all privilege lists and settings",
        "tags": [
          "Resellers",
          "Account Permissions"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listacls"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listacls?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listcrts": {
      "get": {
        "description": "This function lists the server's domains with installed SSL certificates.",
        "operationId": "listcrts",
        "parameters": [
          {
            "description": "Whether to limit the results to certificates registered with\na certificate authority (CA).\n\n* `1` — Registered certificates **only**.\n* `0` — All certificates.",
            "in": "query",
            "name": "registered",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The cPanel username.\n\nIf you do **not** use this parameter, the function returns certificates\nfor **all** accounts on the server.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "crt": {
                          "description": "Information about the certificate.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The certificate's primary domain.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "domain_owners": {
                                "description": "A list of the owners of the domain or domains that the certificate covers.",
                                "example": [
                                  "username"
                                ],
                                "items": {
                                  "format": "username",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "domains": {
                                "description": "A list of the domain or domains that the certificate covers.",
                                "example": [
                                  "example.com"
                                ],
                                "items": {
                                  "format": "domain",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "ecdsa_curve_name": {
                                "description": "The ECDSA curve that the certificate's key uses.\n\n* `prime256v1`\n* `secp384r1`\n* `null` — The certificate's key is **not** an ECDSA key.",
                                "enum": [
                                  "prime256v1",
                                  "secp384r1"
                                ],
                                "example": null,
                                "nullable": true,
                                "type": "string"
                              },
                              "friendly_name": {
                                "description": "The certificate's friendly name.",
                                "example": "TestCertificate",
                                "type": "string"
                              },
                              "id": {
                                "description": "The certificate's ID.",
                                "example": "example._com_d13b4_362b9_1400343187_b05e5c3e443dda9a8869c4cf7457829e",
                                "type": "string"
                              },
                              "is_self_signed": {
                                "description": "Whether the certificate is self-signed.\n\n* `1` — Self-signed.\n* `0` — **Not** self-signed.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "issuer.organizationName": {
                                "description": "The certificate's Organization Name.",
                                "example": "Organization",
                                "type": "string"
                              },
                              "key_algorithm": {
                                "description": "The certificate's key's algorithm.\n\n* `rsaEncryption` — RSA.\n* `id-ecPublicKey` — ECDSA.",
                                "enum": [
                                  "rsaEncryption",
                                  "id-ecPublicKey"
                                ],
                                "example": "rsaEncryption",
                                "type": "string"
                              },
                              "modulus_length": {
                                "description": "The certificate's key's modulus length, in bits.\n\n* `null` — The certificate's key is **not** an RSA key.",
                                "example": 2048,
                                "nullable": true,
                                "type": "integer"
                              },
                              "not_after": {
                                "description": "The date the certificate expires.",
                                "example": 1601467200,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "registered": {
                                "description": "Whether the certificate is registered with a CA.\n\n* `1` — Registered.\n* `0` — **Not** registered.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "signature_algorithm": {
                                "description": "The certificate's OID hash algorithm signature.",
                                "example": "sha256WithRSAEncryption",
                                "type": "string"
                              },
                              "validation_type": {
                                "description": "The certificate's validation type.\n\n* `ev` — Extended Validation.\n* `ov` — Organization Validation.\n* `dv` — Domain Validated.\n* `null` — The system could **not** parse and determine the\ncertificate's validation type.",
                                "enum": [
                                  "ev",
                                  "dv",
                                  "ov"
                                ],
                                "example": "dv",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listcrts",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domains with installed SSL certificates",
        "tags": [
          "SSL",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listcrts"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listcrts?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listips": {
      "get": {
        "description": "This function lists a server's IP addresses.",
        "operationId": "listips",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ip": {
                          "description": "An array of objects that contain IP address information.",
                          "items": {
                            "properties": {
                              "active": {
                                "description": "Whether the IP address is active.\n* `1` — Active.\n* `0` — Inactive.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "dedicated": {
                                "description": "Whether the IP address is dedicated.\n* `1` — Dedicated.\n* `0` — Shared.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "if": {
                                "description": "The IP address' network interface.",
                                "example": "eth0",
                                "type": "string"
                              },
                              "ip": {
                                "description": "The IP address.",
                                "example": "192.168.0.20",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "mainaddr": {
                                "description": "Whether the IP address is the server's main IP address.\n* `1` — Main IP address.\n* `0` — **Not** the main IP address.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "netmask": {
                                "description": "The IP address' netmask.",
                                "example": "255.255.0.0",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "network": {
                                "description": "The IP address' network value.",
                                "example": "192.168.0.0",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "public_ip": {
                                "description": "The public IP for the IP address.",
                                "example": "10.1.32.177",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "removable": {
                                "description": "Whether the IP address can be removed.\n* `1` — Removable.\n* `0` — **Not** removable.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "used": {
                                "description": "Whether the IP address is in use.\n* `1` — In use.\n* `0` — **Not** in use.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listips",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return server's IP addresses",
        "tags": [
          "IP Addresses",
          "IPv4 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listips"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listips?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listipv6s": {
      "get": {
        "description": "This function lists the IPv6 addresses bound to a server’s network interfaces.",
        "operationId": "listipv6s",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ip": {
                          "description": "An array of objects that contain IPv6 address information.",
                          "items": {
                            "properties": {
                              "ip": {
                                "description": "The IPv6 address.",
                                "example": "2001:0db8:0:0:1:0:0:1",
                                "format": "ipv6",
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listipv6s",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return server's IPv6 addresses",
        "tags": [
          "IP Addresses",
          "IPv6 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listipv6s"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listipv6s?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listlockedaccounts": {
      "get": {
        "description": "This function lists locked accounts on the server. **Only** WHM users with\n`root`-level privileges can unsuspend locked accounts.",
        "operationId": "listlockedaccounts",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "account": {
                          "description": "A list of locked accounts on the server.",
                          "example": [
                            "account1",
                            "account2"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listlockedaccounts",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- `1` — Success.\n- `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return suspended cPanel accounts",
        "tags": [
          "Accounts",
          "Suspensions"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listlockedaccounts"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listlockedaccounts?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/listmxs": {
      "get": {
        "description": "This function lists a domain's MX records.\n\n**Important:**\n\nWhen you disable the [DNS role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "listmxs",
        "parameters": [
          {
            "description": "The zone record's domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "record": {
                          "description": "An array of zone record data objects.",
                          "items": {
                            "properties": {
                              "Line": {
                                "description": "The zone record's line number.",
                                "example": 1,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "class": {
                                "description": "The record's class.",
                                "example": "IN",
                                "type": "string"
                              },
                              "exchange": {
                                "description": "The domain's mail exchanger.",
                                "example": "mail.example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "name": {
                                "description": "The record's name.",
                                "example": "hostname.example.com",
                                "type": "string"
                              },
                              "preference": {
                                "description": "The MX record's priority order.\n\n**Note:**\n\nLower values indicate a higher priority order.",
                                "example": 20,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "ttl": {
                                "description": "The record's Time To Live (TTL) in seconds.",
                                "example": 86400,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The DNS record's type.",
                                "example": "MX",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listmxs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Records obtained.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domain's mail exchanger records",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listmxs domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listmxs?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listpkgs": {
      "get": {
        "description": "This function lists the authenticated user's available hosting plans (packages).\n\n**Important:**\n\nThis function **only** returns packages that the authenticated user can access and\nuse during account creation.",
        "operationId": "listpkgs",
        "parameters": [
          {
            "description": "The permissions of packages that you wish to list.\n\n* `all` — All packages on the system.\n* `creatable` — Packages that the authenticated user can use for accounts.\n* `editable` — Packages that the authenticated user can edit.\n* `viewable` — Packages that the authenticated user can view.",
            "in": "query",
            "name": "want",
            "required": false,
            "schema": {
              "default": "all",
              "enum": [
                "all",
                "creatable",
                "editable",
                "viewable"
              ],
              "example": "all",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pkg": {
                          "description": "An array of objects that contains hosting plans and their settings.",
                          "items": {
                            "properties": {
                              "BWLIMIT": {
                                "description": "The hosting plan's bandwidth limit, in megabytes (MB).\n\n* `unlimited` — The hosting plan allows unlimited bandwidth.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows unlimited bandwidth.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "CGI": {
                                "description": "Whether CGI is enabled for the hosting plan.\n\n* `y` — Enabled.\n* `n` — Disabled.",
                                "enum": [
                                  "y",
                                  "n"
                                ],
                                "example": "y",
                                "type": "string"
                              },
                              "CPMOD": {
                                "description": "The hosing plan's cPanel interface theme.",
                                "example": "paper_lantern",
                                "type": "string"
                              },
                              "DIGESTAUTH": {
                                "description": "Whether the hosting plan enables Digest Authentication.\n\n* `y` — Enabled.\n* `n` — Disabled.",
                                "enum": [
                                  "y",
                                  "n"
                                ],
                                "example": "n",
                                "type": "string"
                              },
                              "FEATURELIST": {
                                "description": "The hosting plan's [feature list](https://go.cpanel.net/whmdocsFeatureManager).",
                                "example": "myfeaturelist",
                                "type": "string"
                              },
                              "HASSHELL": {
                                "description": "Whether shell access is enabled for the hosting plan.\n\n* `y` — Enabled.\n* `n` — Disabled.",
                                "enum": [
                                  "y",
                                  "n"
                                ],
                                "example": "n",
                                "type": "string"
                              },
                              "IP": {
                                "description": "Whether the hosting plan grants accounts a dedicated IP address.\n\n* `y` — Dedicated IP address.\n* `n` — Shared IP address.",
                                "enum": [
                                  "y",
                                  "n"
                                ],
                                "example": "n",
                                "type": "string"
                              },
                              "LANG": {
                                "description": "The hosting plan's locale.",
                                "example": "en",
                                "format": "ISO-3166-1 (alpha-2)",
                                "type": "string"
                              },
                              "MAXADDON": {
                                "description": "The hosting plan's maximum number of addon domains.\n\n* `unlimited` — The hosting plan allows unlimited addon domains.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows unlimited addon domains.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "MAXFTP": {
                                "description": "The hosting plan's maximum number of FTP accounts.\n\n* `unlimited` — The hosting plan allows unlimited FTP accounts.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows unlimited FTP accounts.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "MAXLST": {
                                "description": "The hosting plan's maximum number of mailing lists.\n\n* `unlimited` — The hosting plan allows an unlimited number of mailing lists.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows an unlimited number of mailing lists.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "MAXPARK": {
                                "description": "The hosting plan's maximum number of parked domains (aliases).\n\n* `unlimited` — The hosting plan allows unlimited parked domains.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows unlimited parked domains.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "MAXPOP": {
                                "description": "The hosting plan's maximum number of email accounts.\n\n* `unlimited` — The hosting plan allows unlimited email accounts.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows unlimited email accounts.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "MAXSQL": {
                                "description": "The hosting plan's maximum number of each available type of SQL\ndatabase.\n\nFor example, if this value is `5`, and the system administrator\nallows MySQL® and PostgreSQL® databases, users can create up to\nfive MySQL databases and up to five PostgreSQL databases.\n\n* `unlimited` — The hosting plan allows unlimited SQL databases.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows unlimited SQL databases.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "MAXSUB": {
                                "description": "The hosting plan's maximum number of subdomains.\n\n* `unlimited` — The hosting plan allows unlimited subdomains.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows unlimited subdomains.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "MAX_DEFER_FAIL_PERCENTAGE": {
                                "description": "The\n[percentage of failed or deferred email messages](https://go.cpanel.net/howtopreventspam)\nthat the hosting plan can send per hour before the system rate-limits\noutgoing mail.\n\n* `unlimited` — The hosting plan allows unlimited email messages.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows unlimited email messages.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "MAX_EMAILACCT_QUOTA": {
                                "description": "The hosting plan's maximum email account quota size, in megabytes (MB).\n\n* `unlimited` — The hosting plan allows an unlimited email account quota size.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows an unlimited email account quota size.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "MAX_EMAIL_PER_HOUR": {
                                "description": "The\n[maximum number of emails](https://go.cpanel.net/howtopreventspam)\nthat the hosting plan can send in one hour.\n\n* `unlimited` — The hosting plan allows unlimited emails per hour.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows unlimited emails per hour.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "QUOTA": {
                                "description": "The hosting plan's disk space limit, in megabytes (MB).\n\n* `unlimited` — The hosting plan allows unlimited disk space.",
                                "example": "unlimited",
                                "oneOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "description": "The hosting plan allows unlimited disk space.",
                                    "enum": [
                                      "unlimited"
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "_PACKAGE_EXTENSIONS": {
                                "description": "A space-separated list of one or more of the hosting plan's package extensions, if any exist.",
                                "example": "",
                                "type": "string"
                              },
                              "name": {
                                "description": "The hosting plan's name.",
                                "example": "package1",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listpkgs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return current user's available hosting plans",
        "tags": [
          "Packages",
          "Hosting Plans"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listpkgs"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listpkgs?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listresellers": {
      "get": {
        "description": "This function lists the reseller accounts on the server.",
        "operationId": "listresellers",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "reseller": {
                          "description": "An array of the server's reseller accounts.",
                          "items": {
                            "example": "bob",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listresellers",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all resellers",
        "tags": [
          "Resellers",
          "Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listresellers"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listresellers?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listsshkeys": {
      "get": {
        "description": "This function lists the server's SSH keys.\n\n**Warning:**\n\nOnly the `root` account can use this function, and it only affects the `root`\nkeys. To perform this function on a regular user account, call the cPanel API\n2 `SSH::listkeys` function through the WHM API.",
        "operationId": "listsshkeys",
        "parameters": [
          {
            "description": "A filename, to limit the results to keys that have that filename.",
            "in": "query",
            "name": "files",
            "required": false,
            "schema": {
              "example": "TestKey",
              "type": "string"
            }
          },
          {
            "description": "Whether to display only private keys.\n\n* `1` — Display only private keys.\n* `0` — Display all keys.",
            "in": "query",
            "name": "private",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to include private key text.\n\n* `1` — Include private key text.\n* `0` — Do **not** include private key text.",
            "in": "query",
            "name": "private_texts",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to display only public keys.\n\n* `1` — Display only public keys.\n* `0` — Display all keys.",
            "in": "query",
            "name": "public",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to include public key text.\n\n* `1` — Include public key text.\n* `0` — Do **not** include public key text.",
            "in": "query",
            "name": "public_texts",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to synchronize the keys that can access the server.\n\n* `1` — Synchronize the keys.\n* `0` — Do **not** synchronize the keys.",
            "in": "query",
            "name": "sync_authorized",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "keys": {
                          "description": "An array of objects of each key's information.",
                          "items": {
                            "properties": {
                              "authorized": {
                                "description": "Whether the key is authorized to access the server.\n\n* `1` — Authorized.\n* `0` — **Not** authorized.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "comment": {
                                "description": "The key's comment.",
                                "example": "REPO username@example.com",
                                "type": "string"
                              },
                              "ctime": {
                                "description": "The date that the key was created, in\n[Unix time format](http://en.wikipedia.org/wiki/Unix_time).",
                                "example": 1416596824,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "file": {
                                "description": "The key's filename.",
                                "example": "TestKey",
                                "type": "string"
                              },
                              "mtime": {
                                "description": "The date that the key will expire, in Unix time format.",
                                "example": 1416596824,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "private": {
                                "description": "Whether the private key is stored on the server.\n\n* `1` — The private key is on the server.\n* `0` — The private key is **not** on the server.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "text": {
                                "description": "The key's text.",
                                "example": "ssh-rsaXXXXX3XXXX1XX2XXXXXXXXXXXXXXxXXXX6XXXXX90X41X7XXXXX02XXXXX8XXXX54XXXXXXXXXXX2X07XXXXXXXXXXX7XXXX4XXX2X98XXXX98X80XXXXXXX7X/X4XXXXxX1XXXXXXXXXXXxXXXXXXXXX6+4XXXX36XXXXX3XXXXXX1XXXXXXX/X7+XX1XX6XXXX0XXXXXXX0XXXXXXXX+XxX99X7X2XXXXXX03xXXXXX0XXXXXXXXXX9XXXXXXX9XXXXXXXXXXXX/XXXXX07XXXXX3XXXXXX5XXX+/XXXXXXXXXXXXX3XxXXXXXXXXXXXX6XXXXXXXXXXXX2XXXXXXXXXXXXXXXXX3XX+XXXX3XXXXXXX== REPO username@example.com",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listsshkeys",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return SSH keys list",
        "tags": [
          "Security",
          "SSH Keys and Connections"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listsshkeys"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listsshkeys?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listsuspended": {
      "get": {
        "description": "This function lists suspended accounts on the server.",
        "operationId": "listsuspended",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "account": {
                          "description": "A list of objects containing suspended account data.",
                          "items": {
                            "properties": {
                              "is_locked": {
                                "description": "Whether the account is locked.\n* `1` - Locked.\n* `0` - Not locked.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "owner": {
                                "description": "The cPanel account's owner.\n- `root`\n- A reseller's username.\n- The account's username.",
                                "example": "root",
                                "type": "string"
                              },
                              "reason": {
                                "description": "The reason why the account is suspended, if one exists.",
                                "example": "Suspended for nonpayment.",
                                "type": "string"
                              },
                              "time": {
                                "description": "The current date and time in `Day Mon DD HH:mm:SS YYYY` human-readable format, where:\n* `Day` - represents the day of the week as a three-letter abbreviation.\n* `Mon` - represents the month's three-letter abbreviation.\n* `DD` - represents the date.\n* `HH` - represents the hour.\n* `mm` - represents the minute.\n* `SS` - represents the second.\n* `YYYY` - represents the year.",
                                "example": "Thu Nov 18 10:34:34 2014",
                                "type": "string"
                              },
                              "unixtime": {
                                "description": "The current date and time.",
                                "example": 1416306874,
                                "format": "unix_timestamp",
                                "type": "integer"
                              },
                              "user": {
                                "description": "The cPanel account's username.",
                                "example": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listsuspended",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return suspended cPanel accounts and information",
        "tags": [
          "Accounts",
          "Suspensions"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listsuspended"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listsuspended?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/listzones": {
      "get": {
        "description": "This function lists the server's DNS zones.\n\n**Important:**\n\nWhen you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "listzones",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "zone": {
                          "description": "An array of objects of zone information.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The domain name.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "zonefile": {
                                "description": "The zone file's name.",
                                "example": "example.net.db",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "listzones",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return server's DNS zones",
        "tags": [
          "DNS",
          "DNS Zones"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 listzones"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/listzones?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/load_cpgreylist_config": {
      "get": {
        "description": "This function returns Greylisting's current settings.",
        "operationId": "load_cpgreylist_config",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cpgreylist_config": {
                          "description": "An object that contains Greylisting settings.",
                          "properties": {
                            "child_timeout_secs": {
                              "description": "The maximum amount of seconds that Greylisting waits for a child process to time out.",
                              "example": 5,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "initial_block_time_mins": {
                              "description": "The number of minutes during which Greylisting defers email from an unknown triplet.",
                              "example": 10,
                              "maximum": 240,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "is_enabled": {
                              "description": "Whether Greylisting is enabled.\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "is_exim_enabled": {
                              "description": "Whether Exim is enabled.\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "max_child_procs": {
                              "description": "The maximum amount of child processes.",
                              "example": 5,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "must_try_time_mins": {
                              "description": "The number of minutes during which Greylisting accepts a re-sent email from an unknown triplet.",
                              "example": 240,
                              "maximum": 1440,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "purge_interval_mins": {
                              "description": "The number of minutes before Greylisting deletes the records in the Greylisting database.",
                              "example": 60,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "record_exp_time_mins": {
                              "description": "The number of minutes before Greylisting deletes the triplet record and treats a re-sent email as a new, unknown triplet.",
                              "example": 4320,
                              "maximum": 43200,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "spf_bypass": {
                              "description": "Whether emails with SPF bypass Greylisting.\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "load_cpgreylist_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Greylisting settings",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 load_cpgreylist_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/load_cpgreylist_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/load_cphulk_config": {
      "get": {
        "description": "This function returns cPHulk's current settings.",
        "operationId": "load_cphulk_config",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cphulk_config": {
                          "description": "An object that contains cPHulk's current settings.",
                          "properties": {
                            "block_brute_force_with_firewall": {
                              "description": "Whether to use the server's firewall to block brute force attacks.\n* `1` - Block.\n* `0` - Don't block.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "block_excessive_brute_force_with_firewall": {
                              "description": "Whether to use the server's firewall to block excessive brute force attacks.\n* `1` - Block.\n* `0` - Don't block.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "brute_force_period_mins": {
                              "description": "The number of minutes during which cPHulk measures all login attempts to a specific user's account.",
                              "example": 5,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "brute_force_period_sec": {
                              "description": "The number of seconds over which cPHulk measures all login attempts to a specific user's account.",
                              "example": 360,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "can_temp_ban_firewall": {
                              "description": "Whether to add temporary IP bans via the server's firewall.\n* `1` - Add.\n* `0` - Don't add.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "command_to_run_on_brute_force": {
                              "description": "The command to run when the system detects a brute force attack. A valid BASH command.",
                              "example": "echo \"BRUTE\"",
                              "type": "string"
                            },
                            "command_to_run_on_excessive_brute_force": {
                              "description": "The command to run when the system detects an excessive brute force attack. A valid BASH command.",
                              "example": "echo \"TOO MUCH BRUTE\"",
                              "type": "string"
                            },
                            "ip_based_protection": {
                              "description": "Whether cPHulk will track failed login attempts via IP addresses.\n* `1` - Track.\n* `0` - Don't track.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "ip_brute_force_period_mins": {
                              "description": "The number of minutes during which cPHulk measures an attacker's login attempts.",
                              "example": 15,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "ip_brute_force_period_sec": {
                              "description": "The number of seconds during which cPHulk measures an attacker's login attempts.",
                              "example": 300,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "is_enabled": {
                              "description": "Whether the cPHulk service is enabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "lookback_period_min": {
                              "description": "The number of minutes during which cPHulk counts failed logins against a user.",
                              "example": 360,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "lookback_time": {
                              "description": "The number of seconds during which cPHulk counts failed logins against a user.",
                              "example": 21600,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "mark_as_brute": {
                              "description": "The maximum number of failures that cPHulk will allow per account from a specific IP address before the system locks out that address for two weeks.",
                              "example": 30,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "max_failures": {
                              "description": "The maximum number of failures that cPHulk will allow per account within the defined time range.",
                              "example": 30,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "max_failures_byip": {
                              "description": "The maximum number of failures that cPHulk will allow per account from a specific IP address within the defined time range.",
                              "example": 5,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "notify_on_brute": {
                              "description": "Whether cPHulk will send a notification when it detects a brute force attack.\n* `1` - Send.\n* `0` - Do not send.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_on_root_login": {
                              "description": "Whether cPHulk will send a notification when the root user successfully logs in from an IP address that is not on the whitelist.\n* `1` - Send.\n* `0` - Do not send.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "notify_on_root_login_for_known_netblock": {
                              "description": "Whether cPHulk will send a notification when the root user successfully logs in from an IP address in the same netblock.\n* `1` - Send.\n* `0` - Do not send.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "username_based_protection": {
                              "description": "Whether cPHulk will track failed logins by username.\n* `1` - Track.\n* `0` - Don't track.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "username_based_protection_for_root": {
                              "description": "Whether cPHulk will track the root user's failed logins.\n* `1` - Track.\n* `0` - Don't track.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "username_based_protection_local_origin": {
                              "description": "Whether cPHulk will only track failed logins for requests originating locally.\n* `1` - Track.\n* `0` - Don't track.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "load_cphulk_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return login security configuration settings",
        "tags": [
          "cPHulk",
          "Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 load_cphulk_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/load_cphulk_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/load_style": {
      "get": {
        "description": "This function retrieves the server's custom style. You can set the custom style through WHM's [Customization](https://go.cpanel.net/whmdocsCustomization) interface _(Home >> cPanel >> Customization)_ or with WHM API 1's `save_style` function.",
        "operationId": "load_style",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "branding_dir": {
                          "description": "The style information's location.\n* `/var/cpanel/customizations/brand` - The directory for root-enabled users' branding.\n* `/home/username/var/cpanel/reseller/brand` - The directory for reseller branding.",
                          "enum": [
                            "/var/cpanel/customizations/brand",
                            "/home/username/var/cpanel/reseller/brand"
                          ],
                          "example": "/var/cpanel/customizations/brand",
                          "type": "string"
                        },
                        "company_logo": {
                          "description": "The filename for the logo that displays in the cPanel interface.\n* `logo.png`\n* `logo.svg`\n* A blank value, if no custom logo exists.",
                          "enum": [
                            "logo.png",
                            "logo.svg",
                            ""
                          ],
                          "example": "logo.png",
                          "type": "string"
                        },
                        "company_name": {
                          "description": "The company name.\n* A valid string.\n* A blank value, if no custom company name exists.",
                          "example": "Example Corporation",
                          "type": "string"
                        },
                        "documentation_url": {
                          "description": "The reseller's documentation URL.\n* A valid URL.\n* A blank value, if no documentation URL exists.",
                          "example": "http://example.com/documentation/",
                          "format": "url",
                          "type": "string"
                        },
                        "favicon": {
                          "description": "The favicon file's name.\n* `favicon.png`\n* A blank value, if no custom favicon exists.",
                          "enum": [
                            "favicon.png",
                            ""
                          ],
                          "example": "favicon.png",
                          "type": "string"
                        },
                        "help_url": {
                          "description": "The reseller's help system URL.\n* A valid URL.\n* A blank value, if no help system URL exists.",
                          "example": "http://example.com/help/",
                          "format": "url",
                          "type": "string"
                        },
                        "webmail_logo": {
                          "description": "The filename for the logo that displays in the\nWebmail interface.\n* `webmail.png`\n* `webmail.svg`\n* A blank value, if no custom logo exists.",
                          "enum": [
                            "webmail.png",
                            "webmail.svg",
                            ""
                          ],
                          "example": "webmail.png",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "load_style",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return the server's custom style",
        "tags": [
          "Styles and Themes",
          "Styles"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 load_style"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/load_style?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/lookupnsip": {
      "get": {
        "description": "This function retrieves a nameserver's IP address.",
        "operationId": "lookupnsip",
        "parameters": [
          {
            "description": "The nameserver's hostname.",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "example": "ns1.example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ip": {
                          "description": "The nameserver's IP address.",
                          "example": "192.168.0.20",
                          "format": "ipv4",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "lookupnsip",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return nameserver's IP address",
        "tags": [
          "DNS",
          "Resolvers"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 lookupnsip host='ns1.example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/lookupnsip?api.version=1&host=ns1.example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/lookupnsips": {
      "get": {
        "description": "This function retrieves a nameserver's IPv4 and IPv6 addresses.",
        "operationId": "lookupnsips",
        "parameters": [
          {
            "description": "The nameserver's hostname.",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "example": "ns1.example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ipv4": {
                          "description": "The nameserver's IPv4 address.\n\n**Note:**\n\n The function returns this value **only** if a nameserver with an IPv4 address exists on the server.",
                          "example": "192.0.2.0",
                          "format": "ipv4",
                          "type": "string"
                        },
                        "ipv6": {
                          "description": "The nameserver's IPv6 address.\n\n**Note:**\n\n The function returns this value **only** if a nameserver with an IPv6 address exists on the server.",
                          "example": "2001:0db8:0:0:1:0:0:1",
                          "format": "ipv6",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "lookupnsips",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return nameserver's IPv4 and IPv6 addresses",
        "tags": [
          "DNS",
          "Resolvers"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 lookupnsips host='ns1.example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/lookupnsips?api.version=1&host=ns1.example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60"
      }
    },
    "/mail_sni_status": {
      "get": {
        "description": "This function retrieves the status of the domain's SNI mail services.\n\n**Note:**\n\nFunctions that disable Mail SNI fail and make no changes.",
        "operationId": "mail_sni_status",
        "parameters": [
          {
            "description": "The account's domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "enabled": {
                          "description": "Whether SNI for mail is enabled.\n- `1` — Enabled.\n- `0` — Disabled.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "mail_sni_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domain's SNI mail services status",
        "tags": [
          "Mail",
          "Mail Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 mail_sni_status domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/mail_sni_status?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/manage_features": {
      "get": {
        "description": "This function lists and manages items in the\n[Feature Showcase](https://go.cpanel.net/GuidetotheFeatureShowcase).\n\n**Note:**\n\n* This function's output changes, depending on which value you pass to the `action` parameter.\n* The example in this document displays the function's return when the `action`\nparameter value is `info`.",
        "operationId": "manage_features",
        "parameters": [
          {
            "description": "The function's action.\n\n* `info` — List full details for all available features.\n* `list` — List the feature IDs for all available features.\n* `enable` — Enable the feature or features called in the `features` parameter.\n* `disable` — Disable the feature or features called in the `features` parameter.",
            "in": "query",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "info",
                "list",
                "enable",
                "disable"
              ],
              "example": "info",
              "type": "string"
            }
          },
          {
            "description": "The feature's ID.\n\n**Note:**\n\nYou **must** use this parameter if you pass the `enable` or `disable` value for\nthe `action` parameter.",
            "in": "query",
            "name": "features",
            "required": false,
            "schema": {
              "example": "features_example1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": {
                        "feature": [
                          {
                            "description": "This feature does things.",
                            "enabled": 1,
                            "feature_key": "featured_example1",
                            "link": "http://go.cpanel.net/featureshowcasefeatured_example1",
                            "name": "Featured Example 1",
                            "recommended": 1,
                            "vendor": "Third Party, Inc."
                          },
                          {
                            "description": "This feature also does things.",
                            "enabled": 1,
                            "feature_key": "featured_example2",
                            "link": "http://go.cpanel.net/featureshowcasefeatured_example2",
                            "name": "Featured Example 2",
                            "recommended": 1,
                            "vendor": "cPanel, L.L.C."
                          }
                        ]
                      },
                      "properties": {
                        "action": {
                          "description": "An array of objects containing feature information.\n\n**Note:**\n\nThe function **only** returns this array if you pass the `enabled`\nor `disabled` values to the `action` parameter.",
                          "items": {
                            "properties": {
                              "feature": {
                                "description": "The feature's ID.",
                                "example": "mysql8",
                                "type": "string"
                              },
                              "status": {
                                "description": "The feature's state.",
                                "example": "Successfully performed 'enable' for mysql8",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "feature": {
                          "description": "An array of objects containing feature information.\n\n**Note:**\n\nThe function **only** returns this array if you pass the `info`\nor `list` values to the `action` parameter.",
                          "items": {
                            "properties": {
                              "description": {
                                "description": "The feature's description.\n\n**Note:**\n\nThe function **only** returns this value if you pass the `info`\nvalue to the `action` parameter.",
                                "example": "MySQL® 8 is now available in cPanel and WHM for all supported operated operating systems. For more information, read our documentation (https://go.cpanel.net/mysqlup).",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Whether the feature is enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Note:**\n\nThe function **only** returns this value if you pass the `info`\nor `list` values to the `action` parameter.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "feature_key": {
                                "description": "The feature's ID.\n\n**Note:**\n\nThe function **only** returns this value if you pass the `info`\nor `list` values to the `action` parameter.",
                                "example": "mysql8",
                                "type": "string"
                              },
                              "link": {
                                "description": "The feature's documentation link.\n\n**Note:**\n\nThe function **only** returns this value if you pass the `info`\nvalue to the `action` parameter.",
                                "example": "https://go.cpanel.net/mysqlup",
                                "format": "url",
                                "type": "string"
                              },
                              "name": {
                                "description": "The feature's name.\n\n**Note:**\n\nThe function **only** returns this value if you pass the `info`\nvalue to the `action` parameter.",
                                "example": "MySQL® 8 Now Available For Upgrade",
                                "type": "string"
                              },
                              "recommended": {
                                "description": "Whether we recommend that you install the feature.\n\n* `1` — Recommended.\n* `0` — **Not** recommended.\n\n**Note:**\n\nThe function **only** returns this value if you pass the `info`\nvalue to the `action` parameter.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "vendor": {
                                "description": "The feature's vendor.\n\n**Note:**\n\nThe function **only** returns this value if you pass the `info`\nvalue to the `action` parameter.",
                                "example": "cPanel, L.L.C.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "manage_features",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update Feature Showcase",
        "tags": [
          "Packages",
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 manage_features action='info'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/manage_features?api.version=1&action=info"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/massmodifyacct": {
      "get": {
        "description": "This function modifies multiple cPanel accounts.\n\n**Warning:**\n\n* We **strongly** recommend that you do not modify a cPanel account's settings\nif that account uses a hosting plan (package). If the package values change, the\nsystem will overwrite any of your custom values with the package's new values.\n* This function uses case-sensitive parameters. You **must** enter parameters in\nthe correct case format. If you do not, the function will ignore that parameter.\n\n**Note:**\n\nOn servers that run CentOS 7, you may see a `named` warning about the absence of\nSPF resource records on DNS.\n  * This warning is **not** relevant on CentOS 7 servers, because\n  [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7\n  servers use TXT records instead of SPF records.\n  * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated\n  version of BIND that complies with RFC 7208. To resolve this issue, update your\n  operating system to a version that contains the updated version of BIND. For more\n  information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).",
        "operationId": "massmodifyacct",
        "parameters": [
          {
            "description": "The account's current username.\n\n**Note:**\n\nTo modify multiple users, duplicate or increment the parameter name. For example,\nthe `user-1`, `user-2`, and `user-3` parameters.",
            "examples": {
              "multiple": {
                "summary": "Modify multiple users.",
                "value": "user-0=username user-1=username1 user-2=username2 user-3=username3"
              },
              "multiple-alternative": {
                "summary": "Modify multiple users.",
                "value": "user=username user=username1 user=username2 user=username3"
              },
              "single": {
                "summary": "Modify a single user.",
                "value": "username"
              }
            },
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether backups are enabled for the account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\nThis parameter **requires** `root` privileges.",
            "example": 1,
            "in": "query",
            "name": "BACKUP",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ]
            }
          },
          {
            "description": "The account's maximum bandwidth use, in bytes.\n\n* `0`, `null` or `unlimited` — The account can use unlimited bandwidth.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "BWLIMIT",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IntPosNullOrUnlimited"
            }
          },
          {
            "description": "The account's contact email address.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "CONTACTEMAIL",
            "required": false,
            "schema": {
              "example": "username@example.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "The owner of the account's MySQL® databases.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "DBOWNER",
            "required": false,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The number of disk blocks for the account, in kilobytes (KB).\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "DISK_BLOCK_LIMIT",
            "required": false,
            "schema": {
              "example": 100000000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether CGI access is enabled for the account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\nWhen a [server profile](https://go.cpanel.net/whmdocsServerProfile) disables the\n[Web Server](https://go.cpanel.net/serverroles#roles) role, you **cannot** enable\nCGI access.",
            "in": "query",
            "name": "HASCGI",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether DomainKeys Identified Mail (DKIM) is enabled for the account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "HASDKIM",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "type": "integer"
            }
          },
          {
            "description": "Whether shell (SSH) access is enabled for the account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\nWe **strongly** recommend that you use the `shell` parameter to specify a shell for\nSSH access.",
            "in": "query",
            "name": "HASSHELL",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether Sender Policy Framework (SPF) is enabled for the account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "HASSPF",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The account's IP address.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "IP",
            "required": false,
            "schema": {
              "example": "192.168.0.1",
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "The account's display language.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "LANG",
            "required": false,
            "schema": {
              "example": "english-utf8",
              "type": "string"
            }
          },
          {
            "description": "The account's default locale.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "LOCALE",
            "required": false,
            "schema": {
              "example": "en",
              "format": "ISO-3166-1 (alpha-2)",
              "type": "string"
            }
          },
          {
            "description": "The storage format that the account's mailboxes use.\n\n* `maildir`\n* `mbox`\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAILBOX_FORMAT",
            "required": false,
            "schema": {
              "enum": [
                "maildir",
                "mbox"
              ]
            }
          },
          {
            "description": "The percentage of failed or deferred email messages that the account can send per hour\nbefore outgoing mail is rate-limited.\n\n* `0` or `unlimited` — The account can send an unlimited number of failed or deferred\nmessages.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAX_DEFER_FAIL_PERCENTAGE",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IntPosOrUnlimited"
            }
          },
          {
            "description": "The maximum number of emails that the account can send in one hour.\n\n* `0` or `unlimited` — The account can send an unlimited number of emails.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAX_EMAIL_PER_HOUR",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IntPosOrUnlimited"
            }
          },
          {
            "description": "The maximum size, in megabytes (MB), that the account can define when it creates an\nemail account.\n\n* `unlimited` — The account possesses an unlimited quota.\n\n**Important:**\n\n* This value applies to each email account, **not** each cPanel account.\n* If you specify a `MAX_EMAILACCT_QUOTA` value, the function will **overwrite** the\nplan's defined value for that cPanel account.\n* This parameter does **not** affect any existing email accounts\n* We recommend that you allow the account's plan to determine this value.\n* `MAX_EMAIL_PER_HOUR` will define to unlimited if you do **not** define either the plan\nor `MAX_EMAILACCT_QUOTA` parameters.\n\nThis parameter defaults to the defined system value. It will default to `unlimited` if\nyou do **not** define either the `plan` or `MAX_EMAILACCT_QUOTA` parameters.",
            "in": "query",
            "name": "MAX_EMAILACCT_QUOTA",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "maximum": 4294967296,
                  "minimum": 1,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The account's maximum number of addon domains.\n\n* `0`, `null`, or `unlimited` — The account possesses unlimited addon domains.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXADDON",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int0-999999NullOrUnlimited"
            }
          },
          {
            "description": "The account's maximum number of FTP accounts.\n\n* `null` or `unlimited` — The account possesses unlimited FTP accounts.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXFTP",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int0-999999NullOrUnlimited"
            }
          },
          {
            "description": "The account's maximum number of mailing lists.\n\n* `0`, `null`, or `unlimited` — The account possesses unlimited mailing lists.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXLST",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int0-999999NullOrUnlimited"
            }
          },
          {
            "description": "The account's maximum number of parked domains (aliases).\n\n* `null` or `unlimited` — The account possesses unlimited mailing lists.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXPARK",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int0-999999NullOrUnlimited"
            }
          },
          {
            "description": "The account's maximum number of Ruby applications.\n\n* `null` or `unlimited` — The account possesses unlimited Ruby applications.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXPASSENGERAPPS",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int0-999999NullOrUnlimited"
            }
          },
          {
            "description": "The maximum number of email accounts for the account.\n\n* `null` or `unlimited` — The account possesses unlimited email accounts.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXPOP",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int0-999999NullOrUnlimited"
            }
          },
          {
            "description": "The maximum number of each available type of SQL database for the account.\n\nFor example, if you set this value to `5` and the system administrator allows MySQL®\nand PostgreSQL® databases, users can create up to five MySQL databases and up to five\nPostgreSQL databases.\n\n* `null` or `unlimited` — The account possesses unlimited databases.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXSQL",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int0Max999999NullOrUnlimited"
            }
          },
          {
            "description": "The maximum number of subdomains for the account.\n\n* `null` or `unlimited` — The account possesses unlimited subdomains.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXSUB",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int0-999999NullOrUnlimited"
            }
          },
          {
            "description": "Whether to modify the firewall rules as part of the account modification.\n\n* `1` – Modify the firewall rules.\n* `0` – Do **not** modify the firewall rules.\n\n**NOTE:**\n\nIf you do not set this parameter, the system will modify the firewall based on the *Do not make changes to the firewall during account modification.* setting in WHM's [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).",
            "in": "query",
            "name": "modify_firewall",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The priority of the account's primary mail exchanger.\n\n**Note:**\n\nThe parameter name consists of `MXCHECK`, a hyphen, and the primary domain of the\naccount.\n\nExample key and value:\n* `MXCHECK-example.com=10`\n\nThis parameter defaults to the define system value.",
            "in": "query",
            "name": "MXCHECK-*",
            "required": false,
            "schema": {
              "example": 1,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when someone links the account to an external\nauthentication account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_account_authn_link",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when someone disables notifications for external\nauthentication account links.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_account_authn_link_notification_disabled",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when an AutoSSL certificate expires.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_autossl_expiry",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification AutoSSL cannot renew a certificate because domains\nthat fail Domain Control Validation (DCV) exist on the current certificate.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_autossl_expiry_coverage",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when AutoSSL renews a certificate.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_autossl_renewal",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when AutoSSL renews a certificate but the new\ncertificate lacks at least one domain that the previous certificate secured.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_autossl_renewal_coverage",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when someone changes the contact address for the account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_contact_address_change",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when disables the notification for contact address\n changes.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_contact_address_change_notification_disabled",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when the account reaches its disk usage limit.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_disk_limit",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when someone changes the account's password.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_password_change",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when someone disables notifications for password changes.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_password_change_notification_disabled",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when an SSL certificate on the account expires.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_ssl_expiry",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to suspend outgoing email on the account.\n\n* `1` — Suspend outgoing email.\n* `0` — Do **not** suspend outgoing email.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "OUTGOING_EMAIL_SUSPENDED",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "A new owner's username or the `root` user, to change the account's owner.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\nThe authenticated user **must** have `root` privileges in order to assign the account\nto a reseller other than that account.",
            "in": "query",
            "name": "OWNER",
            "required": false,
            "schema": {
              "example": "reseller",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "An access token for the account's [Pushbullet](https://www.pushbullet.com/)™\nnotifications.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "PUSHBULLET_ACCESS_TOKEN",
            "required": false,
            "schema": {
              "example": "1234567890",
              "type": "string"
            }
          },
          {
            "description": "The account's disk space quota, in multiples of 1,048,576 bytes.\n\n* `0`, `null`, or `unlimited` — The account's disk space is unlimited.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "QUOTA",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IntPosNullOrUnlimited"
            }
          },
          {
            "description": "A space-separated list of removed, missing, or uninstalled extensions.\n\nThis parameter defaults to the defined system value.\n\n**Warning:**\n\nThis parameter removes all of the extensions that you list from\nthe `_PACKAGE_EXTENSIONS` variable in the user file. It will **not** remove the\nextensions' variables. For more information, read our\n[Guide to Package Extensions](https://go.cpanel.net/GuidetoPackageExtensions).",
            "in": "query",
            "name": "remove_missing_extensions",
            "required": false,
            "schema": {
              "example": "packageext1 packageext2",
              "type": "string"
            }
          },
          {
            "description": "Whether to rename the cPanel account's database objects to use a new username's\ndatabase prefix. This parameter **only** applies to servers that use database prefixing.\n\n* `1` — Rename the cPanel account's database objects.\n* `0` — Do **not** rename the cPanel account's database objects.\n\n**Warning:**\n\n* The account owner **must** update any applications to use the new database object names.\n* **Use this parameter carefully**. It can cause confusion for system administrators.\n\nMySQL does **not** allow you to rename a database. When cPanel & WHM \"renames\" a database,\nthe system performs the following steps:\n\n1. The system creates a new database.\n1. The system moves data from the old database to the new database.\n1. The system recreates grants and stored code in the new database.\n1. The system deletes the old database and its grants.\n\n**Warning:**\n\n* If **any** of the first three steps fail, the system returns an error and attempts to\nrestore the database's original state. If the restoration process fails, the API function's\nerror response describes these additional failures.\n* In rare cases, the system creates the second database successfully, but fails to delete\nthe old database or grants. The system treats the rename action as a success; however, the\nAPI function returns warnings that describe the failure to delete the old database or grants.",
            "in": "query",
            "name": "rename_database_objects",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to grant reseller privileges to the account.\n\n* `1` — Grant reseller privileges.\n* `0` — Do **not** grant reseller privileges.",
            "in": "query",
            "name": "reseller",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The account's cPanel interface theme.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "RS",
            "required": false,
            "schema": {
              "example": "paper_lantern",
              "type": "string"
            }
          },
          {
            "description": "The absolute file path to the shell's location.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "shell",
            "required": false,
            "schema": {
              "example": "/bin/bash",
              "format": "path",
              "type": "string"
            }
          },
          {
            "description": "Whether Apache SpamAssassin™ is enabled for the account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "spamassassin",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "A timestamp for which to use as the account's creation date.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "STARTDATE",
            "required": false,
            "schema": {
              "example": 1549471343,
              "format": "unix_timestamp",
              "type": "integer"
            }
          },
          {
            "description": "The account's cPanel interface style.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "STYLE",
            "required": false,
            "schema": {
              "example": "Basic",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects containing data for each modified user.\n\n**Note:**\n\nIf an account uses [linked cPanel server nodes](https://go.cpanel.net/whmdocsLinkServerNodes),\nthis object contains a return for each server on which the account exists.",
                          "example": [
                            {
                              "reason": "Unable to fetch the cPanel user file for username",
                              "result": 0,
                              "user": "username"
                            },
                            {
                              "extended": {
                                "cpuser": {
                                  "BACKUP": "1",
                                  "BWLIMIT": "unlimited",
                                  "CONTACTEMAIL": "username1@example.com",
                                  "CONTACTEMAIL2": "",
                                  "DBOWNER": "username1",
                                  "DEADDOMAINS": [
                                    "example.example1.com"
                                  ],
                                  "DEMO": "0",
                                  "DISK_BLOCK_LIMIT": 0,
                                  "DOMAIN": "example1.com",
                                  "DOMAINS": [],
                                  "FEATURELIST": "default",
                                  "HASCGI": "1",
                                  "HASDKIM": "1",
                                  "HASSPF": "1",
                                  "HOMEDIRLINKS": [],
                                  "IP": "172.16.1.3",
                                  "LANG": "english-utf8",
                                  "LEGACY_BACKUP": "0",
                                  "LOCALE": "en",
                                  "MAILBOX_FORMAT": "maildir",
                                  "MAXADDON": "0",
                                  "MAXFTP": "234",
                                  "MAXLST": "unlimited",
                                  "MAXPARK": "0",
                                  "MAXPOP": "123",
                                  "MAXSQL": "345",
                                  "MAXSUB": "unlimited",
                                  "MAX_DEFER_FAIL_PERCENTAGE": "unlimited",
                                  "MAX_EMAILACCT_QUOTA": "unlimited",
                                  "MAX_EMAIL_PER_HOUR": "unlimited",
                                  "MTIME": "1584509675",
                                  "MXCHECK-example1.com": "remote",
                                  "OWNER": "username1",
                                  "PLAN": "extended",
                                  "RS": "paper_lantern",
                                  "STARTDATE": "765435600",
                                  "USER": "username1",
                                  "UTF8MAILBOX": "1",
                                  "WORKER_NODE-Mail": "example1:6L3ZJZ8LPAAOMC8CA31325O8EKGJ5YV5",
                                  "_PACKAGE_EXTENSIONS": "custom",
                                  "__CACHE_DATA_VERSION": "0.81"
                                },
                                "domain": "example1.com",
                                "setshell": "unmodified",
                                "user": "username1"
                              },
                              "messages": [],
                              "reason": "Account Modified",
                              "result": 1,
                              "user": "username1",
                              "warnings": []
                            },
                            {
                              "extended": {
                                "cpuser": {
                                  "BACKUP": "1",
                                  "BWLIMIT": "unlimited",
                                  "CONTACTEMAIL": "",
                                  "CONTACTEMAIL2": "",
                                  "DBOWNER": "username2",
                                  "DEADDOMAINS": [],
                                  "DEMO": "0",
                                  "DISK_BLOCK_LIMIT": 0,
                                  "DOMAIN": "example2.com",
                                  "DOMAINS": [],
                                  "FEATURELIST": "default",
                                  "HASCGI": "0",
                                  "HASDKIM": "1",
                                  "HASSPF": "1",
                                  "HOMEDIRLINKS": [],
                                  "IP": "10.0.0.1",
                                  "LANG": null,
                                  "LEGACY_BACKUP": "0",
                                  "LOCALE": "cs",
                                  "MAILBOX_FORMAT": "maildir",
                                  "MAXADDON": "0",
                                  "MAXFTP": "234",
                                  "MAXLST": "unlimited",
                                  "MAXPARK": "0",
                                  "MAXPOP": "123",
                                  "MAXSQL": "345",
                                  "MAXSUB": "unlimited",
                                  "MAX_DEFER_FAIL_PERCENTAGE": "unlimited",
                                  "MAX_EMAILACCT_QUOTA": "unlimited",
                                  "MAX_EMAIL_PER_HOUR": "unlimited",
                                  "MTIME": "1583966719",
                                  "MXCHECK-example2.com": "0",
                                  "OWNER": "root",
                                  "PLAN": "extended",
                                  "RS": "paper_lantern",
                                  "STARTDATE": "728719200",
                                  "USER": "username2",
                                  "UTF8MAILBOX": "1",
                                  "WORKER_NODE-Mail": "example2:BXE4LIAXF4X9N0B0TG69AAQ64DGR1XPU",
                                  "_PACKAGE_EXTENSIONS": "",
                                  "__CACHE_DATA_VERSION": "0.81"
                                },
                                "domain": "example2.com",
                                "setshell": "unmodified",
                                "user": "username2"
                              },
                              "messages": [],
                              "proxied_from": [
                                "example.com"
                              ],
                              "reason": "Account Modified",
                              "result": 1,
                              "user": "username2",
                              "warnings": []
                            },
                            {
                              "extended": {
                                "cpuser": {
                                  "BACKUP": "1",
                                  "BWLIMIT": "unlimited",
                                  "CONTACTEMAIL": "",
                                  "CONTACTEMAIL2": "",
                                  "DBOWNER": "username2",
                                  "DEADDOMAINS": [],
                                  "DEMO": 0,
                                  "DISK_BLOCK_LIMIT": 0,
                                  "DOMAIN": "example2.com",
                                  "DOMAINS": [],
                                  "FEATURELIST": "default",
                                  "HASCGI": "1",
                                  "HASDKIM": "1",
                                  "HASSPF": "1",
                                  "HOMEDIRLINKS": [],
                                  "IP": "172.16.1.3",
                                  "LANG": "english-utf8",
                                  "LEGACY_BACKUP": "0",
                                  "LOCALE": "en",
                                  "MAILBOX_FORMAT": "maildir",
                                  "MAXADDON": "unlimited",
                                  "MAXFTP": "234",
                                  "MAXLST": "unlimited",
                                  "MAXPARK": "unlimited",
                                  "MAXPOP": "123",
                                  "MAXSQL": "345",
                                  "MAXSUB": "unlimited",
                                  "MAX_DEFER_FAIL_PERCENTAGE": "unlimited",
                                  "MAX_EMAILACCT_QUOTA": "unlimited",
                                  "MAX_EMAIL_PER_HOUR": "unlimited",
                                  "MTIME": "1584509675",
                                  "MXCHECK-example2.com": "remote",
                                  "OWNER": "username2",
                                  "PLAN": "default",
                                  "RS": "paper_lantern",
                                  "STARTDATE": "765435600",
                                  "USER": "username2",
                                  "UTF8MAILBOX": "1",
                                  "WORKER_NODE-Mail": "example2:H99IZWY3OH9Q1DQNR58L55WUBXAENPDP",
                                  "_PACKAGE_EXTENSIONS": "",
                                  "__CACHE_DATA_VERSION": "0.81"
                                },
                                "domain": "example2.com",
                                "setshell": "unmodified",
                                "user": "username2"
                              },
                              "messages": [],
                              "reason": "Account Modified",
                              "result": 1,
                              "user": "username2",
                              "warnings": []
                            },
                            {
                              "extended": {
                                "cpuser": {
                                  "BACKUP": "1",
                                  "BWLIMIT": "unlimited",
                                  "CONTACTEMAIL": "",
                                  "CONTACTEMAIL2": "",
                                  "DBOWNER": "username2",
                                  "DEADDOMAINS": [],
                                  "DEMO": 0,
                                  "DISK_BLOCK_LIMIT": 0,
                                  "DOMAIN": "example2.com",
                                  "DOMAINS": [],
                                  "FEATURELIST": "default",
                                  "HASCGI": "0",
                                  "HASDKIM": "1",
                                  "HASSPF": "1",
                                  "HOMEDIRLINKS": [],
                                  "IP": "10.0.0.2",
                                  "LANG": "english-utf8",
                                  "LEGACY_BACKUP": "0",
                                  "LOCALE": "en",
                                  "MAILBOX_FORMAT": "maildir",
                                  "MAXADDON": "unlimited",
                                  "MAXFTP": "234",
                                  "MAXLST": "unlimited",
                                  "MAXPARK": "unlimited",
                                  "MAXPOP": "123",
                                  "MAXSQL": "345",
                                  "MAXSUB": "unlimited",
                                  "MAX_DEFER_FAIL_PERCENTAGE": "unlimited",
                                  "MAX_EMAILACCT_QUOTA": "unlimited",
                                  "MAX_EMAIL_PER_HOUR": "unlimited",
                                  "MTIME": "1583966717",
                                  "MXCHECK-example2.com": "0",
                                  "OWNER": "linked",
                                  "PLAN": "default",
                                  "RS": "paper_lantern",
                                  "STARTDATE": "765435600",
                                  "USER": "username2",
                                  "UTF8MAILBOX": "1",
                                  "_PACKAGE_EXTENSIONS": "",
                                  "__CACHE_DATA_VERSION": "0.81"
                                },
                                "domain": "example2.com",
                                "setshell": "noshell",
                                "user": "username2"
                              },
                              "messages": [
                                "Shell changed"
                              ],
                              "proxied_from": [
                                "example.com"
                              ],
                              "reason": "Account Modified",
                              "result": 1,
                              "user": "username2",
                              "warnings": []
                            }
                          ],
                          "items": {
                            "properties": {
                              "extended": {
                                "description": "An object containing the account's modified settings.",
                                "properties": {
                                  "cpuser": {
                                    "additionalProperties": {
                                      "description": "The complete attributes of the cPanel account."
                                    },
                                    "description": "An object containing the output of an account's `cpuser`\nfile. The system stores this file in the `/var/cpanel/users`\ndirectory.\n\n**Note:**\n\nIf the account or its hosting plan use\n[package extensions](https://go.cpanel.net/GuidetoPackageExtensions),\nthe `cpuser` object will also include the extension's variables.",
                                    "type": "object"
                                  },
                                  "domain": {
                                    "description": "The account's main domain.",
                                    "format": "domain",
                                    "type": "string"
                                  },
                                  "setshell": {
                                    "anyOf": [
                                      {
                                        "description": "The updated shell's absolute file path.",
                                        "format": "path",
                                        "type": "string"
                                      },
                                      {
                                        "description": "The shell's absolute filepath did not change.",
                                        "enum": [
                                          "unmodified",
                                          "noshell"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The absolute file path to the account's updated shell location.\n\n* `unmodified` — The shell's absolute filepath did not change.",
                                    "format": "path",
                                    "type": "string"
                                  },
                                  "user": {
                                    "description": "The cPanel account's username.\n\n**Note:**\n\nIf you changed the cPanel account's username, the function\nreturns the new value.",
                                    "format": "username",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "messages": {
                                "description": "A list containing account modification messages.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "proxied_from": {
                                "description": "The hostnames of the\n[linked cPanel server nodes](https://go.cpanel.net/serverroles)\nfrom which the function proxied the return. The function returns\nthe hostnames in their proxied order.\n\n**Note:**\n\nThe function **only** returns this value for\n[distributed cPanel accounts](https://go.cpanel.net/cPanelGlossary#distributed-cpanel-account).",
                                "items": {
                                  "format": "domain",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "reason": {
                                "description": "The account's modification status.",
                                "type": "string"
                              },
                              "result": {
                                "description": "Whether the account modification succeeded.\n* `1` — Success.\n* `0` — Failure.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "type": "integer"
                              },
                              "user": {
                                "description": "The modified account's username.",
                                "format": "username",
                                "type": "string"
                              },
                              "warnings": {
                                "description": "A list of warning messages for the modified account, if any exist.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "example": {
                        "command": "massmodifyacct",
                        "messages": [
                          "From example1.com: Restarting apache"
                        ],
                        "reason": "Failed to modify one or more users.",
                        "result": 0,
                        "version": 1,
                        "warnings": []
                      },
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "massmodifyacct",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Failed to modify one or more users.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update multiple cPanel accounts",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 massmodifyacct username='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/massmodifyacct?api.version=1&username=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "88"
      }
    },
    "/matchpkgs": {
      "get": {
        "description": "This function matches the server's hosting plans (packages) against\nyour criteria.\n\n**Note:**\n\nIf you do not include **any** input parameters, the function lists **all** of\nthe server's packages.",
        "operationId": "matchpkgs",
        "parameters": [
          {
            "description": "A space-separated list of one or more of the hosting plan's package extensions.",
            "in": "query",
            "name": "_PACKAGE_EXTENSIONS",
            "required": false,
            "schema": {
              "example": "'ext1 ext2 ext3'",
              "type": "string"
            }
          },
          {
            "description": "The hosting plan's bandwidth limit.\n\n* `unlimited` — The hosting plan allows unlimited bandwidth.",
            "in": "query",
            "name": "BWLIMIT",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "format": "megabytes",
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited bandwidth.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "Whether CGI is enabled for the hosting plan.\n\n* `1` — Enabled.\n* `0` — Disabled.",
            "in": "query",
            "name": "CGI",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The hosting plan's cPanel interface theme.",
            "in": "query",
            "name": "CPMOD",
            "required": false,
            "schema": {
              "example": "paper_lantern",
              "type": "string"
            }
          },
          {
            "description": "Whether the hosting plan enables Digest Authentication.\n\n* `y` — Enabled.\n* `n` — Disabled.",
            "in": "query",
            "name": "DIGESTAUTH",
            "required": false,
            "schema": {
              "enum": [
                "y",
                "n"
              ],
              "example": "n",
              "type": "string"
            }
          },
          {
            "description": "The hosting plan's [feature list](https://go.cpanel.net/whmdocsFeatureManager).",
            "in": "query",
            "name": "FEATURELIST",
            "required": false,
            "schema": {
              "example": "myfeaturelist",
              "type": "string"
            }
          },
          {
            "description": "Whether shell access is enabled for the hosting plan.\n\n* `1` — Enabled\n* `0` — Disabled.",
            "in": "query",
            "name": "HASSHELL",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the hosting plan grants accounts a dedicated IP address.\n\n* `y` — Dedicated IP address.\n* `n` — Shared IP address.",
            "in": "query",
            "name": "IP",
            "required": false,
            "schema": {
              "enum": [
                "y",
                "n"
              ],
              "example": "n",
              "type": "string"
            }
          },
          {
            "description": "The hosting plan's locale.",
            "in": "query",
            "name": "LANG",
            "required": false,
            "schema": {
              "example": "en",
              "format": "ISO-3166-1 (alpha-2)",
              "type": "string"
            }
          },
          {
            "description": "The\n[percentage of failed or deferred email messages](https://go.cpanel.net/howtopreventspam)\nthat the hosting plan can send per hour before the system rate-limits\noutgoing mail.\n\n* `unlimited` — The hosting plan allows unlimited email messages.",
            "in": "query",
            "name": "MAX_DEFER_FAIL_PERCENTAGE",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited email messages.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The [maximum number of emails](https://go.cpanel.net/howtopreventspam)\nthat the hosting plan can send in one hour.\n\n* `unlimited` — The hosting plan allows unlimited emails per hour.",
            "in": "query",
            "name": "MAX_EMAIL_PER_HOUR",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited emails per hour.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum email account quota size, in megabytes (MB).\n\n* `unlimited` — The hosting plan allows an unlimited email account quota size.",
            "in": "query",
            "name": "MAX_EMAILACCT_QUOTA",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "format": "megabytes",
                  "minimum": 1,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows an unlimited email account quota size.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of addon domains.\n\n* `unlimited` — The hosting plan allows unlimited addon domains.",
            "in": "query",
            "name": "MAXADDON",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited addon domains.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of FTP accounts.\n\n* `unlimited` — The hosting plan allows for unlimited FTP accounts.",
            "in": "query",
            "name": "MAXFTP",
            "required": false,
            "schema": {
              "example": 2,
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows for unlimited FTP accounts.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of mailing lists.\n\n* `unlimited` — The hosting plan allows an unlimited number of mailing lists.",
            "in": "query",
            "name": "MAXLST",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows an unlimited number of mailing lists.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of parked domains (aliases).\n\n* `unlimited` — The hosting plan allows unlimited parked domains.",
            "in": "query",
            "name": "MAXPARK",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited parked domains.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosing plan's maximum number of email accounts.\n\n* `unlimited` — The hosting plan's can create unlimited email accounts.",
            "in": "query",
            "name": "MAXPOP",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan's can create unlimited email accounts.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of SQL databases.\n\n* `unlimited` — The hosting plan allows unlimited SQL databases.",
            "in": "query",
            "name": "MAXSQL",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited SQL databases.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's maximum number of subdomains.\n\n* `unlimited` — The hosting plan allows unlimited subdomains.",
            "in": "query",
            "name": "MAXSUB",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan allows unlimited subdomains.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The hosting plan's disk space limit.\n\n* `unlimited` — The hosting plan has unlimited disk space.",
            "in": "query",
            "name": "QUOTA",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "format": "megabytes",
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "description": "The hosting plan has unlimited disk space.",
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pkg": {
                          "description": "A list of hosting plan settings.",
                          "properties": {
                            "BWLIMIT": {
                              "description": "The hosting plan's bandwidth limit, in megabytes (MB).\n\n* `unlimited` — The hosting plan allows unlimited bandwidth.",
                              "example": "unlimited",
                              "oneOf": [
                                {
                                  "format": "megabytes",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited bandwidth.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "CGI": {
                              "description": "Whether CGI is enabled for the hosting plan.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "CPMOD": {
                              "description": "The hosting plan's cPanel interface theme.",
                              "example": "paper_lantern",
                              "type": "string"
                            },
                            "DIGESTAUTH": {
                              "description": "Whether the hosting plan enables Digest Authentication.\n\n* `y` — Enable.\n* `n` — Disable.",
                              "enum": [
                                "y",
                                "n"
                              ],
                              "example": "y",
                              "type": "string"
                            },
                            "FEATURELIST": {
                              "description": "The hosting plan's\n[feature list](https://go.cpanel.net/whmdocsFeatureManager).",
                              "example": "myfeaturelist",
                              "type": "string"
                            },
                            "FRONTPAGE": {
                              "default": 0,
                              "deprecated": true,
                              "description": "Whether Microsoft® FrontPage Extensions are enabled for the account.\n\n**Note:**\n\ncPanel & WHM ignores all FrontPage settings and parameters.",
                              "enum": [
                                0
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "HASSHELL": {
                              "description": "Whether shell access is enabled for the hosting plan.\n* `y` — Enabled. * `n` — Disabled.",
                              "enum": [
                                "y",
                                "n"
                              ],
                              "example": "n",
                              "type": "string"
                            },
                            "IP": {
                              "description": "Whether the hosting plan grants accounts a dedicated IP address.\n\n* `y` — Dedicated IP address.\n* `n` — Shared IP address.",
                              "enum": [
                                "y",
                                "n"
                              ],
                              "example": "n",
                              "type": "string"
                            },
                            "LANG": {
                              "description": "The hosting plan's locale.",
                              "example": "en",
                              "format": "ISO-3166-1 (alpha-2)",
                              "type": "string"
                            },
                            "MAXADDON": {
                              "description": "The hosting plan's maximum number of addon domains.\n\n* `unlimited` — The hosting plan allows unlimited addon domains.",
                              "example": 1,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited addon domains.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXFTP": {
                              "description": "The hosting plan's maximum number of FTP accounts.\n\n* `unlimited` — The hosting plan allows for unlimited FTP accounts.",
                              "example": "unlimited",
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows for unlimited FTP accounts.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXLST": {
                              "description": "The hosting plan's maximum number of mailing lists.\n\n* `unlimited` — The hosting plan allows an unlimited number of mailing lists.",
                              "example": 5,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows an unlimited number of mailing lists.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXPARK": {
                              "description": "The hosting plan's maximum number of parked domains.\n\n* `unlimited` — The hosting plan allows unlimited parked domains.",
                              "example": 1,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited parked domains.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXPOP": {
                              "description": "The hosting plan's maximum number of email accounts.\n\n* `unlimited` — The hosting plan's can create unlimited email accounts.",
                              "example": 20,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan's can create unlimited email accounts.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXSQL": {
                              "description": "The hosting plan's maximum number of SQL databases.\n\n* `unlimited` — The hosting plan allows unlimited SQL databases.",
                              "example": 1,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited SQL databases.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAXSUB": {
                              "description": "The hosting plan's maximum number of subdomains.\n\n* `unlimited` — The hosting plan allows unlimited subdomains.",
                              "example": 5,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited subdomains.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAX_DEFER_FAIL_PERCENTAGE": {
                              "description": "The\n[percentage of failed or deferred email messages](https://go.cpanel.net/howtopreventspam)\nthat the hosting plan can send per hour before outgoing mail is rate-limited.\n\n* `unlimited` — The hosting plan allows unlimited email messages.",
                              "example": 10,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited email messages.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAX_EMAILACCT_QUOTA": {
                              "description": "The maximum size that the account can define when it\ncreates an email account.\n\n* `unlimited` — The hosting plan allows an unlimited email account quota size.",
                              "example": "unlimited",
                              "oneOf": [
                                {
                                  "format": "megabytes",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows an unlimited email account quota size.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "MAX_EMAIL_PER_HOUR": {
                              "description": "The [maximum number of emails](https://go.cpanel.net/howtopreventspam)\nthat the hosting plan can send in one hour.\n\n* `unlimited` — The hosting plan allows unlimited emails per hour.",
                              "example": 100,
                              "oneOf": [
                                {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan allows unlimited emails per hour.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "QUOTA": {
                              "description": "The hosting plan's disk space limit.\n\n* `unlimited` — The hosting plan has unlimited disk space.",
                              "example": 100,
                              "oneOf": [
                                {
                                  "format": "megabytes",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                {
                                  "description": "The hosting plan has unlimited disk space.",
                                  "enum": [
                                    "unlimited"
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "_PACKAGE_EXTENSIONS": {
                              "description": "A list of one or more of the hosting plan's package extensions.",
                              "example": "ext1 ext2 ext3",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "matchpkgs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` – Success.\n* `0` – Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return filtered hosting plans",
        "tags": [
          "Packages",
          "Hosting Plans"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 matchpkgs"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/matchpkgs?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/modifyacct": {
      "get": {
        "description": "This function modifies a cPanel account.\n\n**Warning:**\n\nWe **strongly** recommend that you **do not** modify a single cPanel account's settings if that cPanel account uses a hosting plan (package). If the package values change, **the system will overwrite any of your custom values with the package's new values**.\n\n**Note:**\n\nOn servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource records on DNS.\n  * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.\n  * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).",
        "operationId": "modifyacct",
        "parameters": [
          {
            "description": "The cPanel account's current username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether backups are enabled for the cPanel account.\n\n* `1` — Enable backups.\n* `0` — Disable backups.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\nYou **must** have `root`-level privileges to set this parameter.",
            "in": "query",
            "name": "BACKUP",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The cPanel account's maximum bandwidth use, in bytes.\n\n* `0` or `unlimited` — The cPanel account can use unlimited bandwidth.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "BWLIMIT",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The cPanel account's contact email address.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "contactemail",
            "required": false,
            "schema": {
              "example": "username@example.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "The owner of the cPanel account's MySQL databases.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "DBOWNER",
            "required": false,
            "schema": {
              "example": "example",
              "type": "string"
            }
          },
          {
            "description": "The number of disk blocks for the cPanel account, in kilobytes (KB).\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "DISK_BLOCK_LIMIT",
            "required": false,
            "schema": {
              "example": 100000000,
              "type": "integer"
            }
          },
          {
            "description": "The cPanel account's main domain.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "DNS",
            "required": false,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "Whether CGI access is enabled for the cPanel account.\n\n* `1` — Enable CGI access.\n* `0` — Disable CGI access.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\nWhen a [server profile](https://go.cpanel.net/howtouseserverprofiles) disables the Web Server role, you **cannot** enable CGI access.",
            "in": "query",
            "name": "HASCGI",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether DKIM is enabled for the cPanel account.\n\n* `1` — Enable DKIM.\n* `0` — Disable DKIM.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "HASDKIM",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether shell (SSH) access is enabled for the cPanel account.\n\n* `1` — Enable shell access.\n* `0` — Disable shell access.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\nWe **strongly** recommend that you use the `shell` parameter to specify a shell for SSH access.",
            "in": "query",
            "name": "HASSHELL",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether SPF is enabled for the cPanel account.\n\n* `1` — Enable SPF.\n* `0` — Disable SPF.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "HASSPF",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The cPanel account's IP address.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "IP",
            "required": false,
            "schema": {
              "example": "192.168.0.1",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account's display language.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "LANG",
            "required": false,
            "schema": {
              "example": "english-utf8",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account's default locale, in two-letter [ISO-3166 code](https://www.iso.org/iso-3166-country-codes.html) format.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "LOCALE",
            "required": false,
            "schema": {
              "example": "en",
              "format": "ISO-3166-1 (alpha-2)",
              "type": "string"
            }
          },
          {
            "description": "The server that will manage the cPanel account's mail.\n\n* `.local` — Make the local server manage the cPanel account’s mail. If the account currently uses a [child node](https://go.cpanel.net/cPanelGlossary#child-node) for its mail, this will transfer the account’s mail to the local server.\n* The alias (friendly name) of a child node that should manage the cPanel account’s mail.\n\n  When you distribute an account’s mail, the function adds a `LINK` entry to the\n  [`/var/cpanel/accounting.log`](https://go.cpanel.net/ThecPanelLogFiles) file.\n\nThis parameter defaults to the account’s current mail node, or `.local` if the account’s mail is on the local server.",
            "in": "query",
            "name": "mail_node_alias",
            "required": false,
            "schema": {
              "example": "mailnode",
              "oneOf": [
                {
                  "description": "A mail node alias.",
                  "example": "mailnode",
                  "type": "string"
                },
                {
                  "description": "Transfer a user’s mail from an existing mail node to the local server.",
                  "enum": [
                    ".local"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The storage format that the cPanel account's mailboxes use.\n\n* `maildir`\n* `mbox`\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAILBOX_FORMAT",
            "required": false,
            "schema": {
              "enum": [
                "maildir",
                "mbox"
              ],
              "example": "maildir",
              "type": "string"
            }
          },
          {
            "description": "The percentage of failed or deferred email messages that the\ncPanel account can send per hour before outgoing mail is rate-limited.\n\n* `0` or `unlimited` — The cPanel account can send an unlimited number of failed or deferred messages.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAX_DEFER_FAIL_PERCENTAGE",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IntPosOrUnlimited"
            }
          },
          {
            "description": "The maximum number of emails that the cPanel account can send in one hour.\n\n* `0` or `unlimited` — The cPanel account can send an unlimited number of emails.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAX_EMAIL_PER_HOUR",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IntPosOrUnlimited"
            }
          },
          {
            "description": "The maximum quota, in megabytes (MB), that the cPanel account can define\nwhen it creates an email account.\n\n* `unlimited` — The cPanel account can set unlimited quotas.\n\nThis parameter defaults to the defined system value, or to `unlimited` if you do not define either the `plan` or `MAX_EMAILACCT_QUOTA` parameters.\n\n**Important:**\n\n* This value applies to each email account, **not** each cPanel account.\n* If you specify a `MAX_EMAILACCT_QUOTA` value, the function will overwrite the plan's defined value for that cPanel\naccount.\n* This parameter does **not** affect any existing email accounts.\n* We recommend that you allow the cPanel account's plan to determine this value.",
            "in": "query",
            "name": "MAX_EMAILACCT_QUOTA",
            "required": false,
            "schema": {
              "example": "unlimited",
              "oneOf": [
                {
                  "enum": [
                    "unlimited"
                  ],
                  "type": "string"
                },
                {
                  "maximum": 4294967296,
                  "minimum": 0,
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The cPanel account's maximum number of addon domains.\n\n* `0` or `unlimited` — The cPanel account can use unlimited addon domains.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXADDON",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int999999OrUnlimited"
            }
          },
          {
            "description": "The cPanel account's maximum number of FTP accounts.\n\n* `unlimited` — The cPanel account can create unlimited FTP accounts.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXFTP",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int999999OrUnlimited"
            }
          },
          {
            "description": "The cPanel account's maximum number of mailing lists.\n\n* `0` or `unlimited` — The cPanel account can create unlimited mailing lists.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXLST",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int999999OrUnlimited"
            }
          },
          {
            "description": "The cPanel account's maximum number of parked domains (aliases).\n\n* `unlimited` — The cPanel account can use unlimited parked domains.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXPARK",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int999999OrUnlimited"
            }
          },
          {
            "description": "The cPanel account's maximum number of Ruby applications.\n\n* `unlimited` — The cPanel account can use unlimited Ruby applications.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXPASSENGERAPPS",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int999999OrUnlimited"
            }
          },
          {
            "description": "The maximum number of email accounts for the cPanel account.\n\n* `unlimited` — The cPanel account can create unlimited email accounts.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXPOP",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int999999OrUnlimited"
            }
          },
          {
            "description": "The maximum number of each available type of SQL database for\nthe cPanel account. For example, if you set this value to `5`\nand the system administrator allows MySQL® and PostgreSQL®\ndatabases, users can create up to five MySQL databases and up\nto five PostgreSQL databases.\n\n* `unlimited` — The cPanel account can create unlimited databases.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXSQL",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int999999OrUnlimited"
            }
          },
          {
            "description": "The maximum number of subdomains for the cPanel account.\n\n* `unlimited` — The cPanel account can create unlimited subdomains.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "MAXSUB",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Int999999OrUnlimited"
            }
          },
          {
            "description": "Whether to modify the firewall rules as part of the cPanel account modification.\n\n* `1` — Modify the firewall rules.\n* `0` — Do **not** modify the firewall rules.\n\n**Note:**\n\nIf you do not set this parameter, the system will modify the firewall based on the *Do not make changes to the firewall during cPanel account modification.* setting in WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).",
            "in": "query",
            "name": "modify_firewall",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The priority of the cPanel account's primary mail exchanger.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\nThe parameter name consists of `MXCHECK`, a hyphen, and the primary domain name of\nthe cPanel account. For example, `MXCHECK-example.com=10`.",
            "in": "query",
            "name": "MXCHECK-*",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The cPanel account's new username.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\n* Usernames **cannot** begin with a number or the string `test`.\n* Usernames can contain 16 characters or fewer if database prefixes are enabled.\n* The first eight characters of usernames **must** be unique. MySQL requires this due to potential conflicts with cPanel account transfers. However, this limit requirement does **not** exist on servers that use MariaDB.\n* If you rename the cPanel account and database prefixing is enabled, you can also use the `rename_database_objects` parameter.",
            "in": "query",
            "name": "newuser",
            "required": false,
            "schema": {
              "example": "example1",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to send a notification when someone links the cPanel\naccount to an external authentication account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_account_authn_link",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when someone disables notifications\nfor external authentication account links.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_account_authn_link_notification_disabled",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when an AutoSSL certificate expires.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_autossl_expiry",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification AutoSSL cannot renew a certificate\nbecause domains that fail Domain Control Validation (DCV) exist on the current\ncertificate.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_autossl_expiry_coverage",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when AutoSSL renews a certificate.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_autossl_renewal",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when AutoSSL renews a certificate\nbut the new certificate lacks at least one domain that the previous certificate\nsecured.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_autossl_renewal_coverage",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when someone changes the contact\naddress for the cPanel account.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_contact_address_change",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when disables the notification\nfor contact address changes.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_contact_address_change_notification_disabled",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when the cPanel account reaches its disk usage limit.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_disk_limit",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when someone changes the cPanel account's\npassword.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_password_change",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when someone disables notifications\nfor password changes.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_password_change_notification_disabled",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when an SSL certificate on the\ncPanel account expires.\n\n* `1` — Enabled.\n* `0` — Disabled.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "notify_ssl_expiry",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to suspend outgoing email on the cPanel account.\n\n* `1` — Suspend outgoing email.\n* `0` — Do **not** suspend outgoing email.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "OUTGOING_EMAIL_SUSPENDED",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "A new owner's username or the `root` user, to change the cPanel account's owner.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\nThe authenticated user must have `root` privileges in order to assign the cPanel account to a reseller other than that cPanel account.",
            "in": "query",
            "name": "owner",
            "required": false,
            "schema": {
              "example": "reseller_name",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "An access token for the cPanel account's Pushbullet™ notifications.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "PUSHBULLET_ACCESS_TOKEN",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The cPanel account's disk space quota.\n\n* An integer in multiples of 1,048,576 bytes.\n* `0` or `unlimited` — The cPanel account's disk space is unlimited.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "QUOTA",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IntPosOrUnlimited"
            }
          },
          {
            "description": "A space-separated list of removed, missing, or uninstalled package extensions.\n\n**Warning:**\n\nThis parameter removes all of the extensions that you list from the `_PACKAGE_EXTENSIONS` variable in the user file. It will **not** remove the extensions' variables. For more information, read our [Guide to Package Extensions](https://go.cpanel.net/GuidetoPackageExtensions).",
            "in": "query",
            "name": "remove_missing_extensions",
            "required": false,
            "schema": {
              "default": "",
              "example": "packageext1 packageext2",
              "type": "string"
            }
          },
          {
            "description": "Whether to rename the cPanel account's database objects to use a new username's database prefix.\n\n* `1` — Rename the cPanel account's database objects.\n* `0` — Do **not** rename the cPanel account's database objects.\n\n**Warning:**\n\n* The cPanel account owner must update any applications to use the new database object names.\n* **Use this parameter carefully**, as it may cause confusion for system administrators.\n\nMySQL does not allow you to rename a database. When cPanel & WHM \"renames\" a database, the system performs the following steps:\n\n1. The system creates a new database.\n1. The system moves data from the old database to the new database.\n1. The system recreates grants and stored code in the new database.\n1. The system deletes the old database and its grants.\n\n**Warning:**\n\n* If any of the first three steps fail, the system returns an error and attempts to restore the database's original state. If the restoration process fails, the API function's error response describes these additional failures.\n* In rare cases, the system creates the second database successfully, but fails to delete the old database or grants. The system treats the rename action as a success; however, the API function returns warnings that describe the failure to delete the old database or grants.\n\n**Note:**\n\nThis parameter **only** applies to servers that use database prefixing.",
            "in": "query",
            "name": "rename_database_objects",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to grant reseller privileges to the cPanel account.\n\n* `1` — Grant reseller privileges.\n* `0` — Do **not** grant reseller privileges.\n\n**Note:**\n\nYou **must** have `root`-level privileges to use this parameter.",
            "in": "query",
            "name": "reseller",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The cPanel account's cPanel theme.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "RS",
            "required": false,
            "schema": {
              "example": "paper_lantern",
              "type": "string"
            }
          },
          {
            "description": "The absolute filepath to the shell's location.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "shell",
            "required": false,
            "schema": {
              "example": "/bin/bash",
              "format": "path",
              "type": "string"
            }
          },
          {
            "description": "Whether Apache SpamAssassin™ is enabled for the cPanel account.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "spamassassin",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "A timestamp to use as the cPanel account's creation date.\n\nThis parameter defaults to the defined system value.\n\n**Note:**\n\nThis parameter does **not** provide user access controls. For example, you cannot modify a\ncPanel account's date to prevent a user from logging in to the server.",
            "in": "query",
            "name": "STARTDATE",
            "required": false,
            "schema": {
              "example": 1549471343,
              "format": "unix_timestamp",
              "type": "integer"
            }
          },
          {
            "description": "The cPanel account's cPanel interface theme style.\n\nThis parameter defaults to the defined system value.",
            "in": "query",
            "name": "STYLE",
            "required": false,
            "schema": {
              "example": "Basic",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cpuser": {
                          "additionalProperties": {
                            "description": "The complete attributes of the cPanel account."
                          },
                          "description": "An object that contains the cPanel account's modified information.\n\n**Note:**\n\n* The possible properties in this section are the same as the possible query parameters (the attributes of the cPanel account).\n* These properties show up even if the query did **not** modify them.\n* Some of these properties **only** appear under certain other conditions.\n* If the cPanel account or its hosting plan use package extensions, the `cpuser` object will also include the extension's variables.",
                          "example": {
                            "BACKUP": "1",
                            "BWLIMIT": "0",
                            "CONTACTEMAIL": "example@example.com",
                            "CONTACTEMAIL2": "",
                            "DBOWNER": "example",
                            "DEADDOMAINS": [],
                            "DEMO": "0",
                            "DISK_BLOCK_LIMIT": "0",
                            "DOMAIN": "example.com",
                            "DOMAINS": [
                              "subdomain.example.com"
                            ],
                            "FEATURELIST": "default",
                            "HASCGI": "1",
                            "HASDKIM": "1",
                            "HASSPF": "1",
                            "HOMEDIRLINKS": [],
                            "IP": "172.16.1.13",
                            "LEGACY_BACKUP": "0",
                            "LOCALE": "en",
                            "MAILBOX_FORMAT": "maildir",
                            "MAXADDON": "0",
                            "MAXFTP": "unlimited",
                            "MAXLST": "unlimited",
                            "MAXPARK": "0",
                            "MAXPOP": "unlimited",
                            "MAXSQL": "unlimited",
                            "MAXSUB": "unlimited",
                            "MAX_DEFER_FAIL_PERCENTAGE": "unlimited",
                            "MAX_EMAILACCT_QUOTA": "unlimited",
                            "MAX_EMAIL_PER_HOUR": "unlimited",
                            "MTIME": "1560518791",
                            "MXCHECK-example.com": "0",
                            "OWNER": "example",
                            "PLAN": "default",
                            "PUSHBULLET_ACCESS_TOKEN": "",
                            "RS": "paper_lantern",
                            "STARTDATE": "1554919365",
                            "USER": "example",
                            "UTF8MAILBOX": "1",
                            "_PACKAGE_EXTENSIONS": "",
                            "__CACHE_DATA_VERSION": "0.81",
                            "modify_firewall": "1",
                            "notify_account_authn_link": "0",
                            "notify_account_authn_link_notification_disabled": "0",
                            "notify_autossl_expiry": "0",
                            "notify_autossl_expiry_coverage": "0",
                            "notify_autossl_renewal_coverage": "0",
                            "notify_autossl_renewal_coverage_reduced": "0",
                            "notify_autossl_renewal_uncovered_domains": "0",
                            "notify_bandwidth_limit": "0",
                            "notify_contact_address_change": "0",
                            "notify_contact_address_change_notification_disabled": "0",
                            "notify_disk_limit": "0",
                            "notify_password_change": "0",
                            "notify_password_change_notification_disabled": "0",
                            "notify_ssl_expiry": "0"
                          },
                          "type": "object"
                        },
                        "domain": {
                          "description": "The cPanel account's main domain.",
                          "example": "example.com",
                          "format": "domain",
                          "type": "string"
                        },
                        "setshell": {
                          "description": "The absolute path to the cPanel account's shell.",
                          "example": "/bin/bash",
                          "format": "path",
                          "type": "string"
                        },
                        "user": {
                          "description": "The cPanel account username.\n\n**Note:**\n\nIf you changed the cPanel account's username, the function returns the new value.",
                          "example": "example1",
                          "format": "username",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modifyacct",
                          "type": "string"
                        },
                        "output": {
                          "description": "Output of the operation.",
                          "properties": {
                            "messages": {
                              "description": "Any messages that the system generated.",
                              "example": [
                                "Reseller data updated",
                                "0 rows updated in eximstats sends database.\n0 rows updated in eximstats smtp database.\n0 rows updated in eximstats failures database.\n0 rows updated in eximstats defers database.\n",
                                "Horde user data updated.",
                                "Username changed from example to example1",
                                "Restarting apache"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "warnings": {
                              "description": "Any warnings that the system generated.",
                              "example": [
                                "Changing the cPanel account username from “example” to “example1” requires Digest Authentication to be disabled.",
                                "Use the Web Disk Accounts page in cPanel to re-enable Digest Authentication."
                              ],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Account Modified",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update cPanel account",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modifyacct user='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modifyacct?api.version=1&user=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/modsec_add_rule": {
      "get": {
        "description": "This function adds a new rule to a ModSecurity™ configuration staging file. For example, if you choose to add a rule for the example.conf file, the function stages the rule in the example.conf. STAGE file.\n\n**Important:**\n\n  This function does not actually deploy the rule. To deploy the rule, use the WHM API 1 Functions - modsec_deploy_all_rule_changes function.\n\n**Important:**\n\n  In cPanel & WHM version 76 and later, when you disable the Web Server role , the system disables this function.",
        "operationId": "modsec_add_rule",
        "parameters": [
          {
            "description": "The ModSecurity configuration file.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec_vendor_configs/example.conf",
              "type": "string"
            }
          },
          {
            "description": "The rule's text.",
            "in": "query",
            "name": "rule",
            "required": true,
            "schema": {
              "example": "Click to view...SecAction \\\"phase:1,id:168,nolog,pass,setvar:tx.REMOTE_ADDR=/%{REMOTE_ADDR}/\\\"",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "rule": {
                          "description": "hash that contains information about the new ModSecurity rule. This hash includes the id , rule , disabled , meta_msg , and duplicate returns.",
                          "properties": {
                            "config": {},
                            "config_active": {},
                            "disabled": {
                              "description": "Whether the rule is disabled.\n- 1  Disabled.\n- 0  Enabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "duplicate": {
                              "description": "Whether the rule already exists in the ModSecurity configuration staging file.\n- 1  Exists.\n- 0  Does not exist.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "The ModSecurity rule's ID. A valid ModSecurity rule ID.",
                              "example": 168,
                              "type": "integer"
                            },
                            "meta_msg": {
                              "description": "The ModSecurity rule's description. A valid string.",
                              "example": "Example rule message",
                              "type": "string"
                            },
                            "rule": {
                              "description": "The ModSecurity rule's text. A valid ModSecurity rule.",
                              "example": "Click to view...SecAction \\\"phase:1,id:168,nolog,pass,setvar:tx.REMOTE_ADDR=/%{REMOTE_ADDR}/\\\"",
                              "type": "string"
                            },
                            "staged": {},
                            "vendor_active": {},
                            "vendor_id": {}
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_add_rule",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add staged ModSecurity rule",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_add_rule config='modsec_vendor_configs/example.conf' rule='Click to view...SecAction \\\"phase:1,id:168,nolog,pass,setvar:tx.REMOTE_ADDR=/%{REMOTE_ADDR}/\\\"'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_add_rule?api.version=1&config=modsec_vendor_configs%2fexample.conf&rule=Click%20to%20view...SecAction%20%5c%22phase%3a1%2cid%3a168%2cnolog%2cpass%2csetvar%3atx.REMOTE_ADDR%3d%2f%25%7bREMOTE_ADDR%7d%2f%5c%22"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_add_vendor": {
      "get": {
        "description": "This function adds a new ModSecurity™ vendor rule set to the server.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system disables this function.",
        "operationId": "modsec_add_vendor",
        "parameters": [
          {
            "description": "The YAML metadata that describes the vendor and how to obtain its rules.",
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "example": "https://example.com/update/meta_MyVendor.yaml",
              "format": "url",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable the vendor.\n\n* `1` — Enabled.\n* `0` — Disabled.",
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "archive_url": {
                          "description": "The URL to the vendor's rule set archive.\n\n**Note:**\n\nThe system will download a set of rules that is compatible with your version\nof ModSecurity.",
                          "example": "http://example.com/update/MyVendor.zip",
                          "format": "url",
                          "type": "string"
                        },
                        "cpanel_provided": {
                          "description": "Whether cPanel, L.L.C. provided the vendor.\n\n* `1` — cPanel-provided.\n* `0` — **Not** cPanel-provided.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "description": {
                          "description": "The vendor's description.",
                          "example": "This is an example of a custom vendor set (updated)",
                          "type": "string"
                        },
                        "dist_md5": {
                          "description": "The download's [MD5](https://en.wikipedia.org/wiki/MD5) checksum value.",
                          "example": "307cb5320441ebd712e5581d12100dc9",
                          "format": "md5",
                          "type": "string"
                        },
                        "dist_sha512": {
                          "description": "The download's [sha512](https://en.wikipedia.org/wiki/SHA-2) hash.",
                          "example": "b55c09bb1835ed4209f0f3ea4a70d099665363f23d3819c0369be429438d675ba2c749dcefdb85cee682ee0bf485558e67d0b0965fe4799865529d943e8e14cb",
                          "format": "sha512",
                          "type": "string"
                        },
                        "enabled": {
                          "description": "Whether the function enabled the vendor.\n\n* `1` — Enabled.\n* `0` — **Not** enabled.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "inst_dist": {
                          "description": "The rule set's unique identifier.",
                          "example": "MyVendor-2",
                          "type": "string"
                        },
                        "installed": {
                          "description": "Whether the function installed the vendor.\n\n* `1` — Installed.\n* `0` — **Not** installed.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "installed_from": {
                          "description": "The vendor's metadata file URL.",
                          "example": "https://example.com/update/meta_MyVendor.yaml",
                          "format": "url",
                          "type": "string"
                        },
                        "name": {
                          "description": "The vendor's name.",
                          "example": "My Vendor",
                          "type": "string"
                        },
                        "path": {
                          "description": "The absolute path to the directory that contains the vendor's configuration files.",
                          "example": "/usr/local/apache/conf/modsec_vendor_configs/MyVendor",
                          "format": "path",
                          "type": "string"
                        },
                        "report_url": {
                          "description": "The URL to which the system will send reports.",
                          "example": "https://waf.example.com/api/cpanel_feedback?source=1&rule_set=1.229",
                          "format": "url",
                          "type": "string"
                        },
                        "supported_versions": {
                          "description": "A list of the ModSecurity versions that the vendor supports.",
                          "example": [
                            "2.7.5",
                            "2.7.7",
                            "2.8.0",
                            "2.9.0",
                            "2.9.1",
                            "2.9.2",
                            "2.9.3"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "vendor_id": {
                          "description": "The vendor's unique short name.",
                          "example": "MyVendor",
                          "type": "string"
                        },
                        "vendor_url": {
                          "description": "The vendor's website URL.",
                          "example": "http://www.example.com",
                          "format": "url",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_add_vendor",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add ModSecurity vendor rules",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_add_vendor url='https://example.com/update/meta_MyVendor.yaml'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_add_vendor?api.version=1&url=https%3a%2f%2fexample.com%2fupdate%2fmeta_MyVendor.yaml"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_assemble_config_text": {
      "get": {
        "description": "This function adds text to a ModSecurity™ configuration file.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_assemble_config_text",
        "parameters": [
          {
            "description": "The ModSecurity™ configuration filename and file path, relative to the `/etc/apache2/conf/` directory.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec_vendor_configs/example.conf",
              "type": "string"
            }
          },
          {
            "description": "Whether to deploy the new text to the system.\n\n* `1` — Deploy.\n* `0` — Do **not** deploy.",
            "in": "query",
            "name": "deploy",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to add the text as the final upload to the configuration file.\n\n* `1` — Final upload.\n* `0` — **Not** the final upload.\n\n**Note:**\n\n* You **must** use this parameter if you wish to add the text as the final\nchange to the configuration file.\n* You **must** use the `init` parameter with this parameter if you wish to\nonly make one change to the configuration file.",
            "in": "query",
            "name": "final",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to add the text as the initial upload to the configuration file.\n\n* `1` — Initial upload.\n* `0` — **Not** the initial upload.\n\n**Note:**\n\n* You **must** use this parameter if you wish to add the text as the initial\nchange to the configuration file.\n* You **must** use the `final` parameter with this parameter if you wish to\nonly make one change to the configuration file.",
            "in": "query",
            "name": "init",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The text to add to the configuration file.",
            "in": "query",
            "name": "text",
            "required": false,
            "schema": {
              "default": "",
              "example": "newtext",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_assemble_config_text",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add ModSecurity configuration file text",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_assemble_config_text config='modsec_vendor_configs/example.conf'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_assemble_config_text?api.version=1&config=modsec_vendor_configs%2fexample.conf"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_batch_settings": {
      "get": {
        "description": "This function adds, updates, and removes global ModSecurity™ configuration directives.\nThe function modifies these directives in the `/usr/local/apache/conf/modsec2.cpanel.conf`\nfile.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles/#roles),\nthe system **disables** this function.\n\nThis function **only** supports the following ModSecurity™ configuration directives:\n\n<table>\n  <tr><th>setting_id</th><th>Documentation</th></tr>\n  <tr><td>0</td><td><a href=\"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secauditengine\">SecAuditEngine</a></td></tr>\n  <tr><td>1</td><td><a href=\"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secconnengine\">SecConnEngine</a></td></tr>\n  <tr><td>2</td><td><a href=\"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secruleengine\">SecRuleEngine</a></td></tr>\n  <tr><td>3</td><td><a href=\"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secdisablebackendcompression\">SecDisableBackendCompression</a></td></tr>\n  <tr><td>4</td><td><a href=\"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secgeolookupdb\">SecGeoLookupDb</a></td></tr>\n  <tr><td>5</td><td><a href=\"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secgsblookupdb\">SecGsbLookupDb</a></td></tr>\n  <tr><td>6</td><td><a href=\"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secguardianlog\">SecGuardianLog</a></td></tr>\n  <tr><td>7</td><td><a href=\"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#sechttpblkey\">SecHttpBlKey</a></td></tr>\n  <tr><td>8</td><td><a href=\"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secpcrematchlimit\">SecPcreMatchLimit</a></td></tr>\n  <tr><td>9</td><td><a href=\"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secpcrematchlimitrecursion\">SecPcreMatchLimitRecursion</a></td></tr>\n</table>",
        "operationId": "modsec_batch_settings",
        "parameters": [
          {
            "description": "The configuration setting's ID.\n\n**Note:**\n\nTo configure multiple IDs, increment the parameter name. For example, `setting_id1`,\n`setting_id2`, and `setting_id3`.",
            "examples": {
              "multiple": {
                "summary": "Set or update multiple configuration settings, in this case: SecConnEngine,  SecRuleEngine, and SecDisableBackendCompression.",
                "value": "setting_id1=1 setting_id2=2 setting_id3=3"
              },
              "single": {
                "summary": "Set or update a single configuration setting, in this case for SecConnEngine.",
                "value": 1
              }
            },
            "in": "query",
            "name": "setting_id",
            "required": true,
            "schema": {
              "maximum": 9,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "The configuration setting's current state.\n\n* `On`\n* `Off`\n\nSome settings accept additional values for this parameter. See the references above for more inforamation.\n\n**Note:**\n\n* To configure multiple settings, increment the parameter name. For example, `state1`,\n`state2`, and `state3`.\n* `state` is ignored if `remove` is set to `1` for the setting.",
            "examples": {
              "multiple": {
                "summary": "Set the state of multiple configuration settings.",
                "value": "state1=On state2=On state3=Off"
              },
              "single": {
                "summary": "Set the state of a single configuration setting.",
                "value": "On"
              }
            },
            "in": "query",
            "name": "state",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string"
                },
                {
                  "enum": [
                    "On",
                    "Off",
                    "DetectionOnly"
                  ],
                  "type": "string"
                },
                {
                  "enum": [
                    "On",
                    "Off",
                    "RelevantOnly"
                  ],
                  "type": "string"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "Whether to add or remove the configuration setting in the\n`/usr/local/apache/conf/modsec2.cpanel.conf` file.\n\n* `1` — Remove the configuration setting.\n* `0` — Add or update the configuration setting.\n\n* To remove multiple settings, increment the parameter name. For example, `remove1`,\n`remove2`, and `remove3`.",
            "examples": {
              "multiple": {
                "summary": "Remove some settings when updating or setting multiple configuration settings. This example removes the second setting indicated in `setting_id2` and updates the other two settings.",
                "value": "remove1=0 remove2=1 remove3=0"
              },
              "single": {
                "summary": "Remove a single configuration setting requested in the `setting_id`",
                "value": 1
              }
            },
            "in": "query",
            "name": "remove",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "updated_settings": {
                          "description": "An array of objects that contains the configuration setting's information.",
                          "items": {
                            "properties": {
                              "default": {
                                "description": "The setting's default value.\n\n**Note:**\n\nThe `modsec2.cpanel.conf` file defines this value.",
                                "example": 1500,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "description": {
                                "description": "The setting's description.",
                                "example": "define the match limit of the PCRE library.",
                                "type": "string"
                              },
                              "directive": {
                                "description": "The setting's Apache configuration directive.",
                                "example": "SecAuditEngine",
                                "type": "string"
                              },
                              "engine": {
                                "description": "Whether the setting is an engine directive.\n\n* `1` — Engine directive.\n* `0` — Normal directive.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "name": {
                                "description": "The setting's name.",
                                "example": "Audit Log Level",
                                "type": "string"
                              },
                              "radio_options": {
                                "description": "An array of objects that contain the setting's options display information.",
                                "items": {
                                  "properties": {
                                    "name": {
                                      "description": "The option's display name.",
                                      "example": "Log all transactions.",
                                      "type": "string"
                                    },
                                    "option": {
                                      "description": "The option.",
                                      "example": "On",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "setting_id": {
                                "description": "The setting ID.",
                                "example": 1,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "state": {
                                "description": "The setting's current state, as set by the `state` parameter's input value.",
                                "example": "On",
                                "type": "string"
                              },
                              "type": {
                                "description": "The form element that the WHM interface uses to display this setting.\n\n* `text` — WHM users modify this setting via a text box.\n* `radio` — WHM users modify this setting via a radio button.\n* `number` — WHM users modify this setting via a text box that **only**\nallows numeric values.",
                                "example": "radio",
                                "type": "string"
                              },
                              "url": {
                                "description": "The URL of the setting's entry in the ModSecurity reference manual.",
                                "example": "https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#secpcrematchlimit",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_batch_settings",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Run ModSecurity batch settings",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_batch_settings setting_id='1' state='On'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_batch_settings?api.version=1&setting_id=1&state=On"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_check_rule": {
      "get": {
        "description": "This function checks a ModSecurity™ rule's validity.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_check_rule",
        "parameters": [
          {
            "description": "The ModSecurity rule to check.",
            "in": "query",
            "name": "rule",
            "required": true,
            "schema": {
              "example": "SecAction \"pass,id:1234567\"",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "problem": {
                          "description": "A string that describes any errors with the ModSecurity\nrule.\n\n**Note:**\n\nThe function only returns this value if an error occurred.",
                          "example": "The rule is invalid. Apache returned the following error: AH00526: Syntax error on line 1 of /var/tmp/15500._USR_LOCAL_CPANEL_WHOSTMGR_BIN_XML_API__.gl2t8wZ1.tmp/validate.conf:\nInvalid command ''OWASP'', perhaps misspelled or defined by a module not included in the server configuration\n'",
                          "type": "string"
                        },
                        "valid": {
                          "description": "Whether the rule is valid.\n\n* `1` — Valid rule.\n* `0` — Invalid rule.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_check_rule",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK Invalid Rule",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate ModSecurity rule",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_check_rule rule='SecAction \"pass,id:1234567\"'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_check_rule?api.version=1&rule=SecAction%20%22pass%2cid%3a1234567%22"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_clone_rule": {
      "get": {
        "description": "This function copies a ModSecurity™ rule with a new rule ID.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_clone_rule",
        "parameters": [
          {
            "description": "The rule's ModSecurity configuration file.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec2.user.conf",
              "type": "string"
            }
          },
          {
            "description": "The existing rule's ID.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": 123456789,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "rule": {
                          "description": "A list of information about the cloned ModSecurity rule.",
                          "properties": {
                            "config": {
                              "description": "The rule's ModSecurity configuration file.",
                              "example": "modsec2.user.conf",
                              "type": "string"
                            },
                            "config_active": {
                              "description": "Whether the configuration file is active.\n\n* `1` — Active.\n* `0` — **Not** active.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "disabled": {
                              "description": "Whether the rule is disabled.\n\n* `1` — Disabled.\n* `0` — Enabled.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "The rule's ID number.",
                              "example": 123456789,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "meta_msg": {
                              "description": "The rule's description.",
                              "example": "Rejected request",
                              "type": "string"
                            },
                            "rule": {
                              "description": "The rule's text that includes the new rule ID.",
                              "example": "SecRule REQUEST_URI \"/rejected.php\" \"deny,auditlog,msg:'Rejected request',id:'1'\"",
                              "type": "string"
                            },
                            "staged": {
                              "description": "Whether the rule is staged.\n\n* `1` — Staged.\n* `0` — **Not** staged.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "vendor_active": {
                              "description": "Whether the vendor is active.\n\n* `1` — Active.\n* `0` — **Not** active.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "vendor_id": {
                              "description": "The vendor's unique short name.\n\n**Note:**\n\nAny rule that does not belong to a vendor rule set will **not**\nreturn a value.",
                              "example": "YourVendor",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_clone_rule",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Save ModSecurity rule copy",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_clone_rule config='modsec2.user.conf' id='123456789'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_clone_rule?api.version=1&config=modsec2.user.conf&id=123456789"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_deploy_all_rule_changes": {
      "get": {
        "description": "This function deploys the staged changes for all of the ModSecurity™ configuration files\ninto the live configuration files. After the function deploys the configuration files, it\nrestarts Apache. If the new configuration is invalid, the system restores the original\nconfiguration and preserves the staged changes.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_deploy_all_rule_changes",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "failed": {
                          "description": "The list of configuration files that the system could not deploy.\n\n**Note:**\n\nThe function **only** returns this value if an error occurs.",
                          "items": {
                            "example": "modsec_vendor_configs/MyVendor/one.conf",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "outcomes": {
                          "description": "An array of objects containing information about the configuration deployment.",
                          "items": {
                            "properties": {
                              "config": {
                                "description": "The file path to the configuration file.\n\n* EasyApache 4 — A valid path, relative to the `/etc/apache2/conf.d/modsec/` directory.",
                                "example": "modsec_vendor_configs/MyVendor/one.conf",
                                "type": "string"
                              },
                              "exception": {
                                "description": "The error message for a failed deployment.\n\n**Note:**\n\nThe function only returns this output if an error occurs.",
                                "example": "The system could not deploy changes for modsec_vendor_configs/MyVendor/one.conf: The system could not validate the new Apache configuration, because httpd exited with a nonzero value. Apache produced the following error: httpd: Syntax error on line 37 of /usr/local/apache/conf/httpd.conf: Syntax error on line 26 of /usr/local/apache/conf/modsec2.conf: Syntax error on line 27 of /usr/local/apache/conf/modsec2.cpanel.conf: Could not open configuration file /usr/local/apache/conf/modsec_vendor_configs/MyVendor/one.conf: No such file or directory\n\n\n",
                                "type": "string"
                              },
                              "ok": {
                                "description": "Whether the rule change deployment succeeded.\n\n* `1` — Successful deployment.\n* `0` — Unsuccessful deployment.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_deploy_all_rule_changes",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable all staged ModSecurity rule changes",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_deploy_all_rule_changes"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_deploy_all_rule_changes?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_deploy_rule_changes": {
      "get": {
        "description": "This function deploys staged changes to the ModSecurity™ configuration file and restarts\nApache.\n\n**Note:**\n\nIf the new configuration is invalid, the system will restore the original configuration\nand maintain the staged changes.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_deploy_rule_changes",
        "parameters": [
          {
            "description": "The ModSecurity configuration file's path and name, relative to the `/usr/local/apache/conf/` directory.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec_vendor_configs/example.conf",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_deploy_rule_changes",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable staged ModSecurity rule changes",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_deploy_rule_changes config='modsec_vendor_configs/example.conf'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_deploy_rule_changes?api.version=1&config=modsec_vendor_configs%2fexample.conf"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_deploy_settings_changes": {
      "get": {
        "description": "This function deploys the staged changes to your `modsec2.cpanel.conf` file and\nattempts to restart Apache. If the new settings fail validation, the system restores\nthe `/etc/apache2/conf.d/modsec/modsec2.cpanel.conf` file.\n\n**Note:**\n\nCall the WHM API 1 `modsec_set_setting` function to prepare your changes for\nthe `modsec2.cpanel.conf` file.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_deploy_settings_changes",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_deploy_settings_changes",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable staged ModSecurity configuration files",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_deploy_settings_changes"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_deploy_settings_changes?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_disable_rule": {
      "get": {
        "description": "This function disables a ModSecurity™ rule.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_disable_rule",
        "parameters": [
          {
            "description": "The ModSecurity configuration file, relative to the `/etc/apache2/conf.d` directory.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec_vendor_configs/example.conf",
              "type": "string"
            }
          },
          {
            "description": "The ModSecurity rule's ID.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": "1234567890",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_disable_rule",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable ModSecurity rule",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_disable_rule config='modsec_vendor_configs/example.conf' id='1234567890'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_disable_rule?api.version=1&config=modsec_vendor_configs%2fexample.conf&id=1234567890"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_disable_vendor": {
      "get": {
        "description": "This function disables a ModSecurity™ vendor rule set.\n\n**Note:**\n\nThis function will **not** disable vendor configuration files that you have individually enabled.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_disable_vendor",
        "parameters": [
          {
            "description": "The vendor's unique short name.",
            "in": "query",
            "name": "vendor_id",
            "required": true,
            "schema": {
              "example": "SomeVendor",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_disable_vendor",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable ModSecurity vendor rules",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_disable_vendor vendor_id='SomeVendor'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_disable_vendor?api.version=1&vendor_id=SomeVendor"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_disable_vendor_configs": {
      "get": {
        "description": "This function disables a ModSecurity™ vendor's configuration files.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_disable_vendor_configs",
        "parameters": [
          {
            "description": "The vendor's unique short name.",
            "in": "query",
            "name": "vendor_id",
            "required": true,
            "schema": {
              "example": "SomeVendor",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "outcomes": {
                          "description": "An array of objects containing elements that represent the outcome of each attempt to disable an operation.",
                          "items": {
                            "properties": {
                              "active": {
                                "description": "Whether the configuration file is active.\n\n* `1` — Active.\n* `0` — **Not** active.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "config": {
                                "description": "The configuration file path, relative to the `/usr/local/apache/conf/` directory.",
                                "example": "modsec_vendor_configs/SomeVendor/example.conf",
                                "type": "string"
                              },
                              "exception": {
                                "description": "If the function fails to disable the configuration file, this\nreturn contains the error message.\n\n**Note:**\n\nThis function only returns a value if an error occurred.",
                                "example": "This is an error message.",
                                "type": "string"
                              },
                              "ok": {
                                "description": "Whether the function successfully disabled the configuration file.\n\n* `1` — Disabled.\n* `0` — Enabled.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_disable_vendor_configs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable ModSecurity vendor configuration files",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_disable_vendor_configs vendor_id='SomeVendor'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_disable_vendor_configs?api.version=1&vendor_id=SomeVendor"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_disable_vendor_updates": {
      "get": {
        "description": "This function disables automatic updates for a ModSecurity™ vendor.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_disable_vendor_updates",
        "parameters": [
          {
            "description": "The vendor's unique short name.",
            "in": "query",
            "name": "vendor_id",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_disable_vendor_updates",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable ModSecurity vendor updates",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_disable_vendor_updates vendor_id='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_disable_vendor_updates?api.version=1&vendor_id=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_discard_all_rule_changes": {
      "get": {
        "description": "This function discards the staged ModSecurity™ rule changes, if present, for all of\nthe configuration files.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_discard_all_rule_changes",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "failed": {
                          "description": "The list of configuration files that contain changes that the system\ncould not discard.\n\n**Note:**\n\nThe function **only** returns this value if an error occurs.",
                          "items": {
                            "example": "modsec_vendor_configs/MyVendor/one.conf",
                            "format": "path",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "outcomes": {
                          "description": "An array of objects containing information about the discarded configuration changes.",
                          "items": {
                            "properties": {
                              "config": {
                                "description": "The file path to the configuration file.\n\n* EasyApache 4 — A valid path, relative to the `/etc/apache2/conf.d/modsec/` directory.",
                                "example": "modsec_vendor_configs/MyVendor/one.conf",
                                "type": "string"
                              },
                              "exception": {
                                "description": "The error message for a failed discard.\n\n**Note:**\n\n The function only returns this value if an error occurs. The reason for failure.",
                                "example": "The system could not remove the file /usr/local/apache/conf/modsec_vendor_configs/MyVendor/one.conf.STAGE: Invalid argument\n",
                                "type": "string"
                              },
                              "ok": {
                                "description": "Whether the system successfully discarded the rule change.\n\n* `1` — Success.\n* `0` — Failure.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_discard_all_rule_changes",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove all staged ModSecurity rule changes",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_discard_all_rule_changes"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_discard_all_rule_changes?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_discard_rule_changes": {
      "get": {
        "description": "This function discards staged rule changes for a ModSecurity™ configuration file.\nStaged rule changes reside in a `.STAGE` file (for example, the staged changes for\nthe `example.conf` file exist in the `example.conf.STAGE` file).\nThis function deletes the `.STAGE` file that corresponds to the configuration file that\nyou specify.\n\n**Note:**\n\nTo stage rule changes, call WHM API 1's `modsec_add_rule` function.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_discard_rule_changes",
        "parameters": [
          {
            "description": "The ModSecurity configuration file in the `/usr/local/cpanel/apache/conf/` directory.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec2.example.conf",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_discard_rule_changes",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove staged ModSecurity rule changes",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_discard_rule_changes config='modsec2.example.conf'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_discard_rule_changes?api.version=1&config=modsec2.example.conf"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_edit_rule": {
      "get": {
        "description": "This function stages edits to a ModSecurity™ rule. The system does **not** save changes\ndirectly to the configuration file. Instead, it stages the changes to the configuration\nfile's `.STAGE` file (for example, for the `example.conf` file, the system stages changes\nin the `example.conf.STAGE` file).\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_edit_rule",
        "parameters": [
          {
            "description": "The ModSecurity configuration file, relative to the `/usr/local/apache/conf/` directory.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec_vendor_configs/example.conf",
              "type": "string"
            }
          },
          {
            "description": "The ModSecurity rule's ID.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": 1234567,
              "type": "integer"
            }
          },
          {
            "description": "The new ModSecurity rule.",
            "in": "query",
            "name": "rule",
            "required": true,
            "schema": {
              "example": "SecAction \"pass,id:1234567\"",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "rule": {
                          "description": "A list of information about the new ModSecurity rule.",
                          "properties": {
                            "disabled": {
                              "description": "Whether the ModSecurity rule is disabled.\n\n* `1` — Disabled.\n* `0` — Enabled.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "The ModSecurity rule's ID.",
                              "example": 1234567,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "meta_msg": {
                              "description": "The ModSecurity rule's description, if one exists.",
                              "example": "",
                              "type": "string"
                            },
                            "rule": {
                              "description": "The ModSecurity rule's text.",
                              "example": "SecAction \"pass,id:1234567\"",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_edit_rule",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update staged ModSecurity rule",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_edit_rule config='modsec_vendor_configs/example.conf' id='1234567' rule='SecAction \"pass,id:1234567\"'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_edit_rule?api.version=1&config=modsec_vendor_configs%2fexample.conf&id=1234567&rule=SecAction%20%22pass%2cid%3a1234567%22"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_enable_vendor": {
      "get": {
        "description": "This function enables a ModSecurity™ vendor rule set.\n\n**Note:**\n\nThis function will **not** enable vendor configuration files that you individually\ndisable.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_enable_vendor",
        "parameters": [
          {
            "description": "The vendor's unique short name.",
            "in": "query",
            "name": "vendor_id",
            "required": true,
            "schema": {
              "example": "SomeVendor",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_enable_vendor",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable ModSecurity vendor rules",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_enable_vendor vendor_id='SomeVendor'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_enable_vendor?api.version=1&vendor_id=SomeVendor"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_enable_vendor_configs": {
      "get": {
        "description": "This function enables a ModSecurity™ vendor's configuration files.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_enable_vendor_configs",
        "parameters": [
          {
            "description": "The vendor's unique short name.",
            "in": "query",
            "name": "vendor_id",
            "required": true,
            "schema": {
              "example": "SomeVendor",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "outcomes": {
                          "description": "An array of objects containing elements that represent the outcome of each attempt to enable operation.",
                          "items": {
                            "properties": {
                              "active": {
                                "description": "Whether the configuration file is active.\n\n* `1` — Active.\n* `0` — **Not** active.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "config": {
                                "description": "The configuration file path, relative to the `/usr/local/apache/conf/` directory.",
                                "example": "modsec_vendor_configs/SomeVendor/example.conf",
                                "type": "string"
                              },
                              "exception": {
                                "description": "If the function fails to enable the configuration file, this return\ncontains the error message.\n\n**Note:**\n\nThe function **only** returns a value if an error occurred.",
                                "example": "This is an error message.",
                                "type": "string"
                              },
                              "ok": {
                                "description": "Whether the function successfully enabled the configuration file.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_enable_vendor_configs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable ModSecurity vendor configuration files",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_enable_vendor_configs vendor_id='SomeVendor'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_enable_vendor_configs?api.version=1&vendor_id=SomeVendor"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_enable_vendor_updates": {
      "get": {
        "description": "This function enables automatic updates for a ModSecurity™ vendor.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_enable_vendor_updates",
        "parameters": [
          {
            "description": "The vendor's unique short name.",
            "in": "query",
            "name": "vendor_id",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_enable_vendor_updates",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable ModSecurity vendor updates",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_enable_vendor_updates vendor_id='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_enable_vendor_updates?api.version=1&vendor_id=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_get_config_text": {
      "get": {
        "description": "This function retrieves a ModSecurity™ configuration file's contents.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_get_config_text",
        "parameters": [
          {
            "description": "The ModSecurity configuration file's name.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec2.example.conf",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "text": {
                          "description": "The ModSecurity configuration file's contents.",
                          "example": "SecRule REQUEST_URI \"example\" \"deny:id:123456789\" SecAction \"pass:auditlog:id:444444444\"",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_get_config_text",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return ModSecurity configuration file",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_get_config_text config='modsec2.example.conf'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_get_config_text?api.version=1&config=modsec2.example.conf"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_get_configs": {
      "get": {
        "description": "This function lists ModSecurity™ configuration files. The system stores the configuration\nfiles in the `/usr/local/apache/conf/modsec_vendor_configs` directory.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_get_configs",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "configs": {
                          "description": "An array of objects containing information about ModSecurity configuration files.",
                          "items": {
                            "properties": {
                              "active": {
                                "description": "Whether the configuration file is active.\n\n* `1` — Active.\n* `0` — **Not** active.\n\n**Note:**\n\nThe file is active if an include for the configuration file appears\nin the `modsec2.cpanel.conf` file.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "config": {
                                "description": "The configuration file's location, relative to the `/usr/local/apache/conf` directory.",
                                "example": "modsec_vendor_configs/MyVendor/one.conf",
                                "type": "string"
                              },
                              "vendor_id": {
                                "description": "The vendor's unique short name.",
                                "example": "MyVendor",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_get_configs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return all ModSecurity configuration files",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_get_configs"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_get_configs?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_get_configs_with_changes_pending": {
      "get": {
        "description": "This function lists the ModSecurity™ configuration files that have staged changes.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_get_configs_with_changes_pending",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "configs": {
                          "description": "An array of strings containing one or more ModSecurity configuration files.",
                          "example": [
                            "modsec2.user.conf",
                            "modsec2.user1.conf",
                            "modsec2.user2.conf"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_get_configs_with_changes_pending",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return staged ModSecurity configuration files",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_get_configs_with_changes_pending"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_get_configs_with_changes_pending?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_get_log": {
      "get": {
        "description": "This function retrieves ModSecurity™ log entries from the modsec MySQL® database.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system disables this function.",
        "operationId": "modsec_get_log",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "An array of objects that contains information about the log entry.",
                      "items": {
                        "properties": {
                          "action_desc": {
                            "description": "The web server's response to the client.",
                            "example": "Access denied with code 406 (phase 1).",
                            "type": "string"
                          },
                          "file_exists": {
                            "description": "Whether the file in the `meta_file` return exists.\n\n* `1` — The file exists.\n* `0` — The files does **not** exist.",
                            "enum": [
                              1,
                              0
                            ],
                            "example": 1,
                            "type": "integer"
                          },
                          "handler": {
                            "description": "This parameter **only** returns the `null` value.",
                            "example": null,
                            "nullable": true,
                            "type": "string"
                          },
                          "host": {
                            "description": "The virtual host's (vhost) domain name.",
                            "example": "server.example.com",
                            "type": "string"
                          },
                          "http_method": {
                            "description": "The\n[HTTP method](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html)\nthat the client used to generate the hit.",
                            "example": "GET",
                            "type": "string"
                          },
                          "http_status": {
                            "description": "The\n[HTTP status code](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)\nthat the web server returned.",
                            "example": 406,
                            "type": "integer"
                          },
                          "http_version": {
                            "description": "The HTTP version number.",
                            "example": "HTTP/1.1",
                            "type": "string"
                          },
                          "id": {
                            "description": "The line number from the `modsec` database.",
                            "example": 28,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "ip": {
                            "description": "The client's IP address.",
                            "example": "10.1.14.77",
                            "format": "ipv4",
                            "type": "string"
                          },
                          "justification": {
                            "description": "The specific criteria from the ModSecurity rule that generated the hit.",
                            "example": "Match of \"within %{tx.allowed_methods}\" against \"REQUEST_METHOD\" required.",
                            "type": "string"
                          },
                          "meta_file": {
                            "description": "The ModSecurity configuration file with the rule that triggered the log entry.",
                            "example": "/usr/local/apache/conf/modsec_vendor_configs/OWASP/base_rules/modsecurity_crs_30_http_policy.conf",
                            "type": "string"
                          },
                          "meta_id": {
                            "description": "The ID of the ModSecurity rule that triggered the log entry.",
                            "example": 960032,
                            "type": "integer"
                          },
                          "meta_line": {
                            "description": "The ModSecurity rule's line number that triggered the log entry.",
                            "example": 31,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "meta_logdata": {
                            "description": "The transaction data fragment from the ModSecurity rule's logdata action.",
                            "example": "GET",
                            "nullable": true,
                            "type": "string"
                          },
                          "meta_msg": {
                            "description": "The human-readable message from the ModSecurity rule's `msg` action.",
                            "example": "Method is not allowed by policy",
                            "type": "string"
                          },
                          "meta_offset": {
                            "description": "The byte offset at which a match occurred within the target data.\n\n**Note:**\n\nThis data is not always available.",
                            "example": 0,
                            "type": "integer"
                          },
                          "meta_rev": {
                            "description": "The revision number from the ModSecurity rule's `rev` action.",
                            "example": 2,
                            "nullable": true,
                            "type": "integer"
                          },
                          "meta_severity": {
                            "description": "The hit severity level from the ModSecurity rule's `severity` action.",
                            "example": "CRITICAL",
                            "nullable": true,
                            "type": "string"
                          },
                          "meta_uri": {
                            "description": "The client-requested URI.\n\n**Note:**\n\nThis data is not always available.",
                            "example": null,
                            "format": "uri",
                            "nullable": true,
                            "type": "string"
                          },
                          "path": {
                            "description": "The accessed file's absolute path and filename.",
                            "example": "/favicon.ico",
                            "type": "string"
                          },
                          "reportable": {
                            "description": "Whether the system can report the rule to the vendor.\n\n* `1` — Report the rule to the vendor.\n* `0` — Do **not** report the rule to the vendor.\n\n**Note:**\n\nThe vendor **must** have configured a report URL in order to\nreport a rule.",
                            "enum": [
                              1,
                              0
                            ],
                            "example": 1,
                            "type": "integer"
                          },
                          "timestamp": {
                            "description": "When the system recorded the log entry, in `YYYY-MM-DD HH:mm:SS` format.\n\n**Note:**\n\nThis value uses the server's configured time zone.",
                            "example": "2019-10-13T07:58:04.000Z",
                            "format": "ISO-8601 Date Time",
                            "type": "string"
                          },
                          "timezone": {
                            "description": "The server's configured timezone, in minutes difference UTC/GMT format.",
                            "example": -300,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_get_log",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return ModSecurity logs",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_get_log"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_get_log?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_get_rules": {
      "get": {
        "description": "This function retrieves the ModSecurity™ rules from one or more ModSecurity configuration files.\n\n**Important:**\n\n* When you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system disables this function.\n* You **must** include either the `vendor_id` **or** the `config` parameters.",
        "operationId": "modsec_get_rules",
        "parameters": [
          {
            "description": "The file path to the configuration file, relative to the `/usr/local/apache/conf` directory.\n\n**Note:**\n\nYou can use a comma-delimited list for multiple configuration files.",
            "examples": {
              "multiple": {
                "summary": "Call multiple configuration files.",
                "value": "modsec_vendor_configs/SomeVendor/config.conf,modsec_vendor_configs/AnotherVendor/config.conf"
              },
              "single": {
                "summary": "Call a single configuration file.",
                "value": "modsec_vendor_configs/SomeVendor/config.conf"
              }
            },
            "in": "query",
            "name": "config",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to exclude comments that are not associated with any directives.\n\n* `1` — Exclude.\n* `0` — Do **not** exclude.",
            "in": "query",
            "name": "exclude_bare_comments",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the function only returns the `SecRule` and `SecAction` directives\nfrom the configuration file, and comments that are not associated with a\nrule.\n\n* `1` — Only return the `SecRule` and `SecAction` directives and comments **not**\nassociated with a rule.\n* `0` — Return **all** directives and comments.",
            "in": "query",
            "name": "exclude_other_directives",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The vendor's unique short name.\n\n**Note:**\n\nYou can use a comma-delimited list for multiple vendors.",
            "examples": {
              "multiple": {
                "summary": "Call multiple vendors.",
                "value": "vendor=SomeVendor,AnotherVendor"
              },
              "single": {
                "summary": "Call a single vendor.",
                "value": "SomeVendor"
              }
            },
            "in": "query",
            "name": "vendor_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "chunks": {
                          "description": "An array of objects that contains elements that represent the contents of each configuration file's rules.",
                          "items": {
                            "properties": {
                              "config": {
                                "description": "The file path to the configuration file, relative to the `/usr/local/apache/conf/` directory.",
                                "example": "modsec_vendor_configs/SomeVendor/config.conf",
                                "type": "string"
                              },
                              "config_active": {
                                "description": "Whether the configuration file is active.\n\n* `1` — Active.\n* `0` — **Not** active.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "disabled": {
                                "description": "Whether the rule is active.\n\n* `1` — **Not** Active.\n* `0` — Active.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "The ModSecurity rule's ID number.\n\n**Note:**\n\nThe function does not always return this parameter.",
                                "example": 662452,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "meta_msg": {
                                "description": "The description of the rule.",
                                "example": "Denied dangerous config traffic",
                                "type": "string"
                              },
                              "rule": {
                                "description": "The rule's text.\n\n**Note:**\n\nThis return may include multiple directives and comments if they\nare all part of the same rule.",
                                "example": "SecRule REQUEST_FILENAME \"config\" \"deny,id:662452,msg:'Denied dangerous config traffic',severity:1,auditlog\"",
                                "type": "string"
                              },
                              "staged": {
                                "description": "Whether the system has added the rule to the ModSecurity configuration file.\n\n* `1` — Rule staged.\n* `0` — Rule **not** staged.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "vendor_active": {
                                "description": "Whether the vendor is active.\n\n* `1` — Active.\n* `0` — **Not** active.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "vendor_id": {
                                "description": "The vendor's unique short name.",
                                "example": "SomeVendor",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "staged_changes": {
                          "description": "Whether the chunks array includes staged changes that the system has not\nyet added to the ModSecurity configuration file.\n\n* `1` — Staged changes in output.\n* `0` — **No** staged changes in output.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_get_rules",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return ModSecurity rules",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_get_rules"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_get_rules?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_get_settings": {
      "get": {
        "description": "This function retrieves the server's ModSecurity™ configuration settings. The system\nstores these settings in the `/usr/local/apache/conf/modsec2.conf` file.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/serverroles#roles),\nthe system **disables** this function.",
        "operationId": "modsec_get_settings",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "settings": {
                          "description": "An array of objects containing ModSecurity global configuration settings.",
                          "example": [
                            {
                              "default": "Off",
                              "description": "This setting controls the behavior of the audit engine.",
                              "directive": "SecAuditEngine",
                              "engine": 1,
                              "missing": 1,
                              "name": "Audit Log Level",
                              "radio_options": [
                                {
                                  "name": "Log all transactions.",
                                  "option": "On"
                                },
                                {
                                  "name": "Do not log any transactions.",
                                  "option": "Off"
                                },
                                {
                                  "name": "Only log noteworthy transactions.",
                                  "option": "RelevantOnly"
                                }
                              ],
                              "setting_id": 0,
                              "state": "",
                              "type": "radio",
                              "url": "https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#secauditengine"
                            },
                            {
                              "description": "Specify an external program to pipe transaction log information to for additional analysis. The syntax is analogous to the .forward file, in which a pipe at the beginning of the field indicates piping to an external program.",
                              "directive": "SecGuardianLog",
                              "missing": 1,
                              "name": "Guardian Log",
                              "setting_id": 6,
                              "state": "",
                              "type": "text",
                              "url": "https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#secguardianlog",
                              "validation": [
                                {
                                  "arg": "[|]",
                                  "name": "startsWith"
                                },
                                "path"
                              ]
                            }
                          ],
                          "items": {
                            "properties": {
                              "default": {
                                "description": "The setting's default value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                ]
                              },
                              "description": {
                                "description": "The setting's description. The user's\n[locale](https://go.cpanel.net/locale) may translate this value.",
                                "type": "string"
                              },
                              "directive": {
                                "description": "The setting's Apache® configuration directive.",
                                "type": "string"
                              },
                              "engine": {
                                "description": "Whether the setting is an engine directive. If the setting is\na normal directive, the function does **not** return this value.\n\n* `1` — Engine directive.",
                                "enum": [
                                  1
                                ],
                                "type": "integer"
                              },
                              "missing": {
                                "description": "Whether the setting is missing.\n\n* `1` — The value is missing.",
                                "enum": [
                                  1
                                ],
                                "type": "integer"
                              },
                              "name": {
                                "description": "The setting's name.",
                                "type": "string"
                              },
                              "radio_options": {
                                "description": "An array of objects containing the options that the client should\ndisplay, as radio buttons, for this setting in a user interface.\n\n**Note:**\n\nThe function **only** returns this value when the `type`\nparameter is the `radio` values.",
                                "items": {
                                  "properties": {
                                    "name": {
                                      "description": "The setting name to display to the user. The user's\n[locale](https://go.cpanel.net/locale) may translate this value.",
                                      "type": "string"
                                    },
                                    "option": {
                                      "description": "The setting that the system used to select the setting's state.\n\n**Note:**\n\nThis value is identical to the string that the client sends in\nas the `state` value when users select the specified setting. In most\ncases, you should **not** display this value to the user. Instead,\ndisplay the `name` value.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "setting_id": {
                                "description": "The setting ID.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "state": {
                                "description": "The setting's current state, if available.",
                                "type": "string"
                              },
                              "type": {
                                "description": "The form element that the WHM interface uses to display this setting.\n\n* `text` — WHM users modify this setting via a text box.\n* `radio` — WHM users modify this setting via a radio button.\n* `number` — WHM users modify this setting via a text box that\nonly allows numeric values.",
                                "enum": [
                                  "text",
                                  "radio",
                                  "number"
                                ],
                                "type": "string"
                              },
                              "url": {
                                "description": "The URL of the setting's entry in the ModSecurity reference manual.",
                                "format": "url",
                                "type": "string"
                              },
                              "validation": {
                                "description": "A list of validators to apply when updating the state. Use these validators\nto perform frontend validation through your preferred implementation\nmethods.\n\n**Note:**\n\nThe function may represent each validator as either a string or an\nobject.\n\n* When the function represents the validator as a string, no arguments\nexist for the validator.\n* When the function returns the validator as a object, the API may\nalso include an argument for the validator.",
                                "items": {
                                  "anyOf": [
                                    {
                                      "description": "An object that contains the validation rule and arguments.",
                                      "properties": {
                                        "arg": {
                                          "description": "The regular expression pattern that is used with the validator identified in the `name` property.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "One of the following validators:\n\n* `startsWith` - Check if the updated `state` starts with the pattern passed in `arg`.",
                                          "enum": [
                                            "startsWith",
                                            "endsWith"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    {
                                      "description": "One of the following validators:\n\n* `path` — An instruction to verify whether the user's input is a\nvalid path.\n* `honeypotAccessKey` — An instruction to verify whether the user's\ninput fits the constraints of an `Http:BL` API access key.\n* `positiveInteger` — An instruction to verify whether the user's\ninput is a positive integer.",
                                      "enum": [
                                        "path",
                                        "honeypotAccessKey",
                                        "positiveInteger"
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_get_settings",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return ModSecurity configuration",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_get_settings"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_get_settings?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_get_vendors": {
      "get": {
        "description": "The function returns a list of configured ModSecurity™ vendors.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_get_vendors",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "vendors": {
                          "description": "An array of objects that represent the list of configured vendors on the system.",
                          "items": {
                            "properties": {
                              "archive_url": {
                                "description": "The URL to download the vendor rules.",
                                "example": "http://www.example.com/SAMPLE_1415038544.zip",
                                "format": "url",
                                "type": "string"
                              },
                              "configs": {
                                "description": "A list of information about the configuration files that the vendor provides.",
                                "example": [
                                  {
                                    "active": 1,
                                    "config": "modsec_vendor_configs/SAMPLE/modsecurity_crs_10_setup.conf",
                                    "vendor_id": "SAMPLE"
                                  },
                                  {
                                    "active": 0,
                                    "config": "modsec_vendor_configs/SAMPLE/optional_rules/modsecurity_crs_16_session_hijacking.conf",
                                    "vendor_id": "SAMPLE"
                                  },
                                  {
                                    "active": 1,
                                    "config": "modsec_vendor_configs/SAMPLE/optional_rules/modsecurity_crs_46_av_scanning.conf",
                                    "vendor_id": "SAMPLE"
                                  }
                                ],
                                "items": {
                                  "properties": {
                                    "active": {
                                      "description": "Whether the configuration is active.\n\n* `1` — Active.\n* `0` — Inactive.",
                                      "enum": [
                                        1,
                                        0
                                      ],
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "config": {
                                      "description": "The configuration file path, relative to the `/usr/local/apache/conf` directory.",
                                      "example": "modsec_vendor_configs/SAMPLE/slr_rules/modsecurity_crs_46_slr_et_joomla_attacks.conf",
                                      "type": "string"
                                    },
                                    "vendor_id": {
                                      "description": "The vendor's unique short name.",
                                      "example": "SAMPLE",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "cpanel_provided": {
                                "description": "Whether cPanel & WHM installed the vendor rule set.\n\n* `1` — Installed.\n* `0` — **Not** installed.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "description": {
                                "description": "The ModSecurity vendor's description.",
                                "example": "A SAMPLE-curated ModSecurity rule set.",
                                "type": "string"
                              },
                              "dist_md5": {
                                "description": "The download's [MD5](https://en.wikipedia.org/wiki/MD5)\nchecksum value.",
                                "example": "ffbaa3a7ead8dfaf0b661a729ce6ad3b",
                                "type": "string"
                              },
                              "dist_sha512": {
                                "description": "The download's [sha512](https://en.wikipedia.org/wiki/SHA-2) hash.",
                                "example": "b55c09bb1835ed4209f0f3ea4a70d099665363f23d3819c0369be429438d675ba2c749dcefdb85cee682ee0bf485558e67d0b0965fe4799865529d943e8e14cb",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Whether the vendor is enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "in_use": {
                                "description": "The number of configuration files in the vendor rule set.",
                                "example": 32,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "inst_dist": {
                                "description": "The rule set version's unique identifier.",
                                "example": "SAMPLE_1415038544",
                                "type": "string"
                              },
                              "installed": {
                                "description": "Whether the vendor is installed.\n\n* `1` — Installed.\n* `0` — **Not** installed.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "installed_from": {
                                "description": "The URL to the vendor's metadata file.",
                                "example": "http://www.example.com/meta_SAMPLE.yaml",
                                "type": "string"
                              },
                              "name": {
                                "description": "The vendor's name.",
                                "example": "SAMPLE ModSecurity Core Rule Set",
                                "type": "string"
                              },
                              "path": {
                                "description": "The full path to the vendor's ModSecurity configuration files.",
                                "example": "/usr/local/apache/conf/modsec_vendor_configs/SAMPLE",
                                "type": "string"
                              },
                              "report_url": {
                                "description": "The URL of the vendor's Report Receiver API endpoint that reports\nproblems with the vendor's rules.\n\n**Note:**\n\nThe function may not always return this parameter.",
                                "example": "https://www.example.com/report",
                                "format": "url",
                                "type": "string"
                              },
                              "supported_versions": {
                                "description": "A list of the ModSecurity versions that the vendor supports.",
                                "example": [
                                  "2.9.1",
                                  "2.9.2",
                                  "2.9.3"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "update": {
                                "description": "Whether the vendor rule set can receive automatic updates.\n\n* `1` — Can receive automatic updates.\n* `0` — **Cannot** receive automatic updates.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "vendor_id": {
                                "description": "The vendor's unique short name.",
                                "example": "SAMPLE",
                                "type": "string"
                              },
                              "vendor_url": {
                                "description": "The URL of the vendor's website.",
                                "example": "https://www.example.com/index.php/Category:SAMPLE_ModSecurity_Core_Rule_Set_Project",
                                "format": "url",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_get_vendors",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return ModSecurity vendors",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_get_vendors"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_get_vendors?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_is_installed": {
      "get": {
        "description": "This function checks whether the ModSecurity™ module is installed.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "modsec_is_installed",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "data": {
                          "properties": {
                            "installed": {
                              "description": "Whether ModSecurity is installed on the server.\n* `1` — Installed.\n* `0` — **Not** installed.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_is_installed",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return ModSecurity module status",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_is_installed"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_is_installed?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_make_config_active": {
      "get": {
        "description": "This function adds an include for a ModSecurity™ configuration file to\nthe `modsec2.cpanel.conf` file. This makes the ModSecurity configuration file\nactive.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_make_config_active",
        "parameters": [
          {
            "description": "The ModSecurity configuration file's path and filename, relative to the `/usr/local/apache/conf/` diretory.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec_vendor_configs/example.conf",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_make_config_active",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add ModSecurity configuration file include",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_make_config_active config='modsec_vendor_configs/example.conf'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_make_config_active?api.version=1&config=modsec_vendor_configs%2fexample.conf"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_make_config_inactive": {
      "get": {
        "description": "This function removes an include for a ModSecurity™ configuration file from\nthe `modsec2.cpanel.conf` file. This makes the ModSecurity configuration file\ninactive.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_make_config_inactive",
        "parameters": [
          {
            "description": "The ModSecurity configuration file's path and filename, relative to the `/etc/apache2/conf.d/` directory.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec_vendor_configs/example.conf",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_make_config_inactive",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove ModSecurity configuration file include",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_make_config_inactive config='modsec_vendor_configs/example.conf'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_make_config_inactive?api.version=1&config=modsec_vendor_configs%2fexample.conf"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_preview_vendor": {
      "get": {
        "description": "This function returns the metadata for a ModSecurity™ vendor rule set.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_preview_vendor",
        "parameters": [
          {
            "description": "The YAML metadata's URL, which describes the vendor and how to obtain its rules.\n\n**Note:**\n\n* The file uses YAML format.\n* The filename **must** use the `meta_` prefix.\n* The filename **must** match the `vendor_id` value for your vendor.\n* The filename **must** end with the `.yaml` extension.",
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "example": "https://www.example.com/vendor1rules/meta_vendor1.yaml",
              "format": "url",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "archive_url": {
                          "description": "The URL to the vendor's rule set archive.",
                          "example": "https://www.example.com/vendor1.zip",
                          "format": "url",
                          "type": "string"
                        },
                        "cpanel_provided": {
                          "description": "Whether cPanel, L.L.C. provided the vendor.\n\n* `1` — cPanel-provided.\n* `0` — **Not** cPanel-provided.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "description": {
                          "description": "The vendor's description.",
                          "example": "This is the Vendor1 ModSecurity Core Rule Set.",
                          "type": "string"
                        },
                        "dist_md5": {
                          "description": "The download's [MD5](https://en.wikipedia.org/wiki/Md5) checksum value.",
                          "example": "307cb5320441ebd712e5581d12100dc9",
                          "type": "string"
                        },
                        "dist_sha512": {
                          "description": "The download's [sha512](https://en.wikipedia.org/wiki/SHA-2) hash.",
                          "example": "b55c09bb1835ed4209f0f3ea4a70d099665363f23d3819c0369be429438d675ba2c749dcefdb85cee682ee0bf485558e67d0b0965fe4799865529d943e8e14cb",
                          "type": "string"
                        },
                        "installed": {
                          "description": "Whether the vendor is installed.\n\n* `1` — Installed.\n* `0` — **Not** installed.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "installed_from": {
                          "description": "The vendor's metadata file URL.",
                          "example": "https://www.example.com/vendor1rules/meta_vendor1.yaml",
                          "format": "url",
                          "type": "string"
                        },
                        "name": {
                          "description": "The vendor's name.",
                          "example": "Vendor1 ModSecurity Core Rule Set",
                          "type": "string"
                        },
                        "path": {
                          "description": "The absolute path to the directory that contains the vendor's configuration files.",
                          "example": "/usr/local/apache/conf/modsec_vendor_configs/vendor1",
                          "type": "string"
                        },
                        "report_url": {
                          "description": "The URL to which the system will send reports.",
                          "example": "https://waf.example.com/api/cpanel_feedback?source=1&rule_set=1.229",
                          "format": "url",
                          "type": "string"
                        },
                        "supported_versions": {
                          "description": "A list of the ModSecurity versions that the vendor supports.",
                          "example": [
                            "2.9.1",
                            "2.9.2",
                            "2.9.3"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "vendor_id": {
                          "description": "The vendor's unique short name.",
                          "example": "vendor1",
                          "type": "string"
                        },
                        "vendor_url": {
                          "description": "The vendor's website URL.",
                          "example": "http://www.example.com",
                          "format": "url",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_preview_vendor",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return ModSecurity vendor rule metadata",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_preview_vendor url='https://www.example.com/vendor1rules/meta_vendor1.yaml'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_preview_vendor?api.version=1&url=https%3a%2f%2fwww.example.com%2fvendor1rules%2fmeta_vendor1.yaml"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_remove_rule": {
      "get": {
        "description": "This function removes a rule from a ModSecurity™ configuration file.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system disables this function.",
        "operationId": "modsec_remove_rule",
        "parameters": [
          {
            "description": "The ModSecurity configuration file's path and filename, relative to the `/usr/local/apache/conf/` directory.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec_vendor_configs/example.conf",
              "type": "string"
            }
          },
          {
            "description": "The rule's ID.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": 1234567890,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_remove_rule",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove ModSecurity rule",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_remove_rule config='modsec_vendor_configs/example.conf' id='1234567890'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_remove_rule?api.version=1&config=modsec_vendor_configs%2fexample.conf&id=1234567890"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_remove_setting": {
      "get": {
        "description": "This function removes a global ModSecurity™ configuration directive.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system disables this function.",
        "operationId": "modsec_remove_setting",
        "parameters": [
          {
            "description": "The setting's ID. For a list of available settings and their IDs, call the `modsec_get_settings` function.",
            "in": "query",
            "name": "setting_id",
            "required": true,
            "schema": {
              "example": 3,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {}
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_remove_setting",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove ModSecurity configuration",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_remove_setting setting_id='3'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_remove_setting?api.version=1&setting_id=3"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_remove_vendor": {
      "get": {
        "description": "This function removes a ModSecurity™ vendor. When you call this function, the system\nremoves the vendor's includes, disablement directives, configuration files, and\nmetadata file.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_remove_vendor",
        "parameters": [
          {
            "description": "The ModSecurity vendor's unique short name.",
            "in": "query",
            "name": "vendor_id",
            "required": true,
            "schema": {
              "example": "SomeVendor",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_remove_vendor",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove ModSecurity vendor",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_remove_vendor vendor_id='SomeVendor'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_remove_vendor?api.version=1&vendor_id=SomeVendor"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_report_rule": {
      "get": {
        "description": "This function submits ModSecurity™ rule error reports to a remote receiver. The third\nparty rule vendors use these error reports to identify problems with their rule sets.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "modsec_report_rule",
        "parameters": [
          {
            "description": "The contact email address to send with the error report. This allows the rule's vendor to reply to the user directly.",
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "example": "john.doe@example.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "A short message that explains the reason for the report.",
            "in": "query",
            "name": "message",
            "required": true,
            "schema": {
              "example": "Hi. We're having some trouble with this rule. It seems to be\nblocking all requests.",
              "type": "string"
            }
          },
          {
            "description": "The MySQL® row IDs from the `hits` table in the `modsec` database\nfor the audit log event to report.\n\n**Note:**\n\nIf you specify more than one row ID:\n\n* You **must** comma-separate the rule IDs.\n* The rule IDs **must** all correspond to the same ModSecurity rule.",
            "examples": {
              "multiple": {
                "summary": "Report multiple row IDs.",
                "value": "794828, 794829, 794820"
              },
              "single": {
                "summary": "Report a single row ID.",
                "value": 794828
              }
            },
            "explode": false,
            "in": "query",
            "name": "row_ids",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Whether the function sends the report to the rule's vendor.\n\n* `1` — Send the report.\n* `0` — Do **not** send the report.",
            "in": "query",
            "name": "send",
            "required": true,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The report's type.\n\n**Note:**\n\nThis value does **not** use a specified format. Treat the value as freeform text.",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "example": "false positive",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "report": {
                          "description": "An array of objects containing information for the report.",
                          "items": {
                            "properties": {
                              "email": {
                                "description": "The contact email address to send with the error report. This allows the rule's vendor to reply to the report directly.",
                                "example": "john.doe@example.com",
                                "format": "email",
                                "type": "string"
                              },
                              "hits": {
                                "description": "An array of objects containing information about the hit.",
                                "items": {
                                  "properties": {
                                    "action_desc": {
                                      "description": "The web server's response to the client.",
                                      "example": "Access denied with code 406 (phase 2).",
                                      "type": "string"
                                    },
                                    "handler": {
                                      "description": "This parameter only returns a `null` value.",
                                      "example": null,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "host": {
                                      "description": "The virtual host's (vhost) domain name.",
                                      "example": "example.com",
                                      "format": "domain",
                                      "type": "string"
                                    },
                                    "http_method": {
                                      "description": "The\n[HTTP method](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html)\nthat the client used to generate the hit.",
                                      "example": "GET",
                                      "type": "string"
                                    },
                                    "http_status": {
                                      "description": "The\n[HTTP status code](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)\nthat the web server returned.",
                                      "example": 406,
                                      "type": "integer"
                                    },
                                    "http_version": {
                                      "description": "The HTTP version number.",
                                      "example": "HTTP/1.1",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The `modsec` database line number.",
                                      "example": 794828,
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "ip": {
                                      "description": "The client's IP address.",
                                      "example": "10.215.215.236",
                                      "format": "ipv4",
                                      "type": "string"
                                    },
                                    "justification": {
                                      "description": "The specific criteria from the ModSecurity rule that generated the hit.",
                                      "example": "Unconditional match in SecAction.",
                                      "type": "string"
                                    },
                                    "meta_file": {
                                      "description": "The ModSecurity configuration file that contains the rule that triggered the log entry.",
                                      "example": "/usr/local/apache/conf/modsec_vendor_configs/MyVendor/one.conf",
                                      "type": "string"
                                    },
                                    "meta_id": {
                                      "description": "The ID of the ModSecurity rule that triggered the log entry.",
                                      "example": 12345694,
                                      "type": "integer"
                                    },
                                    "meta_line": {
                                      "description": "The line number of the ModSecurity rule that triggered the log entry.",
                                      "example": 1,
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "meta_logdata": {
                                      "description": "The transaction data fragment from the ModSecurity rule's `logdata` action.",
                                      "example": null,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "meta_msg": {
                                      "description": "The human-readable message from the ModSecurity rule's `msg` action.",
                                      "example": "Method is not allowed by policy",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "meta_offset": {
                                      "description": "The byte offset at which a match occurred within the target\ndata.\n\n**Note:**\n\nThis data is not always available.",
                                      "example": 0,
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "meta_rev": {
                                      "description": "The revision number from the ModSecurity rule's `rev` action.",
                                      "example": 1,
                                      "minimum": 1,
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "meta_severity": {
                                      "description": "The hit severity level from the ModSecurity\nrule's `severity` action.\n\n* `ALERT`\n* `CRITICAL`\n* `DEBUG`\n* `EMERGENCY`\n* `ERROR`\n* `INFO`\n* `NOTICE`\n* `WARNING`",
                                      "enum": [
                                        "ALERT",
                                        "CRITICAL",
                                        "DEBUG",
                                        "EMERGENCY",
                                        "ERROR",
                                        "INFO",
                                        "NOTICE",
                                        "WARNING"
                                      ],
                                      "example": "CRITICAL",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "meta_uri": {
                                      "description": "The client-requested URI.\n\n**Note:**\n\nThis data is not always available.",
                                      "example": null,
                                      "format": "uri",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The accessed file's path, relative to the document root.",
                                      "example": "/something",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "The date and time at which the log entry was made.\n\n**Note:**\n\nThis parameter uses the server's configured time zone.",
                                      "example": "2019-10-13T07:58:04.000Z",
                                      "format": "ISO-8601 Date Time (Space Separated)",
                                      "type": "string"
                                    },
                                    "timezone": {
                                      "description": "The server's configured timezone, in minutes difference from UTC/GMT.",
                                      "example": "-300",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "message": {
                                "description": "A short message that explains the reason for the report.",
                                "example": "Hi. We're having some trouble with this rule. It seems to be blocking all requests.",
                                "type": "string"
                              },
                              "rule_text": {
                                "description": "The rule text from the configuration file.",
                                "example": "SecAction \"deny,auditlog,id:'12345694'\"\n",
                                "type": "string"
                              },
                              "type": {
                                "description": "The report's type.\n\n**Note:**\n\nThis value does **not** use a specified format. Treat the value as\nfreeform text.",
                                "example": "false positive",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_report_rule",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Export ModSecurity rule error report",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_report_rule row_ids='794828' message=$'Hi. We\\'re having some trouble with this rule. It seems to be\nblocking all requests.' email='john.doe@example.com' type='false positive' send='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_report_rule?api.version=1&row_ids=794828&message=Hi.%20We%27re%20having%20some%20trouble%20with%20this%20rule.%20It%20seems%20to%20be%0ablocking%20all%20requests.&email=john.doe%40example.com&type=false%20positive&send=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/modsec_set_config_text": {
      "get": {
        "description": "This function sets the contents of a specified ModSecurity™ configuration file. The system\nstages any changes to the configuration file. To deploy the changes, call WHM API 1's\n`modsec_deploy_rule_changes` function.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system disables this function.",
        "operationId": "modsec_set_config_text",
        "parameters": [
          {
            "description": "The configuration file name.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec2.example.conf",
              "type": "string"
            }
          },
          {
            "description": "The configuration text.",
            "in": "query",
            "name": "text",
            "required": true,
            "schema": {
              "example": "SecRule REQUEST_URI \"example\" \"deny,id:123456789\" SecAction \"pass,auditlog,id\"",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {},
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_set_config_text",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update ModSecurity configuration file",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_set_config_text config='modsec2.example.conf' text='SecRule REQUEST_URI \"example\" \"deny,id:123456789\" SecAction \"pass,auditlog,id\"'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_set_config_text?api.version=1&config=modsec2.example.conf&text=SecRule%20REQUEST_URI%20%22example%22%20%22deny%2cid%3a123456789%22%20SecAction%20%22pass%2cauditlog%2cid%22"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_set_setting": {
      "get": {
        "description": "This function sets a global ModSecurity™ configuration directive.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "modsec_set_setting",
        "parameters": [
          {
            "description": "The setting's ID.\n\n**Note:**\n\n The WHM API 1 `modsec_get_settings` function returns this value.",
            "in": "query",
            "name": "setting_id",
            "required": true,
            "schema": {
              "example": 8,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "The setting's new state. The function uses this as a valid argument\nfor the directive.\n\n**Note:**\n\n For more information, read SpiderLabs' [ModSecurity documentation](https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual).",
            "in": "query",
            "name": "state",
            "required": true,
            "schema": {
              "example": "2000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "default": {
                          "description": "The setting's default value.",
                          "example": "1500",
                          "type": "string"
                        },
                        "description": {
                          "description": "The setting's description.",
                          "example": "This setting allows you to define the match limit of the PCRE library.",
                          "type": "string"
                        },
                        "directive": {
                          "description": "The setting's Apache® directive.",
                          "example": "SecPcreMatchLimit",
                          "type": "string"
                        },
                        "name": {
                          "description": "The setting's name.",
                          "example": "PCRE library match limit",
                          "type": "string"
                        },
                        "radio_options": {
                          "description": "An array of objects with the options that the client should display, as buttons, for this setting in a user interface.\n\n**Note:**\n\n The function **only** returns this array of objects when you set the `type` parameter's value to `radio`.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "The setting name to display to the user. The user's [locale](https://go.cpanel.net/localedocs) may translate this value.",
                                "example": "Log all transactions.",
                                "type": "string"
                              },
                              "option": {
                                "description": "The setting that the system used to select the setting's state.\n\n**Note:**\n\n This value is identical to the string that the client sends in as `state` value when users select the specified setting. In most cases, you should **not** display this value to the user. Instead, display the `name` value.",
                                "example": "On",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "setting_id": {
                          "description": "The setting's ID.",
                          "example": 8,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "state": {
                          "description": "The setting's new state.",
                          "example": 2000,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of UI control that the client should use to represent the setting.\n\n* `text` - WHM users modify this setting via a text box.\n* `radio` - WHM users modify this setting via a radio button.\n  - **Note:** If the `type` parameter's value is `radio`, the function also returns the `radio_options` array of objects.\n* `number` - WHM users modify this setting via a text box that only allows numeric values.",
                          "enum": [
                            "text",
                            "radio",
                            "number"
                          ],
                          "example": "text",
                          "type": "string"
                        },
                        "url": {
                          "description": "The URL for the setting's documentation.",
                          "example": "https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#secpcrematchlimit",
                          "format": "url",
                          "type": "string"
                        },
                        "validation": {
                          "description": "A validator or array of validators to apply. Use these validators to perform frontend validation through your preferred implementation methods.\n\n**Note:**\n\n The function may represent each validator as either a string or an object.\n * When the function represents the validator as a string, no arguments exist for the validator.\n * When the function returns the validator as a object, the API may also include an argument for the validator.",
                          "items": {
                            "anyOf": [
                              {
                                "description": "A JSON object string that contains one or more arguments for the validator.",
                                "properties": {
                                  "arg": {
                                    "description": "The regular expression pattern that is used with `name` when the validator checks a user's input.",
                                    "example": "[Ee]xample"
                                  },
                                  "name": {
                                    "description": "The method that determines where the validator should match a pattern in a user's input.",
                                    "example": "startsWith"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "description": "A string that is one of the following values:\n * `path` - An instruction to verify whether the user's input is a valid path.\n * `honeypotAccessKey` - An instruction to verify whether the user's input fits the constraints of an `Http:BL` API access key.\n * `positiveInteger` - An instruction to verify whether the user's input is a positive integer.",
                                "enum": [
                                  "path",
                                  "honeypotAccessKey",
                                  "positiveInteger"
                                ],
                                "example": "positiveInteger",
                                "type": "string"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_set_setting",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update ModSecurity configuration",
        "tags": [
          "ModSecurity",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_set_setting setting_id='8' state='2000'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_set_setting?api.version=1&setting_id=8&state=2000"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_undisable_rule": {
      "get": {
        "description": "This function enables a ModSecurity™ rule.\n\n**Important:**\n\n  In cPanel & WHM version 76 and later, when you disable the Web Server role , the system disables this function.",
        "operationId": "modsec_undisable_rule",
        "parameters": [
          {
            "description": "The ModSecurity configuration file.",
            "in": "query",
            "name": "config",
            "required": true,
            "schema": {
              "example": "modsec_vendor_configs/example.conf",
              "type": "string"
            }
          },
          {
            "description": "The ModSecurity rule's ID.",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "example": "1234567890",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_undisable_rule",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable ModSecurity rule",
        "tags": [
          "ModSecurity",
          "Rule Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_undisable_rule config='modsec_vendor_configs/example.conf' id='1234567890'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_undisable_rule?api.version=1&config=modsec_vendor_configs%2fexample.conf&id=1234567890"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.46"
      }
    },
    "/modsec_update_vendor": {
      "get": {
        "description": "This function updates a vendor with the current version of the rule set.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system disables this function.",
        "operationId": "modsec_update_vendor",
        "parameters": [
          {
            "description": "The vendor metadata file's URL.",
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "example": "http://example.com/update/meta_MyVendor.yaml",
              "format": "url",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "diagnostics": {
                          "description": "A list of diagnostic information about the update.",
                          "properties": {
                            "added_configs": {
                              "description": "A list of the ModSecurity configuration files that the update added.",
                              "items": {
                                "example": "modsec_vendor_configs/MyVendor/three.conf",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "deleted_configs": {
                              "description": "An array of objects containing the ModSecurity configuration files that the update removed.",
                              "items": {
                                "example": "modsec_vendor_configs/MyVendor/one.conf",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "new_configs": {
                              "description": "A complete list of configuration files that the update modified.",
                              "items": {
                                "properties": {
                                  "active": {
                                    "description": "Whether the configuration file is active.\n\n* `1` — Active.\n* `0` — **Not** active.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "config": {
                                    "description": "The file path to the configuration file, relative to the `/usr/local/apache/conf/` Apache configuration directory.",
                                    "example": "modsec_vendor_configs/MyVendor/two.conf",
                                    "type": "string"
                                  },
                                  "vendor_id": {
                                    "description": "The vendor's unique name.",
                                    "example": "MyVendor",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "prev_configs": {
                              "description": "A list of configuration files in the old version.",
                              "items": {
                                "properties": {
                                  "config": {
                                    "description": "The file path of the configuration file, relative to the `/usr/local/apache/conf/` Apache configuration directory.",
                                    "example": "modsec_vendor_configs/MyVendor/two.conf",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "vendor": {
                          "description": "A list of updated vendor information.",
                          "properties": {
                            "archive_url": {
                              "description": "The URL to download the vendor rules.",
                              "example": "http://example.com/update/MyVendor.zip",
                              "format": "url",
                              "type": "string"
                            },
                            "cpanel_provided": {
                              "description": "Whether cPanel, L.L.C. provided the rule set.\n\n* `1` — Provided by cPanel, L.L.C.\n* `0` — Not provided by cPanel, L.L.C.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "description": {
                              "description": "The vendor's description.",
                              "example": "This is an example of a custom vendor set (updated).",
                              "type": "string"
                            },
                            "dist_md5": {
                              "description": "The download's [MD5](https://en.wikipedia.org/wiki/MD5) checksum value.",
                              "example": "ecafce1bf148532250a8d4743a8374d1",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Whether the vendor is enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "inst_dist": {
                              "description": "The unique identifier for the rule set version.",
                              "example": "MyVendor-2",
                              "type": "string"
                            },
                            "installed": {
                              "description": "Whether the vendor is installed.\n\n* `1` — Installed.\n* `0` — **Not** installed.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "installed_from": {
                              "description": "The URL to the vendor's metadata file.",
                              "example": "http://example.com/update/meta_MyVendor.yaml",
                              "format": "url",
                              "type": "string"
                            },
                            "name": {
                              "description": "The vendor's name.",
                              "example": "My Vendor",
                              "type": "string"
                            },
                            "path": {
                              "description": "The file path to the vendor's ModSecurity configuration files.",
                              "example": "/usr/local/apache/conf/modsec_vendor_configs/MyVendor",
                              "type": "string"
                            },
                            "report_url": {
                              "description": "The URL that the vendor uses to receive problem reports.",
                              "example": "http://example.com/report/",
                              "format": "url",
                              "type": "string"
                            },
                            "vendor_id": {
                              "description": "The vendor's unique short name.",
                              "example": "MyVendor",
                              "type": "string"
                            },
                            "vendor_url": {
                              "description": "The URL to the vendor's website.",
                              "example": "http://example.com/",
                              "format": "url",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "modsec_update_vendor",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update ModSecurity vendor ruleset",
        "tags": [
          "ModSecurity",
          "Rule Vendor Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 modsec_update_vendor url='http://example.com/update/meta_MyVendor.yaml'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/modsec_update_vendor?api.version=1&url=http%3a%2f%2fexample.com%2fupdate%2fmeta_MyVendor.yaml"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/myprivs": {
      "get": {
        "description": "This function retrieves the current user's [Access Control List (ACL)](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) privileges.",
        "operationId": "myprivs",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "privileges": {
                          "description": "An array of objects that contains the privileges available to the user, including any third-party ACL privileges.",
                          "items": {
                            "properties": {
                              "acct-summary": {
                                "description": "Allows the user to view an account summary.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "add-pkg": {
                                "description": "Allows the user to create packages.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "add-pkg-ip": {
                                "description": "Allows the user to create packages with dedicated IP addresses.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "add-pkg-shell": {
                                "description": "Allows the user to create packages with shell access.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "all": {
                                "description": "Provides all access privileges to the user.\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Warning:**\n\nIf this value is set to `1` , the user has `root` access.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "allow-addoncreate": {
                                "description": "Allows the user to create packages with addon domains.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "allow-emaillimits-pkgs": {
                                "description": "Allows the user to create packages with custom email limits.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "allow-parkedcreate": {
                                "description": "Allows the user to create packages with parked domains (aliases).\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "allow-shell": {
                                "description": "Allows the user to create an account with shell access.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "type": "integer"
                              },
                              "allow-unlimited-bw-pkgs": {
                                "description": "Allows the user to create packages with unlimited bandwidth.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "allow-unlimited-disk-pkgs": {
                                "description": "Allows the user to create packages with unlimited disk space quotas.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "allow-unlimited-pkgs": {
                                "description": "Allows the user to create packages with unlimited values for features (for example, unlimited email accounts).\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "basic-system-info": {
                                "description": "Allows the user to retrieve basic system information.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "basic-whm-functions": {
                                "description": "Whether to give the reseller access to basic cPanel & WHM options.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "clustering": {
                                "description": "Allows the user to configure DNS clusters.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "cors-proxy-get": {
                                "description": "Allows the user to perform Cross-Origin Resource Sharing (CORS) HTTP requests.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "cpanel-api": {
                                "description": "Allows the reseller to execute cPanel [UAPI](https://documentation.cpanel.net/display/DD/Guide+to+UAPI) functions via WHM.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "cpanel-integration": {
                                "description": "Allows the user to manage how their server and its services connect to other servers and services.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "create-acct": {
                                "description": "Allows the user to create accounts.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "create-dns": {
                                "description": "Allows the user to create DNS zones.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "create-user-session": {
                                "description": "Allows the user to create a new temporary user session for a specified service.\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Note:**\n\nThis privilege allows an API token user to bypass any restrictions that you set on the API token. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "demo-setup": {
                                "description": "Allows the user to enable demo mode on accounts.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "digest-auth": {
                                "description": "Allows the user to manage Digest Authentication support.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "edit-account": {
                                "description": "Allows the user to modify accounts.\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Warning:**\n\nThis privilege allows circumvention of account creation limits, gives shell access unless explicitly disallowed, and provides access to dedicated IP addresses, among other features.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "edit-dns": {
                                "description": "Allows the user to edit DNS zones.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "edit-mx": {
                                "description": "Allows the user to edit MX entries.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "edit-pkg": {
                                "description": "Allows the user to create and delete packages.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "file-restore": {
                                "description": "Allows the user to restore specific files and directories from a backup.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "generate-email-config": {
                                "description": "Allows the user to generate a mobile configuration profile for an email account.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "kill-acct": {
                                "description": "Allows the user to delete their customers' accounts.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "kill-dns": {
                                "description": "Allows the user to delete DNS zones.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "limit-bandwidth": {
                                "description": "Allows the user to modify bandwidth limits on their accounts.\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Warning:**\n\n This will allow circumvention of account package limits if you do not use resource limits.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "list-accts": {
                                "description": "Allows the user to list owned accounts.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "list-pkgs": {
                                "description": "Allows the user to view existing hosting plans (packages).\n* `1` — Enabled.\n* `0` — Disabled.",
                                "type": "integer"
                              },
                              "locale-edit": {
                                "description": "Allows the user to create and modify locales on the server.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "mailcheck": {
                                "description": "Allows the user to access WHM's [_Mail Troubleshooter_](https://go.cpanel.net/whmdocsMailTroubleshooter) interface (_WHM >> Home >> Mail >> Mail Troubleshooter_).\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "manage-api-tokens": {
                                "description": "Allows the user to manage API tokens.\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Note:**\n\nThis ACL privilege allows an API token user to bypass any restrictions that you set on the API token.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "manage-dns-records": {
                                "description": "Allows the user to manage DNS records.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "manage-oidc": {
                                "description": "Allows the user to manage external authentication for their accounts.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "manage-styles": {
                                "description": "Allows the user to manage their server's cPanel styles.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "mysql-info": {
                                "description": "Allows the user to retrieve MySQL® database and user data.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "news": {
                                "description": "Allows the user to send news messages to customers' accounts.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "ns-config": {
                                "description": "Allows the user to manage nameservers.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "park-dns": {
                                "description": "Allows the user to park domains within WHM.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "passwd": {
                                "description": "Allows the user to modify passwords for customers' accounts.\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Note:**\n\n This privilege allows an API token user to change account passwords and log in with a new password. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "quota": {
                                "description": "Allows the user to modify disk space quotas for accounts.\n* `1` — Enabled.\n* `0` — Disabled.\n\n**Warning:**\n\n This ACL privilege allows circumvention of account package limits if you do not use resource limits.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "rearrange-accts": {
                                "description": "Allows the user to rearrange the locations of customer accounts in order to free up disk space.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "resftp": {
                                "description": "Allows the user to re-sync FTP account passwords.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "restart": {
                                "description": "Allows the user to restart services on the server, such as Apache® or Exim.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "show-bandwidth": {
                                "description": "Allows the user to view the bandwidth usage of accounts.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "ssl": {
                                "description": "Allows the user to manage the SSL certificates installed on domains.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "ssl-buy": {
                                "description": "Allows the user to use WHM's [_Purchase and Install an SSL Certificate_](https://go.cpanel.net/whmdocsPurchaseandInstallanSSLCertificate) interface (_WHM >> Home >> SSL/TLS >> Purchase and Install an SSL Certificate_).\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "ssl-gencrt": {
                                "description": "Allows the user to use the SSL CSR/CRT generator.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "ssl-info": {
                                "description": "Allows the user to view their server's SSL information.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "stats": {
                                "description": "Allows the user to view WHM's [_Server Information_](https://go.cpanel.net/whmdocsServerInformation) interface (_WHM >> Home >> Server Status >> Server Information_).\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "status": {
                                "description": "Allows the user to view WHM's [_Service Status_](https://go.cpanel.net/whmdocsServiceStatus) interface (_WHM >> Home >> Server Status >> Service Status_).\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "suspend-acct": {
                                "description": "Allows the user to suspend customers' accounts.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "thirdparty": {
                                "description": "Allows the user to manage third-party service offerings.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "track-email": {
                                "description": "Allows the user to view reports about email message delivery attempts from their account.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "upgrade-account": {
                                "description": "Allows the user to upgrade and downgrade customers' domain accounts.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "viewglobalpackages": {
                                "description": "Whether to allow the reseller to use all global packages. For more information, read our [reseller packages](https://go.cpanel.net/resellerpackages) documentation.\n* `1` — Enabled.\n* `0` — Disabled.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "myprivs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account system privileges",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 myprivs"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/myprivs?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/nat_checkip": {
      "get": {
        "description": "This function validates a public IP address on a NAT-configured server.",
        "operationId": "nat_checkip",
        "parameters": [
          {
            "description": "The local IPv4 address.",
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "example": "192.168.4.10",
              "format": "ipv4",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "checked_ip": {
                          "description": "The local IPv4 address.",
                          "example": "192.168.4.10",
                          "format": "ipv4",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "nat_checkip",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate public IP address for NAT",
        "tags": [
          "IP Addresses",
          "Network Address Translation"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 nat_checkip ip='192.168.4.10'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/nat_checkip?api.version=1&ip=192.168.4.10"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/nat_set_public_ip": {
      "get": {
        "description": "This function pairs a local IP address with a public IP address on NAT-configured servers.",
        "operationId": "nat_set_public_ip",
        "parameters": [
          {
            "description": "The local IPv4 address.",
            "in": "query",
            "name": "local_ip",
            "required": true,
            "schema": {
              "example": "192.168.4.10",
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "The public IPv4 address.",
            "in": "query",
            "name": "public_ip",
            "required": true,
            "schema": {
              "example": "10.5.3.33",
              "format": "ipv4",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "nat_set_public_ip",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Register NAT IP address to public IP address",
        "tags": [
          "IP Addresses",
          "Network Address Translation"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 nat_set_public_ip local_ip='192.168.4.10' public_ip='10.5.3.33'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/nat_set_public_ip?api.version=1&local_ip=192.168.4.10&public_ip=10.5.3.33"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/normalize_user_email_configuration": {
      "get": {
        "description": "This function fixes a user's misconfigured email settings. This includes any misconfigured email file and directory ownership and permissions.",
        "operationId": "normalize_user_email_configuration",
        "parameters": [
          {
            "description": "The cPanel account's username.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "normalize_user_email_configuration",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Repair misconfigured email settings",
        "tags": [
          "Mail",
          "Mail Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 normalize_user_email_configuration username='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/normalize_user_email_configuration?api.version=1&username=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "88"
      }
    },
    "/package_manager_fixcache": {
      "get": {
        "description": "This function attempts to repair yum cache issues.",
        "operationId": "package_manager_fixcache",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cache_seems_ok_now": {
                          "description": "Whether the system resolved the current error.\n\n* `1` — Resolved.\n\n**Note:**\n\n* The function **only** returns this value if the function succeeds.\n* If the function fails, it **only** returns metadata.",
                          "enum": [
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "package_manager_fixcache",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Repair RPM management yum cache issues",
        "tags": [
          "RPM",
          "Package Manager Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 package_manager_fixcache"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/package_manager_fixcache?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/package_manager_get_build_log": {
      "get": {
        "description": "This function returns build log content.",
        "operationId": "package_manager_get_build_log",
        "parameters": [
          {
            "description": "The build process ID returned by the `package_manager_submit_actions` function.",
            "in": "query",
            "name": "build",
            "required": true,
            "schema": {
              "example": 1234,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The position in the build log from which you wish to display entries.",
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "example": 4567,
              "format": "bytes",
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "content": {
                          "description": "The most recent build log entries.",
                          "example": [
                            "line1",
                            "line2",
                            "line3"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "offset": {
                          "description": "The last position that the system read in the build log.",
                          "example": 9672,
                          "format": "bytes",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "still_running": {
                          "description": "Whether the build process is in progress.\n\n* `1` — In progress.\n* `0` — Complete.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "package_manager_get_build_log",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return RPM management build log",
        "tags": [
          "RPM",
          "Package Manager Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 package_manager_get_build_log build='1234' offset='4567'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/package_manager_get_build_log?api.version=1&build=1234&offset=4567"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/package_manager_get_package_info": {
      "get": {
        "description": "This function retrieves information about the system's available\nRPM packages.\n\n**Note:**\n\nYou must use **either** the `ns` or the `package` parameters.",
        "operationId": "package_manager_get_package_info",
        "parameters": [
          {
            "description": "An available RPM package namespace.\n\n**Note:**\n\n* `ea` is the **only** possible value.\n* If you use this parameter, you cannot use the `package` parameter.",
            "in": "query",
            "name": "ns",
            "required": true,
            "schema": {
              "enum": [
                "ea"
              ],
              "example": "ea",
              "type": "string"
            }
          },
          {
            "description": "An RPM package name on the system.\n\n**Note:**\n\n* If you use this parameter, you cannot use the `ns` parameter.\n* To view more than one package, pass the parameter multiple times. For example,\n`package=ea-php55` and `package=ea-apr-util`.",
            "examples": {
              "multiple": {
                "summary": "View multiple packages.",
                "value": "package=ea-php55 package=ea-apr-util"
              },
              "single": {
                "summary": "View one package.",
                "value": "ea-php55"
              }
            },
            "in": "query",
            "name": "package",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the system will disable [yum](https://en.wikipedia.org/wiki/Yum_(software))'s\nexclude behavior.\n\n* `1` — Disable yum's exclude behavior.\n* `0` — Do **not** disable yum's exclude behavior.",
            "in": "query",
            "name": "disable-excludes",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "packages": {
                          "description": "An array of objects containing information about the RPM packages on the system.",
                          "items": {
                            "properties": {
                              "architecture": {
                                "description": "The required system architecture.",
                                "example": "x86_64",
                                "type": "string"
                              },
                              "license": {
                                "description": "The RPM package's distribution license.",
                                "example": "ASL 2.0",
                                "type": "string"
                              },
                              "long_description": {
                                "description": "A detailed description of the RPM package.",
                                "example": "The mission of the Apache Portable Runtime (APR) is to provide a\\nfree library of C data structures and routines.",
                                "type": "string"
                              },
                              "more_info_url": {
                                "description": "The RPM package developer's URL, if available.",
                                "example": "http://apr.apache.org",
                                "format": "url",
                                "nullable": true,
                                "type": "string"
                              },
                              "package": {
                                "description": "The RPM package name.",
                                "example": "ea-apr-util",
                                "type": "string"
                              },
                              "pkg_dep": {
                                "description": "The RPM package's dependencies and conflicts.",
                                "properties": {
                                  "conflicts": {
                                    "description": "A list of the RPM package's conflicts, if any exist.",
                                    "example": [
                                      "ea-php55-php-ioncube5"
                                    ],
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "requires": {
                                    "description": "A list of the RPM package's requirements, if any exist.",
                                    "example": [
                                      "glibc",
                                      "libuuid",
                                      "expat",
                                      "libdb",
                                      "ea-apr"
                                    ],
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "pkg_group": {
                                "description": "The RPM package's group.",
                                "example": "System Environment/Libraries",
                                "type": "string"
                              },
                              "release": {
                                "description": "The RPM package's cPanel release number.",
                                "example": "7.7.1.cpanel",
                                "type": "string"
                              },
                              "repo_name": {
                                "description": "The repository where the RPM package resides.",
                                "example": "NYI",
                                "type": "string"
                              },
                              "short_description": {
                                "description": "A short description of the RPM package.",
                                "example": "Apache Portable Runtime Utility library",
                                "type": "string"
                              },
                              "size": {
                                "description": "The RPM package's size.",
                                "example": 214647,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "state": {
                                "description": "The install state of the RPM package.\n\n* `installed`\n* `not_installed`\n* `updatable`",
                                "enum": [
                                  "installed",
                                  "not_installed",
                                  "updatable"
                                ],
                                "example": "updatable",
                                "type": "string"
                              },
                              "version": {
                                "description": "The version of the RPM package's software.",
                                "example": "1.6.1",
                                "type": "string"
                              },
                              "version_installed": {
                                "description": "The currently installed version of an RPM package.",
                                "example": "1.6.1-4.4.8.cpanel",
                                "type": "string"
                              },
                              "version_latest": {
                                "description": "The latest available version of an RPM package.",
                                "example": "1.6.1-7.7.1.cpanel",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "package_manager_get_package_info",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return available RPM packages information",
        "tags": [
          "RPM",
          "List Package Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 package_manager_get_package_info ns='ea' package='ea-php55'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/package_manager_get_package_info?api.version=1&ns=ea&package=ea-php55"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/package_manager_is_performing_actions": {
      "get": {
        "description": "This function checks the activity of the process that you executed in the WHM API 1 `package_manager_submit_actions` function.",
        "operationId": "package_manager_is_performing_actions",
        "parameters": [
          {
            "description": "The process's build number returned by the WHM API 1 `package_manager_submit_actions` function.",
            "in": "query",
            "name": "build",
            "required": true,
            "schema": {
              "example": 10053,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "active": {
                          "description": "Whether the process is active.\n\n* `1` — Active.\n* `0` — Inactive.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "package_manager_is_performing_actions",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return RPM package update status",
        "tags": [
          "RPM",
          "List Package Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 package_manager_is_performing_actions build='10053'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/package_manager_is_performing_actions?api.version=1&build=10053"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/package_manager_list_packages": {
      "get": {
        "description": "This function lists information about the system's available RPM packages.",
        "operationId": "package_manager_list_packages",
        "parameters": [
          {
            "description": "Return RPM packages that exist in a specified state.\n\n* `any` — All RPMs available on the system.\n* `installed` — The RPMs installed on the system.\n* `not_installed` — The available RPMs not yet installed on the system.\n* `updatable` — The RPMs with updates available.",
            "in": "query",
            "name": "state",
            "schema": {
              "default": "any",
              "enum": [
                "any",
                "installed",
                "not_installed",
                "updatable"
              ],
              "example": "installed",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "A list of RPM objects that match the requested `state`.",
                      "properties": {
                        "packages": {
                          "description": "An array of objects that contains the RPM packages on the system.",
                          "example": [
                            {
                              "package": "MariaDB-client"
                            },
                            {
                              "package": "MariaDB-common"
                            }
                          ],
                          "items": {
                            "properties": {
                              "package": {
                                "description": "An RPM package.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "package_manager_list_packages",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return available RPM packages",
        "tags": [
          "RPM",
          "List Package Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 package_manager_list_packages"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/package_manager_list_packages?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/package_manager_resolve_actions": {
      "get": {
        "description": "This function determines the actions that would result from the provisioning of a specified RPM package or packages.",
        "operationId": "package_manager_resolve_actions",
        "parameters": [
          {
            "description": "The name of an RPM package.\n\n**Note:**\n\nTo submit multiple RPM packages, increment the parameter name. For example, `package-0`,\n`package-1`, and `package-2`.",
            "examples": {
              "multiple": {
                "summary": "Submit multiple RPM packages.",
                "value": "package-0=ea-apache24-mod_headers package-1=ea-apache24-mod_cgid package-2=ea-apache24-mod_mpm_event"
              },
              "single": {
                "summary": "Submit a single RPM package.",
                "value": "ea-apache24-mod_headers"
              }
            },
            "in": "query",
            "name": "package",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The RPM namespace that represents a set of packages.",
            "in": "query",
            "name": "ns",
            "required": false,
            "schema": {
              "default": "ea",
              "example": "ea",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "install": {
                          "description": "A list of RPM packages that the system would install if you provisioned them as currently selected.",
                          "example": [
                            "ea-apache24-mod_mpm_event",
                            "ea-apache24-mod_cgid"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "unaffected": {
                          "description": "A list of unaffected RPM packages.",
                          "example": [
                            "ea-php70-php-devel",
                            "ea-php56-runtime",
                            "ea-php55-php-common",
                            "ea-apache24-mod_headers",
                            "ea-php56-php-bcmath",
                            "ea-php70-php-curl",
                            "ea-php70-php-xml"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "uninstall": {
                          "description": "A list of RPM packages that the system would uninstall if you provisioned them as currently selected.",
                          "example": [
                            "ea-apache24-mod_cgi",
                            "ea-apache24-mod_mpm_prefork"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "upgrade": {
                          "description": "A list of RPM packages that the system would upgrade if you provisioned them as currently selected.",
                          "example": [
                            "ea-php56"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "package_manager_resolve_actions",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return possible RPM package changes",
        "tags": [
          "RPM",
          "List Package Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 package_manager_resolve_actions package='ea-apache24-mod_headers'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/package_manager_resolve_actions?api.version=1&package=ea-apache24-mod_headers"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/package_manager_submit_actions": {
      "get": {
        "description": "This function installs, upgrades, or uninstalls RPM packages.\n\n**Note:**\n\nThe system queues this function's actions to run as background tasks. The actions may\nrequire additional time to finish.",
        "operationId": "package_manager_submit_actions",
        "parameters": [
          {
            "description": "The RPM package that you want to install. If you do not use this parameter, the function\ndoes not install a package.\n\n**Note:**\n\nYou can pass this parameter multiple times to install more than one RPM package",
            "examples": {
              "multiple": {
                "summary": "Install multiple RPM packages.",
                "value": "install=package1 install=package2"
              },
              "single": {
                "summary": "Install a single RPM package.",
                "value": "package1"
              }
            },
            "in": "query",
            "name": "install",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The RPM package that you want to uninstall. If you do not use this parameter, the function\ndoes not uninstall a package.\n\n**Note:**\n\nYou can pass this parameter multiple times to uninstall more than one RPM package.",
            "examples": {
              "multiple": {
                "summary": "Uninstall multiple RPM packages.",
                "value": "uninstall=package3 uninstall=package4 uninstall=package5"
              },
              "single": {
                "summary": "Uninstall a single RPM package.",
                "value": "package3"
              }
            },
            "in": "query",
            "name": "uninstall",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The RPM package that you want to upgrade. If you do not use this parameter, the function\ndoes not upgrade a package.\n\n**Note:**\n\nYou can pass this parameter multiple times to upgrade more than one RPM package.",
            "examples": {
              "multiple": {
                "summary": "Upgrade multiple RPM packages.",
                "value": "upgrade=package6 upgrade=package7 upgrade=package8"
              },
              "single": {
                "summary": "Upgrade a single RPM package.",
                "value": "package6"
              }
            },
            "in": "query",
            "name": "upgrade",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "build": {
                          "description": "A valid Process ID (PID).",
                          "example": 9717,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "package_manager_submit_actions",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Start RPM package installation, update, or removal",
        "tags": [
          "RPM",
          "Install or Uninstall Package"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 package_manager_submit_actions"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/package_manager_submit_actions?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/package_manager_upgrade": {
      "get": {
        "description": "This function downloads and installs package updates on the server.",
        "operationId": "package_manager_upgrade",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "build": {
                          "description": "A valid Process ID (PID).",
                          "example": 10111,
                          "type": "integer"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "package_manager_upgrade",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Start RPM package upgrade",
        "tags": [
          "RPM",
          "Install or Uninstall Package"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 package_manager_upgrade"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/package_manager_upgrade?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/participate_in_analytics": {
      "get": {
        "description": "This function enables or disables\n[Interface Analytics](https://docs.cpanel.net/knowledge-base/cpanel-product/cpanel-analytics-the-data-we-use/#interface-analytics).",
        "operationId": "participate_in_analytics",
        "parameters": [
          {
            "description": "Whether to enable Interface Analytics.\n\n* `1` — Enable.\n* `0` — Disable.",
            "in": "query",
            "name": "enabled",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "participate_in_analytics",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable analytics data gathering",
        "tags": [
          "cPanel Analytics"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 participate_in_analytics enabled='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/participate_in_analytics?api.version=1&enabled=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/passwd": {
      "get": {
        "description": "This function modifies a cPanel or reseller account's password.",
        "operationId": "passwd",
        "parameters": [
          {
            "description": "The account's new password.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "12345luggage",
              "type": "string"
            }
          },
          {
            "description": "The account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to also change the account's MySQL® password.\n\n* `1` — Also update the account's MySQL password to match the `password` value.\n* `0` — Do **not** update.",
            "in": "query",
            "name": "db_pass_update",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to enable Digest Authentication for the account. If you\ndo **not** specify a value, the account retains its current Digest\nAuthentication setting.\n\n* `1` — Enable.\n* `0` — Disable.",
            "in": "query",
            "name": "enabledigest or digestauth",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "app": {
                          "description": "The services for which the system changed the password.",
                          "items": {
                            "example": "ftp",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "passwd",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Password changed for user “username”.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update cPanel account password",
        "tags": [
          "Accounts",
          "Passwords"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 passwd user='username' password='12345luggage'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/passwd?api.version=1&user=username&password=12345luggage"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/pause_transfer_session": {
      "get": {
        "description": "This function pauses an active transfer session.\n\n**Note:**\n\nFor more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://documentation.cpanel.net/display/DD/Guide+to+Transfer+and+Restore+API+Functions) documentation.",
        "operationId": "pause_transfer_session",
        "parameters": [
          {
            "description": "The transfer session's ID.",
            "in": "query",
            "name": "transfer_session_id",
            "required": true,
            "schema": {
              "example": "exampleservercopya20140206192428NtyW",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "pause_transfer_session",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Suspend active transfer session",
        "tags": [
          "Transfers",
          "cPanel Account Transfer"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 pause_transfer_session transfer_session_id='exampleservercopya20140206192428NtyW'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/pause_transfer_session?api.version=1&transfer_session_id=exampleservercopya20140206192428NtyW"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/personalization_get": {
      "post": {
        "description": "This function retrieves the data from an NVData file on disk. cPanel\nNVData is a per-account configuration storage mechanism that you can use to\nmaintain persistent cPanel & WHM settings across multiple sessions. This includes\ncustom settings for your own themes.\n\n**Note:**\n\nYou can **only** call this function as a JSON request. For more information about\nadditional output options, run the `whmapi1 --help` command.",
        "operationId": "personalization_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "names": {
                    "description": "A list of NVData keys stored on the server.\n\n**Note:**\n\nIf you did **not** set a value for the requested keys, the system returns\na null value.",
                    "example": [
                      "milk",
                      "coffee"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "maxLength": 2048,
                    "nullable": true,
                    "type": "array"
                  },
                  "store": {
                    "description": "The name in which to store the values.",
                    "example": "beverages",
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": {
                        "personalization": {
                          "coffee": {
                            "reason": "OK",
                            "success": 1,
                            "value": "hot"
                          },
                          "milk": {
                            "reason": "OK",
                            "success": 1,
                            "value": "cold"
                          }
                        }
                      },
                      "properties": {
                        "personalization": {
                          "description": "The NVData keys and values stored on the server.",
                          "properties": {
                            "additionalProperties": {
                              "description": "The retrieved NVData information stored on the server.\n\n**Note:**\n\nThis return's name is based on the keys provided in the `personalization`\nparameter with WHM API 1's `personalization_set` function.",
                              "properties": {
                                "reason": {
                                  "description": "An error message describing the failure if the `success` Boolean returns a `0` value.",
                                  "format": "string"
                                },
                                "success": {
                                  "description": "Whether the function successfully retrieved the value from\nthe server.\n\n* `1` — Successful.\n* `0` — Unsuccessful.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "value": {
                                  "description": "The value stored in the field.\n\n* null — The pair is **not** available in the store.",
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "personalization_get",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return data from NVData file",
        "tags": [
          "Server Administration",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "echo '{\"names\":[\"milk\",\"coffee\"],\"store\":\"beverages\"}' | whmapi1 --input=json --output=json personalization_get"
          },
          {
            "label": "HTTP Request (Wire Format)",
            "lang": "HTTP",
            "source": "POST /cpsess##########/json-api/personalization_get HTTP/1.1\nHost: example.com:2083\nCookie: ###################################\nContent-Type: application/json\nContent-Length: 65\n\n{\"api.version\":\"1\",\"names\":[\"milk\",\"coffee\"],\"store\":\"beverages\"}"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "74"
      }
    },
    "/personalization_set": {
      "post": {
        "description": "This function is used to save personalization data for a WHM user to a\ndatastore on disk.\n\nWe call this system cPanel NVData. \n\ncPanel NVData is a per-login configuration storage mechanism that you can use to\nmaintain persistent user interface settings across multiple sessions.\n\nThis includes custom settings for your own themes and plugins.\n\nThis function is used to save personalzation data for WHM users **only**. If you want to save personalization data for cPanel users, use the\nUAPI function `personalization_set`.",
        "operationId": "personalization_set",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "description": "Provide the username in the property name and the datastore name is the value.",
                  "maxLength": 128,
                  "type": "string"
                },
                "example": {
                  "api.version": 1,
                  "personalization": {
                    "coffee": "hot",
                    "milk": "cold"
                  },
                  "root": "beverages"
                },
                "properties": {
                  "api.version": {
                    "description": "The WHM API version number",
                    "enum": [
                      1
                    ],
                    "type": "integer"
                  },
                  "personalization": {
                    "description": "An object you want to store.",
                    "type": "object"
                  }
                },
                "required": [
                  "api.version",
                  "personalization"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "personalization": {
                          "additionalProperties": {
                            "description": "The name for this property is one of the properties that you provide in the personalization parameter.",
                            "properties": {
                              "reason": {
                                "description": "The message that describes the failure if the `success` property returns `0`.",
                                "example": "OK",
                                "type": "string"
                              },
                              "success": {
                                "description": "Whether the function successfully saved the value on the server.\n* `1` - Successful.\n* `0` - Unsuccessful.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "value": {
                                "description": "The value stored in the field or `null` if the property is not available in the datastore.",
                                "example": "hot",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "description": "The saved personalization information on the server.",
                          "example": {
                            "coffee": {
                              "reason": "OK",
                              "success": 1,
                              "value": "hot"
                            },
                            "milk": {
                              "reason": "OK",
                              "success": 1,
                              "value": "cold"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "personalization_set",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Save data to NVData file",
        "tags": [
          "Server Administration",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "echo '{\"api.version\":\"1\",\"personalization\":{\"coffee\":\"hot\",\"milk\":\"cold\"},\"root\":\"beverages\"}' | whmapi1 --input=json --output=json personalization_set"
          },
          {
            "label": "HTTP Request (Wire Format)",
            "lang": "HTTP",
            "source": "POST /cpsess##########/json-api/personalization_set HTTP/1.1\nHost: example.com:2083\nCookie: ###################################\nContent-Type: application/json\nContent-Length: 87\n\n{\"api.version\":\"1\",\"personalization\":{\"coffee\":\"hot\",\"milk\":\"cold\"},\"root\":\"beverages\"}"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "74"
      }
    },
    "/php_fpm_config_get": {
      "post": {
        "description": "This function retrieves the PHP INI directives and pool options for a system's or domain's PHP-FPM configuration.\n\n **Important:**\n\n   When you disable the [WebServer role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.\n\n **Warning:**\n\n   We **strongly** recommend that you only activate Apache PHP-FPM if your server has at least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM on a server with less than the required RAM, your server may experience severe performance issues.",
        "operationId": "php_fpm_config_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "domain": {
                    "default": "",
                    "description": "A blank value or domain name whose PHP-FPM configuration you wish to retrieve.\n\n* A valid domain that resides on the local server — Retrieves the domain's PHP-FPM configuration information.\n* A blank value — Retrieves the system's PHP-FPM information.",
                    "example": "example.com",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "config": {
                          "description": "An array of objects that contains the PHP-FPM configuration values.",
                          "example": [
                            {
                              "base_flag_name": "short_open_tag",
                              "trinary_admin_value": 1,
                              "value": "on"
                            },
                            {
                              "base_flag_name": "log_errors",
                              "trinary_admin_value": 1,
                              "value": "on"
                            },
                            {
                              "base_flag_name": "pm_process_idle_timeout",
                              "trinary_admin_value": 0,
                              "value": "10"
                            },
                            {
                              "base_flag_name": "error_reporting",
                              "trinary_admin_value": 2,
                              "value": "E_ALL & ~E_NOTICE"
                            },
                            {
                              "base_flag_name": "disable_functions",
                              "trinary_admin_value": 1,
                              "value": "exec,passthru,shell_exec,system"
                            },
                            {
                              "base_flag_name": "error_log",
                              "trinary_admin_value": 1,
                              "value": "[% homedir %]/logs/[% scrubbed_domain %].php.error.log"
                            },
                            {
                              "base_flag_name": "pm_max_children",
                              "trinary_admin_value": 0,
                              "value": "5"
                            },
                            {
                              "base_flag_name": "pm_max_requests",
                              "trinary_admin_value": 0,
                              "value": "20"
                            },
                            {
                              "base_flag_name": "allow_url_fopen",
                              "trinary_admin_value": 1,
                              "value": "on"
                            },
                            {
                              "base_flag_name": "doc_root",
                              "trinary_admin_value": 1,
                              "value": "[% documentroot %]"
                            }
                          ],
                          "items": {
                            "properties": {
                              "base_flag_name": {
                                "description": "PHP INI directive or PHP-FPM pool option name.\n\n**PHP INI directives**\n\n* `allow_url_fopen` - Treat URLs as files.\n* `disable_functions` - Lists the functions that the system will disable.\n* `doc_root` - The PHP pages' document root.\n* `error_log` - The error log file.\n* `error_reporting` - The errors that the system reports on.\n* `log_errors` - Whether the system will log errors.\n* `short_open_tag` - Whether the system recognizes code between the <? and ?> tags as a PHP source. Pool options- pm_max_children  The maximum number of process pools that the PHP-FPM Master Process will generate to handle requests.\n\n**Pool options**\n\n* `pm_max_children` — The maximum number of process pools that the PHP-FPM Master Process will generate to handle requests.\n* `pm_max_requests` - The maximum number of requests that the process pools can receive.\n* `pm_process_idle_timeout` - The amount of time, in seconds, that a pool process will wait for a request.",
                                "example": "pm_max_children",
                                "type": "string"
                              },
                              "trinary_admin_value": {
                                "description": "Whether the PHP value is a PHP INI directive value (`php_value`), a PHP INI ADMIN value (`php_admin_value`), or a PHP-FPM pool option (`pm_*`).\n\n* `0` - A PHP-FPM-specific value (pool options).\n* `1` - A PHP INI ADMIN directive. A cPanel account user **cannot** override this directive.\n* `2` - A PHP INI directive. A cPanel account user can override this directive.",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "value": {
                                "description": "An argument value for `base_flag_name`.",
                                "example": "5",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_fpm_config_get",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return PHP-FPM directives and pool options",
        "tags": [
          "PHP",
          "PHP-FPM"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "echo '{\"domain\":\"example.com\"}' | whmapi1 --input=json --output=json php_fpm_config_get"
          },
          {
            "label": "HTTP Request (Wire Format)",
            "lang": "HTTP",
            "source": "POST /cpsess##########/json-api/php_fpm_config_get HTTP/1.1\nHost: example.com:2083\nCookie: ###################################\nContent-Type: application/json\nContent-Length: 42\n\n{\"api.version\":\"1\",\"domain\":\"example.com\"}"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/php_fpm_config_set": {
      "post": {
        "description": "This function configures the PHP INI directives and pool options\nfor a system's or domain's PHP-FPM configuration.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.\n\n**Warning:**\n\nWe **strongly** recommend that you only activate Apache PHP-FPM if your server has at least 2 GB of RAM available, or\nat least 30 MB of RAM per domain.  If you enable PHP-FPM on a server with less than the required RAM, your server may\nexperience severe performance issues.",
        "operationId": "php_fpm_config_set",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "config": [
                    {
                      "base_flag_name": "error_reporting",
                      "trinary_admin_value": 1,
                      "value": "E_ALL & ~E_NOTICE"
                    },
                    {
                      "base_flag_name": "pm_max_children",
                      "trinary_admin_value": 0,
                      "value": "10"
                    }
                  ]
                },
                "properties": {
                  "config": {
                    "description": "An array of objects containing the PHP-FPM configuration values to validate or update.",
                    "items": {
                      "properties": {
                        "base_flag_name": {
                          "description": "A PHP INI directive or PHP-FPM pool option name.\n\n**PHP INI directives**\n\n* `allow_url_fopen` - The PHP configuration treats URLs as files.\n* `disable_functions` - Lists the functions that the system will disable.\n* `doc_root` - The PHP pages' document root.\n* `error_log` - The error log file.\n* `error_reporting` - The errors that the system reports on.\n* `log_errors` - Whether the system will log errors.\n* `short_open_tag` - Whether the system recognizes code between the <? and ?> tags as a PHP source.\n\n**Pool options**\n\n* `pm_max_children` - The maximum number of process pools that the PHP-FPM Master Process will generate to handle requests.\n* `pm_max_requests` - The maximum number of requests that the process pools can receive.\n* `pm_process_idle_timeout` - The amount of time, in seconds, that a pool process will wait for a request.",
                          "type": "string"
                        },
                        "trinary_admin_value": {
                          "description": "Whether the PHP value is a PHP INI directive value (`php_value`), a PHP INI ADMIN value (`php_admin_value`), or a PHP-FPM pool option (`pm_*`).\n\n* `0` - A PHP-FPM-specific value (pool options).\n* `1` - A PHP INI ADMIN directive. A cPanel account user **cannot** override this directive.\n* `2` - A PHP INI directive. A cPanel account user can override this directive.",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "value": {
                          "description": "An argument value for `base_flag_name` parameter.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "base_flag_name",
                        "trinary_admin_value",
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "domain": {
                    "default": "",
                    "description": "A blank value or domain name whose PHP-FPM configuration you wish\nto set.",
                    "type": "string"
                  },
                  "validate_only": {
                    "default": false,
                    "description": "Whether the function request is for validation or to update the settings.\n* `true` - Only validate the configuration.\n* `false` - Validate and update the configuration.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "config"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_fpm_config_set",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update PHP-FPM directives and pool options",
        "tags": [
          "PHP",
          "PHP-FPM"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "echo '{\"config\":[{\"base_flag_name\":\"error_reporting\",\"trinary_admin_value\":\"1\",\"value\":\"E_ALL & ~E_NOTICE\"},{\"base_flag_name\":\"pm_max_children\",\"trinary_admin_value\":\"0\",\"value\":\"10\"}]}' | whmapi1 --input=json --output=json php_fpm_config_set"
          },
          {
            "label": "HTTP Request (Wire Format)",
            "lang": "HTTP",
            "source": "POST /cpsess##########/json-api/php_fpm_config_set HTTP/1.1\nHost: example.com:2083\nCookie: ###################################\nContent-Type: application/json\nContent-Length: 197\n\n{\"api.version\":\"1\",\"config\":[{\"base_flag_name\":\"error_reporting\",\"trinary_admin_value\":\"1\",\"value\":\"E_ALL & ~E_NOTICE\"},{\"base_flag_name\":\"pm_max_children\",\"trinary_admin_value\":\"0\",\"value\":\"10\"}]}"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/php_get_default_accounts_to_fpm": {
      "get": {
        "description": "This function determines whether the system enables PHP-FPM for new domains and accounts.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://go.cpanel.net/serverroles),\nthe system **disables** this function.\n\n**Warning:**\n\nWe **strongly** recommend that you only activate Apache PHP-FPM if your server has at\nleast 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM\non a server with less than the required RAM, your server may experience severe performance\nissues.",
        "operationId": "php_get_default_accounts_to_fpm",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "default_accounts_to_fpm": {
                          "description": "Whether PHP-FPM is enabled for a server's new accounts and domains.\n* `1` — PHP-FPM enabled.\n* `0` — PHP-FPM disabled.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_get_default_accounts_to_fpm",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return PHP-FPM status on new accounts",
        "tags": [
          "PHP",
          "PHP-FPM"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_get_default_accounts_to_fpm"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_get_default_accounts_to_fpm?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "66"
      }
    },
    "/php_get_handlers": {
      "get": {
        "description": "This function returns the PHP handlers on the system.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "php_get_handlers",
        "parameters": [
          {
            "description": "An installed PHP version.\n\n* `ea-php54`\n* `ea-php55`\n* `ea-php56`\n* `ea-php70`\n* `ea-php71`\n* `ea-php72`\n* `inherit`\n* Any custom PHP package name.\n\n**Important:**\n\nWe deprecated PHP 5.6 and PHP 7.0 and will remove them in a future version.\nFor more information, read our\n[cPanel Deprecation Plan](https://docs.cpanel.net/knowledge-base/cpanel-product/cpanel-deprecation-plan/)\ndocumentation.",
            "in": "query",
            "name": "version",
            "required": false,
            "schema": {
              "example": "ea-php72",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "version_handlers": {
                          "description": "An array of objects containing the available PHP handlers.",
                          "items": {
                            "properties": {
                              "available_handlers": {
                                "description": "The installed PHP handlers.\n\n* `suphp`\n* `cgi`\n* `dso`\n* `none`",
                                "example": [
                                  "cgi",
                                  "none",
                                  "suphp"
                                ],
                                "items": {
                                  "enum": [
                                    "suphp",
                                    "cgi",
                                    "dso",
                                    "none"
                                  ],
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "current_handler": {
                                "description": "The PHP version's handler.\n\n* `suphp`\n* `cgi`\n* `dso`\n* `none`",
                                "enum": [
                                  "suphp",
                                  "cgi",
                                  "dso",
                                  "none"
                                ],
                                "example": "suphp",
                                "type": "string"
                              },
                              "version": {
                                "description": "An installed PHP version.\n\n* `ea-php54`\n* `ea-php55`\n* `ea-php56`\n* `ea-php70`\n* `ea-php71`\n* `ea-php72`\n* `inherit`\n* Any custom PHP package name.\n\n**Important:**\n\nWe deprecated PHP 5.6 and PHP 7.0 and will remove them in a future version.\nFor more information, read our\n[cPanel Deprecation Plan](https://docs.cpanel.net/knowledge-base/cpanel-product/cpanel-deprecation-plan/)\ndocumentation.",
                                "example": "ea-php72",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_get_handlers",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return PHP handlers",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_get_handlers"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_get_handlers?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/php_get_impacted_domains": {
      "get": {
        "description": "This function lists domains that obtain their PHP version from a specified PHP configuration.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.",
        "operationId": "php_get_impacted_domains",
        "parameters": [
          {
            "description": "A domain on the system.\n\n**Note:**\n\n* You **must** pass either the `system_default` or `domain` parameters, or both.\n* You can pass this parameter multiple times.\n* You **cannot** pass the name of a parked domain.",
            "examples": {
              "multiple": {
                "summary": "Pass multiple domains.",
                "value": "domain=example.com domain=example2.com domain=example3.com"
              },
              "single": {
                "summary": "Pass a single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to return domains that inherit the system's default PHP version.\n\n* `1` — Return domains that inherit the system's default PHP version.\n* `0` — Do **not** return domains that inherit the system's default PHP version.\n\n**Note:**\n\n* You **must** pass either the `system_default` or `domain` parameters, or both.\n* If you pass this parameter with a false value and do **not** also pass the `domain`\nparameter, the function returns an error.",
            "in": "query",
            "name": "system_default",
            "required": true,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "domains": {
                          "description": "A list of domains or subdomains that obtain their PHP version from\nthe PHP configuration.\n\n**Note:**\n\nThis function does **not** return parked domains.",
                          "example": [
                            "example.com",
                            "subdomain.example.com",
                            "example2.com"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_get_impacted_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return PHP preconfigured domains",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_get_impacted_domains system_default='1' domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_get_impacted_domains?api.version=1&system_default=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/php_get_installed_versions": {
      "get": {
        "description": "This function returns the installed PHP versions on a server.\n\n**Note:**\n\n  This document **only** applies to systems that run EasyApache 4.\n\n**Important:**\n\n  When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles) , the system **disables** this function.",
        "operationId": "php_get_installed_versions",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "versions": {
                          "description": "The installed PHP versions.\n\n- ea-php71\n- ea-php72\n- ea-php73\n- ea-php74\n- Any custom PHP package name.",
                          "items": {
                            "example": "ea-php74",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_get_installed_versions",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return installed PHP versions",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_get_installed_versions"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_get_installed_versions?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/php_get_old_fpm_flag": {
      "get": {
        "description": "This function determines whether your system runs with a preconfigured PHP-FPM configuration.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "php_get_old_fpm_flag",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "old_fpm_flag": {
                          "description": "The status of the preconfigured FPM.\n* `0` — No preconfigured FPM exists.\n* `1` — Preconfigured FPM exists.\n* `2` — Preconfiguration dialogue dismissed.",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "example": 2,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_get_old_fpm_flag",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return PHP-FPM preconfigured status",
        "tags": [
          "PHP",
          "PHP-FPM"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_get_old_fpm_flag"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_get_old_fpm_flag?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60"
      }
    },
    "/php_get_system_default_version": {
      "get": {
        "description": "This function returns the system default PHP version.\n\n**Note:**\n\nThis document **only** applies to systems that run EasyApache 4.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "php_get_system_default_version",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "version": {
                          "description": "The server's default PHP version.\n* `ea-php##`, where `##` represents the major and minor versions of PHP (for example, `ea-php72` represents PHP 7.2).\n* `inherit`\n* Any custom PHP package name.",
                          "example": "ea-php56",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_get_system_default_version",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return system default PHP version",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_get_system_default_version"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_get_system_default_version?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/php_get_vhost_versions": {
      "get": {
        "description": "This function returns the PHP version of every virtual host that a reseller controls.\n\n**Note:**\n\n  This document **only** applies to systems that run EasyApache 4.\n\n**Important:**\n\n  When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "php_get_vhost_versions",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "versions": {
                          "description": "An array of objects containing the virtual host's suspendend status, versions, virtual hosts, and accounts.",
                          "items": {
                            "properties": {
                              "account": {
                                "description": "The account's name.",
                                "example": "rm3",
                                "format": "username",
                                "type": "string"
                              },
                              "account_owner": {
                                "description": "The account owner's name.",
                                "example": "root",
                                "format": "username",
                                "type": "string"
                              },
                              "documentroot": {
                                "description": "The virtual host's document root.",
                                "example": "/home/example/public_html",
                                "type": "string"
                              },
                              "homedir": {
                                "description": "The virtual host's home directory.",
                                "example": "/home/rm3",
                                "type": "string"
                              },
                              "is_suspended": {
                                "description": "The virtual host's suspension status.\n\n**Note:**\n\n* `1` - Suspended\n* `0` - **Not** suspended.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "main_domain": {
                                "description": "Whether the virtual host is the primary domain.\n\n**Note:**\n\n* `1` - The primary domain\n* `0` - **Not** the primary domain",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "php_fpm": {
                                "description": "Whether PHP-FPM is enabled.\n\n* `1` - PHP-FPM enabled.\n* `0` - PHP-FPM **not** enabled.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "php_fpm_pool_parms": {
                                "description": "Object containing the domain's PHP-FPM parameters.",
                                "properties": {
                                  "pm_max_children": {
                                    "description": "The maximum number of child pages per pool.",
                                    "example": 5,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "pm_max_requests": {
                                    "description": "The number of possible requests the system allows.",
                                    "example": 20,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "pm_process_idle_timeout": {
                                    "description": "How long the system remains idle before it kills the FPM child process.",
                                    "example": 10,
                                    "minimum": 1,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "phpversion_source": {
                                "description": "How the virtual host determines its PHP version.",
                                "items": {
                                  "properties": {
                                    "domain": {
                                      "description": "The domain the virtual host inherits its PHP version from.",
                                      "example": "example.com",
                                      "format": "domain",
                                      "type": "string"
                                    },
                                    "system_default": {
                                      "description": "Whether the virtual host uses the system's default PHP version.\n* `1` - Uses the system default PHP version.\n\n**Note:**\n\n  The function **only** returns this value if true.",
                                      "enum": [
                                        1
                                      ],
                                      "example": 1,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "properties": {
                                  "system_default": {}
                                },
                                "type": "array"
                              },
                              "version": {
                                "description": "The virtual host's PHP version.\n\n* `ea-php72`\n* `ea-php73`\n* `ea-php74`\n* `inherit`\n* Any custom PHP package name.",
                                "example": "ea-php72",
                                "type": "string"
                              },
                              "vhost": {
                                "description": "The virtual host's name.",
                                "example": "otherchars.rm3.tld",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_get_vhost_versions",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return PHP version of all virtual hosts",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_get_vhost_versions"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_get_vhost_versions?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60"
      }
    },
    "/php_get_vhosts_by_version": {
      "get": {
        "description": "This function lists the virtual hosts that use a specified version of PHP.\n\n**Note:**\n\nThis document only applies to systems that run EasyApache 4.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "php_get_vhosts_by_version",
        "parameters": [
          {
            "description": "The name of an installed PHP package.\n- `ea-php##`, where `##` represents the major and minor versions of PHP (for example, `ea-php72` represents PHP 7.2).\n- `inherit`\n- Any custom PHP package name.",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "example": "ea-php56",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "vhosts": {
                          "description": "An array of the virtual hosts that use the specified PHP version.",
                          "items": {
                            "example": "example.com",
                            "format": "domain",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_get_vhosts_by_version",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return virtual hosts per PHP version",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_get_vhosts_by_version version='ea-php56'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_get_vhosts_by_version?api.version=1&version=ea-php56"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/php_ini_get_content": {
      "get": {
        "description": "This function returns the contents of a PHP version's `php.ini` file.\n\n**Note:**\n\n  This document **only** applies to systems that run EasyApache 4.\n\n**Important:**\n\n  When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "php_ini_get_content",
        "parameters": [
          {
            "description": "The name of an installed PHP version's package.\n   - `ea-php##`, where `##` represents the major and minor versions of PHP (for example, `ea-php74` represents PHP 7.4).\n   - `inherit`\n   - Any custom PHP package name. ",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "example": "ea-php74",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "content": {
                          "description": "The contents of the requested PHP version's `php.ini` file.",
                          "example": "display_errors; Default Value: On; Development Value: On; Production Value: Off;",
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_ini_get_content",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return PHP version's php.ini file",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_ini_get_content version='ea-php74'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_ini_get_content?api.version=1&version=ea-php74"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/php_ini_get_directives": {
      "get": {
        "description": "This function returns the directives in the selected PHP version's php.ini file. WHM's [*MultiPHP INI Editor*](https://go.cpanel.net/WHMMultiPHPINI) interface (*Home >> Software >> MultiPHP INI Editor*) lists these directives in the *Basic Mode* section.\n\n**Important:**\n\n  When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "php_ini_get_directives",
        "parameters": [
          {
            "description": "The name of an installed version of PHP.\n\n* `ea-php72`\n* `ea-php73`\n* `ea-php74`\n* Any custom PHP package name",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "example": "ea-php74",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "directives": {
                          "description": "An array of directives that are available in the `php.ini` file of the selected version of PHP.",
                          "items": {
                            "properties": {
                              "default_value": {
                                "description": "The directive's default value.",
                                "example": "1",
                                "type": "string"
                              },
                              "info": {
                                "description": "The purpose of the directive.",
                                "example": "This option enables the URL-aware fopen wrappers that enable accessing URL object like files. Default wrappers are provided for the access of remote files using the ftp or http protocol, some extensions like zlib may register additional wrappers.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The directive's name.",
                                "example": "allow_url_fopen",
                                "type": "string"
                              },
                              "php_ini_mode": {
                                "description": "The directive's [PHP_INI mode](http://php.net/manual/en/configuration.changes.modes.php).\n\n* `PHP_INI_SYSTEM`\n* `PHP_INI_PERDIR`\n* `PHP_INI_ALL`\n* `PHPINI_ONLY`",
                                "example": "PHP_INI_SYSTEM",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of value that the directive uses.\n* `string`\n* `boolean`\n* `integer`\n* `float`",
                                "enum": [
                                  "string",
                                  "boolean",
                                  "integer",
                                  "float"
                                ],
                                "example": "boolean",
                                "type": "string"
                              },
                              "value": {
                                "description": "The directive's current value.",
                                "example": "On",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_ini_get_directives",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return PHP version's directives",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_ini_get_directives version='ea-php74'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_ini_get_directives?api.version=1&version=ea-php74"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/php_ini_set_content": {
      "post": {
        "description": "This function changes the contents of a PHP version's php.ini file.\n\n**Notes:**\n\n - This document **only** applies to systems that run EasyApache 4.\n - Due to the limited field length of HTTP GET method calls, we **strongly** recommend that you use the HTTP POST method.\n\n**Important:**\n  When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "php_ini_set_content",
        "parameters": [
          {
            "description": "The contents of the `php.ini` file that you wish to change.",
            "in": "query",
            "name": "content",
            "required": true,
            "schema": {
              "example": "[PHP]\n; About php.ini\n; php.ini is responsible for configuring many of the aspects of PHP's behavior.\npcre.backtrack_limit=100000\n",
              "type": "string"
            }
          },
          {
            "description": "The version of PHP for which you wish to change the `php.ini` file.\n\n* `ea-php72`\n* `ea-php73`\n* `ea-php74`\n* `Any custom PHP package name`",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "example": "ea-php74",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_ini_set_content",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update PHP version's php.ini file",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_ini_set_content content=$'[PHP]\n; About php.ini\n; php.ini is responsible for configuring many of the aspects of PHP\\'s behavior.\npcre.backtrack_limit=100000\n' version='ea-php74'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_ini_set_content?api.version=1&content=%5bPHP%5d%0a%3b%20About%20php.ini%0a%3b%20php.ini%20is%20responsible%20for%20configuring%20many%20of%20the%20aspects%20of%20PHP%27s%20behavior.%0apcre.backtrack_limit%3d100000%0a&version=ea-php74"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/php_ini_set_directives": {
      "get": {
        "description": "This function sets the value of a PHP version's directives.\n\n**Note:**\n\n  This document only applies to systems that run EasyApache 4.\n\n**Important:**\n\n  When you disable the [Web Server](https://go.cpanel.net/serverroles) role , the system **disables** this function.",
        "operationId": "php_ini_set_directives",
        "parameters": [
          {
            "description": "The name of a PHP directive and its value.\n\n**Note:**\n\n To change the directive's value for multiple PHP directives, duplicate or increment the parameter name. For example, to change three directives, use the directive parameter multiple times or use the `directive-1`, `directive-2` , and `directive-3` parameters.",
            "examples": {
              "multiple": {
                "summary": "Set the values for multiple directives.",
                "value": "directive-1=allow_url_fopen:0&directive-2=max_input_vars=1000"
              },
              "single": {
                "summary": "Set the value for a single directive.",
                "value": "allow_url_fopen:0"
              }
            },
            "in": "query",
            "name": "directive",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PHP version on the system.\n\n**Note**\n\n* `ea-php56`\n* `ea-php70`\n* `ea-php71`\n* `ea-php72`\n* Any custom PHP package name.",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "example": "ea-php72",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": {},
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_ini_set_directives",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update PHP version's directives",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_ini_set_directives directive='allow_url_fopen:0' version='ea-php72'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_ini_set_directives?api.version=1&directive=allow_url_fopen%3a0&version=ea-php72"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/php_set_default_accounts_to_fpm": {
      "get": {
        "description": "This function determines whether to enable PHP-FPM on new accounts and domains on a server.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.\n\n**Warning:**\n\nWe **strongly** recommend that you only activate Apache PHP-FPM if your server has at least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM on a server with less than the required RAM, your server may experience severe performance issues.",
        "operationId": "php_set_default_accounts_to_fpm",
        "parameters": [
          {
            "description": "Whether to enable PHP-FPM on all new accounts and domains on\na server.\n* `1` — Enable PHP-FPM.\n* `0` — Disable PHP-FPM.",
            "in": "query",
            "name": "default_accounts_to_fpm",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {},
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_set_default_accounts_to_fpm",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable PHP-FPM on new cPanel accounts and domains",
        "tags": [
          "PHP",
          "PHP-FPM"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_set_default_accounts_to_fpm default_accounts_to_fpm='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_set_default_accounts_to_fpm?api.version=1&default_accounts_to_fpm=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "66"
      }
    },
    "/php_set_handler": {
      "get": {
        "description": "This function sets a PHP version's handler.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "php_set_handler",
        "parameters": [
          {
            "description": "An installed PHP handler.\n* `cgi`\n* `suphp`\n* `dso`\n* `none`",
            "in": "query",
            "name": "handler",
            "required": true,
            "schema": {
              "enum": [
                "cgi",
                "suphp",
                "dso",
                "none"
              ],
              "example": "suphp",
              "type": "string"
            }
          },
          {
            "description": "An installed PHP version.\n* `ea-php54`\n* `ea-php55`\n* `ea-php56`\n* `ea-php70`\n* `ea-php71`\n* `ea-php72`\n* `inherit`\n* Any custom PHP package name.",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "example": "ea-php70",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_set_handler",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update PHP version's handler",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_set_handler version='ea-php70' handler='suphp'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_set_handler?api.version=1&version=ea-php70&handler=suphp"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/php_set_old_fpm_flag": {
      "get": {
        "description": "This function creates the `/etc/cpanel/ea4/old_fpm_flag` touch file.\n\n**Note:**\n\nIf this touch file exists, the system will **not** display a message that indicates whether your system runs on an outdated PHP-FPM configuration. If you wish to see the message again, delete this touch file.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "php_set_old_fpm_flag",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "success": {
                          "description": "Whether the operation succeeds.\n* `1` — Success.\n* `0` — Failure.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_set_old_fpm_flag",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable PHP-FPM preconfigured status",
        "tags": [
          "PHP",
          "PHP-FPM"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_set_old_fpm_flag"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_set_old_fpm_flag?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60"
      }
    },
    "/php_set_session_save_path": {
      "get": {
        "description": "This function sets the location of PHP's default session save path.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "php_set_session_save_path",
        "parameters": [
          {
            "description": "Whether to overwrite the existing session save path in the `php.ini`\nfile.\n* `1` — Overwrite the existing value in the `php.ini` file.\n* `0` — Do **not** overwrite the existing value in the `php.ini` file.",
            "in": "query",
            "name": "overwrite",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The directory in which to save session information.\n\n**Warning:**\n\nFor security reasons, do **not** set this value to `/tmp` or another insecure location.",
            "in": "query",
            "name": "path",
            "required": false,
            "schema": {
              "default": "/var/cpanel/php/sessions",
              "example": "/var/cpanel/php/sessions",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_set_session_save_path",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update PHP default save path",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_set_session_save_path"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_set_session_save_path?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "66"
      }
    },
    "/php_set_system_default_version": {
      "get": {
        "description": "The version of PHP that you wish to set as the system's default.\n\n* `ea-php54`\n* `ea-php55`\n* `ea-php56`\n* `ea-php70`\n* `ea-php71`\n* `ea-php72`\n* `ea-php74`\n* `inherit`\n* Any custom PHP package name.\n\n**Important:**\n\n* We deprecated PHP 5.6 and PHP 7.0 in cPanel & WHM version 84. We will remove them in a future version. For more information, read our [cPanel Deprecation Plan](https://docs.cpanel.net/knowledge-base/cpanel-product/cpanel-deprecation-plan/) documentation.\n\n* When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.\n\n**Note:**\n\nThis document **only** applies to systems that run EasyApache 4.",
        "operationId": "php_set_system_default_version",
        "parameters": [
          {
            "description": "The version of PHP that you wish to set as the system's default.",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "example": "ea-php74",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_set_system_default_version",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update default PHP version",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_set_system_default_version version='ea-php74'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_set_system_default_version?api.version=1&version=ea-php74"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/php_set_vhost_versions": {
      "get": {
        "description": "This function allows WHM's\n[*MultiPHP Manager*](https://docs.cpanel.net/whm/software/multiphp-manager-for-whm/)\ninterface (*WHM >> Home >> Software >> MultiPHP Manager*) to change the values of a domain.\n\n**Important:**\n\nWhen you disable the\n[Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),\nthe system **disables** this function.\n\n**Warning:**\n\nWe **strongly** recommend that you only activate Apache PHP-FPM if your server has at\nleast 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM\non a server with **less** than the required RAM, your server may experience severe\nperformance issues.",
        "operationId": "php_set_vhost_versions",
        "parameters": [
          {
            "description": "The virtual host's (vhost) PHP version.\n\n**Note:**\n\nThis parameter also accepts any custom PHP package names.",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "enum": [
                "ea-php54",
                "ea-php55",
                "ea-php56",
                "ea-php70",
                "ea-php71",
                "ea-php72",
                "inherit"
              ],
              "example": "ea-php70",
              "type": "string"
            }
          },
          {
            "description": "The virtual host's name.\n\n**Note:**\n\nTo set multiple vhosts, increment the parameter name. For example, `vhost-1`, `vhost-2`,\nand `vhost-3`.",
            "examples": {
              "multiple": {
                "summary": "Set multiple vhosts.",
                "value": "vhost-1=otherchars.rm3.tld vhost-2=morechars.rm3.tld vhost-3=lotschars.rm3.tld"
              },
              "single": {
                "summary": "Set a single vhost.",
                "value": "otherchars.rm3.tld"
              }
            },
            "in": "query",
            "name": "vhost",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether PHP-FPM is enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
            "in": "query",
            "name": "php_fpm",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "pm_max_children": 5,
                    "pm_max_requests": 20,
                    "pm_process_idle_timeout": 10
                  },
                  "format": "json",
                  "properties": {
                    "pm_max_children": {
                      "default": 5,
                      "description": "The maximum number of child pages per pool.",
                      "example": 5,
                      "type": "integer"
                    },
                    "pm_max_requests": {
                      "default": 20,
                      "description": "The maximum number of requests per pool.",
                      "example": 20,
                      "type": "integer"
                    },
                    "pm_process_idle_timeout": {
                      "default": 10,
                      "description": "A specified time of idleness before the system kills an FPM child page.",
                      "example": 10,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "pm_max_children",
                    "pm_process_idle_timeout",
                    "pm_max_requests"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A JSON-encoded string containing a hash of values.",
            "in": "query",
            "name": "php_fpm_pool_parms",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "php_set_vhost_versions",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update domain's PHP values",
        "tags": [
          "PHP"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 php_set_vhost_versions version='ea-php70' vhost='otherchars.rm3.tld'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/php_set_vhost_versions?api.version=1&version=ea-php70&vhost=otherchars.rm3.tld"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60"
      }
    },
    "/purchase_a_license": {
      "get": {
        "description": "This function returns the checkout URL to use for a cPanel Store or cPanel Market provider purchase.",
        "operationId": "purchase_a_license",
        "parameters": [
          {
            "description": "The login token to access the cPanel Store.",
            "in": "query",
            "name": "login_token",
            "required": true,
            "schema": {
              "example": "1a676e6f-99fc-11e6-9ab6-e60a769b73bc",
              "type": "string"
            }
          },
          {
            "description": "The cPanel Store or cPanel Market provider's name.",
            "in": "query",
            "name": "provider",
            "required": true,
            "schema": {
              "example": "cPStore",
              "type": "string"
            }
          },
          {
            "description": "The location to which the cPanel Store or cPanel Market provider directs the user after the checkout process finishes.",
            "in": "query",
            "name": "url_after_checkout",
            "required": true,
            "schema": {
              "example": "http://hostname.example.com",
              "format": "url",
              "type": "string"
            }
          },
          {
            "description": "Whether the cPanel Store or cPanel Market provider should treat this request as an upgrade.\n* `1` — An upgrade.\n* `0` — **Not** an upgrade.",
            "in": "query",
            "name": "upgrade",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of checkout URLs. A valid checkout URL.",
                          "items": {
                            "example": "https://store.cpanel.net/checkout/ssl/1234567",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "purchase_a_license",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed .Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel Store or Market checkout URL",
        "tags": [
          "Server Administration",
          "License Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 purchase_a_license provider='cPStore' url_after_checkout='http://hostname.example.com' login_token='1a676e6f-99fc-11e6-9ab6-e60a769b73bc'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/purchase_a_license?api.version=1&provider=cPStore&url_after_checkout=http%3a%2f%2fhostname.example.com&login_token=1a676e6f-99fc-11e6-9ab6-e60a769b73bc"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/quota_enabled": {
      "get": {
        "description": "This function checks if quotas are enabled on at least one of a user's /home directory mounts.",
        "operationId": "quota_enabled",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "quota_enabled": {
                          "description": "Whether quotas are enabled.\n* 1 - Enabled.\n* 0 - Disabled.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "quota_enabled",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* 1 - Success\n* 0 - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate cPanel account quotas",
        "tags": [
          "Accounts",
          "Bandwidth and Disk Quotas"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 quota_enabled"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/quota_enabled?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/read_cpgreylist_deferred_entries": {
      "get": {
        "description": "This function lists Greylisting's deferred triplets.\nGreylisting identifies incoming email by triplets.\n\nA triplet is a collection of three pieces of data:\n* the IP address\n* the sender's address\n* the recipient's address",
        "operationId": "cPGreyList-read_cpgreylist_deferred_entries",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "greylist_deferred_entries": {
                          "description": "An object of deferred triplet data.",
                          "items": {
                            "properties": {
                              "accepted_count": {
                                "description": "The number of times that Greylisting accepted the triplet.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "block_exp_time": {
                                "description": "The date and time when Greylisting will no longer defer the triplet.",
                                "example": "2015-03-23T12:09:32.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "create_time": {
                                "description": "The date and time when Greylisting created the triplet.",
                                "example": "2015-03-23T11:59:32.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "deferred_count": {
                                "description": "The number of times Greylisting deferred the triplet.",
                                "example": 1,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "from_addr": {
                                "description": "The email address that the system identified as the triplet's sender.",
                                "example": "fromaddress1.com@example.com",
                                "format": "email",
                                "type": "string"
                              },
                              "id": {
                                "description": "The identification number that the system assigned to the triplet.",
                                "example": 45,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "must_retry_by": {
                                "description": "The date and time when Greylisting will no longer accept the resent triplet.",
                                "example": "2015-03-23T15:59:32.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "record_exp_time": {
                                "description": "The date and time when Greylisting will purge the triplet from the database.",
                                "example": "2015-03-26T11:59:32.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "sender_ip": {
                                "description": "The IP address that the system identified as the triplet's sender.",
                                "example": "97.215.255.29",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "to_addr": {
                                "description": "The email address that the system identified as the triplet's recipient.",
                                "example": "toaddress1.com@example.com",
                                "format": "email",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "limit": {
                          "description": "The number of triplets in the interface.",
                          "example": 20,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "offset": {
                          "description": "The number of triplets to skip from the beginning of the query in the interface.",
                          "example": 20,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "server_timezone": {
                          "description": "The standard letter code abbreviation for the time zone.",
                          "example": "CDT",
                          "type": "string"
                        },
                        "server_tzoffset": {
                          "description": "The time zone offset in minutes.",
                          "example": 60,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "total_rows": {
                          "description": "The total number of triplets in the database.",
                          "example": 3,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "read_cpgreylist_deferred_entries",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`.\nThis field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Greylisting deferred incoming email triplets",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 read_cpgreylist_deferred_entries"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/read_cpgreylist_deferred_entries?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/read_cpgreylist_trusted_hosts": {
      "get": {
        "description": "This function retrieves the entries on the Greylisting Trusted Hosts list.",
        "operationId": "read_cpgreylist_trusted_hosts",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "greylist_trusted_hosts": {
                          "description": "An array of objects that contain identification information for the trusted hosts.",
                          "items": {
                            "properties": {
                              "comment": {
                                "description": "The IP address' comment.",
                                "example": "Example",
                                "maximum": 255,
                                "type": "string"
                              },
                              "create_time": {
                                "description": "The date and time when the system added the IP address to the _Trusted Hosts_ list.",
                                "example": "2015-03-24T10:22:38.000Z",
                                "format": "ISO-8601 Date Time (Space Separated)",
                                "type": "string"
                              },
                              "host_ip": {
                                "description": "The IP address of the host that the system added to the _Trusted Hosts_ list.",
                                "example": "192.0.2.0",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "id": {
                                "description": "The identification number that the system assigned to the IP address.",
                                "example": 19,
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "read_cpgreylist_trusted_hosts",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Greylisting trusted hosts",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 read_cpgreylist_trusted_hosts"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/read_cpgreylist_trusted_hosts?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/read_cphulk_records": {
      "get": {
        "description": "This function displays a cPHulk list's records.",
        "operationId": "read_cphulk_records",
        "parameters": [
          {
            "description": "The cPHulk list's name.\n\n* `black`\n* `white`",
            "example": "white",
            "in": "query",
            "name": "list_name",
            "required": true,
            "schema": {
              "enum": [
                "black",
                "white"
              ],
              "example": "white",
              "type": "string"
            }
          },
          {
            "description": "Whether to skip checking if cPHulk runs on the server.\n\n**Note:**\n\n If cPHulk is disabled, the function returns the following message:\n`cPHulk is disabled on the server.`",
            "in": "query",
            "name": "skip_enabled_check",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ips_in_list": {
                          "additionalProperties": {
                            "description": "The IP address’s comment.\n\n**Note:**\n\nThe IP address is the return's name.",
                            "example": "A helpful comment about the IP address.",
                            "type": "string"
                          },
                          "description": "IP address information.",
                          "type": "object"
                        },
                        "list_name": {
                          "description": "The cPHulk list's name.\n* `black`\n* `white`",
                          "enum": [
                            "black",
                            "white"
                          ],
                          "example": "white",
                          "type": "string"
                        },
                        "requester_ip": {
                          "description": "The requester's IP address.",
                          "example": "10.1.4.228",
                          "format": "ipv4",
                          "type": "string"
                        },
                        "requester_ip_is_whitelisted": {
                          "description": "Whether the requester's IP address exists on cPHulk's whitelist.\n* `1` - The IP address exists on the whitelist.\n* `0` - The IP address does not exist on the white list.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "restart_ssh": {
                          "description": "Whether you must restart `sshd` in order to implement changes.\n\n* `1` — You **must** restart the `sshd` daemon.\n* `0` — The system will implement changes without a restart.\n\n**Note:**\n\nThis return **only** appears if `sshd`’s `UseDNS` setting is enabled. Because `UseDNS` and cPHulk are incompatible, the system disables `UseDNS` when you enable cPHulk.\n* `1` - You must restart `sshd`.\n* `0` - The system will implement changes without a restart.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "warning_ip": {
                          "description": "A localized warning message, if the requester's IP address does not exist on the whitelist.",
                          "example": "The IP address is not on the white list.",
                          "type": "string"
                        },
                        "warning_ssh": {
                          "description": "A message that explains why you must restart `sshd`.\n\n**Note:**\n\n This return **only** appears if the `restart_ssh` return's value is `1`.",
                          "example": "The system disabled the UseDNS setting for sshd in order to add IP addresses to the whitelist. You must restart sshd to implement the change.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "read_cphulk_records",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return login security list records",
        "tags": [
          "cPHulk",
          "Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 read_cphulk_records list_name='white'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/read_cphulk_records?api.version=1&list_name=white"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/reboot": {
      "get": {
        "description": "This function reboots the server.",
        "operationId": "reboot",
        "parameters": [
          {
            "description": "Whether to use a forceful reboot.\n* `1` - Use a forceful reboot.\n* `0` - Do **not** use a forceful reboot.\n\n**Warning:**\n\n A forceful reboot may result in data loss if active processes exist on the server.",
            "in": "query",
            "name": "force",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "reboot",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Restart server",
        "tags": [
          "Server Administration",
          "System Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 reboot"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/reboot?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/rebuild_mail_sni_config": {
      "get": {
        "description": "This function rebuilds the mail SNI configuration files.",
        "operationId": "rebuild_mail_sni_config",
        "parameters": [
          {
            "description": "Whether to reload the Dovecot service after the system rebuilds the configuration files.\n* `1` - Reload Dovecot.\n* `0` - Do **not** reload Dovecot.",
            "in": "query",
            "name": "reload_dovecot",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "configs_built": {
                          "description": "list of configuration files that this function rebuilt.\n\n**Note:**\n\n The function only returns this value if you call it as the root user.",
                          "items": {
                            "example": "/etc/dovecot/sni.conf",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "success": {
                          "description": "Whether the system rebuilt the configuration files.\n* `1` - The system rebuilt the configuration files.\n* `0` - The system did **not** rebuild the configuration files.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "rebuild_mail_sni_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The `reason` the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Rebuild mail SNI configuration files",
        "tags": [
          "Mail",
          "Mail Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 rebuild_mail_sni_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/rebuild_mail_sni_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/rebuilduserssldb": {
      "get": {
        "description": "This function rebuilds the database of SSL certificate users.",
        "operationId": "rebuilduserssldb",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "records": {
                          "description": "The cPanel accounts that the function rebuilt SSL certificate information for.",
                          "items": {
                            "example": "username",
                            "format": "username",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "rebuilduserssldb",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update SSL certificate users database",
        "tags": [
          "SSL",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 rebuilduserssldb"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/rebuilduserssldb?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/release_outgoing_email": {
      "get": {
        "description": "This function releases outgoing email in the email queue for a single cPanel account user.\n\n**Note:**\n\nIf mail for a cPanel user's account is suspended, the system will reject their email before the mail server puts it in queue.",
        "operationId": "release_outgoing_email",
        "parameters": [
          {
            "description": "The cPanel account.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "release_outgoing_email",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Release cPanel account queued outgoing emails",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 release_outgoing_email user='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/release_outgoing_email?api.version=1&user=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/remote_basic_credential_check": {
      "get": {
        "description": "This function checks the SSH credentials on the remote server.\n\n### Authentication\nThere are several methods that you can use to authenticate a transfer session with the remote server.\n\n#### PermitRootLogin=Yes\nThe simplest authentication method is to use the `root` user and password. To do this, the `sshd_config` file on the remote server **must** contain the following value: `PermitRootLogin=Yes`\n\nThe following table displays the correct parameters and values for this authentication method:\n\n| Parameter | Value |\n|-|-|\n| `user` | `root` |\n| `password` | `root`'s password. |\n\nYou can also use the SSH Public Key to authenticate the `root` user. If the SSH Public Key is encrypted, include the SSH Key's passphrase.\n\nThe following table displays the correct parameters and values for this authentication method:\n\n| Parameter | Value if the SSH Key is not encrypted | Value if the SSH Key is encrypted |\n|-|-|-|\n| `user` | `root` | `root` |\n| `sshkey_name` | `root`'s SSH key name. | `root`'s SSH key name. |\n| `sshkey_passphrase` | (none) | `root`'s SSH key passphrase. |\n\n#### PermitRootLogin=No\nMany server administrators do not permit direct root logins on their servers.\n* If the remote server contains `PermitRootLogin=No` in the `sshd_config `file, then you **must** use another user and their password on the remote server, and then escalate to `root`.\n* If the system administrator used WHM's [*Manage Wheel Group Users*](https://go.cpanel.net/whmdocsManageWheelGroupUsers) interface (*WHM >> Home >> Security Center >> Manage Wheel Group Users*) to grant the user `su` access, then you will need to specify `su` and the `root` password.\n* If the user has `sudo` access, you do **not** need the `root` password.\n\nThe following table displays the correct parameters and values for this authentication method:\n\n| Parameter | Value if the user has sudo access | Value if the user has su access |\n|-|-|-|\n| `user` | The user's username. | The user's username. |\n| `password` | The user's password. | The user's password. |\n| `root_escalation_method` | `sudo` | `su` |\n| `root_password` | (none) | `root`'s password. |\n\nYou can also use an SSH Public Key instead of a password to authenticate that user. If the SSH Public Key is encrypted, include the SSH Key's passphrase.\n\nThe following table displays the correct parameters and values for this authentication method:\n\n| Parameter | sudo | su |\n|-|-|-|\n| `user` | The user's username. | The user's username. |\n| `sshkey_name` | The user's SSH key name. | The user's SSH key name. |\n| `sshkey_passphrase` (If encrypted) | The user's SSH key passphrase. | The user's SSH key passphrase. |\n| `root_escalation_method` | `sudo` | `su` |\n| `root_password` | (none) | `root`'s password. |",
        "operationId": "remote_basic_credential_check",
        "parameters": [
          {
            "description": "The remote server's hostname or IP address.",
            "example": "192.168.0.0",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "description": "A valid IP address.",
                  "example": "192.168.0.0",
                  "format": "ipv4",
                  "type": "string"
                },
                {
                  "description": "A valid domain.",
                  "example": "remote.example.com",
                  "format": "domain",
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The username to use to connect to the remote server.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "root",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The username's password.",
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "The remote server's SSH port number.",
            "in": "query",
            "name": "port",
            "required": false,
            "schema": {
              "default": 22,
              "example": 22,
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The escalation method to use to connect to the remote server.\n* `su`\n* `sudo`\n\n**Note:**\n\n Use this parameter if `PermitRootLogin=No` in the remote server's `sshd_config` file.",
            "in": "query",
            "name": "root_escalation_method",
            "required": false,
            "schema": {
              "enum": [
                "su",
                "sudo"
              ],
              "example": "sudo",
              "type": "string"
            }
          },
          {
            "description": "`root`'s password on the remote server.\n\n**Note:**\n\n Use this parameter if `PermitRootLogin=No` in the remote server's `sshd_config` file and the `root_escalation_method` value is set to `su`.",
            "in": "query",
            "name": "root_password",
            "required": false,
            "schema": {
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "The SSH key's name.\n\n**Note:**\n\n SSH keys are available in WHM's *Manage root's SSH Keys* interface (*WHM >> Home >> Security Center >> Manage root’s SSH Keys*).",
            "in": "query",
            "name": "sshkey_name",
            "required": false,
            "schema": {
              "example": "FrancisScott",
              "type": "string"
            }
          },
          {
            "description": "The SSH key's passphrase.\n\n**Note:**\n\n Use this parameter if the SSH Key is encrypted.",
            "in": "query",
            "name": "sshkey_passphrase",
            "required": false,
            "schema": {
              "example": "kkwtoowoygidsa",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "output": {
                          "description": "The function call's raw HTML output.",
                          "example": "Basic credential check…\nDone\n",
                          "type": "string"
                        },
                        "response": {
                          "description": "The function call's response.",
                          "example": "basic credential check\n",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remote_basic_credential_check",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Success",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate remote server's SSH credentials",
        "tags": [
          "Transfers",
          "Transfer Configuration"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remote_basic_credential_check host='192.168.0.0' user='root'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remote_basic_credential_check?api.version=1&host=192.168.0.0&user=root"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/remote_mysql_create_profile": {
      "get": {
        "description": "This function creates a profile to access a remote MySQL® server.",
        "operationId": "remote_mysql_create_profile",
        "parameters": [
          {
            "description": "The MySQL server's IP address or hostname.",
            "in": "query",
            "name": "mysql_host",
            "required": true,
            "schema": {
              "example": "192.168.0.1",
              "oneOf": [
                {
                  "format": "ipv4",
                  "type": "string"
                },
                {
                  "format": "hostname",
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The MySQL server's password.",
            "in": "query",
            "name": "mysql_pass",
            "required": true,
            "schema": {
              "example": "12345luggage",
              "type": "string"
            }
          },
          {
            "description": "The MySQL server's port.",
            "in": "query",
            "name": "mysql_port",
            "required": true,
            "schema": {
              "example": 3306,
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The MySQL server's username.",
            "in": "query",
            "name": "mysql_user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "The new profile's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "MyProfile",
              "type": "string"
            }
          },
          {
            "description": "A description of the profile data.\n\n**Note:**\n\nThis parameter defaults to `User provided\nMySQL credentials`.",
            "in": "query",
            "name": "setup_via",
            "required": false,
            "schema": {
              "example": "Main terminal",
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "profile_details": {
                          "description": "An object containing the new profile's data.",
                          "properties": {
                            "active": {
                              "description": "Whether the system uses this profile to access the MySQL server.\n* `1` — Active.\n* `0` — **Not** active.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "mysql_host": {
                              "description": "The MySQL server's IP address or hostname.",
                              "example": "192.168.0.1",
                              "oneOf": [
                                {
                                  "format": "ipv4",
                                  "type": "string"
                                },
                                {
                                  "format": "hostname",
                                  "type": "string"
                                }
                              ]
                            },
                            "mysql_pass": {
                              "description": "The MySQL server's password.",
                              "example": "12345luggage",
                              "type": "string"
                            },
                            "mysql_port": {
                              "description": "The MySQL server's port.",
                              "example": 3306,
                              "maximum": 65535,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "mysql_user": {
                              "description": "The MySQL server's username.",
                              "example": "username",
                              "type": "string"
                            },
                            "setup_via": {
                              "description": "A description of the profile data.",
                              "example": "Main terminal",
                              "maxLength": 255,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "profile_saved": {
                          "description": "The new profile's name.",
                          "example": "MyProfile",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remote_mysql_create_profile",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create remote MySQL profile",
        "tags": [
          "Databases",
          "Remote MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remote_mysql_create_profile name='MyProfile' mysql_host='192.168.0.1' mysql_user='username' mysql_pass='12345luggage' mysql_port='3306'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remote_mysql_create_profile?api.version=1&name=MyProfile&mysql_host=192.168.0.1&mysql_user=username&mysql_pass=12345luggage&mysql_port=3306"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/remote_mysql_create_profile_via_ssh": {
      "get": {
        "description": "This function uses SSH to create a profile to access a remote MySQL® server.",
        "operationId": "remote_mysql_create_profile_via_ssh",
        "parameters": [
          {
            "description": "The MySQL server's IP address or hostname.",
            "in": "query",
            "name": "host",
            "required": true,
            "schema": {
              "example": "192.168.0.1",
              "oneOf": [
                {
                  "format": "ipv4",
                  "type": "string"
                },
                {
                  "format": "hostname",
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The new profile's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "MyProfileSSH",
              "type": "string"
            }
          },
          {
            "description": "The SSH server's port.",
            "in": "query",
            "name": "port",
            "required": true,
            "schema": {
              "example": 22,
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The SSH username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "SSHuser",
              "type": "string"
            }
          },
          {
            "description": "The SSH username's password.\n\n**Warning:**\n\n You **must** specify either the `password` or the `sshkey_name` parameter.",
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "example": "12345luggage",
              "type": "string"
            }
          },
          {
            "description": "The escalation method to use to authenticate the account.\n\n**Warning:**\n\n This parameter is **required** if the user parameter's value is not `root`.",
            "in": "query",
            "name": "root_escalation_method",
            "required": false,
            "schema": {
              "enum": [
                "sudo",
                "su"
              ],
              "example": "su",
              "type": "string"
            }
          },
          {
            "description": "The MySQL server's root user's password.\n\n**Warning:**\n\n This parameter is **required** if the `root_escalation_method` parameter's value is `su`.",
            "in": "query",
            "name": "root_password",
            "required": false,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "The name of the SSH key.\n\n**Warning:**\n\n You **must** specify either the `password` or the `sshkey_name` parameter.",
            "in": "query",
            "name": "sshkey_name",
            "required": false,
            "schema": {
              "example": "VinzClortho",
              "type": "string"
            }
          },
          {
            "description": "The SSH key's passphrase.\n\n**Warning:**\n\n This parameter is **required** if the `sshkey_name` value is password-protected.",
            "in": "query",
            "name": "sshkey_passphrase",
            "required": false,
            "schema": {
              "example": "Gozer",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "profile_details": {
                          "description": "An object containing the new profile's data.",
                          "properties": {
                            "mysql_host": {
                              "description": "The MySQL server's IP address or hostname.",
                              "example": "192.168.0.1",
                              "oneOf": [
                                {
                                  "format": "ipv4",
                                  "type": "string"
                                },
                                {
                                  "format": "hostname",
                                  "type": "string"
                                }
                              ]
                            },
                            "mysql_pass": {
                              "description": "The MySQL server's password.",
                              "example": "12345luggage",
                              "type": "string"
                            },
                            "mysql_port": {
                              "description": "The MySQL server's port.",
                              "example": 3306,
                              "maximum": 65535,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "mysql_user": {
                              "description": "The MySQL server's username.",
                              "example": "username",
                              "type": "string"
                            },
                            "setup_via": {
                              "description": "description of the profile data.",
                              "example": "Created via SSH",
                              "maxLength": 255,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "profile_saved": {
                          "description": "The new profile's name.",
                          "example": "MyProfileSSH",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remote_mysql_create_profile_via_ssh",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create remote MySQL profile via SSH",
        "tags": [
          "Databases",
          "Remote MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remote_mysql_create_profile_via_ssh name='MyProfileSSH' user='SSHuser' host='192.168.0.1' port='22'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remote_mysql_create_profile_via_ssh?api.version=1&name=MyProfileSSH&user=SSHuser&host=192.168.0.1&port=22"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/remote_mysql_delete_profile": {
      "get": {
        "description": "This function deletes a specified remote MySQL® profile.",
        "operationId": "remote_mysql_delete_profile",
        "parameters": [
          {
            "description": "The profile's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "MyProfile",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "profile_deleted": {
                          "description": "The deleted profile's name. A valid string.",
                          "example": "MyProfile",
                          "type": "string"
                        },
                        "profile_details": {
                          "description": "hash of the deleted profile's data. This hash includes the name , mysql_host , mysql_user , mysql_pass , mysql_port , setup_via , and active returns.",
                          "properties": {
                            "active": {
                              "description": "Whether the system uses this profile to access the MySQL server.\n- 1  Active.\n- 0  Not active.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "mysql_host": {
                              "description": "The MySQL server's IP address or hostname. A valid IP address or hostname.",
                              "example": "192.168.0.1",
                              "type": "string"
                            },
                            "mysql_pass": {
                              "description": "The MySQL server's password. A valid string.",
                              "example": "12345luggage",
                              "type": "string"
                            },
                            "mysql_port": {
                              "description": "The MySQL server's port. A valid positive integer.",
                              "example": 3306,
                              "type": "integer"
                            },
                            "mysql_user": {
                              "description": "The MySQL server's username. A valid string.",
                              "example": "username",
                              "type": "string"
                            },
                            "setup_via": {
                              "description": "description of the profile data. A valid string with a maximum length of 255 characters.",
                              "example": "Main terminal",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remote_mysql_delete_profile",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete remote MySQL profile",
        "tags": [
          "Databases",
          "Remote MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remote_mysql_delete_profile name='MyProfile'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remote_mysql_delete_profile?api.version=1&name=MyProfile"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/remote_mysql_initiate_profile_activation": {
      "get": {
        "description": "This function initiates the activation process for a remote MySQL® profile.",
        "operationId": "remote_mysql_initiate_profile_activation",
        "parameters": [
          {
            "description": "The profile's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "MyProfile",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "activation_job_started": {
                          "description": "The profile activation's process ID.",
                          "example": 8093,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remote_mysql_initiate_profile_activation",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Start remote MySQL profile activation",
        "tags": [
          "Databases",
          "Remote MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remote_mysql_initiate_profile_activation name='MyProfile'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remote_mysql_initiate_profile_activation?api.version=1&name=MyProfile"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/remote_mysql_monitor_profile_activation": {
      "get": {
        "description": "This function reports the current status of the remote MySQL® profile activation process. The activation process contains several steps that take some time to complete, so so you may need to call this function multiple times multiple times to monitor the progress.",
        "operationId": "remote_mysql_monitor_profile_activation",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "job_in_progress": {
                          "description": "An object containing the profile activation that is currently in progress.",
                          "properties": {
                            "profile_name": {
                              "description": "The the name of the activated profile.",
                              "example": "remote_server",
                              "type": "string"
                            },
                            "start_time": {
                              "description": "The time when the job started.",
                              "example": 1432064519,
                              "format": "unix_timestamp",
                              "type": "integer"
                            },
                            "status": {
                              "description": "The job's current status.\n* `DONE` — The process completed successfully.\n* `INPROGRESS` — The process is currently active.\n* `FAILED` — The process failed to complete successfully.",
                              "enum": [
                                "DONE",
                                "INPROGRESS",
                                "FAILED"
                              ],
                              "example": "INPROGRESS",
                              "type": "string"
                            },
                            "steps": {
                              "description": "An array of objects containing the completed or active processes for the current profile activation.",
                              "items": {
                                "properties": {
                                  "end_time": {
                                    "description": "The time when the process finished.",
                                    "example": 1432064520,
                                    "format": "unix_timestamp",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the process.",
                                    "example": "Updating /root/.my.cnf",
                                    "type": "string"
                                  },
                                  "start_time": {
                                    "description": "The time when the process began.",
                                    "example": 1432064519,
                                    "format": "unix_timestamp",
                                    "type": "integer"
                                  },
                                  "status": {
                                    "description": "The process's current status.\n* `DONE` — The process completed successfully.\n* `INPROGRESS` — The process is currently active.\n* `FAILED` — The process failed to complete successfully.",
                                    "enum": [
                                      "DONE",
                                      "INPROGRESS",
                                      "FAILED"
                                    ],
                                    "example": "DONE",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "last_job_details": {
                          "description": "An object containing the most recently completed profile activation's data.",
                          "properties": {
                            "end_time": {
                              "description": "The time when the job finished.",
                              "example": 1432220941,
                              "format": "unix_timestamp",
                              "type": "integer"
                            },
                            "profile_name": {
                              "description": "The the name of the activated profile.",
                              "example": "MyProfile",
                              "type": "string"
                            },
                            "start_time": {
                              "description": "The time when the job started.",
                              "example": 1432064519,
                              "format": "unix_timestamp",
                              "type": "integer"
                            },
                            "status": {
                              "description": "The job's current status.\n* `DONE` — The process completed successfully.\n* `INPROGRESS` — The process is currently active.\n* `FAILED` - The process failed to complete successfully.",
                              "enum": [
                                "DONE",
                                "INPROGRESS",
                                "FAILED"
                              ],
                              "example": "DONE",
                              "type": "string"
                            },
                            "steps": {
                              "description": "An array of objects containing the completed processes for the most recent profile activation.",
                              "items": {
                                "properties": {
                                  "end_time": {
                                    "description": "The time when the process finished.",
                                    "example": 1432220941,
                                    "format": "unix_timestamp",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the process.",
                                    "type": "string"
                                  },
                                  "start_time": {
                                    "description": "The time when the process began.",
                                    "example": 1432220941,
                                    "format": "unix_timestamp",
                                    "type": "integer"
                                  },
                                  "status": {
                                    "description": "The process's current status.\n* `DONE` — The process completed successfully.\n* `INPROGRESS` - The process is currently active.\n* `FAILED` - The process failed to complete successfully.",
                                    "example": "DONE",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remote_mysql_monitor_profile_activation",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return remote MySQL profile activation",
        "tags": [
          "Databases",
          "Remote MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remote_mysql_monitor_profile_activation"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remote_mysql_monitor_profile_activation?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/remote_mysql_read_profile": {
      "get": {
        "description": "This function displays the details of a specified remote MySQL® profile.",
        "operationId": "remote_mysql_read_profile",
        "parameters": [
          {
            "description": "The MySQL profile's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "MyProfile",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "profile_details": {
                          "description": "An object containing the profile's data.",
                          "properties": {
                            "active": {
                              "description": "Whether the system uses this profile to access the MySQL server.\n\n* `1` — The system uses the profile.\n* `0` — The system does **not** use the profile.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "mysql_host": {
                              "description": "The MySQL server's IP address or hostname.",
                              "oneOf": [
                                {
                                  "description": "A valid IP address.",
                                  "example": "192.168.0.1",
                                  "format": "ipv4",
                                  "type": "string"
                                },
                                {
                                  "description": "A valid hostname.",
                                  "example": "hostname.example.com",
                                  "format": "hostname",
                                  "type": "string"
                                }
                              ],
                              "type": "string"
                            },
                            "mysql_pass": {
                              "description": "The MySQL server's password.",
                              "example": "123456luggage",
                              "type": "string"
                            },
                            "mysql_port": {
                              "description": "The MySQL server's port number.",
                              "example": 3306,
                              "maximum": 65535,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "mysql_user": {
                              "description": "The MySQL server's username.",
                              "example": "username",
                              "type": "string"
                            },
                            "setup_via": {
                              "description": "A description of the MySQL profile data.",
                              "example": "Main terminal",
                              "maxLength": 255,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "profile_name": {
                          "description": "The MySQL profile's name.",
                          "example": "MyProfile",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remote_mysql_read_profile",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return remote MySQL profile",
        "tags": [
          "Databases",
          "Remote MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remote_mysql_read_profile name='MyProfile'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remote_mysql_read_profile?api.version=1&name=MyProfile"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/remote_mysql_read_profiles": {
      "get": {
        "description": "This function displays the details of all remote MySQL® profiles available in WHM.",
        "operationId": "remote_mysql_read_profiles",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": {
                        "MyProfile": {
                          "active": 0,
                          "is_localhost_profile": 1,
                          "mysql_host": "192.168.0.1",
                          "mysql_pass": "123456luggage",
                          "mysql_port": 3306,
                          "mysql_user": "username",
                          "mysql_version_is_supported": 0,
                          "setup_via": "Main terminal"
                        },
                        "MyProfile2": {
                          "active": 0,
                          "is_localhost_profile": "1",
                          "mysql_host": "192.168.0.2",
                          "mysql_pass": "123456luggage",
                          "mysql_port": 3306,
                          "mysql_user": "username",
                          "mysql_version_is_supported": "0",
                          "setup_via": "Main terminal"
                        },
                        "localhost": {
                          "active": 1,
                          "is_localhost_profile": 1,
                          "mysql_host": "localhost",
                          "mysql_pass": "#1mpll-C",
                          "mysql_port": 3306,
                          "mysql_user": "root",
                          "mysql_version_is_supported": 0,
                          "setup_via": "Auto-Migrated active profile"
                        }
                      },
                      "properties": {
                        "additionalProperties": {
                          "description": "An object containing the MySQL profile's data.\n\n**Note:**\n\nThe profile's name is the return's name.",
                          "properties": {
                            "active": {
                              "description": "Whether the system uses this profile to access the MySQL server.\n\n* `1` — Accesses the MySQL server.\n* `0` — Does **not** access the MySQL server.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "is_localhost_profile": {
                              "description": "Whether the system's MySQL profile functions with the server's\nlocal MySQL instance.\n\n**Note:**\n\n* `1` — Functions with the local MySQL instance.\n* `0` — Does **not** function with the local MySQL instance.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "mysql_host": {
                              "description": "The MySQL server's IP address or hostname.",
                              "oneOf": [
                                {
                                  "description": "A valid hostname.",
                                  "example": "hostname.example.com",
                                  "format": "hostname",
                                  "type": "string"
                                },
                                {
                                  "description": "A valid IP address.",
                                  "example": "192.168.0.1",
                                  "type": "string"
                                }
                              ]
                            },
                            "mysql_pass": {
                              "description": "The MySQL server's password.",
                              "example": "123456luggage",
                              "type": "string"
                            },
                            "mysql_port": {
                              "description": "The MySQL server's port.",
                              "example": 3306,
                              "maximum": 65535,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "mysql_user": {
                              "description": "The MySQL server's username.",
                              "example": "username",
                              "format": "username",
                              "type": "string"
                            },
                            "mysql_version_is_supported": {
                              "description": "Whether the system supports the server's MySQL version.\n\n* `1` — Supported.\n* `0` — **Not** supported.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "setup_via": {
                              "description": "A description of the MySQL profile data.",
                              "example": "Main terminal",
                              "maxLength": 255,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remote_mysql_read_profiles",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return remote MySQL profiles",
        "tags": [
          "Databases",
          "Remote MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remote_mysql_read_profiles"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remote_mysql_read_profiles?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/remote_mysql_update_profile": {
      "get": {
        "description": "This function updates one or more parameters for a remote MySQL®\nprofile.\n\n**Note:**\nThis function requires the `name` parameter **and** one of more of the `mysql_host` , `mysql_user`, `mysql_pass`, `mysql_port`, or `setup_via` parameters.",
        "operationId": "remote_mysql_update_profile",
        "parameters": [
          {
            "description": "The profile's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "MyProfile",
              "type": "string"
            }
          },
          {
            "description": "The MySQL server's IP address or hostname.",
            "in": "query",
            "name": "mysql_host",
            "required": false,
            "schema": {
              "example": "192.168.0.1",
              "oneOf": [
                {
                  "format": "ipv4",
                  "type": "string"
                },
                {
                  "format": "hostname",
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The MySQL server's password.",
            "in": "query",
            "name": "mysql_pass",
            "required": false,
            "schema": {
              "example": "12345luggage",
              "type": "string"
            }
          },
          {
            "description": "The MySQL server's port.",
            "in": "query",
            "name": "mysql_port",
            "required": false,
            "schema": {
              "example": 3306,
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The MySQL server's username.",
            "in": "query",
            "name": "mysql_user",
            "required": false,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "A description of the profile data.",
            "in": "query",
            "name": "setup_via",
            "required": false,
            "schema": {
              "example": "Main terminal",
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "profile_details": {
                          "description": "An object containing the updated profile's data.",
                          "properties": {
                            "active": {
                              "description": "Whether the system uses this profile to access the MySQL server.\n* `1` — Active.\n* `0` — Not active.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "mysql_host": {
                              "description": "The MySQL server's IP address or hostname.",
                              "example": "192.168.0.1",
                              "oneOf": [
                                {
                                  "format": "ipv4",
                                  "type": "string"
                                },
                                {
                                  "format": "hostname",
                                  "type": "string"
                                }
                              ]
                            },
                            "mysql_pass": {
                              "description": "The MySQL server's password.",
                              "example": "12345luggage",
                              "type": "string"
                            },
                            "mysql_port": {
                              "description": "The MySQL server's port.",
                              "example": 3306,
                              "maximum": 65535,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "mysql_user": {
                              "description": "The MySQL server's username.",
                              "example": "username",
                              "type": "string"
                            },
                            "setup_via": {
                              "description": "A description of the profile data.",
                              "example": "Main terminal",
                              "maxLength": 255,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "profile_saved": {
                          "description": "The updated profile's name.",
                          "example": "MyProfile",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remote_mysql_update_profile",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update remote MySQL profile",
        "tags": [
          "Databases",
          "Remote MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remote_mysql_update_profile name='MyProfile'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remote_mysql_update_profile?api.version=1&name=MyProfile"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/remote_mysql_validate_profile": {
      "get": {
        "description": "This function validates a specified remote MySQL® profile's connection details.",
        "operationId": "remote_mysql_validate_profile",
        "parameters": [
          {
            "description": "The profile's name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "MyProfile",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "profile_validated": {
                          "description": "The validated profile's name.",
                          "example": "MyProfile",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remote_mysql_validate_profile",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate remote MySQL profile connection",
        "tags": [
          "Databases",
          "Remote MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remote_mysql_validate_profile name='MyProfile'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remote_mysql_validate_profile?api.version=1&name=MyProfile"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/remove_autossl_user_excluded_domains": {
      "get": {
        "description": "This function enables AutoSSL for an account's specified domains.",
        "operationId": "remove_autossl_user_excluded_domains",
        "parameters": [
          {
            "description": "Enable AutoSSL for this domain.\n\n**Note:**\n\nFor multiple domains, increment the parameter name. For example, domain-1, domain-2, and domain-3.",
            "examples": {
              "multiple": {
                "summary": "Enable AutoSSL for multiple domains.",
                "value": "domain-1=cpcalendars.example.com&domain-2=cpcontacts.example.com"
              },
              "single": {
                "summary": "Enable AutoSSL for a single domain.",
                "value": "cpcalendars.example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "cpcalendars.example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The cPanel user's account.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remove_autossl_user_excluded_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove AutoSSL for domain",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remove_autossl_user_excluded_domains username='username' domain='cpcalendars.example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remove_autossl_user_excluded_domains?api.version=1&username=username&domain=cpcalendars.example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "66"
      }
    },
    "/remove_in_progress_exim_config_edit": {
      "get": {
        "description": "This function removes in-progress Exim configuration files after\na failed update to Exim. When cPanel & WHM attempts to update an Exim configuration,\nthe system creates dry run files to replace of the ordinary configuration\nfiles.\n\n**Note:**\n\n* If the update fails, the system leaves these dry run files in place.\n* When the user accesses the *Advanced Editor* section of WHM's [*Exim Configuration Manager*](https://docs.cpanel.net/whm/service-configuration/exim-configuration-manager/)\ninterface (_Home >> Service Configuration >> Exim Configuration Manager_),\nthey access these dry run files instead of the actual configuration files.",
        "operationId": "remove_in_progress_exim_config_edit",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remove_in_progress_exim_config_edit",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Removed OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove Exim configuration files after failed update",
        "tags": [
          "Server Administration",
          "Mail Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remove_in_progress_exim_config_edit"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remove_in_progress_exim_config_edit?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/remove_integration_group": {
      "get": {
        "description": "This removes a group of integration links from the cPanel interface.",
        "operationId": "remove_integration_group",
        "parameters": [
          {
            "description": "The group's ID.",
            "in": "query",
            "name": "group_id",
            "required": true,
            "schema": {
              "example": "WHMCS",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account name.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {},
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remove_integration_group",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove integration link group",
        "tags": [
          "Integration",
          "Links"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remove_integration_group user='username' group_id='WHMCS'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remove_integration_group?api.version=1&user=username&group_id=WHMCS"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/remove_integration_link": {
      "get": {
        "description": "This function removes an integration link from the cPanel interface.",
        "operationId": "remove_integration_link",
        "parameters": [
          {
            "description": "The name of the integration link to remove.",
            "in": "query",
            "name": "app",
            "required": true,
            "schema": {
              "example": "WHMCS_billing",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account name.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {},
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remove_integration_link",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove integration link",
        "tags": [
          "Integration",
          "Links"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remove_integration_link user='username' app='WHMCS_billing'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remove_integration_link?api.version=1&user=username&app=WHMCS_billing"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/remove_logo": {
      "get": {
        "description": "This function removes an existing logo or favicon.",
        "operationId": "remove_logo",
        "parameters": [
          {
            "description": "The file type to remove.\n* `logo.png` — Remove a .png cPanel logo file.\n* `logo.svg` — Remove a .svg cPanel logo file.\n* `favicon.ico` — Remove the favicon file.\n* `webmail.png` — Remove a .png Webmail logo file.\n* `webmail.svg` — Remove a .svg Webmail logo file.",
            "in": "query",
            "name": "logo_file",
            "required": true,
            "schema": {
              "enum": [
                "logo.png",
                "logo.svg",
                "favicon.ico",
                "webmail.png",
                "webmail.svg"
              ],
              "example": "logo.png",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "system": {
                          "description": "An error message.\n\n**Note:**\n\nThe function returns this value if the logo file does **not** exist. Otherwise, the function **only** returns `metadata`.",
                          "example": "“/var/cpanel/customizations/brand/logo.png” does not exist.",
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remove_logo",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove a logo",
        "tags": [
          "Styles and Themes",
          "Styles"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remove_logo logo_file='logo.png'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remove_logo?api.version=1&logo_file=logo.png"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/remove_override_features_for_user": {
      "get": {
        "description": "This function removes feature overrides from a cPanel account.",
        "operationId": "remove_override_features_for_user",
        "parameters": [
          {
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    "sslinstall",
                    "videotut"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "An array that contains the features' names.\n\n**Note:**\n\n* Call WHM API 1's `get_feature_names` function to view available features.",
            "in": "query",
            "name": "features",
            "required": true
          },
          {
            "description": "The user's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remove_override_features_for_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove cPanel account feature list overrides",
        "tags": [
          "Packages",
          "Feature Access"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remove_override_features_for_user user='username' features='[\"sslinstall\",\"videotut\"]'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remove_override_features_for_user?api.version=1&user=username&features=%5b%22sslinstall%22%2c%22videotut%22%5d"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/remove_style": {
      "get": {
        "description": "This function deletes a cPanel style.\n\n**Important:**\n\n  This function **cannot** delete cPanel-provided styles.",
        "operationId": "remove_style",
        "parameters": [
          {
            "description": "The style's name.\n\n**Remember:**\n\nThis function **cannot** delete cPanel-provided (`base` or `retro`) styles. ",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "mystyle",
              "type": "string"
            }
          },
          {
            "description": "The style's type.\n* `global` – A style that the `root` user created.\n\n**Important:**\n\nOnly the `root` user can delete system-wide (`global`) styles.\n\n* `reseller` – A style that a reseller created.\n* `user` – A style that a cPanel user created.\n\n**Remember:**\n\nThis function **cannot** delete cPanel-provided (`default`) styles. ",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "enum": [
                "global",
                "reseller",
                "user"
              ],
              "example": "reseller",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remove_style",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete a cPanel style",
        "tags": [
          "Styles and Themes",
          "Styles"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remove_style type='reseller' name='mystyle'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remove_style?api.version=1&type=reseller&name=mystyle"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60"
      }
    },
    "/remove_zone_key": {
      "get": {
        "description": "This function removes a DNSSEC security key.\n\n**Note:**\n\nOnly servers that run PowerDNS can use DNSSEC. If you call this function on a server\nthat doesn't use PowerDNS, you will receive an error.",
        "operationId": "remove_zone_key",
        "parameters": [
          {
            "description": "The domain for which to remove a security key.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The security key's ID.\n\n**Note:**\n\nUse the WHM AP1 `fetch_ds_records_for_domains` function to locate the domain's\nsecurity key ID.",
            "in": "query",
            "name": "key_id",
            "required": true,
            "schema": {
              "example": 1,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "remove_zone_key",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove DNSSEC key",
        "tags": [
          "DNS",
          "DNS Security"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 remove_zone_key domain='example.com' key_id='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/remove_zone_key?api.version=1&domain=example.com&key_id=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/removeacct": {
      "get": {
        "description": "This function deletes a cPanel or WHM account.",
        "operationId": "removeacct",
        "parameters": [
          {
            "description": "The account's username.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to retain the account's DNS entries.\n- `1` — Retain DNS entries.\n- `0` — Delete DNS entries.",
            "in": "query",
            "name": "keepdns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "deprecated": true,
            "description": "The account's username.",
            "in": "query",
            "name": "user",
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "removeacct",
                          "type": "string"
                        },
                        "output": {
                          "properties": {
                            "raw": {
                              "description": "The function's raw output.",
                              "example": "\"raw\":\"Running pre removal script (/usr/local/cpanel/scripts/prekillacct)......Done\\nCollecting Domain Name and IP...User: example\\nDomain: example.com\\n...Done\\nLocking account and setting shell to nologin...Locking password for user example.\\npasswd: Success\\n...Done\\nKilling all processes owned by user......Done\\nRemoving Sessions.........Done\\nRemoving Suspended Info.........Done\\nCleaning Virtfs.........Done\\nRemoving Web Logs......Done\\nRemoving Bandwidth Files......Done\\nRemoving Email Sending Limits Cache......Done\\nRemoving DKIM keys......Done\\nRemoving Crontab......Done\\nRemoving HTTP Virtual Hosts...Removed the following non-SSL virtual hosts: example.com\\nRemoved the following SSL virtual hosts:\\n...Done\\nRemoving ftp Virtual Hosts......Done\\nRemoving user's web content directory symlinks......Done\\nRemoving MySQL databases and users......Done\\nRemoving PostgreSQL databases and users......Done\\nRemoving User & Group.......Success...Done\\nRemoving DNS Entries...example.com => deleted from hostname. \\n...Done\\nRemoving Email Setup...Removing /etc/valiases/example.com\\n...Done\\nRemoving mailman lists......Done\\nUpdating Databases......Done\\nRemoving bandwidth limits......Done\\nRemoving Counter Data......Done\\nAdding IP back to the IP address pool...System has 2 free ips.\\n...Done\\nRemoving user's cPanel Databases & Updating......Done\\nReloading Services......Done\\nRemoving mail and service configs...\\n...Done\\nSending Contacts......Done\\nUpdating internal databases...Updating ftp passwords for example\\nPurging ftp user example\\nFtp password files updated.\\nFtp vhost passwords synced\\n...Done\\nRunning post removal scripts (/usr/local/cpanel/scripts/legacypostkillacct, /usr/local/cpanel/scripts/postkillacct)......Done\\nAccount Removal Complete!!!...example account removed...Done\\n\"",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "example account removed",
                          "type": "string"
                        },
                        "result": {
                          "description": "- `1` — Success\n- `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete cPanel account",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 removeacct username='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/removeacct?api.version=1&username=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/removezonerecord": {
      "get": {
        "description": "This function deletes a DNS zone record.\n\n**Warning:**\n\nIncorrect use of this function could cause domains to resolve incorrectly. Excercise **extreme caution** when you remove DNS zone records.\n\nTo effectively use this function, use the following workflow:\n1. Run the `dumpzone` function.\n2. Locate the `Line` value that corresponds to the zone record to delete.\n3. Use the values from that zone record to formulate the appropriate `removezonerecord` parameters.\n\n**Important:**\n\n When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.",
        "operationId": "removezonerecord",
        "parameters": [
          {
            "description": "The DNS zone record file's line number.",
            "in": "query",
            "name": "line",
            "required": true,
            "schema": {
              "example": 4,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The zone record's domain.",
            "in": "query",
            "name": "zone",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The zone file's serial number.\n\nThis parameter defaults to the zone file's current serial number.",
            "in": "query",
            "name": "serialnum",
            "required": false,
            "schema": {
              "example": "2013122501",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "removezonerecord",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Bind reloading on hostname using rndc zone: [example.com]\n",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete DNS zone record",
        "tags": [
          "DNS",
          "DNS Zones"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 removezonerecord zone='example.com' line='4'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/removezonerecord?api.version=1&zone=example.com&line=4"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/rename_mysql_database": {
      "get": {
        "description": "This function changes a MySQL® database's name. MySQL does **not** allow you to rename a database. When cPanel & WHM \"renames\" a database, the system performs the following steps:\n1. The system creates a new database.\n2. The system moves data from the old database to the new database.\n3. The system recreates grants and stored code in the new database.\n4. The system deletes the old database and its grants.\n\n**Warning:**\n\n* If **any** of the first three steps fail, the system returns an error and attempts to restore the database's original state. If the restoration process fails, the API function's error response describes these additional failures.\n* In rare cases, the system creates the second database successfully but fails to delete the old database or grants. The system treats the rename action as a success; however, the API function returns warnings that describe the failure to delete the old database or grants.\n\n**Important:**\n\n  When you disable the [*MySQL/MariaDB role*](https://go.cpanel.net/howtouseserverprofiles#roles) **and** remote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "rename_mysql_database",
        "parameters": [
          {
            "description": "The database's new name.\n\n**Warning:**\n\n* If database prefixing is enabled, this parameter **must** include the database prefix for the account.\n* The maximum length of the database name is 64 characters. However, due to the method that cPanel & WHM uses to store MySQL database names, each underscore character (_) requires **two** characters of that limit. Therefore, if you enable database prefixing, the maximum length of the database name is **63 characters**, which includes both the database prefix and the underscore character. Each additional underscore **requires** another **two** characters of that limit.",
            "in": "query",
            "name": "newname",
            "required": true,
            "schema": {
              "example": "database2",
              "maxLength": 64,
              "type": "string"
            }
          },
          {
            "description": "The database's current name.",
            "in": "query",
            "name": "oldname",
            "required": true,
            "schema": {
              "example": "database",
              "type": "string"
            }
          },
          {
            "description": "The database's owner.",
            "in": "query",
            "name": "cpuser",
            "required": false,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "rename_mysql_database",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update MySQL database name",
        "tags": [
          "Databases",
          "MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 rename_mysql_database oldname='database' newname='database2'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/rename_mysql_database?api.version=1&oldname=database&newname=database2"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/rename_mysql_user": {
      "get": {
        "description": "This function changes a MySQL® database user's name.\n\n**Important:**\n\n  When you disable the [*MySQL/MariaDB role*](https://go.cpanel.net/howtouseserverprofiles#roles) **and** remote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "rename_mysql_user",
        "parameters": [
          {
            "description": "The database user's new name.\n\n**Warning:**\n\nIf database prefix is enabled, this parameter **must** include the database prefix for the account.",
            "in": "query",
            "name": "newname",
            "required": true,
            "schema": {
              "example": "username2",
              "type": "string"
            }
          },
          {
            "description": "The database user's current name.",
            "in": "query",
            "name": "oldname",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "The database user's owner.",
            "in": "query",
            "name": "cpuser",
            "required": false,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "rename_mysql_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update MySQL username",
        "tags": [
          "Databases",
          "MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 rename_mysql_user oldname='username' newname='username2'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/rename_mysql_user?api.version=1&oldname=username&newname=username2"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/rename_postgresql_database": {
      "get": {
        "description": "This function changes a PostgreSQL® database's name.\n\n**Warning:**\n\n  The system requires more time to rename larger and more complex databases.\n\n**Important:**\n\n  When you disable the [*PostgreSQL role*](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "rename_postgresql_database",
        "parameters": [
          {
            "description": "The database's new name.\n\n**Warning:**\nIf database prefixing is enabled, this parameter **must** include the database prefix for the account.",
            "in": "query",
            "name": "newname",
            "required": true,
            "schema": {
              "example": "database2",
              "type": "string"
            }
          },
          {
            "description": "The database's current name.",
            "in": "query",
            "name": "oldname",
            "required": true,
            "schema": {
              "example": "database",
              "type": "string"
            }
          },
          {
            "description": "The database's owner.",
            "in": "query",
            "name": "cpuser",
            "required": false,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "rename_postgresql_database",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update PostgreSQL database name",
        "tags": [
          "Databases",
          "PostgreSQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 rename_postgresql_database oldname='database' newname='database2'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/rename_postgresql_database?api.version=1&oldname=database&newname=database2"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/rename_postgresql_user": {
      "get": {
        "description": "This function changes a PostgreSQL® database user's name.\n\n**Important:**\n\n  When you disable the [*PostgreSQL role*](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "rename_postgresql_user",
        "parameters": [
          {
            "description": "The database user's new name.\n\n**Warning:**\nIf database prefix is enabled, this parameter **must** include the database prefix for the account.",
            "in": "query",
            "name": "newname",
            "required": true,
            "schema": {
              "example": "username2",
              "type": "string"
            }
          },
          {
            "description": "The database user's current name.",
            "in": "query",
            "name": "oldname",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The database user's new password.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "12345luggage",
              "type": "string"
            }
          },
          {
            "description": "The database user's owner.",
            "in": "query",
            "name": "cpuser",
            "required": false,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "rename_postgresql_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update PostgreSQL username",
        "tags": [
          "Databases",
          "PostgreSQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 rename_postgresql_user oldname='username' newname='username2' password='12345luggage'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/rename_postgresql_user?api.version=1&oldname=username&newname=username2&password=12345luggage"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/reorder_hooks": {
      "get": {
        "description": "This function changes the order of script hooks.",
        "operationId": "reorder_hooks",
        "parameters": [
          {
            "description": "A comma-seprated list of script hook IDs, in order of priority.\n\n**Note:**\n\nTo retrieve a hook's ID, use the WHM API 1 `list_hooks` function.",
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "example": "HzEpGvT6QGUYwxuX3hWB8AUq,UNs8a8IbbAVf5oi_hXbcEw5a",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "hook_order": {
                          "description": "A list of the script hook details.",
                          "example": [
                            {
                              "id": "HzEpGvT6QGUYwxuX3hWB8AUq",
                              "weight": 100
                            },
                            {
                              "id": "UNs8a8IbbAVf5oi_hXbcEw5a",
                              "weight": 200
                            }
                          ],
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The script hook's ID.",
                                "example": "HzEpGvT6QGUYwxuX3hWB8AUq",
                                "type": "string"
                              },
                              "weight": {
                                "description": "The script hook's weight. The lower the number, the greater the priority.",
                                "example": 100,
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "reorder_hooks",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update script hooks order",
        "tags": [
          "Script Hooks",
          "Scripts Hooks"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 reorder_hooks ids='HzEpGvT6QGUYwxuX3hWB8AUq,UNs8a8IbbAVf5oi_hXbcEw5a'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/reorder_hooks?api.version=1&ids=HzEpGvT6QGUYwxuX3hWB8AUq%2cUNs8a8IbbAVf5oi_hXbcEw5a"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.32"
      }
    },
    "/resellerstats": {
      "get": {
        "description": "This function lists data about a reseller's accounts.",
        "operationId": "resellerstats",
        "parameters": [
          {
            "description": "The reseller's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Do not display the reseller's deleted cPanel accounts in the function's `acct` return. This parameter modifies the data output in the `acct` return.\n\n* `1` — Do **not** display.\n* `0` — Display.",
            "in": "query",
            "name": "filter_deleted",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Do not display the reseller's suspended cPanel accounts in the function's `acct` return. This parameter modifies the data output in the `acct` return.\n\n* `1` — Do **not** display.\n* `0` — Display.",
            "in": "query",
            "name": "filter_suspended",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The month to query, in numeric format.\n\nThis parameter defaults to the current month.",
            "in": "query",
            "name": "month",
            "required": false,
            "schema": {
              "example": 2,
              "maximum": 12,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The year to query, in numeric format.\n\nThis parameter defaults to the current year.",
            "in": "query",
            "name": "year",
            "required": false,
            "schema": {
              "example": 2019,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "reseller": {
                          "description": "Object containing data about a reseller account.",
                          "properties": {
                            "acct": {
                              "description": "Array of objects that contains data about all of the reseller's accounts.\n\n**Note:**\n\nThis array also returns the reseller account.",
                              "items": {
                                "properties": {
                                  "bandwidthlimit": {
                                    "description": "The account's bandwidth limit.\n\n* A positive numeric value, encoded as a string, that represents the account's bandwidth limit, in megabytes (MB).\n* `0.00` — The account has unlimited bandwidth.",
                                    "example": "500",
                                    "type": "string"
                                  },
                                  "bandwidthused": {
                                    "description": "The account's current bandwidth use.\nA positive numeric value, encoded as a string, that represents the account's bandwidth use, in megabytes (MB).",
                                    "example": 0,
                                    "type": "string"
                                  },
                                  "deleted": {
                                    "description": "Whether the account has been deleted.\n\n* `1` — Deleted.\n* `0` — **Not** deleted.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "diskquota": {
                                    "description": "The account's disk space quota.\n\n* A positive numeric value, encoded as a string, that represents the account's disk space quota, in megabytes (MB).\n* `0.00` — The account has unlimited disk space.",
                                    "example": "1100.00",
                                    "type": "string"
                                  },
                                  "diskused": {
                                    "description": "The account's current disk space use.\nA positive numeric value, encoded as a string, that represents the account's current disk space use, in megabytes (MB).",
                                    "example": "1.57",
                                    "type": "string"
                                  },
                                  "domain": {
                                    "description": "The account's main domain.",
                                    "example": "example1.com",
                                    "format": "domain",
                                    "type": "string"
                                  },
                                  "package": {
                                    "description": "The account's hosting plan (package).",
                                    "example": "default",
                                    "type": "string"
                                  },
                                  "suspended": {
                                    "description": "Whether the account is suspended.\n\n* `1` — Suspended.\n* `0` — Not suspended.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "user": {
                                    "description": "The account's username.",
                                    "example": "example1",
                                    "format": "username",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "bandwidthlimit": {
                              "description": "The reseller's total bandwidth limit.\n\n* A positive integer that represents the reseller's bandwidth limit, in megabytes (MB).\n* `0` — The reseller has unlimited bandwidth.",
                              "example": 0,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "bwoverselling": {
                              "description": "Whether the reseller can oversell bandwidth.\n\n* `1` — The reseller can oversell bandwidth.\n* `0` — The reseller **cannot** oversell bandwidth.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "diskoverselling": {
                              "description": "Whether the reseller can oversell disk space.\n\n* `1` — The reseller can oversell disk space.\n* `0` — The reseller **cannot** oversell disk space.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "diskquota": {
                              "description": "The reseller's total disk space quota.\n\n* A positive integer that represents the reseller's disk space quota, in megabytes (MB).\n* `0` — The reseller has unlimited disk space.",
                              "example": 0,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "diskused": {
                              "description": "The total amount of disk space that the reseller and all of its accounts use, in megabytes (MB).\n\n**Note:**\n\nThis value does not include disk space the reseller account uses if the root account owns it.",
                              "example": 5.69,
                              "type": "number"
                            },
                            "month": {
                              "description": "The current month or a queried month.",
                              "example": 2,
                              "maximum": 12,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "totalbwalloc": {
                              "description": "The total amount of bandwidth that the reseller has given to its accounts, in megabytes (MB), encoded as a string.",
                              "example": "500",
                              "type": "string"
                            },
                            "totalbwused": {
                              "description": "The total amount of bandwidth that the reseller's accounts have used, in megabytes (MB), encoded as a string.",
                              "example": 0,
                              "type": "string"
                            },
                            "totaldiskalloc": {
                              "description": "The total amount of disk space that the reseller has given to its accounts, in megabytes (MB), encoded as a string.",
                              "example": "1100",
                              "type": "string"
                            },
                            "user": {
                              "description": "The reseller account's username.",
                              "example": "username",
                              "format": "username",
                              "type": "string"
                            },
                            "year": {
                              "description": "The current year or a queried year.",
                              "example": 2019,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "resellerstats",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return reseller's information",
        "tags": [
          "Resellers",
          "Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 resellerstats user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/resellerstats?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/reset_autossl_provider": {
      "get": {
        "description": "This function resets the AutoSSL registration with a remote AutoSSL provider.",
        "operationId": "reset_autossl_provider",
        "parameters": [
          {
            "description": "The AutoSSL provider's name.",
            "in": "query",
            "name": "provider",
            "required": true,
            "schema": {
              "example": "cPanel",
              "type": "string"
            }
          },
          {
            "description": "Additional parameters which you wish to pass to the AutoSSL provider.\n\n**Note:**\n\n These additional parameters begin with the `x_` prefix.\n For example, the Let's Encrypt provider accepts the `x_terms_of_service_accepted` parameter,\n to which you would pass the URL of the terms of service that you accept.",
            "in": "query",
            "name": "x_*",
            "required": false,
            "schema": {
              "example": "(varies)",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "reset_autossl_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Restore AutoSSL registration",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 reset_autossl_provider provider='cPanel'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/reset_autossl_provider?api.version=1&provider=cPanel"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/reset_service_ssl_certificate": {
      "get": {
        "description": "This function regenerates a self-signed SSL certificate and assigns it to a service.",
        "operationId": "reset_service_ssl_certificate",
        "parameters": [
          {
            "description": "The service.\n\n* `ftp` - The `ftp` service.\n* `exim` - The `exim` service.\n* `dovecot` - The `dovecot` service.\n* `cpanel` - The `cpanel` service.\n* `mail_apns` -  The `mail_apns` service.",
            "in": "query",
            "name": "service",
            "required": true,
            "schema": {
              "enum": [
                "ftp",
                "exim",
                "dovecot",
                "cpanel",
                "mail_apns"
              ],
              "example": "cpanel",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "certificate": {
                          "description": "The SSL certificate's contents.",
                          "example": "-----BEGIN CERTIFICATE-----\nMIIDWzCCAkOgAwIBAgIFAiil8fgwDQYJKoZIhvcNAQELBQAwRjEcMBoGA1UEAwwT\ndm01LmRvY3MuY3BhbmVsLm5ldDEmMCQGCSqGSIb3DQEJARYXc3NsQHZtNS5kb2Nz\nLmNwYW5lbC5uZXQwHhcNMTQxMTI0MTg0NDE5WhcNMTUxMTI0MTg0NDE5WjBGMRww\nGgYDVQQDDBN2bTUuZG9jcy5jcGFuZWwubmV0MSYwJAYJKoZIhvcNAQkBFhdzc2xA\ndm01LmRvY3MuY3BhbmVsLm5ldDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAKYsBFQaqfz9ggP2uw+Vm4196hDlgZtx/A7cN7ktDkCzztxpQ1Us6zty0DPB\nKm6aMhi8tvfO1/DU8+L2ybmgXXmAvhMjEdBYtiMd7rUVAo4zuPOzwABJzfTq46Wk\ntQiuT9TZ+051ixFLRyz58ke0jAqqQugeZK1d5q1m82lUow3LU3oPhtYiR31ROU4g\nHt1/p+okMf3T21Bl6lLXQf8EVwUL8c0zrRsLYlhIFGyedaVqoZ47anGFc0U0ZJzw\nBOXnmxbYZY+pExXiNZpxTjUDKgtLvY8CjrHjNgVXSL9S7J8Src4/l7SvKoRjnAit\nKsMh6d/nTC4bukX5FGBph9anoFcCAwEAAaNQME4wHQYDVR0OBBYEFDBzN9RDgdnH\nHx5x7iUeBDX8qQ3yMB8GA1UdIwQYMBaAFDBzN9RDgdnHHx5x7iUeBDX8qQ3yMAwG\nA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBACYT6VSDfRxsGIzzoYMlIN9K\nd1pfDqFVFKZecI9M+fc0iAnYYRm5VUpItw5fAoMbrjCL4XMZKImSmkAWc4m9cCDs\nWT4rSEE/Fhv3dUjI3Hg7CFoxwU+Ke+yORsPNCv/9lDjReh9pU120UIttOa1lu9NN\nkT8QcUN0+NAvhj6MTm87VsQBNEpQhddyPuOmtga/zf8HTOcvtbeoRTueVNa4yNvP\n3UI6FLwNWNebzgm5zunahY7svqrTbKkNbQbIFqHrhSZdY5i7+I7Lgi9hfri7nDDk\nl6Dv+Ntm0LKWJNEKuZ8I+QVuJiFIFqF/8Gsqc/8pDuJF3b7UchyqGCXJhnExBR4=\n-----END CERTIFICATE-----",
                          "format": "pem-certificate",
                          "type": "string"
                        },
                        "certificate_info": {
                          "description": "Detailed information about the certificate.",
                          "properties": {
                            "domains": {
                              "description": "The domains that correspond to the certificate.",
                              "items": {
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "ecdsa_curve_name": {
                              "description": "The ECDSA curve that the certificate's key uses.\n\n* `prime256v1`\n* `secp384r1`\n* `null` — The certificate's key is **not** an ECDSA key.",
                              "enum": [
                                "prime256v1",
                                "secp384r1"
                              ],
                              "example": null,
                              "nullable": true,
                              "type": "string"
                            },
                            "ecdsa_public": {
                              "description": "The certificate's key's ECDSA compressed public point, in hexadecimal format.\n\n* `null` — The certificate's key is **not** an ECDSA key.",
                              "example": null,
                              "nullable": true,
                              "type": "string"
                            },
                            "is_self_signed": {
                              "description": "This value indicates whether the certificate is a self-signed certificate.\n* `1` - Certificate is self-signed.\n* `0` - Certificate is **not** self-signed.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "issuer.commonName": {
                              "description": "The Common Name of the organization that issued the certificate.",
                              "example": "example.com",
                              "type": "string"
                            },
                            "issuer.organizationName": {
                              "description": "The organization that generated the certificate.",
                              "example": "Writer's Guild of America",
                              "type": "string"
                            },
                            "issuer_text": {
                              "description": "Information about the issuer.",
                              "example": "commonName\nhostname.example.com\nemailAddress\nssl@hostname.example.com",
                              "type": "string"
                            },
                            "key_algorithm": {
                              "description": "The certificate's key's algorithm.\n\n* `rsaEncryption` — RSA.\n* `id-ecPublicKey` — ECDSA.",
                              "enum": [
                                "rsaEncryption",
                                "id-ecPublicKey"
                              ],
                              "example": "rsaEncryption",
                              "type": "string"
                            },
                            "modulus": {
                              "description": "The certificate's key's modulus, in hexadecimal format.\n\n* `null` — The certificate's key is **not** an RSA key.",
                              "example": "a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db",
                              "nullable": true,
                              "type": "string"
                            },
                            "modulus_length": {
                              "description": "The certificate's key's modulus length, in bits.\n\n* `null` — The certificate's key is **not** an RSA key.",
                              "example": 2048,
                              "minimum": 1,
                              "nullable": true,
                              "type": "integer"
                            },
                            "not_after": {
                              "description": "When the certificate expires.",
                              "example": 1398805499,
                              "format": "unix_timestamp",
                              "type": "integer"
                            },
                            "not_before": {
                              "description": "The certificate's validation date.",
                              "example": 1367269499,
                              "format": "unix_timestamp",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "service": {
                          "description": "The service that the certificate corresponds to.\n* `ftp` - The `ftp` service.\n* `exim` - The `exim` service.\n* `dovecot` - The `dovecot` service.\n* `cpanel` - The `cpanel` service.\n* `mail_apns` - The `mail_apns` service.",
                          "enum": [
                            "ftp",
                            "exim",
                            "dovecot",
                            "cpanel",
                            "mail_apns"
                          ],
                          "example": "ftp",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "reset_service_ssl_certificate",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create self-signed SSL certificate for service",
        "tags": [
          "SSL",
          "Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 reset_service_ssl_certificate service='cpanel'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/reset_service_ssl_certificate?api.version=1&service=cpanel"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.40"
      }
    },
    "/resetzone": {
      "get": {
        "description": "This function resets a DNS zone to its default values. This also resets the domain's subdomain DNS records, and restores zone file subdomains in the server's `httpd.conf` file. For example, use this function to restore DNS zones that are corrupt.\n\n**Note:**\n\nZone resets preserve valid TXT records, but **all** other records will return to their default values.\n\n**Important:**\n\nWhen you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.\n\n**Note**\n\nYou **must** include either the `domain` or the `zone` parameters.",
        "operationId": "resetzone",
        "parameters": [
          {
            "description": "The domain.",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The domain's owner.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "example": "user",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The zone file.",
            "in": "query",
            "name": "zone",
            "required": false,
            "schema": {
              "example": "example.com.db",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "resetzone",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason `field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Restore DNS zone to default values",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 resetzone"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/resetzone?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/resolvedomainname": {
      "get": {
        "description": "This function resolves a domain's IPv4 address.",
        "operationId": "resolvedomainname",
        "parameters": [
          {
            "description": "The domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "ip": {
                          "description": "The domain's IPv4 address.",
                          "example": "192.168.0.20",
                          "format": "ipv4",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "resolvedomainname",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return domain's IP address",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 resolvedomainname domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/resolvedomainname?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.28"
      }
    },
    "/restartservice": {
      "get": {
        "description": "This function restarts a service, or daemon, on a server.\n\n**Note:**\n\nIf the user **only** possesses the `clustering`\n[Access Control List (ACL)](https://documentation.cpanel.net/display/DD/Guide+to+WHM+Plugins+-+ACL+Reference+Chart)\nthen this function can **only** act on the `named` service.",
        "operationId": "restartservice",
        "parameters": [
          {
            "description": "The service to restart. For a list of possible values, read our\n[Access Control List (ACL)](https://documentation.cpanel.net/display/DD/Guide+to+WHM+Plugins+-+ACL+Reference+Chart)\ndocumentation.",
            "in": "query",
            "name": "service",
            "required": true,
            "schema": {
              "example": "exim",
              "type": "string"
            }
          },
          {
            "description": "Whether to queue this task.\n\n* `1` — Queue.\n* `0` — Do **not** queue.\n\n**Note:**\n\nThis parameter affects the `output` return.",
            "in": "query",
            "name": "queue_task",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "output": {
                          "description": "The function's raw output.\n\n**Note:**\n\nIf you call the `queue_task` parameter, this changes the return's output:\n\n* `1` — Nothing.\n* `0` — A string of raw output.",
                          "example": "Waiting for httpd to restart..............finished.\\n\\nhttpd (/usr/local/apache/bin/httpd -k start -DSSL) running as root with PID 21379\\nhttpd (/usr/local/apache/bin/httpd -k start -DSSL) running as root with PID 21385\\n\\nhttpd started ok\\n",
                          "type": "string"
                        },
                        "service": {
                          "description": "The restarted service.",
                          "example": "exim",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restartservice",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Restart service",
        "tags": [
          "Server Administration",
          "Services"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restartservice service='exim'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restartservice?api.version=1&service=exim"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_config_from_file": {
      "get": {
        "description": "This function restores a configuration backup from a file. If the backup file does **not** contain any changes, the system does **not** write to the configuration file.",
        "operationId": "restore_config_from_file",
        "parameters": [
          {
            "description": "The configuration module's name.\n\n**Important:**\n\nThis parameter is case-sensitive. You **must** enter the parameter in the correct case format; otherwise, the function will fail.",
            "in": "query",
            "name": "module",
            "required": true,
            "schema": {
              "example": "Main",
              "type": "string"
            }
          },
          {
            "description": "The absolute path to configuration file.\n\n**Note:**\nIf this parameter contains JSON or equals-sign key and value pairs, they **must** appear in new lines.",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "example": "/var/cpanel/cpanel.config",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_config_from_file",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update configuration file from backup",
        "tags": [
          "Server Administration",
          "Configuration Clusters"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_config_from_file module='Main' path='/var/cpanel/cpanel.config'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_config_from_file?api.version=1&module=Main&path=%2fvar%2fcpanel%2fcpanel.config"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "74"
      }
    },
    "/restore_config_from_upload": {
      "post": {
        "description": "This function restores a configuration backup file via HTTP POST\nmethod. If the backup file does **not** contain any changes, the system does **not** write to the configuration file.\n\n**Note:**\n\nThe format for this command line example differs from our standard format because the function **only** accepts an HTTP POST request. For more information about how to call this request method, read [Mozilla's POST documentation](https://go.cpanel.net/Mozilla-POST-documentation).",
        "operationId": "restore_config_from_upload",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "The configuration file data, in `multipart/form-data` format.\n\n**Note:**\n\nWhen you call this function on the command line, you **must** provide the configuration file's filepath. For example, you would use the 'file=@/var/cpanel/cpanel.config' parameter structure to call this function.",
                    "example": "#### NOTICE ####\n# After manually editing any configuration settings in this file,\n# please run '/usr/local/cpanel/scripts/restartsrv_cpsrvd' or\n# 'service cpanel restart' to fully update your server's configuration.RS=paper_lantern\nVFILTERDIR=/etc/vfilters\naccess_log=/usr/local/cpanel/logs/access_log\naccount_login_access=owner_root\nadminuser=cpanel\nallow_deprecated_accesshash=0\nallow_login_autocomplete=1\nallow_server_info_status_from=\nallow_weak_checksums=0\nallowcpsslinstall=1\nallowparkhostnamedomainsubdomains=0\nallowparkonothers=0\nallowremotedomains=0\nallowresellershostnamedomainsubdomains=0\nallowunregistereddomains=1\nallowwhmparkonothers=0\nalwaysredirecttossl=1\napache_port=0.0.0.0:80\napache_ssl_port=0.0.0.0:443\napi_shell=1\nautocreateaentries=1\nautodiscover_host=cpanelemaildiscovery.cpanel.net\nautodiscover_mail_service=imap\nautodiscover_proxy_subdomains=0\nautoupdate_certificate_on_hostname_mismatch=1\nawstatsbrowserupdate=0\nawstatsreversedns=0\nbasename=cpanel\nbind_deferred_restart_time=2\nblockcommondomains=1\nbwcycle=2\ncgihidepass=1\ncheck_zone_owner=1\ncheck_zone_syntax=1\nchkservd_check_interval=300\nchkservd_hang_allowed_intervals=2\nchkservd_plaintext_notify=0\ncluster_autodisable_threshold=10\ncluster_failure_notifications=1\nconserve_memory=0\ncookieipvalidation=strict\ncoredump=0\ncpaddons_adminemail=\ncpaddons_autoupdate=1\ncpaddons_max_moderation_req_all_mod=99\ncpaddons_max_moderation_req_per_mod=99\ncpaddons_moderation_request=0\ncpaddons_no_3rd_party=0\ncpaddons_no_modified_cpanel=1\ncpaddons_notify_owner=1\ncpaddons_notify_root=1\ncpaddons_notify_users=Allow users to choose\ncpanel_locale=\ncpredirect=Origin Domain Name\ncpredirectssl=SSL Certificate Name\ncpsrvd-domainlookup=0\ncreate_account_dkim=1\ncreate_account_spf=1\ncycle_hours=24\ndatabase_prefix=1\ndebughooks=0\ndefault_archive-logs=1\ndefault_login_theme=cpanel\ndefault_pkg_bwlimit=1048576\ndefault_pkg_max_emailacct_quota=1024\ndefault_pkg_quota=10240\ndefault_remove-old-archived-logs=1\ndefaultmailaction=localuser\ndisable-php-as-reseller-security=0\ndisablequotacache=0\ndisk_usage_include_mailman=1\ndisk_usage_include_sqldbs=1\ndisplay_cpanel_doclinks=0\ndnsadmin_log=0\ndnsadmin_verbose_sync=0\ndnsadminapp\ndnslookuponconnect=0\ndocroot=/usr/local/cpanel/base\ndomainowner_mail_pass=0\ndormant_services=cpdavd,cphulkd,cpsrvd,dnsadmin,spamd\ndumplogs=1\nemail_account_quota_default_selected=userdefined\nemail_account_quota_userdefined_default_value=1024\nemail_outbound_spam_detect_action=noaction\nemail_outbound_spam_detect_enable=1\nemail_outbound_spam_detect_threshold=500\nemail_send_limits_count_mailman=0\nemail_send_limits_defer_cutoff=125\nemail_send_limits_max_defer_fail_percentage\nemail_send_limits_min_defer_fail_to_trigger_protection=5\nemailarchive=0\nemailpasswords=0\nemailsperdaynotify\nemailusers_diskusage_critical_contact_admin=1\nemailusers_diskusage_critical_percent=90.0000\nemailusers_diskusage_full_contact_admin=1\nemailusers_diskusage_full_percent=98.0000\nemailusers_diskusage_warn_contact_admin=0\nemailusers_diskusage_warn_percent=80.0000\nemailusers_mailbox_critical_percent=90.0000\nemailusers_mailbox_full_percent=98.0000\nemailusers_mailbox_warn_percent=80.0000\nemailusersbandwidthexceed=0\nemailusersbandwidthexceed70=0\nemailusersbandwidthexceed75=0\nemailusersbandwidthexceed80=1\nemailusersbandwidthexceed85=0\nemailusersbandwidthexceed90=0\nemailusersbandwidthexceed95=0\nemailusersbandwidthexceed97=0\nemailusersbandwidthexceed98=0\nemailusersbandwidthexceed99=0\nempty_trash_days=disabled\nenable_piped_logs=1\nenablecompileroptimizations=0\nenablefileprotect=1\nengine=cpanel\nenginepl=cpanel.pl\nengineroot=/usr/local/cpanel\nexim-retrytime=15\nexim_retention_days=10\neximmailtrap=1\nextracpus=0\nfile_upload_max_bytes\nfile_upload_must_leave_bytes=5\nfile_usage=0\nftpquotacheck_expire_time=30\nftpserver=pure-ftpd\ngzip_compression_level=6\ngzip_pigz_block_size=4096\ngzip_pigz_processes=1\nhtaccess_check_recurse=2\nhttpd_deferred_restart_time=0\nignoredepreciated=0\ninvite_sub=1\nionice_bandwidth_processing=6\nionice_cpbackup=6\nionice_dovecot_maintenance=7\nionice_email_archive_maintenance=7\nionice_ftpquotacheck=6\nionice_log_processing=7\nionice_quotacheck=6\nionice_userbackup=7\nionice_userproc=6\nipv6_control=0\nipv6_listen=0\njailapache=0\njaildefaultshell=0\njailmountbinsuid=0\njailmountusrbinsuid=0\njailprocmode=mount_proc_jailed_fallback_full\nkeepftplogs=0\nkeeplogs=0\nkeepstatslog=0\nloadthreshold\nlocal_nameserver_type=bind\nlog_successful_logins=0\nlogchmod=0640\nlogout_redirect_url=\nmailbox_storage_format=maildir\nmailserver=dovecot\nmaintenance_rpm_version_check=1\nmaintenance_rpm_version_digest_check=1\nmaxcpsrvdconnections=200\nmaxemailsperhour\nmaxmem=768\nmin_time_between_apache_graceful_restarts=10\nminpwstrength=0\nmodsec_keep_hits=7\nmycnf_auto_adjust_innodb_buffer_pool_size=0\nmycnf_auto_adjust_maxallowedpacket=1\nmycnf_auto_adjust_openfiles_limit=1\nmyname=cpaneld\nmysql-host=localhost\nmysql-version=5.5\nmysqldebug=0\nnobodyspam=1\nnocpbackuplogs=0\nnosendlangupdates=0\nnotify_expiring_certificates=1\nnumacctlist=30\noverwritecustomproxysubdomains=0\noverwritecustomsrvrecords=0\npermit_appconfig_entries_without_acls=0\npermit_appconfig_entries_without_features=0\npermit_unregistered_apps_as_reseller=0\npermit_unregistered_apps_as_root=0\nphp_max_execution_time=90\nphp_post_max_size=55\nphp_system_default_version=ea-php56\nphp_upload_max_filesize=50\nphploader=\nphpopenbasedirhome=0\npma_disableis=0\npopbeforesmtp=0\npopbeforesmtpsenders=0\npostgresdebug=0\nproduct=cPanel\nproxysubdomains=1\nproxysubdomainsfornewaccounts=1\nproxysubdomainsoverride=1\npublichtmlsubsonly=1\nquery_apache_for_nobody_senders=1\nreferrerblanksafety=0\nreferrersafety=0\nremotewhmtimeout=35\nrepquota_timeout=60\nrequiressl=0\nresetpass=1\nresetpass_sub=1\nroot=/usr/local/cpanel\nrotatelogs_size_threshhold_in_megabytes=300\nroundcube_db=sqlite\nrpmup_allow_kernel=0\nselfsigned_generation_for_bestavailable_ssl_install=1\nsend_error_reports=1\nsend_server_configuration=1\nsend_server_usage=1\nserver_locale=en\nshow_reboot_banner=1\nshowwhmbwusageinmegs=0\nsignature_validation=Release and Development Keyrings\nskip_chkservd_recovery_notify=0\nskipanalog=0\nskipapacheclientsoptimizer=0\nskipawstats=0\nskipboxcheck=1\nskipboxtrapper=0\nskipbwlimitcheck=0\nskipchkservd=0\nskipcpbandwd=0\nskipdiskcheck=0\nskipdiskusage=0\nskipeximstats=0\nskiphorde=0\nskiphttpauth=1\nskipjailmanager=0\nskipmailauthoptimizer=0\nskipmailman=0\nskipmodseclog=0\nskipnotifyacctbackupfailure=0\nskipoomcheck=0\nskipparentcheck=1\nskiprecentauthedmailiptracker=0\nskiproundcube=0\nskipspamassassin=0\nskipspambox=1\nskipsqmail=0\nskiptailwatchd=0\nskipwebalizer=0\nsmtpmailgidonly=1\nssh_host_key_checking=0\nstats_log=/usr/local/cpanel/logs/stats_log\nstatsloglevel=1\nstatthreshhold=256\nsystem_diskusage_critical_percent=92.5500\nsystem_diskusage_warn_percent=82.5500\ntcp_check_failure_threshold=3\ntransfers_timeout=1800\ntweak_unset_vars=\nupcp_log_retention_days=45\nupdate_log_analysis_retention_length=90\nuse_apache_md5_for_htaccess=1\nuse_information_schema=1\nuseauthnameservers=1\nusemailformailmanurl=0\nusemysqloldpass=0\nuserdirprotect=1\nverify_3rdparty_cpaddons=0\nversion=3.4\nxframecpsrvd=0",
                    "format": "binary",
                    "type": "string"
                  },
                  "module": {
                    "description": "The configuration module's name.\n\n* `Basic` — The [Basic WebHost Manager Setup](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) configuration.\n* `Main` — The [Tweak Settings](https://go.cpanel.net/whmdocsTweakSettings) configuration.\n\n**Important:**\n\nThis parameter is case-sensitive. You **must** enter the parameter in the correct case format; otherwise, the function will fail.",
                    "enum": [
                      "Basic",
                      "Main"
                    ],
                    "example": "Main",
                    "type": "string"
                  }
                },
                "required": [
                  "module",
                  "file"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_config_from_upload",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update configuration file from backup via POST",
        "tags": [
          "Server Administration",
          "Configuration Clusters"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 --input=json --output=json restore_config_from_upload"
          },
          {
            "label": "HTTP Request (Wire Format)",
            "lang": "HTTP",
            "source": "POST /cpsess##########/json-api/restore_config_from_upload HTTP/1.1\nHost: example.com:2083\nCookie: ###################################\nContent-Type: application/json\nContent-Length: 0\n\n"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "74"
      }
    },
    "/restore_modules_summary": {
      "get": {
        "description": "This function lists backup modules and their descriptions.",
        "operationId": "restore_modules_summary",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": {
                        "modules": [
                          {
                            "module": "APITokens",
                            "restricted_available": 1,
                            "summary": [
                              "The APITokens module restores the API tokens for an account."
                            ]
                          },
                          {
                            "module": "Account",
                            "restricted_available": 1,
                            "restricted_summary": [
                              "Force mode is not available in restricted mode."
                            ],
                            "summary": [
                              "This creates the cPanel account and system user."
                            ]
                          },
                          {
                            "module": "AuthnLinks",
                            "restricted_available": 1,
                            "summary": [
                              "This restores the account’s external authentication links."
                            ]
                          },
                          {
                            "module": "AutoSSL",
                            "restricted_available": 1,
                            "summary": [
                              "This restores AutoSSL settings."
                            ]
                          },
                          {
                            "module": "BackupConfig",
                            "restricted_available": 1,
                            "summary": [
                              "This installs the backup configuration based on the target system’s defaults."
                            ]
                          },
                          {
                            "module": "BandwidthData",
                            "restricted_available": 1,
                            "summary": [
                              "This restores the bandwidth data."
                            ]
                          },
                          {
                            "module": "CpUser",
                            "restricted_available": 1,
                            "restricted_summary": [
                              "The system discards configuration data that is unknown or that the system cannot validate."
                            ],
                            "summary": [
                              "This restores the cPanel account’s configuration data."
                            ]
                          },
                          {
                            "module": "Cron",
                            "restricted_available": 1,
                            "summary": [
                              "This restores crontab entries."
                            ]
                          },
                          {
                            "module": "CustomLocale",
                            "restricted_available": 0,
                            "summary": [
                              "This restores custom locales."
                            ]
                          },
                          {
                            "module": "DKIM",
                            "restricted_available": 1,
                            "summary": [
                              "This restores DKIM (DomainKeys Identified Mail) keys and updates records for the current server."
                            ]
                          },
                          {
                            "module": "DNSAuthority",
                            "restricted_available": 1,
                            "summary": [
                              "This module reports whether this system is authoritative for each of the new accounts’ DNS (Domain Name System) zones."
                            ]
                          },
                          {
                            "module": "DNSSEC",
                            "restricted_available": 1,
                            "summary": [
                              "This module restores the DNSSEC keys for an account."
                            ]
                          },
                          {
                            "module": "DigestShadow",
                            "restricted_available": 1,
                            "summary": [
                              "This restores password data for digest authentication."
                            ]
                          },
                          {
                            "module": "Domains",
                            "restricted_available": 1,
                            "restricted_summary": [
                              "The system will restore subdomains, parked domains, and addon domains if they pass the server’s domain creation rules. If the server rejects the restoration of an addon domain, it will still create a subdomain associated with that addon domain."
                            ],
                            "summary": [
                              "This restores subdomains, parked domains, and addon domains."
                            ]
                          },
                          {
                            "module": "FeatureList",
                            "restricted_available": 1,
                            "summary": [
                              "This restores the account’s feature list setting."
                            ]
                          },
                          {
                            "module": "FileProtect",
                            "restricted_available": 1,
                            "summary": [
                              "This configures the account for cPanel FileProtect."
                            ]
                          },
                          {
                            "module": "Ftp",
                            "restricted_available": 1,
                            "summary": [
                              "This restores FTP (File Transfer Protocol) accounts."
                            ]
                          },
                          {
                            "module": "Homedir",
                            "restricted_available": 1,
                            "restricted_summary": [
                              "If the home directory does not already exist, the system will not create it."
                            ],
                            "summary": [
                              "This restores the home directory’s contents."
                            ]
                          },
                          {
                            "module": "Horde",
                            "restricted_available": 1,
                            "summary": [
                              "This restores Horde configuration and preferences."
                            ]
                          },
                          {
                            "module": "Htaccess",
                            "restricted_available": 1,
                            "summary": [
                              "This repairs EasyApache4 and removes legacy Frontpage entries from .htaccess."
                            ]
                          },
                          {
                            "module": "IPAddress",
                            "restricted_available": 1,
                            "summary": [
                              "This sets up a dedicated IP address."
                            ]
                          },
                          {
                            "module": "Integration",
                            "restricted_available": 0,
                            "summary": [
                              "Implementor Error: The summary for this module is missing."
                            ]
                          },
                          {
                            "module": "LinkedNodes",
                            "restricted_available": 1,
                            "summary": [
                              "This module handles the linked node setup."
                            ]
                          },
                          {
                            "module": "LinkedNodesSubarchives",
                            "restricted_available": 1,
                            "summary": [
                              "This module restores linked-node configurations when the archive contains linked node data."
                            ]
                          },
                          {
                            "module": "LocalConfig",
                            "restricted_available": 1,
                            "summary": [
                              "This module updates the local user’s configuration."
                            ]
                          },
                          {
                            "module": "Logs",
                            "restricted_available": 1,
                            "summary": [
                              "This restores service access logs."
                            ]
                          },
                          {
                            "module": "Mail",
                            "restricted_available": 1,
                            "summary": [
                              "This resets email quotas to safe values and restores email aliases and filters."
                            ]
                          },
                          {
                            "module": "MailFix",
                            "restricted_available": 1,
                            "summary": [
                              "This repairs mail permissions and upgrades the system to the latest storage methods."
                            ]
                          },
                          {
                            "module": "MailLimits",
                            "restricted_available": 1,
                            "summary": [
                              "This restores any holds or suspensions on outgoing messages for a user’s email accounts."
                            ]
                          },
                          {
                            "module": "MailRouting",
                            "restricted_available": 1,
                            "summary": [
                              "This updates MX (Mail eXchange) records."
                            ]
                          },
                          {
                            "module": "MailSync",
                            "restricted_available": 1,
                            "summary": [
                              "This copies any new mail to the local server that the remote account received during the transfer."
                            ]
                          },
                          {
                            "module": "Mailman",
                            "restricted_available": 1,
                            "summary": [
                              "This restores mailing lists."
                            ]
                          },
                          {
                            "module": "ManualMX",
                            "restricted_available": 1,
                            "summary": [
                              "This configures the source server’s manual MX entries to send mail to the destination server."
                            ]
                          },
                          {
                            "module": "Mysql",
                            "restricted_available": 1,
                            "summary": [
                              "This restores MariaDB/MySQL databases, users, and grants."
                            ]
                          },
                          {
                            "module": "MysqlRemoteNotes",
                            "restricted_available": 1,
                            "summary": [
                              "The MysqlRemoteNotes module restores the Remote MySQL comments for an account."
                            ]
                          },
                          {
                            "module": "NobodyFiles",
                            "restricted_available": 1,
                            "summary": [
                              "This restores ownership of files previously owned by the “nobody” user in the home directory."
                            ]
                          },
                          {
                            "module": "OldHomedirs",
                            "notes": [
                              "Symbolic links for former home directories ensure that applications with hard-coded paths continue to work when transferred between servers."
                            ],
                            "restricted_available": 0,
                            "summary": [
                              "This creates symbolic links to former home directory paths."
                            ]
                          },
                          {
                            "module": "Package",
                            "notes": [
                              "If the target server does not have the package that the user has been assigned, the system will use the account’s properties to recreate the package."
                            ],
                            "restricted_available": 0,
                            "summary": [
                              "This recreates account packages."
                            ]
                          },
                          {
                            "module": "Password",
                            "restricted_available": 1,
                            "summary": [
                              "This restores the encrypted system password."
                            ]
                          },
                          {
                            "module": "PostRestoreActions",
                            "notes": [
                              "This module updates system databases and name server IP address lists, restarts services, unblocks dynamic content, and runs custom post-restoration scripts."
                            ],
                            "restricted_available": 1,
                            "summary": [
                              "This runs post-restoration actions and cleanups."
                            ]
                          },
                          {
                            "module": "Postgres",
                            "restricted_available": 0,
                            "restricted_summary": [
                              "PostgreSQL version “8.4” or later is required to restore databases in restricted mode."
                            ],
                            "summary": [
                              "This restores PostgreSQL databases, users, and grants."
                            ]
                          },
                          {
                            "module": "PreRestoreActions",
                            "notes": [
                              "This module temporarily lifts the account’s quota and runs custom pre-restoration scripts."
                            ],
                            "restricted_available": 1,
                            "summary": [
                              "This performs pre-restoration actions and cleanups."
                            ]
                          },
                          {
                            "module": "ProxySubdomains",
                            "notes": [
                              "This module ensures that service subdomains such as “cpanel”, “cpcalendars”, and “cpcontacts” are configured properly."
                            ],
                            "restricted_available": 1,
                            "summary": [
                              "This restores service subdomains."
                            ]
                          },
                          {
                            "module": "PublicContact",
                            "restricted_available": 1,
                            "summary": [
                              "This restores the account’s public contact data."
                            ]
                          },
                          {
                            "module": "PublicHtmlSymlinks",
                            "notes": [
                              "Symbolic links for former web root directories ensure that applications with hard-coded paths will continue to work when transferred between servers."
                            ],
                            "restricted_available": 1,
                            "restricted_summary": [
                              "The system does not recreate symbolic links outside of the account’s home directory in restricted mode."
                            ],
                            "summary": [
                              "This creates symbolic links to former web root directory paths."
                            ]
                          },
                          {
                            "module": "PublishZones",
                            "restricted_available": 1,
                            "summary": [
                              "This module ensures all zones have been synced out and reloaded across the DNS (Domain Name System) cluster."
                            ]
                          },
                          {
                            "module": "Quota",
                            "restricted_available": 1,
                            "summary": [
                              "This restores the account’s data storage quota."
                            ]
                          },
                          {
                            "module": "Reseller",
                            "notes": [
                              "This restores all of the privileges the account previously had. This includes the “all” privilege, which is equivalent to root access."
                            ],
                            "restricted_available": 0,
                            "summary": [
                              "This restores reseller privileges."
                            ]
                          },
                          {
                            "module": "ResyncHomedir",
                            "restricted_available": 1,
                            "restricted_summary": [
                              "If the home directory does not already exist, the system will not create it."
                            ],
                            "summary": [
                              "This module will resynchronize the home directory from the source server. The module preserves any changes that occurred during the transfer."
                            ]
                          },
                          {
                            "module": "Roundcube",
                            "restricted_available": 1,
                            "summary": [
                              "This restores Roundcube configuration and preferences."
                            ]
                          },
                          {
                            "module": "SPF",
                            "restricted_available": 1,
                            "summary": [
                              "This restores SPF (Sender Policy Framework) records and updates them for the target server."
                            ]
                          },
                          {
                            "module": "SSL",
                            "restricted_available": 1,
                            "summary": [
                              "This restores SSL (Secure Sockets Layer) keys, certificates, and virtual host entries."
                            ]
                          },
                          {
                            "module": "ServiceProxy",
                            "restricted_available": 1,
                            "summary": [
                              "This module sets up applicable service proxying to the destination servers."
                            ]
                          },
                          {
                            "module": "Shell",
                            "restricted_available": 1,
                            "restricted_summary": [
                              "In restricted mode, the system will set any account that requests a shell other than “noshell” or “jailshell” to use “jailshell”."
                            ],
                            "summary": [
                              "This restores the account’s shell."
                            ]
                          },
                          {
                            "module": "SpamAssassin",
                            "restricted_available": 0,
                            "summary": [
                              "This module will disable SpamAssassin for the restored user if they had it enabled at the source."
                            ]
                          },
                          {
                            "module": "Subaccount",
                            "restricted_available": 0,
                            "summary": [
                              "Implementor Error: The summary for this module is missing."
                            ]
                          },
                          {
                            "module": "Suspend",
                            "restricted_available": 1,
                            "restricted_summary": [
                              "The system will not restore the suspension reason or old shell for the account and instead will use a default."
                            ],
                            "summary": [
                              "This module will suspend the restored user if they were suspended at the source."
                            ]
                          },
                          {
                            "module": "Unsuspend",
                            "restricted_available": 1,
                            "summary": [
                              "This unsuspends .htaccess files."
                            ]
                          },
                          {
                            "module": "VhostIncludes",
                            "restricted_available": 0,
                            "summary": [
                              "This restores custom virtual host includes."
                            ]
                          },
                          {
                            "module": "Vhosts",
                            "restricted_available": 1,
                            "summary": [
                              "This module installs the web server configuration and restarts the web server."
                            ]
                          },
                          {
                            "module": "WebCalls",
                            "restricted_available": 1,
                            "summary": [
                              "This module restores the account’s web call data."
                            ]
                          },
                          {
                            "module": "WebDiskHomedir",
                            "restricted_available": 1,
                            "summary": [
                              "This rewrites web disk home directories to the correct location on the new server."
                            ]
                          },
                          {
                            "module": "ZoneFile",
                            "restricted_available": 1,
                            "summary": [
                              "This restores custom DNS (Domain Name System) Zone entries."
                            ]
                          },
                          {
                            "module": "userdata",
                            "restricted_available": 1,
                            "restricted_summary": [
                              "Restricted Restore does not restore the entire userdata file; instead, the system will create a new one and copy in certain information. Customizations to the userdata file in the archive will not be in the newly-created userdata file."
                            ],
                            "summary": [
                              "This restores website configuration (userdata)."
                            ]
                          }
                        ]
                      },
                      "properties": {
                        "modules": {
                          "description": "An array of objects containing information about backup configuration modules.",
                          "items": {
                            "properties": {
                              "module": {
                                "description": "The module's name.",
                                "type": "string"
                              },
                              "notes": {
                                "description": "Notes about the module, if any exist.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "restricted_available": {
                                "description": "Whether the module is available under a\n[restricted restore](https://go.cpanel.net/whmdocsTransferorRestoreacPanelAccount#restricted-restore).\n\n* `1` — The module is available under a restricted restore.\n* `0` — The module is **not** available under a restricted restore.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "type": "integer"
                              },
                              "restricted_summary": {
                                "description": "A description of the module's behavior when the transfer uses a restricted restore.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "summary": {
                                "description": "A description of the module's behavior when the transfer does **not** use a restricted restore.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_modules_summary",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return backup modules list",
        "tags": [
          "Account Restoration",
          "Restore Queue Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_modules_summary"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_modules_summary?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/restore_queue_activate": {
      "get": {
        "description": "This function activates the restore queue. This triggers a process that restores all queued accounts.",
        "operationId": "restore_queue_activate",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_activate",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Restore queue processing initiated",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Start restoration",
        "tags": [
          "Account Restoration",
          "Restore Queue Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_activate"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_activate?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_add_task": {
      "get": {
        "description": "This function restores a user's cPanel account from a backup file.",
        "operationId": "restore_queue_add_task",
        "parameters": [
          {
            "description": "The date of the backup to use, in `YYYY-MM-DD` format.",
            "in": "query",
            "name": "restore_point",
            "required": true,
            "schema": {
              "example": "2019-10-21T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "The destination's identification string.\n\n* `local` — The local directory.\n* The destination ID string's value.",
            "in": "query",
            "name": "destid",
            "required": false,
            "schema": {
              "default": "local",
              "example": "LmTZCUpqqLSPH8AO7pVtIeNK",
              "type": "string"
            }
          },
          {
            "description": "Whether to assign the account a dedicated IP address.\n\n* `1` — Assign a dedicated IP address.\n* `0` — Use the shared IP address.",
            "in": "query",
            "name": "give_ip",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to restore the account's email configuration.\n\n* `1` — Restore.\n* `0` — Do **not** restore.",
            "in": "query",
            "name": "mail_config",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to restore the account's MySQL® databases.\n\n* `1` — Restore.\n* `0` — Do **not** restore.",
            "in": "query",
            "name": "mysql",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to restore the account's subdomains.\n\n* `1` — Restore.\n* `0` — Do **not** restore.",
            "in": "query",
            "name": "subdomains",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "queue_id": {
                          "description": "The process's internal task queue ID.",
                          "example": "3b99QG5fp99tdL5",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_add_task",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Restore user account from backup",
        "tags": [
          "Account Restoration",
          "Restore Account"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_add_task user='username' restore_point='2019-10-21'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_add_task?api.version=1&user=username&restore_point=2019-10-21"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_clear_all_completed_tasks": {
      "get": {
        "description": "This function removes successfully completed tasks from the restoration queue.",
        "operationId": "restore_queue_clear_all_completed_tasks",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_clear_all_completed_tasks",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove all completed restoration tasks",
        "tags": [
          "Account Restoration",
          "Restore Queue Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_clear_all_completed_tasks"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_clear_all_completed_tasks?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_clear_all_failed_tasks": {
      "get": {
        "description": "This function removes any failed tasks from the restoration queue.",
        "operationId": "restore_queue_clear_all_failed_tasks",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_clear_all_failed_tasks",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove all failed restoration tasks",
        "tags": [
          "Account Restoration",
          "Restore Queue Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_clear_all_failed_tasks"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_clear_all_failed_tasks?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_clear_all_pending_tasks": {
      "get": {
        "description": "This function removes any pending tasks from the restoration queue.",
        "operationId": "restore_queue_clear_all_pending_tasks",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_clear_all_pending_tasks",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove all pending restoration tasks",
        "tags": [
          "Account Restoration",
          "Restore Queue Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_clear_all_pending_tasks"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_clear_all_pending_tasks?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_clear_all_tasks": {
      "get": {
        "description": "This function removes all tasks from the restoration queue.",
        "operationId": "restore_queue_clear_all_tasks",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_clear_all_tasks",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove all restoration tasks",
        "tags": [
          "Account Restoration",
          "Restore Queue Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_clear_all_tasks"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_clear_all_tasks?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_clear_completed_task": {
      "get": {
        "description": "This function removes a single completed task from the restoration queue.",
        "operationId": "restore_queue_clear_completed_task",
        "parameters": [
          {
            "description": "When the restoration queue started the restoration.",
            "in": "query",
            "name": "start_time",
            "required": true,
            "schema": {
              "example": 1396065600,
              "format": "unix_timestamp",
              "type": "integer"
            }
          },
          {
            "description": "The cPanel account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_clear_completed_task",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove completed restoration task",
        "tags": [
          "Account Restoration",
          "Restore Queue Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_clear_completed_task user='username' start_time='1396065600'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_clear_completed_task?api.version=1&user=username&start_time=1396065600"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_clear_pending_task": {
      "get": {
        "description": "This function removes a single pending task from the restoration queue.",
        "operationId": "restore_queue_clear_pending_task",
        "parameters": [
          {
            "description": "The cPanel account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_clear_pending_task",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove pending restoration task",
        "tags": [
          "Account Restoration",
          "Restore Queue Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_clear_pending_task user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_clear_pending_task?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_is_active": {
      "get": {
        "description": "This function checks whether the system's restoration queue is actively processing tasks.",
        "operationId": "restore_queue_is_active",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "is_active": {
                          "description": "Whether the restoration queue is actively processing tasks.\n\n* `1` — Currently active.\n* `0` — **Not** currently active.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_is_active",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate restoration queue is active",
        "tags": [
          "Account Restoration",
          "Restore Queue Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_is_active"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_is_active?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_list_active": {
      "get": {
        "description": "This function lists the tasks that the restoration queue is actively processing.",
        "operationId": "restore_queue_list_active",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "restore_job": {
                          "description": "An array of objects that contain information about an active task in the restoration queue.",
                          "items": {
                            "properties": {
                              "options": {
                                "description": "A list of information about an active task in the restoration queue.",
                                "properties": {
                                  "destid": {
                                    "description": "The backup location from which to restore the data.",
                                    "example": "local",
                                    "type": "string"
                                  },
                                  "give_ip": {
                                    "description": "Whether the task will assign the account a dedicated IP address.\n\n* `1` — Assign.\n* `0` — Will **not** assign.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "mail_config": {
                                    "description": "Whether the function will restore the account's email configuration.\n\n* `1` — Restore.\n* `0` — Will **not** restore.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "mysql": {
                                    "description": "Whether the task will restore the account's MySQL® databases.\n\n* `1` — Restore.\n* `0` — Will **not** restore.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "subdomains": {
                                    "description": "Whether the function will restore the account's subdomains.\n\n* `1` — Restore.\n* `0` — Will **not** restore.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "restore_point": {
                                "description": "The date of the backup that the task will use, in `YYYY-MM-DD` format.",
                                "example": "2019-10-21T00:00:00.000Z",
                                "format": "ISO-8601 Date",
                                "type": "string"
                              },
                              "user": {
                                "description": "The cPanel account's username.",
                                "example": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_list_active",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return active restoration tasks list",
        "tags": [
          "Account Restoration",
          "Restore Queue Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_list_active"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_list_active?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_list_completed": {
      "get": {
        "description": "This function lists the restoration queue's completed tasks.\n\n**Important:**\n\nThis function's output varies dramatically. The [`/usr/local/cpanel/bin/backup_restore_manager`](https://go.cpanel.net/backuprestoremanagerscript) script run with the `list_finished` option determines this output..\n\n**Note:**\n\nOn servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource records on DNS.\n  * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208](https://tools.ietf.org/html/rfc7208) deprecated SPF records. CentOS 7 servers use TXT records instead of SPF records.\n  * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).",
        "operationId": "restore_queue_list_completed",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "restore_queue_add_task_function": {
                    "description": "A task that the restore_queue_add_task function added.",
                    "value": {
                      "data": {
                        "restore_job": [
                          {
                            "restore_job": {
                              "options": {
                                "destid": "local",
                                "give_ip": 0,
                                "mail_config": 0,
                                "mysql": 0,
                                "subdomains": 0
                              },
                              "restore_point": "2020-03-29T00:00:00.000Z",
                              "user": "mrfrog"
                            },
                            "status_info": {
                              "altered_items": null,
                              "dangerous_items": null,
                              "finished": "1586188203",
                              "log": "warning",
                              "restore_logfile": "item-RESTORE_AccountLocal_mrfrog",
                              "result": 2,
                              "skipped_items": null,
                              "started": "1586188078",
                              "status": 2,
                              "statusmsg": "warning",
                              "transfer_session_id": "userbackup20200406154758JqBa",
                              "warnings": null
                            }
                          }
                        ]
                      },
                      "metadata": {
                        "command": "restore_queue_list_completed",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  },
                  "restorepkg": {
                    "description": "A task that the /scripts/restorepkg script added.",
                    "value": {
                      "data": {
                        "restore_job": [
                          {
                            "restore_job": {
                              "options": {
                                "give_ip": 0,
                                "mail_config": 1,
                                "mysql": 1,
                                "subdomains": 1
                              },
                              "restore_point": "YYYY-MM-DD",
                              "user": "example"
                            },
                            "status_info": {
                              "finished": "1355840823",
                              "log": "Extracting Domain....Done\n Done\n\n Restoring cpanel user config file    Done\n\n Restoring reseller packages and features (if any)\n     Restoring reseller privs (if any)\n     Restoring Locale Setting\n     Restoring SSL keys and Certificates    Done\n\n     Restoring frontpage (if installed)    Done\n\n     Restoring access logs....     Done\n\n     Restoring domain keys....     Done\n\n     Restoring MySQL databases....     Database \"cptmpdb_azri8qf8_0KuzT3yEH7JFeeSi\" dropped Done\n Successful creation of roundcube cp_schema_version table\nInitial run through schema migration: from '0.2b' to '0.8.4'\nPlease ignore non-fatal warnings, such as duplicate keys, columns, indexes, or tables already existing. \nSuccessfully saved version 0.8.4 to cp_schema_version table\nDBD::mysql::st execute failed: Table 'cptmpdb_azri8qf8_7WIKvg175f2M02yn.users' doesn't exist at /usr/local/cpanel/Cpanel/Email/RoundCube/DBI.pm line 503,  line 1. DBD::mysql::st execute failed: Table 'cptmpdb_azri8qf8_7WIKvg175f2M02yn.users' doesn't exist at /usr/local/cpanel/Cpanel/Email/RoundCube/DBI.pm line 503,  line 1. Transfer failed from temp database to Roundcube database.\n Done\n Done\n     Restoring MySQL privs    Done\n\n    Reloading MySQL    Done\n\nRestoring PostgreSQL databases.... ERROR:  role \"azri8qf8\" already exists      Restoring PostgreSQL privs     Done\n\n     Restoring Mailman lists    Done\n\n     Restoring Mailman Archives    Done\n\n      Restoring shell    Current shell /usr/local/cpanel/bin/noshell is up to date. Done\n\n     Restoring password    Password for azri8qf8 has been changed Done\n\n     Restoring proftpd file    Done\n\n     Resyncing FTP Passwords    Updating ftp passwords for azri8qf8Ftp password files updated.Ftp vhost passwords syncedDone\n\n     Linking old home directories\n     Parsing Domain Databases    ...Subdomains......ParkedDomains......AddonDomains... \\n     Restoring Domains\n\n     Restoring Bandwidth Data    Done\n     Restoring Counter Data \\n     Restoring Homedir....    Done\n\n     Doing fileprotect conversion\n     Restoring nobody owned files    Done\n\n     Restoring Mail files    Done\n \\n     Restoring userdata....     Done\n\n     Restoring custom virtualhost templates....\n     Converting email to cPanel 5+ (if needed)    Done\n\n     Cleaning up filters (if needed)    vfilter converter v3.0Updating vfilter files to latest format.Running for azri8qf8 only (force=0) (has_spam_acl=0)Processing azri8qf8......DoneDone\n \\n     Fixing mail permissions    Done\n\n     Restoring crontab    Done\n         Converting to maildir if needed    Done\n         Restoring Dns Zones    Restoring zone: 28-ps1n25d.test.db Zone updates: 28-ps1n25d.test\n     Adding missing subdomain DNS entries (if needed) \\n     Update Proxy subomains    Adding proxy subdomains for domain 28-ps1n25d.test.28-ps1n25d.test                    [28-ps1n25d.test, 10.215.215.229, no changes needed]Done\n\n     Updating SPF Records    Done\n\n     Restoring quota    Done\n \\n\n     Update mail routing    LOCAL MAIL EXCHANGER: This server will serve as a primary mail exchanger for 28-ps1n25d.test's mail.: This configuration has been manually selected. Done\n\n     Rebuilding Apache Conf    Built /usr/local/apache/conf/httpd.conf OK\n     Restore Complete    Account Restore Complete Unlocking password for user azri8qf8.passwd: Success.\n",
                              "result": 1,
                              "started": "1355840811"
                            }
                          },
                          {
                            "restore_job": {
                              "options": {
                                "give_ip": 1,
                                "mail_config": 0,
                                "mysql": 1,
                                "subdomains": 0
                              },
                              "restore_point": "YYYY-MM-DD",
                              "user": "bcow"
                            },
                            "status_info": {
                              "finished": "1355840823",
                              "log": "",
                              "result": 0,
                              "started": "1355840823"
                            }
                          }
                        ]
                      },
                      "metadata": {
                        "command": "restore_queue_list_completed",
                        "reason": "OK",
                        "result": 1,
                        "version": 1
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "restore_job": {
                          "description": "An array of objects that contain information about a completed task in the restoration queue.",
                          "items": {
                            "properties": {
                              "restore_job": {
                                "description": "An object that contains the task's settings.",
                                "properties": {
                                  "options": {
                                    "description": "An object that contains information about the task's options.",
                                    "properties": {
                                      "destid": {
                                        "description": "The destination's identification string.\n* `local` — The local directory.\n* The destination ID string's value.",
                                        "example": "LmTZCUpqqLSPH8AO7pVtIeNK",
                                        "type": "string"
                                      },
                                      "give_ip": {
                                        "description": "Whether the task assigned the account a dedicated IP address.\n* `1` - Assigned.\n* `0` - Did **not** assign.",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "mail_config": {
                                        "description": "Whether the function restored the account's email configuration.\n* `1` - Restored.\n* `0` - Did **not** restore.",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "mysql": {
                                        "description": "Whether the task restored the account's MySQL® databases.\n* `1` - Restored.\n* `0` - Did **not** restore.",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "subdomains": {
                                        "description": "Whether the function restored the account's subdomains.\n* `1` - Restored.\n* `0` - Did **not** restore.",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "example": 1,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "restore_point": {
                                    "description": "The date of the backup that the task used.",
                                    "example": "2015-10-21T00:00:00.000Z",
                                    "format": "ISO-8601 Date",
                                    "type": "string"
                                  },
                                  "user": {
                                    "description": "The cPanel account's username.",
                                    "example": "username",
                                    "format": "username",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "status_info": {
                                "description": "An object that contains information about the task's status.",
                                "properties": {
                                  "altered_items": {
                                    "description": "The number of items that the restoration process changed.",
                                    "example": 1,
                                    "nullable": true,
                                    "type": "integer"
                                  },
                                  "dangerous_items": {
                                    "description": "The number of items in the restoration process that may cause problems on the account.",
                                    "example": 1,
                                    "nullable": true,
                                    "type": "integer"
                                  },
                                  "finished": {
                                    "description": "The time that the restoration process completed this task.",
                                    "example": "1355840823",
                                    "format": "unix_timestamp",
                                    "type": "string"
                                  },
                                  "log": {
                                    "description": "The task's log information.",
                                    "example": "Extracting Domain....Done Done Restoring cpanel user config file Done Restoring reseller packages and features (if any) Restoring reseller privs (if any) Restoring Locale Setting Restoring SSL keys and Certificates Done Restoring frontpage (if installed) Done Restoring access logs.... Done Restoring domain keys.... Done Restoring MySQL databases.... Database \"cptmpdb_azri8qf8_0KuzT3yEH7JFeeSi\" dropped Done Successful creation of roundcube cp_schema_version table Initial run through schema migration: from '0.2b' to '0.8.4' Please ignore non-fatal warnings, such as duplicate keys, columns, indexes, or tables already existing. Successfully saved version 0.8.4 to cp_schema_version table DBD::mysql::st execute failed: Table 'cptmpdb_azri8qf8_7WIKvg175f2M02yn.users' doesn't exist at /usr/local/cpanel/Cpanel/Email/RoundCube/DBI.pm line 503, line 1. DBD::mysql::st execute failed: Table 'cptmpdb_azri8qf8_7WIKvg175f2M02yn.users' doesn't exist at /usr/local/cpanel/Cpanel/Email/RoundCube/DBI.pm line 503, line 1. Transfer failed from temp database to Roundcube database. Done Done Restoring MySQL privs Done Reloading MySQL Done Restoring PostgreSQL databases.... ERROR: role \"azri8qf8\" already exists Restoring PostgreSQL privs Done Restoring Mailman lists Done Restoring Mailman Archives Done Restoring shell Current shell /usr/local/cpanel/bin/noshell is up to date. Done Restoring password Password for azri8qf8 has been changed Done Restoring proftpd file Done Resyncing FTP Passwords Updating ftp passwords for azri8qf8Ftp password files updated.Ftp vhost passwords syncedDone Linking old home directories Parsing Domain Databases ...Subdomains......ParkedDomains......AddonDomains... Restoring Domains Restoring Bandwidth Data Done Restoring Counter Data Restoring Homedir.... Done Doing fileprotect conversion Restoring nobody owned files Done Restoring Mail files Done Restoring userdata.... Done Restoring custom virtualhost templates.... Converting email to cPanel 5+ (if needed) Done Cleaning up filters (if needed) vfilter converter v3.0Updating vfilter files to latest format.Running for azri8qf8 only (force=0) (has_spam_acl=0)Processing azri8qf8......DoneDone Fixing mail permissions Done Restoring crontab Done Converting to maildir if needed Done Restoring Dns Zones Restoring zone: 28-ps1n25d.test.db Zone updates: 28-ps1n25d.test Adding missing subdomain DNS entries (if needed) Update Proxy subomains Adding proxy subdomains for domain 28-ps1n25d.test.28-ps1n25d.test [28-ps1n25d.test, 10.215.215.229, no changes needed]Done Updating SPF Records Done Restoring quota Done Update mail routing LOCAL MAIL EXCHANGER: This server will serve as a primary mail exchanger for 28-ps1n25d.test's mail.: This configuration has been manually selected. Done Rebuilding Apache Conf Built /usr/local/apache/conf/httpd.conf OK Restore Complete Account Restore Complete Unlocking password for user azri8qf8.passwd: Success.",
                                    "type": "string"
                                  },
                                  "restore_logfile": {
                                    "description": "The restoration log file's name.",
                                    "example": "item-RESTORE_AccountLocal_example",
                                    "type": "string"
                                  },
                                  "result": {
                                    "description": "Whether the task completed successfully.\n* `1` - Success.\n* `0` - Failure.\n* `2` - Warning.",
                                    "enum": [
                                      0,
                                      1,
                                      2
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "skipped_items": {
                                    "description": "The number of items that the restoration process skipped.",
                                    "example": 1,
                                    "nullable": true,
                                    "type": "integer"
                                  },
                                  "started": {
                                    "description": "The restoration process's start time for this task.",
                                    "example": "1355840811",
                                    "format": "unix_timestamp",
                                    "type": "string"
                                  },
                                  "transfer_session_id": {
                                    "description": "The restoration transfer session's ID.",
                                    "example": "userbackup20200406154758JqBa",
                                    "type": "string"
                                  },
                                  "warnings": {
                                    "description": "Any warnings about the restoration process.",
                                    "example": null,
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_list_completed",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return completed restoration tasks list",
        "tags": [
          "Account Restoration",
          "Restore Queue Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_list_completed"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_list_completed?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_list_pending": {
      "get": {
        "description": "This function lists the tasks that the restoration queue has not yet processed.",
        "operationId": "restore_queue_list_pending",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "restore_job": {
                          "description": "An array of objects that contain information about a pending task in the restoration queue.",
                          "items": {
                            "properties": {
                              "options": {
                                "description": "A list of information about the options for a pending task in the restoration queue.",
                                "properties": {
                                  "destid": {
                                    "description": "The destination's identification string.\n\n* `local` — The local directory.\n* The destination ID string's value.",
                                    "example": "LmTZCUpqqLSPH8AO7pVtIeNK",
                                    "type": "string"
                                  },
                                  "give_ip": {
                                    "description": "Whether the task will assign the account a dedicated IP address.\n\n* `1` — Assign.\n* `0` — Will **not** assign.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "mail_config": {
                                    "description": "Whether the function will restore the account's email configuration.\n\n* `1` — Restore.\n* `0` — Will **not** restore.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "mysql": {
                                    "description": "Whether the task will restore the account's MySQL® databases.\n\n* `1` — Restore.\n* `0` — Will **not** restore.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "subdomains": {
                                    "description": "Whether the function will restore the account's subdomains.\n\n* `1` — Restore.\n* `0` — Will **not** restore.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "restore_point": {
                                "description": "The date of the backup that the task will use, in `YYYY-MM-DD` format.",
                                "example": "2015-10-21T00:00:00.000Z",
                                "format": "ISO-8601 Date",
                                "type": "string"
                              },
                              "user": {
                                "description": "The cPanel account's username.",
                                "example": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_list_pending",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return pending restoration tasks list",
        "tags": [
          "Account Restoration",
          "Restore Queue Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_list_pending"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_list_pending?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restore_queue_state": {
      "get": {
        "description": "This function lists the tasks in the restoration queue.",
        "operationId": "restore_queue_state",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": {
                        "active": [
                          {
                            "options": {
                              "give_ip": 1,
                              "mail_config": 1,
                              "mysql": 1,
                              "subdomains": 1
                            },
                            "restore_point": "2019-10-21T00:00:00.000Z",
                            "user": "username"
                          }
                        ],
                        "completed": [
                          {
                            "options": {
                              "give_ip": 1,
                              "mail_config": 0,
                              "mysql": 1,
                              "subdomains": 0
                            },
                            "restore_point": "2019-10-22T00:00:00.000Z",
                            "user": "username"
                          }
                        ],
                        "is_active": 1,
                        "pending": [
                          {
                            "options": {
                              "give_ip": 0,
                              "mail_config": 1,
                              "mysql": 0,
                              "subdomains": 1
                            },
                            "restore_point": "2019-10-23T00:00:00.000Z",
                            "user": "username"
                          }
                        ]
                      },
                      "properties": {
                        "active": {
                          "description": "An array of objects containing restoration queue items that the system is actively processing.",
                          "items": {
                            "$ref": "#/components/schemas/restorePoint"
                          },
                          "type": "array"
                        },
                        "completed": {
                          "description": "An array of objects containing restoration queue items that the system has already processed.",
                          "items": {
                            "$ref": "#/components/schemas/restorePoint"
                          },
                          "type": "array"
                        },
                        "is_active": {
                          "description": "Whether the restoration queue is actively processing a task.\n\n* `1` — The restoration queue is processing a task.\n* `0` — The restoration queue is **not** processing a task.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "pending": {
                          "description": "An array of objects containing restoration queue items that the system will process next.",
                          "items": {
                            "$ref": "#/components/schemas/restorePoint"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restore_queue_state",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return restoration tasks list",
        "tags": [
          "Account Restoration",
          "Restore Queue Reporting"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restore_queue_state"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restore_queue_state?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/restoreaccount": {
      "get": {
        "description": "This function restores an account backup. You can use this function to restore daily,\nweekly, or monthly backups.\n\n**Important:**\n\n* When you call this function, you **must** include at least one of\nthe `all`, `mail`, `subs`, or `mysql` parameters.\n\n* On servers with a custom `Whostmgr::Transfers` module, the function may not return XML\noutput. To properly return XML output, the `Whostmgr::Transfers` module **must** allow\nthe system to use the `Cpanel::Demultiplexer` module to capture output.\n\n**Note:**\n\nOn servers that run CentOS 7, you may see a `named` warning about the absence of SPF\nresource records on DNS.\n\n* This warning is not relevant on CentOS 7 servers, because\n[RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208).\nCentOS 7 servers use `TXT` records instead of `SPF` records.\n\n* Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated\nversion of BIND that complies with RFC 7208. To resolve this issue, update your\noperating system to a version that contains the updated version of BIND. For more\ninformation, read the\n[Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).",
        "operationId": "restoreaccount",
        "parameters": [
          {
            "description": "The type of backup to restore. The function restores the most recent backup of\nthe type that you specify:\n\n* `monthly`\n* `weekly`\n* `daily`",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "enum": [
                "monthly",
                "weekly",
                "daily"
              ],
              "example": "monthly",
              "type": "string"
            }
          },
          {
            "description": "The account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to create the account before restoration.\n\n* `1` — Create and then restore the account. If you select this value and the\naccount already exists, the function will fail.\n* `0` — Restore **only**.",
            "in": "query",
            "name": "all",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to assign a dedicated IP address to the restored account.\n\n* `1` — Assign a dedicated IP address.\n* `0` — Use the shared IP address.",
            "in": "query",
            "name": "ip",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to restore account-level filters (vfilters) and forwarders\n(valiases).\n\n* `1` — Restore.\n* `0` — Do **not** restore.",
            "in": "query",
            "name": "mail",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to restore the account's MySQL® databases.\n\n* `1` — Restore.\n* `0` — Do **not** restore.",
            "in": "query",
            "name": "mysql",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to restore the account's subdomains.\n\n* `1` — Restore.\n* `0` — Do **not** restore.",
            "in": "query",
            "name": "subs",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "restoreaccount",
                          "type": "string"
                        },
                        "output": {
                          "properties": {
                            "raw": {
                              "description": "An output message that may contain long HTML.",
                              "example": "Extracting tarball...................\nDone<br />\nExtracting Domain....Done<br />\nDone<br />\n<br /><br />Restoring cpanel user config fileDone<br />\n<br />Restoring reseller privs (if any)<br />Restoring Locale Setting<br />Restoring SSL keys and CertificatesDone<br />\n<br />Restoring frontpage (if installed)Done<br />\n<br />Restoring access logs....\nDone<br />\n<br /><br />Restoring domain keys....\nDone<br />\n<br /><br />Restoring DB MAP File....\nDone<br />\n<br /><br /><span class=\"b2\">Restoring PostgreSQL databases....</span>\nRestoring PostgreSQL privs<!--\n-->\nDone<br />\n<br />Restoring Mailman listsDone<br />\n<br />Restoring Mailman ArchivesDone<br />\n<br />Restoring shell<blockquote><pre>Current shell /bin/bash is up to date.\n</pre></blockquote>Done<br />\n<br />Restoring password<blockquote><pre></pre></blockquote>Done<br />\n<br />Restoring proftpd fileDone<br />\n<br />Resyncing FTP Passwords<blockquote><pre>Updating ftp passwords for userFtp password files updated.Ftp vhost passwords synced</pre></blockquote>Done<br />\n<br />Linking old home directories<br />Parsing Domain Databases...ParkedDomains......AddonDomains...<br />Restoring Domains<br />\n<br />Restoring Bandwidth DataDone\n<br />Restoring Counter Data<pre></pre><br />Restoring Homedir....<blockquote><pre></pre></blockquote>Done<br />\n<br />Doing fileprotect conversion<br />Restoring nobody owned filesDone<br />\n<br />Restoring Mail filesDone<br />\n<br />Restoring userdata....\nDone<br />\n<br /><br />Restoring custom virtualhost templates....\nConverting email to cPanel 5+ (if needed)<blockquote><pre></pre></blockquote>Done<br />\n<br />Cleaning up filters (if needed)<blockquote><pre>vfilter converter v3.0Updating vfilter files to latest format.Running for user only (force=0) (has_spam_acl=1)Processing user......Done</pre></blockquote>Done<br />\n<br />Fixing mail permissions<blockquote><pre></pre></blockquote>Done<br />\n<br />Restoring crontabDone<br />\nConverting to maildir if needed<blockquote><pre></pre></blockquote>Done<br />\nRestoring Dns Zones<blockquote><pre>Restoring zone: user.com.db\n</pre></blockquote><br />Adding missing subdomain DNS entries (if needed)<pre></pre><br />Update Proxy subomains<blockquote><pre>Adding proxy subdomains for domain example.com.Records Installed</pre></blockquote>Done<br />\n<br />Updating SPF Records<blockquote><pre></pre></blockquote>Done<br />\n<br />Restoring quota<blockquote><pre></pre></blockquote>Done<br />\n<br /><br />Update mail routing<blockquote><pre>LOCAL MAIL EXCHANGER: This server will serve as a primary mail exchanger for example.com's mail.: This configuration has been manually selected.\n</pre></blockquote>Done<br />\n<br />Rebuilding Apache Conf<br />Restore CompleteAccount Restore Complete\nUnlocking password for user user.passwd: Success.<br />",
                              "type": "string"
                            }
                          }
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Restore account backup",
        "tags": [
          "Account Restoration",
          "Restore Account"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 restoreaccount user='username' type='monthly'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/restoreaccount?api.version=1&user=username&type=monthly"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.28"
      }
    },
    "/retrieve_transfer_session_remote_analysis": {
      "get": {
        "description": "This function analyzes a transfer session.\n\n**Note:**\n\n  For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://documentation.cpanel.net/display/DD/Guide+to+Transfer+and+Restore+API+Functions) documentation.",
        "operationId": "retrieve_transfer_session_remote_analysis",
        "parameters": [
          {
            "description": "The transfer session's ID.",
            "in": "query",
            "name": "transfer_session_id",
            "required": true,
            "schema": {
              "example": "exampleservercopya20140206192428NtyW",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "config": {
                          "description": "An object containing the transfer configuration options.",
                          "properties": {
                            "shared_mysql_server": {
                              "description": "Whether the remote and target server share the same MySQL® server.\n* `1` - The remote and target server share the same MySQL server.\n* `0` - The remote and target server do **not** share the same MySQL server.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "items": {
                          "description": "An object containing items to transfer.",
                          "properties": {
                            "accounts": {
                              "additionalProperties": {
                                "description": "Information for each account.",
                                "type": "string"
                              },
                              "description": "The accounts to transfer.",
                              "type": "array"
                            },
                            "packages": {
                              "additionalProperties": {
                                "description": "List of packages and featurelists.",
                                "type": "string"
                              },
                              "description": "The packages to transfer.",
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "local": {
                          "description": "An object containing the local server's information.",
                          "properties": {
                            "available_ips": {
                              "description": "A list of the local server's available IP addresses.",
                              "items": {
                                "example": "192.168.1.1",
                                "oneOf": [
                                  {
                                    "format": "ipv4",
                                    "type": "string"
                                  },
                                  {
                                    "format": "ipv6",
                                    "type": "string"
                                  }
                                ]
                              },
                              "type": "array"
                            },
                            "dbs": {
                              "description": "An object containing the local server's databases and users.",
                              "properties": {
                                "dbs": {
                                  "description": "An object containing the local server's databases.",
                                  "properties": {
                                    "MYSQL": {
                                      "additionalProperties": {
                                        "description": "An object containing the database owner.\n\n**Note:**\n\n  The database's name is the key's name.",
                                        "properties": {
                                          "owner": {
                                            "description": "Owner of the database.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "description": "An object containing the local server's MySQL databases.",
                                      "example": {
                                        "user_db1": {
                                          "owner": "user"
                                        },
                                        "user_db2": {
                                          "owner": "user"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "PGSQL": {
                                      "additionalProperties": {
                                        "description": "An object containing the database owner.\n\n**Note:**\n\n  The database's name is the key's name.",
                                        "properties": {
                                          "owner": {
                                            "description": "Owner of the database.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "description": "An object containing the local server's PgSQL databases.",
                                      "example": {
                                        "user_db1": {
                                          "owner": "user"
                                        },
                                        "user_db2": {
                                          "owner": "user"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "users": {
                                  "description": "An object containing the local server's database users.",
                                  "properties": {
                                    "MYSQL": {
                                      "additionalProperties": {
                                        "description": "An object containing the database user owner.\n\n**Note:**\n\n  The database user's name is the key's name.",
                                        "properties": {
                                          "owner": {
                                            "description": "Owner of the database user.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "description": "An object containing the local server's MySQL users.",
                                      "example": {
                                        "user_user1": {
                                          "owner": "user"
                                        },
                                        "user_user2": {
                                          "owner": "user"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "PGSQL": {
                                      "additionalProperties": {
                                        "description": "An object containing the database user owner.\n\n**Note:**\n\n  The database user's name is the key's name.",
                                        "properties": {
                                          "owner": {
                                            "description": "Owner of the user.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "description": "An object containing the local server's PgSQL databases users.",
                                      "example": {
                                        "user_user1": {
                                          "owner": "user"
                                        },
                                        "user_user2": {
                                          "owner": "user"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "dedicated_ips": {
                              "additionalProperties": {
                                "description": "Domain with a dedicated IP address. The dedicated IP addresses is the key's name.",
                                "type": "string"
                              },
                              "description": "A list of the local server's dedicated IP addresses.",
                              "example": {
                                "192.168.1.2": "domain.tld"
                              },
                              "type": "object"
                            },
                            "domains": {
                              "description": "A list of the local server's domains and owners.",
                              "example": {
                                "*": "nobody",
                                "domain.tld": "user"
                              }
                            },
                            "groups": {
                              "additionalProperties": {
                                "description": "The group name is the key's name. Value is **always** `1`.",
                                "enum": [
                                  1
                                ],
                                "type": "integer"
                              },
                              "description": "An object containing the local server's account groups.",
                              "example": {
                                "bin": 1,
                                "nobody": 1
                              },
                              "type": "object"
                            },
                            "host": {
                              "description": "The local server's hostname.",
                              "example": "hostname.domain.tld",
                              "format": "domain",
                              "type": "string"
                            },
                            "major_version": {
                              "description": "The local server's major version.",
                              "example": "11.90",
                              "type": "string"
                            },
                            "roundcube_dbtype": {
                              "description": "The database type Roundcube uses on the local server.",
                              "enum": [
                                "sqlite",
                                "mysql"
                              ],
                              "example": "sqlite",
                              "type": "string"
                            },
                            "users": {
                              "additionalProperties": {
                                "description": "The user's name is the key's name. Value is **always** `1`.",
                                "enum": [
                                  1
                                ],
                                "type": "integer"
                              },
                              "description": "An object containing the local server's account users.",
                              "example": {
                                "nobody": 1,
                                "root": 1
                              },
                              "type": "object"
                            },
                            "version": {
                              "description": "The local server's version of cPanel.",
                              "example": "11.90.0.6",
                              "format": "cPanel version",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "modules": {
                          "additionalProperties": {
                            "description": "An object containing the module.\n\n**Note:**\n\n  The module name is the key's name.",
                            "properties": {
                              "analysis": {
                                "additionalProperties": {
                                  "description": "Module version and other information when applicable. Key name will be either `Local` or `Remote`, followed by the module information type.",
                                  "type": "string"
                                },
                                "description": "Module information from both servers.",
                                "type": "object"
                              },
                              "name": {
                                "description": "The name of the module.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "description": "An list of objects containing the module infromation of both servers.",
                          "example": {
                            "Backups": {
                              "analysis": {
                                "Local Backups Version": "11.90.0.6",
                                "Remote Backups Version": "11.88.0.7"
                              },
                              "name": "Backups"
                            },
                            "MySQL": {
                              "analysis": {
                                "Local Type": "MySQL",
                                "Local Version": "5.7",
                                "Remote Type": "MariaDB",
                                "Remote Version": "10.3"
                              },
                              "name": "Database Server"
                            }
                          },
                          "type": "object"
                        },
                        "options": {
                          "description": "An object containing transfer session options.",
                          "properties": {
                            "skip_reseller_privs": {
                              "default": 0,
                              "description": "Whether reseller privileges will be set to transfer by default.\n* `0` - Reseller privileges will **not** be set to transfer by default.\n* `1` - Reseller privileges will be set to transfer by default.",
                              "enum": [
                                0,
                                1
                              ],
                              "type": "integer"
                            },
                            "unrestricted": {
                              "default": 1,
                              "description": "Whether the transfer session will use [Restriced Restore](https://go.cpanel.net/insecurerestoreaccount).\n* `0` - Transfer session will use Restriced Restore.\n* `1` _ Transfer session will **not** use Restirced Restore.",
                              "enum": [
                                0,
                                1
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "remote": {
                          "description": "An object containing the remote server's information.",
                          "properties": {
                            "conflicts": {
                              "description": "Remote server data load error message.",
                              "type": "object"
                            },
                            "cpversion": {
                              "description": "Remote server internal version.",
                              "example": "11.64",
                              "type": "string"
                            },
                            "dbs": {
                              "description": "An object containing the remote server's databases and users.",
                              "properties": {
                                "dbs": {
                                  "description": "An object containing the remote server's databases.",
                                  "properties": {
                                    "MYSQL": {
                                      "additionalProperties": {
                                        "description": "An object containing the database owner.\n\n**Note:**\n\n  The database's name is the key's name.",
                                        "properties": {
                                          "owner": {
                                            "description": "Owner of the database.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "description": "An object containing the remote server's MySQL databases.",
                                      "example": {
                                        "user_db1": {
                                          "owner": "user"
                                        },
                                        "user_db2": {
                                          "owner": "user"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "PGSQL": {
                                      "additionalProperties": {
                                        "description": "An object containing the database owner.\n\n**Note:**\n\n  The database's name is the key's name.",
                                        "properties": {
                                          "owner": {
                                            "description": "Owner of the database.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "description": "An object containing the remote server's PgSQL databases.",
                                      "example": {
                                        "user_db1": {
                                          "owner": "user"
                                        },
                                        "user_db2": {
                                          "owner": "user"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "users": {
                                  "description": "An object containing the remote server's database users.",
                                  "properties": {
                                    "MYSQL": {
                                      "additionalProperties": {
                                        "description": "An object containing the database user owner.\n\n**Note:**\n\n  The database user's name is the key's name.",
                                        "properties": {
                                          "owner": {
                                            "description": "Owner of the database user.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "description": "An object containing the remote server's MySQL users.",
                                      "example": {
                                        "user_user1": {
                                          "owner": "user"
                                        },
                                        "user_user2": {
                                          "owner": "user"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "PGSQL": {
                                      "additionalProperties": {
                                        "description": "An object containing the database user owner.\n\n**Note:**\n\n  The database user's name is the key's name.",
                                        "properties": {
                                          "owner": {
                                            "description": "Owner of the user.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "description": "An object containing the remote server's PgSQL databases users.",
                                      "example": {
                                        "user_user1": {
                                          "owner": "user"
                                        },
                                        "user_user2": {
                                          "owner": "user"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "has_disk_used": {
                              "description": "Whether the remote server can transmit disk usage information to the target server.\n* `1` - Remote server can transmit disk usage information.\n* `0` - Remote server **cannot** transmit disk usage information.\n\n**Note:**\n\n  cPanel & WHM servers have this ability by default.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "has_files_used": {
                              "description": "Whether the remote server can transmit file usage information to the target server.\n* `1` - Remote server can transmit file usage information.\n* `0` - Remote server **cannot** transmit file usage information.\n\n**Note:**\n\n  cPanel & WHM servers have this ability by default.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "has_owners": {
                              "description": "Whether the remote server can transmit owner information to the target server.\n* `1` — Remote server can transmit owner information.\n* `0` — Remote server **cannot** transfer owner information, and the transfer tool will assume that root owns all accounts.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "has_package_extensions": {
                              "description": "Whether the remote server has package extensions.\n* `1` - Remote server has package extensions.\n* `0` - Remote server does **not** have package extensions.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "has_xfertool": {
                              "description": "Whether the remote server has the transfer tool.\n* `1` - Remote server has the transfer tool.\n* `0` - Remote server does **not** have the transfer tool.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "host": {
                              "description": "The remote server's IP address.",
                              "example": "192.168.1.1",
                              "format": "ipv4",
                              "type": "string"
                            },
                            "hostname": {
                              "description": "The local server's hostname.",
                              "example": "hostname.domain.tld",
                              "format": "domain",
                              "type": "string"
                            },
                            "linked_nodes": {
                              "description": "An array containing the remote server's linked cPanel server nodes, if any exist.",
                              "items": {
                                "properties": {
                                  "alias": {
                                    "description": "The remote server's linked cPanel server node alias.",
                                    "example": "mailnode",
                                    "type": "string"
                                  },
                                  "enabled_services": {
                                    "description": "Enabled services on the linked node.",
                                    "example": [
                                      "exim",
                                      "imap"
                                    ],
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "hostname": {
                                    "description": "The remote server's linked cPanel server node hostname.",
                                    "example": "remotemailnode.example.com",
                                    "format": "domain",
                                    "type": "string"
                                  },
                                  "last_check": {
                                    "description": "Last time linked node was checked.",
                                    "example": 1600126907,
                                    "format": "unix_timestamp",
                                    "type": "integer"
                                  },
                                  "system_settings": {
                                    "additionalProperties": {
                                      "additionalProperties": {
                                        "description": "Server role system setting.\n* `0` - System setting is **not** enabled.\n* `1` - System setting is enabled.\n\n**Note:**\n\n  The system setting's name is the key's name.",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "type": "integer"
                                      },
                                      "description": "An object containing the server role.\n\n**Note:**\n\n  The server role's name is the key's name.",
                                      "type": "object"
                                    },
                                    "description": "An object containing server role system settings.",
                                    "example": {
                                      "Mail": {
                                        "globalspamassassin": 0
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "tls_verified": {
                                    "description": "Whether the connection to the server node is using TLS verification.\n* `0` - Server node connection is **note** using TLS verification.\n* `1` - Server node connection is using TLS verification.",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "username": {
                                    "description": "The username the server node link uses.",
                                    "example": "root",
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "The server node's software version number.",
                                    "example": "11.90.0.6",
                                    "format": "cPanel version",
                                    "type": "string"
                                  },
                                  "worker_capabilities": {
                                    "additionalProperties": {
                                      "description": "An object containing the server role.\n\n**Note:**\n\n  The server role's name is the key's name.",
                                      "type": "object"
                                    },
                                    "description": "An object containing a group of services required for the remote server's linked cPanel server node to perform a specific task.",
                                    "example": {
                                      "Mail": {}
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "major_version": {
                              "description": "The remote server's major version.",
                              "example": "11.90",
                              "type": "string"
                            },
                            "resellers": {
                              "additionalProperties": {
                                "description": "The reseller's username is the key's name. Value is **always** `1`.",
                                "enum": [
                                  1
                                ],
                                "type": "integer"
                              },
                              "description": "The remote servers reseller accounts that own one or more accounts.\n\n**Note:**\n\n  This won't return a value if the `root` user is the only user that owns accounts.",
                              "example": {
                                "resell2": 1,
                                "reseller": 1,
                                "root": 1
                              },
                              "type": "object"
                            },
                            "roundcube_dbtype": {
                              "description": "The database type Roundcube uses on the remote server.",
                              "enum": [
                                "sqlite",
                                "mysql"
                              ],
                              "example": "sqlite",
                              "type": "string"
                            },
                            "server_type": {
                              "description": "The remote server's type.\n* An internal cPanel type ID dependent on cPanel version.\n* `Plesk`\n* `Ensim`",
                              "example": "WHM1164",
                              "type": "string"
                            },
                            "supports_live_transfers": {
                              "description": "Whether the remote server supports the Live Transfers feature in WHM's Transfer Tool  interface (WHM >> Home >> Transfers >> Transfer Tool).\n* `1` — Supported.\n* `0` — **Not** supported.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "version": {
                              "description": "The remote server's software version number.",
                              "example": "11.90.0.6",
                              "format": "cPanel version",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "transfer_session_id": {
                          "description": "The transfer session's ID.",
                          "example": "exampleservercopya20140206192428NtyW",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "retrieve_transfer_session_remote_analysis",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return transfer session's information",
        "tags": [
          "Transfers",
          "Transfer Monitoring"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 retrieve_transfer_session_remote_analysis transfer_session_id='exampleservercopya20140206192428NtyW'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/retrieve_transfer_session_remote_analysis?api.version=1&transfer_session_id=exampleservercopya20140206192428NtyW"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/run_cpkeyclt": {
      "get": {
        "description": "This function verifies the system's license status with cPanel, L.L.C.'s\nlicensing servers. To do this, the function runs the `/usr/local/cpanel/cpkeyclt`\nscript.\n\nFor more information about this script and potential license problems,\nread our\n[Installation Guide - Troubleshoot Your Installation](https://docs.cpanel.net/installation-guide/troubleshoot-your-installation/)\ndocumentation.",
        "operationId": "run_cpkeyclt",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "run_cpkeyclt",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return server's cPanel license status",
        "tags": [
          "Server Administration",
          "License Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 run_cpkeyclt"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/run_cpkeyclt?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/save_cpgreylist_config": {
      "get": {
        "description": "This function modifies the server's Greylisting configuration settings.\n\n**Important:**\n\nWhen you call this function, you **must** include at least one of the\nfollowing parameters:\n\n* `spf_bypass`\n* `child_timeout_secs`\n* `record_exp_time_mins`\n* `initial_block_time_mins`\n* `max_child_procs`\n* `purge_interval_mins`\n* `must_try_time_mins`",
        "operationId": "save_cpgreylist_config",
        "parameters": [
          {
            "description": "The maximum of seconds that Greylisting waits for a child process to timeout.\n\n**Note:**\n\nThis parameter affects the function of the `cPGreyList` daemon. Do **not** change this\nvalue unless it is absolutely necessary.",
            "in": "query",
            "name": "child_timeout_secs",
            "required": false,
            "schema": {
              "example": 5,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of minutes during which Greylisting defers email from an unknown triplet. The maximum value for this parameter is four hours (`240` minutes).",
            "in": "query",
            "name": "initial_block_time_mins",
            "required": false,
            "schema": {
              "example": 10,
              "maximum": 240,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of child processes.\n\n**Notes:**\n\n This parameter affects the function of the `cPGreyList` daemon. Do **not** change this\n value unless it is absolutely necessary.",
            "in": "query",
            "name": "max_child_procs",
            "required": false,
            "schema": {
              "example": 5,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of minutes during which Greylisting accepts a re-sent email from an unknown triplet. The maximum value for this parameter is one day (`1440` minutes).",
            "in": "query",
            "name": "must_try_time_mins",
            "required": false,
            "schema": {
              "example": 240,
              "maximum": 1440,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of minutes before Greylisting deletes the records in the Greylisting database.\n\n**Note:**\n\nThis parameter affects the function of the `cPGreyList` daemon. Do **not** change this\nvalue unless it is absolutely necessary.",
            "in": "query",
            "name": "purge_interval_mins",
            "required": false,
            "schema": {
              "example": 60,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of minutes before Greylisting deletes the triplet record and treats a\nre-sent email as coming from a new, unknown triplet. The maximum value for this\nparameter is 30 days (`43200` minutes).",
            "in": "query",
            "name": "record_exp_time_mins",
            "required": false,
            "schema": {
              "example": 4320,
              "maximum": 43200,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether emails with SPF bypass Greylisting.\n\n* `1` — Enabled.\n* `0` — Disabled.",
            "in": "query",
            "name": "spf_bypass",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cpgreylist_config": {
                          "description": "A list of Greylisting settings.",
                          "properties": {
                            "child_timeout_secs": {
                              "description": "The maximum amount of seconds that Greylisting waits for child process to time out.",
                              "example": 5,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "initial_block_time_mins": {
                              "description": "The number of minutes during which Greylisting defers email from an unknown triplet.",
                              "example": 10,
                              "maximum": 240,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "is_enabled": {
                              "description": "Whether Greylisting is enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "is_exim_enabled": {
                              "description": "Whether Exim is enabled.\n\n* `1` — Enabled.\n* `0` — Disabled.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "max_child_procs": {
                              "description": "The maximum amount of child processes.",
                              "example": 5,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "must_try_time_mins": {
                              "description": "The number of minutes during which Greylisting accepts a re-sent email from an unknown triplet.",
                              "example": 240,
                              "maximum": 1440,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "purge_interval_mins": {
                              "description": "The number of minutes before Greylisting deletes the records in the Greylisting database.",
                              "example": 60,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "record_exp_time_mins": {
                              "description": "The number of minutes before Greylisting deletes the triplet record and treats a re-sent email as a new, unknown triplet.",
                              "example": 4320,
                              "maximum": 43200,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "spf_bypass": {
                              "description": "Whether emails with SPF bypass Greylisting.\n\n* `1` — Bypass.\n* `0` — Do **not** bypass.",
                              "enum": [
                                1,
                                0
                              ],
                              "example": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "save_cpgreylist_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update Greylisting settings",
        "tags": [
          "Greylisting",
          "Spam Protection (Greylisting)"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 save_cpgreylist_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/save_cpgreylist_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.50"
      }
    },
    "/save_cphulk_config": {
      "get": {
        "description": "This function modifies cPHulk's configuration settings.",
        "operationId": "save_cphulk_config",
        "parameters": [
          {
            "description": "Whether to use the server firewall to block brute force attacks.\n* `1` — Use the firewall.\n* `0` — Do **not** use the firewall.",
            "in": "query",
            "name": "block_brute_force_with_firewall",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to use the server firewall to block excessive brute force attacks.\n* `1` — Use the firewall.\n* `0` — Do **not** use the firewall.",
            "in": "query",
            "name": "block_excessive_brute_force_with_firewall",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The number of minutes over which cPHulk measures all login attempts to a specific user's account.",
            "in": "query",
            "name": "brute_force_period_mins",
            "required": false,
            "schema": {
              "default": 5,
              "example": 5,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The command to run when an IP address triggers brute force protection.\n\n**Note:**\n\n For a list of commands, read the *Command variables* section of our [cPHulk Brute Force Protection](https://go.cpanel.net/whmdocscPHulkBruteForceProtection) documentation.",
            "in": "query",
            "name": "command_to_run_on_brute_force",
            "required": false,
            "schema": {
              "default": "",
              "example": "",
              "type": "string"
            }
          },
          {
            "description": "The command to run when the system blocks an IP address for a one day period.\n\n**Note:**\n\n For a list of commands, read the *Command variables* section of our [cPHulk Brute Force Protection](https://go.cpanel.net/whmdocscPHulkBruteForceProtection) documentation.",
            "in": "query",
            "name": "command_to_run_on_excessive_brute_force",
            "required": false,
            "schema": {
              "default": "",
              "example": "",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable IP address-based protection on all requests.\n* `1` — Enable IP-based protection.\n* `0` — Disable IP-based protection.\n\n**Note:**\n\n If you set this parameter to `0`, you **cannot** use the following parameters:\n * `block_brute_force_with_firewall`\n * `block_excessive_brute_force_with_firewall`\n * `ip_brute_force_period_mins`",
            "in": "query",
            "name": "ip_based_protection",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of minutes in which cPHulk measures an attacker's login attempts.",
            "in": "query",
            "name": "ip_brute_force_period_mins",
            "required": false,
            "schema": {
              "default": 15,
              "example": 15,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of minutes over which cPHulk counts failed logins against a user.",
            "in": "query",
            "name": "lookback_period_min",
            "required": false,
            "schema": {
              "default": 360,
              "example": 360,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of failures from a specific IP address before cPHulk blocks that address for a two-week period.",
            "in": "query",
            "name": "mark_as_brute",
            "required": false,
            "schema": {
              "default": 30,
              "example": 30,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of failures that cPHulk allows per account within the defined time range.",
            "in": "query",
            "name": "max_failures",
            "required": false,
            "schema": {
              "default": 30,
              "example": 30,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of failures from a specific IP address before cPHulk locks out that address.",
            "in": "query",
            "name": "max_failures_byip",
            "required": false,
            "schema": {
              "default": 5,
              "example": 5,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether cPHulk will send a notification when it detects a brute force attack.\n* `1` — Send the notification.\n* `0` — Do **not** send the notification.",
            "in": "query",
            "name": "notify_on_brute",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether cPHulk will send a notification when the `root` user successfully logs in from an IP address that is not on the whitelist.\n* `1` — Send the notification.\n* `0` — Do **not** send the notification.",
            "in": "query",
            "name": "notify_on_root_login",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether cPHulk sends a notification upon successful `root` login when the IP address is not on the whitelist, but from a known netblock.\n* `1` — Send the notification.\n* `0` — Do **not** send the notification.",
            "in": "query",
            "name": "notify_on_root_login_for_known_netblock",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to skip checking if cPHulk runs on the server.\n* `1` — Don't check cPHulk's status.\n* `0` — Check cPHulk's status.\n\n**Note:**\n\nIf cPHulk is disabled, the function returns the following message:\n`cPHulk is disabled on the server.`",
            "in": "query",
            "name": "skip_enabled_check",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to enable username-based protection on all requests.\n* `1` — Enable.\n* `0` — Disable.",
            "in": "query",
            "name": "username_based_protection",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow username-based protection to lock out the `root` user.\n* `1` — Allow.\n* `0` — Do **not** allow.",
            "in": "query",
            "name": "username_based_protection_for_root",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to enable username-based protection **only** on requests that originate from a local IP address.\n* `1` — Enable.\n* `0` — Disable.",
            "in": "query",
            "name": "username_based_protection_local_origin",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cphulk_config": {
                          "description": "An object containing cPHulk configuration settings.",
                          "properties": {
                            "block_brute_force_with_firewall": {
                              "description": "Whether to use cPanel & WHM's firewall to block brute force attacks.\n* `1` -  Use the firewall.\n* `0` - Do **not** use the firewall.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "block_excessive_brute_force_with_firewall": {
                              "description": "Whether to use cPanel & WHM's firewall to block excessive brute force attacks.\n* `1` - Use the firewall.\n* `0` - Do **not** use the firewall.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "brute_force_period_mins": {
                              "description": "The number of minutes over which cPHulk measures all login attempts to a specific user's account.",
                              "example": 5,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "brute_force_period_sec": {
                              "description": "The number of seconds over which cPHulk measures all login attempts to a specific user's account.",
                              "example": 300,
                              "type": "integer"
                            },
                            "can_temp_ban_firewall": {
                              "description": "Whether the system firewall can apply temporary IP address bans.\n* `1` - Can temporarily apply IP address bans.\n* `0` - **Cannot** temporarily apply IP address bans.\n\n**Note:**\n\nIf this return's value is `0`, then the `ip_based_protection` parameter is **not** available, which means that you cannot use the following parameters:\n* `block_brute_force_with_firewall`\n* `block_excessive_brute_force_with_firewall`\n* `ip_brute_force_period_mins`\n* `ip_brute_force_period_sec`",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "command_to_run_on_brute_force": {
                              "description": "The command to run when an IP address triggers brute force protection.",
                              "example": "",
                              "type": "string"
                            },
                            "command_to_run_on_excessive_brute_force": {
                              "description": "The command to run when the system blocks an IP address blocked for a one day period.",
                              "example": "",
                              "type": "string"
                            },
                            "ip_based_protection": {
                              "description": "Whether IP address-based protection on all requests is enabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "ip_brute_force_period_mins": {
                              "description": "The number of minutes in which cPHulk measures an attacker's login attempts.",
                              "example": 15,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "ip_brute_force_period_sec": {
                              "description": "The number of seconds in which cPHulk measures an attacker's login attempts.",
                              "example": 900,
                              "type": "integer"
                            },
                            "is_enabled": {
                              "description": "Whether the cPHulk service is enabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "lookback_period_min": {
                              "description": "The number of minutes over which cPHulk counts failed logins against a user.",
                              "example": 360,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "lookback_time": {
                              "description": "The number of seconds over which cPHulk counts failed logins against a user.",
                              "example": 21600,
                              "type": "integer"
                            },
                            "mark_as_brute": {
                              "description": "The maximum number of failures from a specific IP address before cPHulk blocks that address for a two-week period.",
                              "example": 30,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "max_failures": {
                              "description": "The maximum number of failures that cPHulk allows per account within the defined time range.",
                              "example": 30,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "max_failures_byip": {
                              "description": "The maximum number of failures from a specific IP address before cPHulk locks out that address.",
                              "example": 5,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "notify_on_brute": {
                              "description": "Whether cPHulk will send a notification when it detects a brute force attack.\n* `1` - Send the notification.\n* `0` - Do **not** send the notification.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "notify_on_root_login": {
                              "description": "Whether cPHulk will send a notification when the `root` user successfully logs in from an IP address that is not on the whitelist.\n* `1` - Send the notification.\n* `0` - Do **not** send the notification.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "notify_on_root_login_for_known_netblock": {
                              "description": "Whether cPHulk sends a notification upon successful `root` login when the IP address is not on the whitelist, but from a known netblock.\n* `1` - Send the notification.\n* `0` - Do **not** send the notification.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "username_based_protection": {
                              "description": "Whether username-based protection on all requests is enabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "username_based_protection_for_root": {
                              "description": "Whether username-based protection can lock out the `root` user.\n* `1` - Allowed.\n* `0` - **Not** allowed.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "username_based_protection_local_origin": {
                              "description": "Whether username-based protection **only** on requests that originate from a local IP address.\n* `1` - Enabled.\n* `0` - Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "restart_ssh": {
                          "description": "Whether the system disabled UseDNS in the `sshd.conf` file and restarted the `sshd` daemon to allow cPHulk to add IP addresses to the whitelist.\n\n**Note:**\n\n This return **only** appears if the `UseDNS` setting is `yes` in the `/etc/ssh/sshd_config` file. Because UseDNS and cPHulk are incompatible, the system sets the `UseDNS` setting to `no` when you enable cPHulk.\n* `1` - Disabled UseDNS in the `sshd` daemon and restarted the `sshd` service.\n* `0` - Did **not** alter the `sshd.conf` file or restart the `sshd` service.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "warning": {
                          "description": "A warning message about the restart.\n\n**Note:**\n\nThe function **only** returns this value if the `restart_ssh` return's value is `1`.",
                          "example": null,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "save_cphulk_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Save login security configuration settings",
        "tags": [
          "cPHulk",
          "Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 save_cphulk_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/save_cphulk_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.48"
      }
    },
    "/save_spamd_config": {
      "get": {
        "description": "This function configures your Apache SpamAssassin™ options.\n\n**Important:**\n\nWhen you disable the [Spam Filter role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system disables this function.",
        "operationId": "save_spamd_config",
        "parameters": [
          {
            "description": "A comma-separated list of IP addresses to authorize to access the spamd daemon.\n\n**Note:**\n\n* If you do **not** specify a value, the `spamd` daemon allows connections from any IP address.\n* If you set a value for this parameter, it **must** include `127.0.0.1` in the list of values so that the `chkservd` daemon can access the `spamd` daemon.",
            "explode": false,
            "in": "query",
            "name": "allowedips",
            "required": false,
            "schema": {
              "example": "127.0.0.1,192.168.0.1",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The maximum number of children per `spamd` process.",
            "in": "query",
            "name": "maxchildren",
            "required": false,
            "schema": {
              "example": 5,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of connections that the `spamd` daemon allows per child process.",
            "in": "query",
            "name": "maxconnperchild",
            "required": false,
            "schema": {
              "example": 200,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The process ID's file path.\n\n**Warning:**\n\nThis parameter changes the `spamd` daemon's process ID filepath. On\nsystems that use the `systemd` daemon, you must update the `PIDFile`\nparameter in the `spamd.service` definition. If you do not update the\n`PIDFile` parameter, the `spamd` daemon will fail to function because the\nPID path and the `PIDFile` parameter will not match.",
            "in": "query",
            "name": "pidfile",
            "required": false,
            "schema": {
              "example": "/var/run/spamd.pid",
              "type": "string"
            }
          },
          {
            "description": "The maximum amount of time that a child process waits before it abandons a TCP connection.\n\n**Note:**\n\nIf the value of this parameter is `0`, child processes will **not** abandon TCP connections.",
            "in": "query",
            "name": "timeoutchild",
            "required": false,
            "schema": {
              "example": 300,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "The maximum amount of time that the `spamd` daemon waits before it abandons a TCP connection.\n\n**Note:**\n\nIf the value of this parameter is `0`, `spamd` will **not** abandon TCP connections.",
            "in": "query",
            "name": "timeouttcp",
            "required": false,
            "schema": {
              "example": 30,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "save_spamd_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update Apache SpamAssassin™ configuration",
        "tags": [
          "Mail",
          "Spam Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 save_spamd_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/save_spamd_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/save_style": {
      "get": {
        "description": "This function saves the server's custom style. You can retrieve the custom style through WHM's *[Customization](https://go.cpanel.net/whmdocsCustomization)* interface (*Home >> cPanel >> Customization*) or with WHM API 1's `load_style` function.",
        "operationId": "save_style",
        "parameters": [
          {
            "description": "The company name.",
            "in": "query",
            "name": "company_name",
            "required": false,
            "schema": {
              "example": "Example Corporation",
              "type": "string"
            }
          },
          {
            "description": "The reseller's documentation URL.",
            "in": "query",
            "name": "documentation_url",
            "required": false,
            "schema": {
              "example": "http://example.com/documentation/",
              "format": "url",
              "type": "string"
            }
          },
          {
            "description": "The reseller's help URL.",
            "in": "query",
            "name": "help_url",
            "required": false,
            "schema": {
              "example": "http://example.com/help/",
              "format": "url",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "save_style",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Save the server's custom style",
        "tags": [
          "Styles and Themes",
          "Styles"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 save_style"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/save_style?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/saveacllist": {
      "get": {
        "description": "This function creates or modifies an Access Control List (ACL).\n\n**Note:**\n\n  For each `acl-*` parameter, a value of `1` adds that privilege to the ACL list and a value of `0` removes that privilege from the ACL list.\n\n**Warning:**\n\n  We **strongly** recommend that WHM users create and edit ACLs and ACL privileges through WHM's [*Edit Reseller Nameservers and Privileges*](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) interface ( *WHM >> Home >> Resellers >> Edit Reseller Nameservers and Privileges* ).",
        "operationId": "saveacllist",
        "parameters": [
          {
            "description": "The ACL to assign to the reseller.\n\n**Note:**\n\n To modify an existing ACL, set this value to that ACL's name.",
            "in": "query",
            "name": "acllist",
            "required": true,
            "schema": {
              "example": "my_acl_list",
              "type": "string"
            }
          },
          {
            "description": "Whether to allow the reseller to view an account summary.",
            "in": "query",
            "name": "acl-acct-summary",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to add and remove hosting plans (packages).",
            "in": "query",
            "name": "acl-add-pkg",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with a dedicated IP address.",
            "in": "query",
            "name": "acl-add-pkg-ip",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with shell access.",
            "in": "query",
            "name": "acl-add-pkg-shell",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to grant the reseller all privileges.\n\n**Warning:**\n\n A value of `1` grants root-level privileges to the reseller.",
            "in": "query",
            "name": "acl-all",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with addon domains.",
            "in": "query",
            "name": "acl-allow-addoncreate",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with custom email quotas.",
            "in": "query",
            "name": "acl-allow-emaillimits-pkgs",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with parked domains (aliases).",
            "in": "query",
            "name": "acl-allow-parkedcreate",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create accounts with shell access.",
            "in": "query",
            "name": "acl-allow-shell",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with unlimited bandwidth.",
            "in": "query",
            "name": "acl-allow-unlimited-bw-pkgs",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with unlimited disk space.",
            "in": "query",
            "name": "acl-allow-unlimited-disk-pkgs",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with unlimited features.",
            "in": "query",
            "name": "acl-allow-unlimited-pkgs",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to retrieve basic system information.",
            "in": "query",
            "name": "acl-basic-system-info",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to access basic cPanel & WHM options.",
            "in": "query",
            "name": "acl-basic-whm-functions",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to use DNS clusters.",
            "in": "query",
            "name": "acl-clustering",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to perform Cross-Origin Resource Sharing (CORS) HTTP requests.",
            "in": "query",
            "name": "acl-cors-proxy-get",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to execute cPanel API 1, cPanel API 2 and UAPI functions via WHM.",
            "in": "query",
            "name": "acl-cpanel-api",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage how their server and its services connect to other servers and services.",
            "in": "query",
            "name": "acl-cpanel-integration",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create accounts.",
            "in": "query",
            "name": "acl-create-acct",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to add DNS zones.",
            "in": "query",
            "name": "acl-create-dns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create a temporary user session for a specified service.\n\n**Notes:**\n\n This privilege allows an API token user to bypass any restrictions that you set on the API token. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.",
            "in": "query",
            "name": "acl-create-user-session",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to enable demo mode for accounts.",
            "in": "query",
            "name": "acl-demo-setup",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage Digest Authentication support.",
            "in": "query",
            "name": "acl-digest-auth",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to edit accounts.",
            "in": "query",
            "name": "acl-edit-account",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to edit DNS zones.",
            "in": "query",
            "name": "acl-edit-dns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to edit MX entries.",
            "in": "query",
            "name": "acl-edit-mx",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to edit hosting plans (packages).",
            "in": "query",
            "name": "acl-edit-pkg",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to generate a mobile configuration profile for an email account.",
            "in": "query",
            "name": "acl-generate-email-config",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to terminate accounts.",
            "in": "query",
            "name": "acl-kill-acct",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to remove DNS zones.",
            "in": "query",
            "name": "acl-kill-dns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to modify bandwidth limits (quotas).\n\n**Warning:**\n\n If you do not use resource limits, a value of `1` allows resellers to circumvent package limits for disk space.",
            "in": "query",
            "name": "acl-limit-bandwidth",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view the list of accounts.",
            "in": "query",
            "name": "acl-list-accts",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view existing hosting plans (packages).",
            "in": "query",
            "name": "acl-list-pkgs",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create and modify locales on the server.",
            "in": "query",
            "name": "acl-locale-edit",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to troubleshoot mail delivery.",
            "in": "query",
            "name": "acl-mailcheck",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage API tokens.\n\n**Notes:**\n\n This privilege allows an API token user to bypass any restrictions that you set on the API token. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.",
            "in": "query",
            "name": "acl-manage-api-tokens",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage DNS records.",
            "in": "query",
            "name": "acl-manage-dns-records",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage external authentication for their accounts.",
            "in": "query",
            "name": "acl-manage-oidc",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage their server's cPanel styles.",
            "in": "query",
            "name": "acl-manage-styles",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to retrieve MySQL® database and user data.",
            "in": "query",
            "name": "acl-mysql-info",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to modify the server's news.",
            "in": "query",
            "name": "acl-news",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage nameservers.",
            "in": "query",
            "name": "acl-ns-config",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to park DNS zones.",
            "in": "query",
            "name": "acl-park-dns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to change passwords.\n\n**Note:**\n\n This privilege allows an API token user to change account passwords and log in with a new password. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.",
            "in": "query",
            "name": "acl-passwd",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to modify quotas.\n\n**Warning:**\n\n If you do not use resource limits, this privilege allows resellers to circumvent package limits for disk space.",
            "in": "query",
            "name": "acl-quota",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to rearrange accounts.",
            "in": "query",
            "name": "acl-rearrange-accts",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to resync FTP passwords.",
            "in": "query",
            "name": "acl-resftp",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to restart services.",
            "in": "query",
            "name": "acl-restart",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view account bandwidth usage.",
            "in": "query",
            "name": "acl-show-bandwidth",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to perform SSL site management.",
            "in": "query",
            "name": "acl-ssl",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to purchase SSL certificates.",
            "in": "query",
            "name": "acl-ssl-buy",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to generate SSL certificates.",
            "in": "query",
            "name": "acl-ssl-gencrt",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view their server's SSL information.",
            "in": "query",
            "name": "acl-ssl-info",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view server information.",
            "in": "query",
            "name": "acl-stats",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view the server's status.",
            "in": "query",
            "name": "acl-status",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to suspend or unsuspend accounts.",
            "in": "query",
            "name": "acl-suspend-acct",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage third-party services.",
            "in": "query",
            "name": "acl-thirdparty",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view reports about email message delivery attempts from their account.",
            "in": "query",
            "name": "acl-track-email",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to upgrade or downgrade accounts.",
            "in": "query",
            "name": "acl-upgrade-account",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to use all global packages. For more information, read our [reseller packages](https://go.cpanel.net/GuidetoResellerAccounts#which-packages-can-resellers-view-and-assign) documentation.",
            "in": "query",
            "name": "acl-viewglobalpackages",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "saveacllist",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "ACL List my_acl_list saved.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create or update privilege list and settings",
        "tags": [
          "Resellers",
          "Account Permissions"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 saveacllist acllist='my_acl_list'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/saveacllist?api.version=1&acllist=my_acl_list"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/savemxs": {
      "get": {
        "description": "This function creates a new MX record.\n\n**Important:**\n\nWhen you disable the [DNS role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "savemxs",
        "parameters": [
          {
            "description": "The zone record's domain.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The domain's mail exchanger.",
            "in": "query",
            "name": "exchange",
            "required": true,
            "schema": {
              "example": "mail.example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The record name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "mail.example.com",
              "type": "string"
            }
          },
          {
            "description": "The MX record's priority order.\n\n**Note:**\n\nLower numbers indicate a higher priority order.",
            "in": "query",
            "name": "preference",
            "required": true,
            "schema": {
              "example": 20,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The record's class.",
            "in": "query",
            "name": "class",
            "required": false,
            "schema": {
              "default": "IN",
              "example": "IN",
              "type": "string"
            }
          },
          {
            "description": "The record's Time To Live (TTL) in seconds.",
            "in": "query",
            "name": "ttl",
            "required": false,
            "schema": {
              "default": 14400,
              "example": 14400,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "savemxs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Bind reloading on server1 using rndc zone: [example.com]\n",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create mail exchanger record",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 savemxs domain='example.com' name='mail.example.com' exchange='mail.example.com' preference='20'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/savemxs?api.version=1&domain=example.com&name=mail.example.com&exchange=mail.example.com&preference=20"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.28"
      }
    },
    "/send_test_posturl": {
      "get": {
        "description": "This function uses the specified URL to send a test message through the POST method of HTTP as form data.",
        "operationId": "send_test_posturl",
        "parameters": [
          {
            "description": "The URL and query string to send.",
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "example": "Click to view...https%3A%2F%2Fwww.example.com%2Fevents.cgi%3Fapikey%3D12345%26user%3Dusername*password%3D12345luggage",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "message_id": {
                          "description": "The test message's ID. A valid string.",
                          "example": "554d2cbd-efe61da3cacb",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "send_test_posturl",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the function failed when the `metadata.result` field is 0. This field may include a success message when the function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The API version of the function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Send notification URL via POST",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 send_test_posturl url='Click to view...https%3A%2F%2Fwww.example.com%2Fevents.cgi%3Fapikey%3D12345%26user%3Dusername*password%3D12345luggage'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/send_test_posturl?api.version=1&url=Click%20to%20view...https%253A%252F%252Fwww.example.com%252Fevents.cgi%253Fapikey%253D12345%2526user%253Dusername%2apassword%253D12345luggage"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/send_test_pushbullet_note": {
      "get": {
        "description": "This function uses the specified access token to send a test Pushbullet™ note. The function automatically generates a message title and body, and it includes a unique string in the test message. When the test message returns, the system searches for the ID string and returns it.\n\nIf the function does not detect the correct ID string in the returned message, the function fails. You can also review the user's Pushbullet channel history to confirm that the server sent and received the message.\n\nThe test's success or failure depends on various conditions. For example:\n  * Valid access token.\n  * Network configuration.\n  * Service outages.\n  * External server rate limit.",
        "operationId": "send_test_pushbullet_note",
        "parameters": [
          {
            "description": "\nThe Pushbullet token to use.\n\n**Note:**\n\n* To access your Pushbullet token, navigate to [Pushbullet's My Account](https://www.pushbullet.com/account) page. It will appear under the *Access Token* heading.\n* This is confidential information that your server sends via a secure channel.",
            "in": "query",
            "name": "access_token",
            "required": true,
            "schema": {
              "example": "a1b2c3d4e5f6g7h8i9j0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "message_id": {
                          "description": "The test message's ID.",
                          "example": "554d2cbd-efe61da3cacb",
                          "type": "string"
                        },
                        "payload": {
                          "additionalProperties": true,
                          "description": "The payload from the Pushbullet server. For more information, visit [Pushbullet's API documentation](https://docs.pushbullet.com/).",
                          "example": {
                            "active": true,
                            "body": "This message confirms that \"hostname.example.com\" (192.168.0.20) can send a message to you via Pushbullet.\n\nThis message was sent on Monday, May 18, 2015 at 7:12:20 PM UTC.",
                            "created": 1431976341.38872,
                            "direction": "self",
                            "dismissed": false,
                            "iden": "ujw5ScArtjUsjAeRXXMLGS",
                            "modifiedx": 1431976341.39182,
                            "receiver_email": "user@example.com",
                            "receiver_email_normalized": "user@example.com",
                            "receiver_iden": "ujw5ScArtjU",
                            "sender_email": "user@example.com",
                            "sender_email_normalized": "user@example.com",
                            "sender_iden": "ujw5ScArtjU",
                            "sender_name": "Firstname Lastname",
                            "title": "Test message (ID: 555a3994-173a4a271062d)",
                            "type": "note"
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "send_test_pushbullet_note",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Send Pushbullet™ test with access token",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 send_test_pushbullet_note access_token='a1b2c3d4e5f6g7h8i9j0'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/send_test_pushbullet_note?api.version=1&access_token=a1b2c3d4e5f6g7h8i9j0"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/servicestatus": {
      "get": {
        "description": "This function reports which services (daemons) are enabled, installed, and monitored on your server.",
        "operationId": "servicestatus",
        "parameters": [
          {
            "description": "The service for which to view the status.\n\n**Notes**\n\nIf you do **not** specify this parameter, the function will return the status for all of your server's services.\n\nAvailable Services:\n\n* apache_php_fpm\n* clamd\n* cpanel-dovecot-solr\n* cpanel_php_fpm\n* cpanellogd\n* cpdavd\n* cpgreylistd\n* cphulkd\n* cpsrvd\n* crond\n* dnsadmin\n* exim\n* exim-altport\n* ftpd\n* httpd\n* imap\n* ipaliases\n* lmtp\n* mailman\n* mysql\n* named\n* nscd\n* p0f\n* pop\n* postgresql\n* queueprocd\n* rsyslogd\n* spamd\n* sshd\n* syslogd\n* tailwatchd\n* tomcat\n\nFor more information about these services, read our [Service Manager](https://go.cpanel.net/whmdocsServiceManager) documentation.",
            "in": "query",
            "name": "service",
            "required": false,
            "schema": {
              "example": "crond",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "service": {
                          "description": "An object containing service information.\n\n**Note:**\n\nCertain [server profiles](https://go.cpanel.net/howtouseserverprofiles) **disable** specific services. For example, a Mail Node profile's `ftpd` service would return a `0` value for the `enabled`, `installed`, and `monitored` returns.",
                          "items": {
                            "properties": {
                              "display_name": {
                                "description": "The service's full name.",
                                "example": "Cron Daemon",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Whether the service is enabled.\n* `1` - Enabled.\n* `0` - Disabled. If a server profile **disables** a service, this returns a `0` value.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "installed": {
                                "description": "Whether the service is installed.\n* `1` - Installed.\n* `0` - Uninstalled. If a server profile **disables** a service, this returns a `0` value.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "monitored": {
                                "description": "Whether the server monitors the service.\n* `1` - Monitored.\n* `0` - Not monitored. If a server profile **disables** a service, this returns a `0` value.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "name": {
                                "description": "The service's short name.\n* apache_php_fpm\n* clamd\n* cpanel-dovecot-solr\n* cpanel_php_fpm\n* cpanellogd\n* cpdavd\n* cpgreylistd\n* cphulkd\n* cpsrvd\n* crond\n* dnsadmin\n* exim\n* exim-altport\n* ftpd\n* httpd\n* imap\n* ipaliases\n* lmtp\n* mailman\n* mysql\n* named\n* nscd\n* p0f\n* pop\n* postgresql\n* queueprocd\n* rsyslogd\n* spamd\n* sshd\n* syslogd\n* tailwatchd\n* tomcat\n\n**Note:**  For more information about these services, read our [Service Manager](https://go.cpanel.net/whmdocsServiceManager) documentation.",
                                "example": "crond",
                                "type": "string"
                              },
                              "running": {
                                "description": "Whether the service currently runs on the server.\n\n**Note:**\n\nThe function does **not** return this parameter if the server does **not** monitor the service.\n\n* `1` - Running.\n* `0` - Not running.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "properties": {},
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "servicestatus",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return service status",
        "tags": [
          "Server Administration",
          "Services"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 servicestatus"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/servicestatus?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/set_application_contact_event_importance": {
      "get": {
        "description": "This function sets the importance level of an application event for WHM's\n[*Contact Manager*](https://go.cpanel.net/whmdocsContactManager)\ninterface (*WHM >> Home >> Server Contacts >> Contact Manager*).\n\nFor a list of available modules, use the WHM API 1\n[`get_all_contact_importances`](/openapi/whm/operation/get_all_contact_importances/)\nfunction.\n\n**Note:**\n\nThe system creates a notification setting for the application's events\nif one does not already exist.",
        "operationId": "set_application_contact_event_importance",
        "parameters": [
          {
            "description": "The cPanel & WHM application module's name.",
            "in": "query",
            "name": "app",
            "required": true,
            "schema": {
              "example": "Check",
              "type": "string"
            }
          },
          {
            "description": "The event's name.",
            "in": "query",
            "name": "event",
            "required": true,
            "schema": {
              "example": "SecurityAdvisorStateChange",
              "type": "string"
            }
          },
          {
            "description": "The importance level at which to send the notification.\n\n* `High`\n* `Medium`\n* `Low`\n* `Disabled`",
            "in": "query",
            "name": "importance",
            "required": true,
            "schema": {
              "enum": [
                "High",
                "Medium",
                "Low",
                "Disabled"
              ],
              "example": "Disabled",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_application_contact_event_importance",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update app's event contact importance setting",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_application_contact_event_importance app='Check' event='SecurityAdvisorStateChange' importance='Disabled'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_application_contact_event_importance?api.version=1&app=Check&event=SecurityAdvisorStateChange&importance=Disabled"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/set_application_contact_importance": {
      "get": {
        "description": "This function sets the importance level of an application's events for WHM's\n[*Contact Manager*](https://go.cpanel.net/whmdocsContactManager)\ninterface (*WHM >> Home >> Server Contacts >> Contact Manager*).\n\nFor a list of available modules, use the WHM API 1\n[`get_all_contact_importances`](/openapi/whm/operation/get_all_contact_importances/)\nfunction.\n\n**Note:**\n\nThe system creates a notification setting for the application's events if one\ndoes not already exist.",
        "operationId": "set_application_contact_importance",
        "parameters": [
          {
            "description": "The cPanel & WHM application module's name.",
            "in": "query",
            "name": "app",
            "required": true,
            "schema": {
              "example": "Check",
              "type": "string"
            }
          },
          {
            "description": "The importance level at which to send the notification.\n\n* `High`\n* `Medium`\n* `Low`\n* `Disabled`",
            "in": "query",
            "name": "importance",
            "required": true,
            "schema": {
              "enum": [
                "High",
                "Medium",
                "Low",
                "Disabled"
              ],
              "example": "Disabled",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_application_contact_importance",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update app contact importance setting",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_application_contact_importance app='Check' importance='Disabled'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_application_contact_importance?api.version=1&app=Check&importance=Disabled"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/set_autossl_metadata": {
      "get": {
        "description": "This function sets values for AutoSSL's metadata keys. This allows you to replace certificates that AutoSSL did not issue and toggle other AutoSSL notifications.\n\n**Note:**\n\nWe recommend that you use the WHM API 1 `set_autossl_metadata_key` function instead.\n\n**Information:**\n\n* You can enter more than one key and value pair in the `metadata_json` JSON hash.\n* Any keys that you do not **explicitly** define will adopt the system's default value.",
        "operationId": "set_autossl_metadata",
        "parameters": [
          {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "clobber_externally_signed": 1,
                    "notify_autossl_expiry": 1,
                    "notify_autossl_expiry_coverage": 1,
                    "notify_autossl_expiry_coverage_user": 1,
                    "notify_autossl_expiry_user": 1,
                    "notify_autossl_renewal": 1,
                    "notify_autossl_renewal_coverage": 1,
                    "notify_autossl_renewal_coverage_reduced": 1,
                    "notify_autossl_renewal_coverage_reduced_user": 1,
                    "notify_autossl_renewal_coverage_user": 1,
                    "notify_autossl_renewal_uncovered_domains": 1,
                    "notify_autossl_renewal_uncovered_domains_user": 1,
                    "notify_autossl_renewal_user": 1
                  },
                  "properties": {
                    "clobber_externally_signed": {
                      "default": 0,
                      "description": "Whether to allow AutoSSL to replace certificates that none of\nthis system’s AutoSSL modules issued. When you enable this option, AutoSSL\nwill install certificates that replace users’ Certificate Authority (CA)\nissued certificates if they are invalid or expire within three days.\n* `1` - Replace certificates not issued by the AutoSSL system.\n* `0` - Only replace certificates issued by the AutoSSL system.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_expiry": {
                      "default": 1,
                      "description": "Whether to send a notification when an AutoSSL certificate expires. This occurs when AutoSSL cannot request a new certificate.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.\n\n**Notes:**\n\nThis can happen if all of a website’s domains fail Domain Control Validation (DCV), or if the AutoSSL provider has not issued a certificate in response to a request.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_expiry_coverage": {
                      "default": 1,
                      "description": "Whether to send a notification if at least one currently-secured domain will lose coverage when the certificate renews.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_expiry_coverage_user": {
                      "default": 1,
                      "description": "Whether to send a notification if at least one of a user's currently-secured domains will lose coverage when the certificate renews.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_expiry_user": {
                      "default": 1,
                      "description": "Whether to send a notification when a user's AutoSSL certificate expires. This occurs when AutoSSL cannot request a new certificate for a user.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_renewal": {
                      "default": 1,
                      "description": "Whether to send a notification when AutoSSL successfully renews a certificate.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_renewal_coverage": {
                      "default": 1,
                      "description": "Whether to send a notification if a currently-secured domain fails DCV and the certificate has not reached its renewal period.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_renewal_coverage_reduced": {
                      "default": 1,
                      "description": "Whether to send a notification when AutoSSL has renewed a certificate and the new certificate lacks at least one domain that the previous certificate secured.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_renewal_coverage_reduced_user": {
                      "default": 1,
                      "description": "Whether to send a notification  when AutoSSL has renewed a certificate for a user and the new certificate lacks at least one domain that the previous certificate secured.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_renewal_coverage_user": {
                      "default": 1,
                      "description": "Whether to send a notification if a currently-secured domain fails DCV and the certificate has not reached its renewal period.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_renewal_uncovered_domains": {
                      "default": 1,
                      "description": "Whether to send a notification when AutoSSL has renewed a certificate and the new certificate lacks one or more of the website’s domains.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_renewal_uncovered_domains_user": {
                      "default": 1,
                      "description": "Whether to send a notification  when AutoSSL has renewed a certificate for a user and the new certificate lacks one or more of the website’s domains.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    },
                    "notify_autossl_renewal_user": {
                      "default": 1,
                      "description": "Whether to send a notification  when AutoSSL successfully renews a certificate for a user.\n* `1` - Send a notification.\n* `0` - Do **not** send a notification.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "JSON-encoded object of metadata keys and values that control AutoSSL's behavior.",
            "in": "query",
            "name": "metadata_json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_autossl_metadata",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update AutoSSL metadata",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_autossl_metadata metadata_json='{\"clobber_externally_signed\":\"1\",\"notify_autossl_expiry\":\"1\",\"notify_autossl_expiry_coverage\":\"1\",\"notify_autossl_expiry_coverage_user\":\"1\",\"notify_autossl_expiry_user\":\"1\",\"notify_autossl_renewal\":\"1\",\"notify_autossl_renewal_coverage\":\"1\",\"notify_autossl_renewal_coverage_reduced\":\"1\",\"notify_autossl_renewal_coverage_reduced_user\":\"1\",\"notify_autossl_renewal_coverage_user\":\"1\",\"notify_autossl_renewal_uncovered_domains\":\"1\",\"notify_autossl_renewal_uncovered_domains_user\":\"1\",\"notify_autossl_renewal_user\":\"1\"}'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_autossl_metadata?api.version=1&metadata_json=%7b%22clobber_externally_signed%22%3a%221%22%2c%22notify_autossl_expiry%22%3a%221%22%2c%22notify_autossl_expiry_coverage%22%3a%221%22%2c%22notify_autossl_expiry_coverage_user%22%3a%221%22%2c%22notify_autossl_expiry_user%22%3a%221%22%2c%22notify_autossl_renewal%22%3a%221%22%2c%22notify_autossl_renewal_coverage%22%3a%221%22%2c%22notify_autossl_renewal_coverage_reduced%22%3a%221%22%2c%22notify_autossl_renewal_coverage_reduced_user%22%3a%221%22%2c%22notify_autossl_renewal_coverage_user%22%3a%221%22%2c%22notify_autossl_renewal_uncovered_domains%22%3a%221%22%2c%22notify_autossl_renewal_uncovered_domains_user%22%3a%221%22%2c%22notify_autossl_renewal_user%22%3a%221%22%7d"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60"
      }
    },
    "/set_autossl_metadata_key": {
      "get": {
        "description": "This function sets values for AutoSSL's metadata keys. This allows you to replace certificates that AutoSSL did not issue and toggle other AutoSSL notifications.\n\n**Note:**\n\n  * This function performs the same actions as the WHM API 1 `set_autossl_metadata` function. However, this function accepts a single key and value pair as a parameter instead of JSON. Additionally, you can **only** enter one key and value pair per function call.\n  * This function **only** accepts a single key and value pair. To set all values, use the WHM API 1 `set_autossl_metadata` function or make multiple calls to this function.",
        "operationId": "set_autossl_metadata_key",
        "parameters": [
          {
            "description": "The AutoSSL metadata key that you wish to modify.\n* `clobber_externally_signed` — Whether to allow AutoSSL to replace certificates that none of this system’s AutoSSL modules issued. When you enable this option, AutoSSL will install certificates that replace users’ Certificate Authority (CA) issued certificates if they are invalid or expire within three days.\n* `notify_autossl_expiry` — Whether to send a notification when an AutoSSL certificate expires. This occurs when AutoSSL cannot request a new certificate.\n* `notify_autossl_expiry_coverage` — Whether to send a notification if at least one currently-secured domain will lose coverage when the certificate renews.\n* `notify_autossl_expiry_coverage_user `— Whether to send a notification if at least one currently-secured domain for a user will lose coverage when the certificate renews.\n* `notify_autossl_renewal` — Whether to send a notification when AutoSSL successfully renews a certificate.\n* `notify_autossl_renewal_user` — Whether to send a notification when AutoSSL successfully renews a certificate for a user.\n* `notify_autossl_renewal_coverage` — Whether to send a notification when a currently-secured domain fails DCV and the certificate has not reached its renewal period.\n* `notify_autossl_renewal_coverage_user` — Whether to send a notification when a user's currently-secured domain fails DCV and the certificate has not reached its renewal period.\n* `notify_autossl_renewal_coverage_reduced` — Whether to send a notification when AutoSSL has renewed a certificate, but the new certificate lacks at least one domain that the previous certificate secured.\n* `notify_autossl_renewal_coverage_reduced_user` — Whether to send a notification when AutoSSL has renewed a certificate for a user, but the new certificate lacks at least one domain that the previous certificate secured.\n* `notify_autossl_renewal_uncovered_domains` — Whether to send a notification when AutoSSL has renewed a certificate, but the new certificate lacks one or more of the website’s domains.\n* `notify_autossl_renewal_uncovered_domains_user` — Whether to send a notification when AutoSSL has renewed a certificate, but the new certificate lacks one or more of the website’s domains.",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "enum": [
                "clobber_externally_signed",
                "notify_autossl_expiry",
                "notify_autossl_expiry_coverage",
                "notify_autossl_expiry_coverage_user",
                "notify_autossl_renewal",
                "notify_autossl_renewal_user",
                "notify_autossl_renewal_coverage",
                "notify_autossl_renewal_coverage_user",
                "notify_autossl_renewal_coverage_reduced",
                "notify_autossl_renewal_coverage_reduced_user",
                "notify_autossl_renewal_uncovered_domains",
                "notify_autossl_renewal_uncovered_domains_user"
              ],
              "example": "notify_autossl_expiry",
              "type": "string"
            }
          },
          {
            "description": "Whether to allow AutoSSL to replace certificates that it did not issue for the `clobber_externally_signed` parameter.\n\n**or**\n\nWhether to send a notification for the `notify_autossl_expiry`, `notify_autossl_expiry_coverage`, `notify_autossl_expiry_coverage_user`, `notify_autossl_renewal`, `notify_autossl_renewal_user`, `notify_autossl_renewal_coverage`, `notify_autossl_renewal_coverage`, `notify_autossl_renewal_coverage_reduced`, `notify_autossl_renewal_coverage_reduced_user`, `notify_autossl_renewal_uncovered_domains`, and `notify_autossl_renewal_uncovered_domains_user` parameters.\n* `1` — Allow or notify.\n* `0` — Do **not** allow or notify.\n\n**Note:**\n\n For reference, the system preconfigures AutoSSL metadata keys to the following values:\n * The value for `clobber_externally_signed` defaults to `0`.\n * The value for `notify_autossl_expiry` defaults to `1`.\n * The value for `notify_autossl_expiry_coverage` defaults to `1`.\n * The value for `notify_autossl_expiry_coverage_user` defaults to `1`.\n * The value for `notify_autossl_renewal` defaults to `1`.\n * The value for `notify_autossl_renewal_user` defaults to `1`.\n * The value for `notify_autossl_renewal_coverage` defaults to `1`.\n * The value for `notify_autossl_renewal_coverage_user` defaults to `1`.\n * The value for `notify_autossl_renewal_coverage_reduced` defaults to `1`.\n * The value for `notify_autossl_renewal_coverage_reduced_user` defaults to `1`.\n * The value for `notify_autossl_renewal_uncovered_domains` defaults to `1`.\n * The value for `notify_autossl_renewal_uncovered_domains_user` defaults to `1`.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_autossl_metadata_key",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update AutoSSL metadata via JSON",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_autossl_metadata_key key='notify_autossl_expiry' value='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_autossl_metadata_key?api.version=1&key=notify_autossl_expiry&value=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "70"
      }
    },
    "/set_autossl_provider": {
      "get": {
        "description": "This function sets the provider that the AutoSSL feature uses.\n\n**Note:**\n\n  To disable AutoSSL, call WHM API 1's `disable_autossl` function.",
        "operationId": "set_autossl_provider",
        "parameters": [
          {
            "description": "The AutoSSL provider's name. For example:\n* `cPanel`\n* `LetsEncrypt`",
            "in": "query",
            "name": "provider",
            "required": true,
            "schema": {
              "example": "cPanel",
              "type": "string"
            }
          },
          {
            "description": "Additional parameters which you wish to pass to the AutoSSL provider.\n\n  **Note:**\n\n  These additional parameters begin with the  `x_`  prefix. For example, the Let's Encrypt provider accepts the `x_terms_of_service_accepted parameter`, to which you would pass the URL of the terms of service that you accept.",
            "in": "query",
            "name": "x_*",
            "required": false,
            "schema": {
              "example": "(varies)",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_autossl_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update the AutoSSL provider",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_autossl_provider provider='cPanel'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_autossl_provider?api.version=1&provider=cPanel"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/set_autossl_user_excluded_domains": {
      "get": {
        "description": "This function disables AutoSSL for a specific domain on an account.\n\n**Warning:**\n\n  This function **replaces** the list of any previously-excluded domains. To add a domain to the list of the user's excluded domains, use the `add_autossl_user_excluded_domains` function.",
        "operationId": "set_autossl_user_excluded_domains",
        "parameters": [
          {
            "description": "The cPanel user's account.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Disable AutoSSL for this domain. If you do **not** include this parameter, the system will **enable** AutoSSL for every domain on the account.\n\n**Note**\n\nTo disable AutoSSL for multiple domains, duplicate or increment the parameter name. For example, to exclude three domains, you could:\n* Use the `domain` parameter multiple times.\n* Use the `domain`, `domain-1`, and `domain-2` parameters.",
            "examples": {
              "multiple": {
                "summary": "Multiple domains",
                "value": "domain=example.com&domain-1=example1.com&domain-2=example2.com"
              },
              "multiple-alternative": {
                "summary": "Multiple domains",
                "value": "domain=example.com&domain=example1.com&domain=example2.com"
              },
              "single": {
                "summary": "A single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "example": "cpcalendars.example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_autossl_user_excluded_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable AutoSSL for domain",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_autossl_user_excluded_domains username='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_autossl_user_excluded_domains?api.version=1&username=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "66"
      }
    },
    "/set_cpanel_updates": {
      "get": {
        "description": "This function sets the frequency of cPanel & WHM updates.",
        "operationId": "set_cpanel_updates",
        "parameters": [
          {
            "description": "The frequency with which to run cPanel & WHM updates on a server.\n- `daily` — Run updates daily.\n- `manual` — Run updates manually.\n- `never` — Never run updates.",
            "in": "query",
            "name": "updates",
            "required": true,
            "schema": {
              "enum": [
                "daily",
                "manual",
                "never"
              ],
              "example": "daily",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "updates": {
                          "description": "The new frequency of server updates.\n- `daily` — Run updates daily.\n- `manual` — Run updates manually.\n- `never` — Never run updates.",
                          "enum": [
                            "daily",
                            "manual",
                            "never"
                          ],
                          "example": "daily",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_cpanel_updates",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Cpanel update frequency set to daily",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update cPanel & WHM update frequency",
        "tags": [
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_cpanel_updates updates='daily'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_cpanel_updates?api.version=1&updates=daily"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/set_cphulk_config_key": {
      "get": {
        "description": "This function sets cPHulk's configuration settings.",
        "operationId": "set_cphulk_config_key",
        "parameters": [
          {
            "description": "Whether to use cPanel & WHM's firewall to block brute force attacks.",
            "in": "query",
            "name": "block_brute_force_with_firewall",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to use cPanel & WHM's firewall to block excessive brute force attacks.",
            "in": "query",
            "name": "block_excessive_brute_force_with_firewall",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The number of minutes over which cPHulk measures all login attempts to a specific user's account.",
            "in": "query",
            "name": "brute_force_period_mins",
            "required": false,
            "schema": {
              "default": 5,
              "example": 5,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of seconds over which cPHulk measures all login attempts to a specific user's account.\n**Note:**\nThe parameter defaults to the `brute_force_period_mins` parameter's value multiplied by 60.",
            "in": "query",
            "name": "brute_force_period_sec",
            "required": false,
            "schema": {
              "example": 300,
              "type": "integer"
            }
          },
          {
            "description": "The command to run when an IP address triggers brute force protection.\n\n**Note:**\n\n For a list of commands, read the _Command Variables_ section of our [cPHulk Brute Force Protection](https://go.cpanel.net/whmdocscPHulkBruteForceProtection) documentation.",
            "in": "query",
            "name": "command_to_run_on_brute_force",
            "required": false,
            "schema": {
              "default": "an empty string",
              "example": "",
              "type": "string"
            }
          },
          {
            "description": "The command to run when the system blocks an IP address blocked for a one day period.\n\n**Note:**\n\nFor a list of commands, read the _Command Variables_ section of our [cPHulk Brute Force Protection](https://go.cpanel.net/whmdocscPHulkBruteForceProtection) documentation.",
            "in": "query",
            "name": "command_to_run_on_excessive_brute_force",
            "required": false,
            "schema": {
              "default": "an empty string",
              "example": "",
              "type": "string"
            }
          },
          {
            "description": "The countries to blacklist.\n\n**Note:**\n\nThis value overwrites the current blacklist. Enter a comma-separated\nlist to enter more than one value. For a list of countries, run the\nWHM API 1 `get_countries_with_known_ip_ranges` function.",
            "in": "query",
            "name": "country_blacklist",
            "required": false,
            "schema": {
              "default": "an empty string",
              "example": "PK,BR",
              "type": "string"
            }
          },
          {
            "description": "The countries to whitelist.\n\n**Note:**\n\nThis value overwrites the current whitelist. Enter a comma-separated\nlist to enter more than one value. For a list of countries, run the\nWHM API 1 `get_countries_with_known_ip_ranges` function.",
            "in": "query",
            "name": "country_whitelist",
            "required": false,
            "schema": {
              "default": "an empty string",
              "example": "US,AU",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable IP address-based protection on all requests.\n\n* `1` - Enable IP-based protection.\n* `0` - Disable IP-based protection.\n\n**Note:**\n\nIf you set the `ip_based_protection` parameter to `0`, you **cannot** use\nthe following parameters:\n  * `block_brute_force_with_firewall`\n  * `block_excessive_brute_force_with_firewall`\n  * `ip_brute_force_period_mins`\n  * `ip_brute_force_period_sec`",
            "in": "query",
            "name": "ip_based_protection",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of minutes in which cPHulk measures an attacker's login attempts.",
            "in": "query",
            "name": "ip_brute_force_period_mins",
            "required": false,
            "schema": {
              "default": 15,
              "example": 15,
              "type": "integer"
            }
          },
          {
            "description": "The number of seconds in which cPHulk measures an attacker's login attempts.\n**Note:**\nThe parameter defaults to the `ip_brute_force_period_mins` parameter's value multiplied by 60.",
            "in": "query",
            "name": "ip_brute_force_period_sec",
            "required": false,
            "schema": {
              "example": 900,
              "type": "integer"
            }
          },
          {
            "description": "Whether to enable the cPHulk service.\n\n* `1` - Enable.\n* `0` - Disable.",
            "in": "query",
            "name": "is_enabled",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of minutes over which cPHulk counts failed logins against a user.",
            "in": "query",
            "name": "lookback_period_min",
            "required": false,
            "schema": {
              "default": 360,
              "example": 360,
              "type": "integer"
            }
          },
          {
            "description": "The number of seconds over which cPHulk counts failed logins\nagainst a user.\n\n**Note:**\n\nThe parameter defaults to the `lookback_period_min`\nparameter's value multiplied by 60.",
            "in": "query",
            "name": "lookback_time",
            "required": false,
            "schema": {
              "example": 21600,
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of failures from a specific IP address before cPHulk blocks that address for a two-week period.",
            "in": "query",
            "name": "mark_as_brute",
            "required": false,
            "schema": {
              "default": 30,
              "example": 30,
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of failures that cPHulk allows per account within the defined time range.",
            "in": "query",
            "name": "max_failures",
            "required": false,
            "schema": {
              "default": 30,
              "example": 30,
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of failures from a specific IP address before cPHulk locks out that address.",
            "in": "query",
            "name": "max_failures_byip",
            "required": false,
            "schema": {
              "default": 5,
              "example": 5,
              "type": "integer"
            }
          },
          {
            "description": "Whether cPHulk will send a notification when it detects a brute\nforce attack.\n\n* `1` - Send the notification.\n* `0` - Do **not** send the notification.",
            "in": "query",
            "name": "notify_on_brute",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether cPHulk will send a notification when the root user successfully\nlogs in from an IP address that is **not** on the whitelist.\n\n* `1` - Send the notification.\n* `0` - Do **not** send the notification.",
            "in": "query",
            "name": "notify_on_root_login",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether cPHulk sends a notification upon successful root login\nwhen the IP address is **not** on the whitelist, but from a known netblock.\n\n* `1` - Send the notification.\n* `0` - Do **not** send the notification.",
            "in": "query",
            "name": "notify_on_root_login_for_known_netblock",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to enable username-based protection on all requests.\n\n* `1` - Enable.\n* `0` - Disable.",
            "in": "query",
            "name": "username_based_protection",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow username-based protection to lock out the root\nuser.\n\n* `1` - Allow.\n* `0` - Do **not** allow.",
            "in": "query",
            "name": "username_based_protection_for_root",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to enable username-based protection only on requests\nthat originate from a local IP address.\n\n* `1` - Enable.\n* `0` - Disable.",
            "in": "query",
            "name": "username_based_protection_local_origin",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cphulk_config": {
                          "description": "cPHulk configuration settings.",
                          "properties": {
                            "block_brute_force_with_firewall": {
                              "description": "Whether to use cPanel & WHM's firewall to block brute force attacks.\n* `1` - Use the firewall.\n* `0` - Do **not** use the firewall.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "block_excessive_brute_force_with_firewall": {
                              "description": "Whether to use cPanel & WHM's firewall to block excessive brute force attacks.\n* `1` - Use the firewall.\n* `0` - Do **not** use the firewall.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "brute_force_period_mins": {
                              "description": "The number of minutes over which cPHulk measures all login attempts to a specific user's account.",
                              "example": 5,
                              "type": "integer"
                            },
                            "brute_force_period_sec": {
                              "description": "The number of seconds over which cPHulk measures all login attempts to a specific user's account.",
                              "example": 300,
                              "type": "integer"
                            },
                            "can_temp_ban_firewall": {
                              "description": "Whether the system firewall can apply temporary IP address bans.\n* `1` - Can temporarily apply IP address bans.\n* `0` - Cannot temporarily apply IP address bans.\n\n**Note:**\n\nIf this return's value is 0, then the `ip_based_protection parameter` is **not** available, which means that you cannot use the following parameters:\n* `block_brute_force_with_firewall`\n* `block_excessive_brute_force_with_firewall`\n* `ip_brute_force_period_mins`\n* `ip_brute_force_period_sec`",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "command_to_run_on_brute_force": {
                              "description": "The command to run when an IP address triggers brute force protection.\n- A valid command.\n- An empty string.",
                              "example": "",
                              "type": "string"
                            },
                            "command_to_run_on_excessive_brute_force": {
                              "description": "The command to run when the system blocks an IP address blocked for a one day period.\n* A valid command.\n* An empty string.",
                              "example": "",
                              "type": "string"
                            },
                            "country_blacklist": {
                              "description": "The countries to blacklist. A comma-separated list of valid ISO 3166-1 alpha-2 country codes. This value may be empty.",
                              "example": "PK,BR",
                              "format": "ISO-3166-1 (alpha-2)",
                              "type": "string"
                            },
                            "country_whitelist": {
                              "description": "The countries to whitelist. A comma-separated list of valid ISO 3166-1 alpha-2 country codes. This value may be empty.",
                              "example": "US,AU",
                              "format": "ISO-3166-1 (alpha-2)",
                              "type": "string"
                            },
                            "ip_based_protection": {
                              "description": "Whether IP address-based protection on all requests is enabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "ip_brute_force_period_mins": {
                              "description": "The number of minutes in which cPHulk measures an attacker's login attempts.",
                              "example": 15,
                              "type": "integer"
                            },
                            "ip_brute_force_period_sec": {
                              "description": "The number of seconds in which cPHulk measures an attacker's login attempts.",
                              "example": 900,
                              "type": "integer"
                            },
                            "is_enabled": {
                              "description": "Whether the cPHulk service is enabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "lookback_period_min": {
                              "description": "The number of minutes over which cPHulk counts failed logins against a user.",
                              "example": 360,
                              "type": "integer"
                            },
                            "lookback_time": {
                              "description": "The number of seconds over which cPHulk counts failed logins against a user.",
                              "example": 21600,
                              "type": "integer"
                            },
                            "mark_as_brute": {
                              "description": "The maximum number of failures from a specific IP address before cPHulk blocks that address for a two-week period.",
                              "example": 30,
                              "type": "integer"
                            },
                            "max_failures": {
                              "description": "The maximum number of failures that cPHulk allows per account within the defined time range.",
                              "example": 30,
                              "type": "integer"
                            },
                            "max_failures_byip": {
                              "description": "The maximum number of failures from a specific IP address before cPHulk locks out that address.",
                              "example": 5,
                              "type": "integer"
                            },
                            "notify_on_brute": {
                              "description": "Whether cPHulk will send a notification when it detects a brute force attack.\n* `1` - Send the notification.\n* `0` - Do **not** send the notification.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "notify_on_root_login": {
                              "description": "Whether cPHulk will send a notification when the root user successfully logs in from an IP address that is **not** on the whitelist.\n* `1` - Send the notification.\n* `0` - Do **not** send the notification.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "notify_on_root_login_for_known_netblock": {
                              "description": "Whether cPHulk sends a notification upon successful root login when the IP address is **not** on the whitelist, but from a known netblock\n* `1` - Send the notification.\n* `0` - Do **not** send the notification.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "username_based_protection": {
                              "description": "Whether username-based protection on all requests is enabled.\n* `1` - Enabled.\n* `0` - Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "username_based_protection_for_root": {
                              "description": "Whether username-based protection can lock out the root user.\n* `1` - Allowed.\n* `0` - Not allowed.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 0,
                              "type": "integer"
                            },
                            "username_based_protection_local_origin": {
                              "description": "Whether username-based protection only on requests that originate from a local IP address.\n* `1` - Enabled.\n* `0` - Disabled.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_cphulk_config_key",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update login security configuration settings",
        "tags": [
          "cPHulk",
          "Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_cphulk_config_key"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_cphulk_config_key?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "70"
      }
    },
    "/set_default": {
      "get": {
        "description": "This function sets the default cPanel style.",
        "operationId": "set_default",
        "parameters": [
          {
            "description": "The style's name.\n* `base` — The default Paper Lantern style.\n* `retro` — The Paper Lantern Retro style.\n* Another style name on the server.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "enum": [
                "base",
                "retro",
                "Another style name on the server."
              ],
              "example": "base",
              "type": "string"
            }
          },
          {
            "description": "The style's type.\n* `default` — The default style for cPanel accounts on the server.\n* `global` — For all of the cPanel accounts on the server.\n* `reseller` — For all cPanel accounts that a reseller owns.\n* `user` — For a specific cPanel account.",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "enum": [
                "default",
                "global",
                "reseller",
                "user"
              ],
              "example": "default",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_default",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Save default cPanel style",
        "tags": [
          "Styles and Themes",
          "Styles"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_default type='default' name='base'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_default?api.version=1&type=default&name=base"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60"
      }
    },
    "/set_digest_auth": {
      "get": {
        "description": "This function enables or disables Digest Authentication for an account. Windows Vista®,\nWindows® 7, and Windows® 8 requires that you enable Digest Authentication support in order\nto access your [Web Disk](https://docs.cpanel.net/cpanel/files/web-disk/) over a clear text,\nunencrypted connection.\n\n**Note:**\n\nIf the server has an SSL certificate that a recognized certificate authority signed and you\ncan make an SSL connection over port `2078`, you do **not** need to enable Digest Authentication.",
        "operationId": "set_digest_auth",
        "parameters": [
          {
            "description": "Whether to enable Digest Authentication for the account.\n\n* `1` — Enable.\n* `0` — Disable.",
            "in": "query",
            "name": "enabledigest or digestauth",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The account's password.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "The account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_digest_auth",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "Digest Authentication enabled.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable or disable Digest Authentication",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_digest_auth user='username' password='123456luggage' enabledigest or digestauth='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_digest_auth?api.version=1&user=username&password=123456luggage&enabledigest%20or%20digestauth=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/set_local_mysql_root_password": {
      "get": {
        "description": "This function resets the root user's password on the local MySQL® server.\n\n**Important:**\n\n  When you disable the [*MySQL/MariaDB role*](https://go.cpanel.net/howtouseserverprofiles#roles) **and** remote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "set_local_mysql_root_password",
        "parameters": [
          {
            "description": "The new MySQL root user's password.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "12345luggage",
              "type": "string"
            }
          },
          {
            "description": "Whether to update the configuration files.\n* `1` — Update.\n* `0` — Do **not** update.\n\n**Warning:**\n\nThis parameter updates the `/root/.my.cnf` file with the new password, which could cause problems with the MySQL configuration on the server. If you are unsure, do **not** specify this parameter.\n\n * If you set this parameter to `0` when *localhost* is the active profile, it will stop communication with the remote MySQL server until you update the profile's password.\n * If you set this parameter to `1` when a remote host is the active profile, it will stop communication with the remote MySQL server until you update the profile's password.",
            "in": "query",
            "name": "update_config",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "configs_updated": {
                          "description": "Whether the system updated the configuration settings.\n\n**Note:**\n\n This return **only** appears when the function includes the `update_config` parameter or when the *localhost* MySQL profile is active.\n* `1` — Updated.\n* `0` — **Not** updated.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "password_reset": {
                          "description": "Whether the system reset the password.\n* `1` — Reset.\n* `0` — **Not** reset.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "profile_updated": {
                          "description": "Whether the system updated the profile.\n\n**Note:**\n\n This return **only** appears when the *localhost* MySQL profile is active.\n* `1` — Updated.\n* `0` — **Not** updated.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_local_mysql_root_password",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update MySQL root password",
        "tags": [
          "Databases",
          "Manage MySQL Server"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_local_mysql_root_password password='12345luggage'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_local_mysql_root_password?api.version=1&password=12345luggage"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/set_manual_mx_redirects": {
      "get": {
        "description": "This function lets you create a manual Exim mail exchanger (MX) redirect for a domain. An MX redirection lets you bypass the domain's MX lookup via the Domain Name System (DNS). This function adds the manual redirect entries to the /etc/manualmx file.\n\n**Note:**\n\n  To remove a domain's manual MX redirection, use the WHM API 1 unset_manual_mx_redirect function.",
        "operationId": "set_manual_mx_redirects",
        "parameters": [
          {
            "description": "The domain for which to add a manual MX redirect entry.\n\n**Note:**\n\n To add multiple domain entries, increment the parameter. For example, use the domain, domain-1, and domain-2 parameters. For multiple domains, you must include its corresponding mx_host value.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The domain or IP address (IPv4 or IPv6) to redirect the domain value's emails to.\n\n**Note:**\n\n To add multiple MX hosts, increment the parameter. For example, use the  mx_host,  mx_host-1, and  mx_host-2 parameters. For multiple MX hosts, you must include its corresponding domain value.",
            "in": "query",
            "name": "mx_host",
            "required": true,
            "schema": {
              "example": "mailhostexample.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_manual_mx_redirects",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add manual mail exchanger redirect record",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_manual_mx_redirects domain='example.com' mx_host='mailhostexample.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_manual_mx_redirects?api.version=1&domain=example.com&mx_host=mailhostexample.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "90"
      }
    },
    "/set_market_product_attribute": {
      "get": {
        "description": "This function sets an attribute for a cPanel Market provider's product.",
        "operationId": "set_market_product_attribute",
        "parameters": [
          {
            "description": "The attribute of the cPanel Market provider's product.\n\n**Note**\n\nAttributes vary between cPanel Market providers and products.",
            "in": "query",
            "name": "attribute",
            "required": true,
            "schema": {
              "example": "price",
              "type": "string"
            }
          },
          {
            "description": "The cPanel Market provider product's name.",
            "in": "query",
            "name": "product_id",
            "required": true,
            "schema": {
              "example": "12345",
              "type": "string"
            }
          },
          {
            "description": "The cPanel Market provider's name.",
            "in": "query",
            "name": "provider",
            "required": true,
            "schema": {
              "example": "cPStore",
              "type": "string"
            }
          },
          {
            "description": "The value to set for the attribute.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "example": "6.00",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_market_product_attribute",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update Market provider product",
        "tags": [
          "Market",
          "Product Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_market_product_attribute provider='cPStore' product_id='12345' attribute='price' value='6.00'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_market_product_attribute?api.version=1&provider=cPStore&product_id=12345&attribute=price&value=6.00"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/set_market_provider_commission_id": {
      "get": {
        "description": "This function sets the contact ID to which a cPanel Market provider will send commission.",
        "operationId": "set_market_provider_commission_id",
        "parameters": [
          {
            "description": "The cPanel Store ID to which to send cPanel Market commissions.",
            "in": "query",
            "name": "commission_id",
            "required": true,
            "schema": {
              "example": "user@example.com",
              "type": "string"
            }
          },
          {
            "description": "The cPanel Market provider's name.",
            "in": "query",
            "name": "provider",
            "required": true,
            "schema": {
              "example": "cPStore",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_market_provider_commission_id",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update Market provider commission contact ID",
        "tags": [
          "Market",
          "Provider Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_market_provider_commission_id provider='cPStore' commission_id='user@example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_market_provider_commission_id?api.version=1&provider=cPStore&commission_id=user%40example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/set_mysql_password": {
      "get": {
        "description": "This function changes a MySQL® database user's password.\n\n**Important:**\n\nWhen you disable the\n[MySQL/MariaDB role](https://go.cpanel.net/howtouseserverprofiles#roles) **and**\nremote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "set_mysql_password",
        "parameters": [
          {
            "description": "The database user's new password.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "123456luggage",
              "type": "string"
            }
          },
          {
            "description": "The database username. For information about database username\nrestrictions, read the\n[MySQL](https://dev.mysql.com/) and [MariaDB](https://mariadb.org/)\ndocumentation.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The cPanel user that controls the database user.",
            "in": "query",
            "name": "cpuser",
            "required": false,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_mysql_password",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update MySQL user password",
        "tags": [
          "Databases",
          "MySQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_mysql_password user='username' password='123456luggage'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_mysql_password?api.version=1&user=username&password=123456luggage"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/set_nameserver": {
      "get": {
        "description": "This function sets the nameserver software that the remote servers in a DNS cluster run. The system queues the nameserver software that you select until the HTTP request finishes. Then, it sets the remote servers' nameserver software.",
        "operationId": "set_nameserver",
        "parameters": [
          {
            "description": "The nameserver software.\n* `BIND`\n* `PowerDNS`\n* `Disabled`",
            "in": "query",
            "name": "nameserver",
            "required": true,
            "schema": {
              "enum": [
                "BIND",
                "PowerDNS",
                "Disabled"
              ],
              "example": "BIND",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "message": {
                          "description": "A confirmation message from the system.",
                          "example": "Queued task to set nameserver to bind successfully.",
                          "type": "string"
                        },
                        "nameserver": {
                          "description": "The nameserver software.\n* `bind`\n* `powerdns`\n* `disabled`",
                          "enum": [
                            "bind",
                            "powerdns",
                            "disabled"
                          ],
                          "example": "bind",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_nameserver",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update remote DNS server's nameserver software",
        "tags": [
          "DNS",
          "DNS Cluster Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_nameserver nameserver='BIND'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_nameserver?api.version=1&nameserver=BIND"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "84"
      }
    },
    "/set_nsec3_for_domains": {
      "get": {
        "description": "This function configures the domain to use [Next Secure Record 3](https://tools.ietf.org/html/rfc4470) (NSEC3) semantics.\n\n**Note:**\n\nOnly servers that run PowerDNS can use DNSSEC. If you call this function on a server that doesn't use PowerDNS, you will receive an error.",
        "operationId": "set_nsec3_for_domains",
        "parameters": [
          {
            "description": "The domain for which to enable NSEC3 semantics.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The number of times that the system re-executes the first resource record hash operation.",
            "in": "query",
            "name": "nsec3_iterations",
            "required": true,
            "schema": {
              "example": 7,
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether NSEC3 will operate in Narrow mode or Inclusive mode.\n\n  **Note**\n\nFor information about these modes, read  [PowerDNS's DNSSEC documentation](https://doc.powerdns.com/authoritative/dnssec/intro.html).\n\n* `1` - Narrow mode.\n* `0` - Inclusive mode.",
            "in": "query",
            "name": "nsec3_narrow",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the system will create records for **all** delegations.\n* `1` - Create records for **all** delegations.\n* `0` - Create records **only** for secure delegations.\n\n**Note**\n\nOnly select `1` if you **must** create records for all delegations.",
            "in": "query",
            "name": "nsec3_opt_out",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The salt value that PowerDNS uses in the hashes.\n\n  **Note:**\n\n For information about salt values, read  [RFC 5155](https://tools.ietf.org/html/rfc5155#section-3.1.5).",
            "in": "query",
            "name": "nsec3_salt",
            "required": true,
            "schema": {
              "example": "1a2b3c4d5e6f",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "domains": {
                          "description": "An array of objects that contains information about each domain.",
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The domain for which the system enabled NSEC3.",
                                "example": "example.com",
                                "format": "domain",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Whether the system enabled NSEC3.\n- `1` — Enabled.\n- `0` — The system failed to enable NSEC3.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "error": {
                                "description": "An error message that describes why the system could not enable NSEC3.\n\n**Note:**\n\n The function **only** displays this return when the enabled return is a `0` value.",
                                "example": "Error message.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_nsec3_for_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason `field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable NSEC3 semantics for domain",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_nsec3_for_domains domain='example.com' nsec3_opt_out='0' nsec3_iterations='7' nsec3_narrow='1' nsec3_salt='1a2b3c4d5e6f'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_nsec3_for_domains?api.version=1&domain=example.com&nsec3_opt_out=0&nsec3_iterations=7&nsec3_narrow=1&nsec3_salt=1a2b3c4d5e6f"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/set_postgresql_password": {
      "get": {
        "description": "This function changes a PostgreSQL® database user's password.\n\n**Important:**\n\nWhen you disable the [PostgreSQL role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "set_postgresql_password",
        "parameters": [
          {
            "description": "The database user's new password.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "12345luggage",
              "type": "string"
            }
          },
          {
            "description": "The account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "The database user's owner.",
            "in": "query",
            "name": "cpuser",
            "required": false,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_postgresql_password",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update PostgreSQL user password",
        "tags": [
          "Databases",
          "PostgreSQL Databases"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_postgresql_password user='username' password='12345luggage'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_postgresql_password?api.version=1&user=username&password=12345luggage"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/set_primary_servername": {
      "get": {
        "description": "This function sets the primary domain hosted on an IP address and web server port. The primary domain refers to the virtual host that the server returns when a visitor directly accesses the IP address.\n\nFor example, if both `example1.com` and `example2.com` are name-based virtual hosts on IP address `192.168.0.1`, the primary virtual host appears when the visitor accesses the `http://192.168.0.1/` location.\n\n**Important:**\n\nWhen you disable the [Web Server role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.",
        "operationId": "set_primary_servername",
        "parameters": [
          {
            "description": "The `ServerName` value in Apache's `VirtualHost` section to set as primary for the IP address and port type.",
            "in": "query",
            "name": "servername",
            "required": true,
            "schema": {
              "example": "hostname.example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The type of virtual host to set as primary.\n* `std` — Set the primary domain for the HTTP port. Typically, port `80`.\n* `ssl` — Set the primary domain for the HTTPS port. Typically, port `443`.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "default": "std",
              "enum": [
                "std",
                "ssl"
              ],
              "example": "std",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_primary_servername",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update server's primary virtual host",
        "tags": [
          "Server Administration",
          "System Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_primary_servername servername='hostname.example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_primary_servername?api.version=1&servername=hostname.example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/set_provider_client_configurations": {
      "get": {
        "description": "This function sets the values of configuration fields for an external authentication identity provider.",
        "operationId": "set_provider_client_configurations",
        "parameters": [
          {
            "description": "The configuration values to set for the identity provider.\n\n**Note**\n \nThe items in this parameter depend on the fields that the provider implements through OpenID.",
            "in": "query",
            "name": "configurations",
            "required": true,
            "schema": {
              "example": "{\"client_id\":\"victoria\",\"client_secret\":\"secret\"}",
              "format": "json",
              "type": "string"
            }
          },
          {
            "description": "The identity provider's key.",
            "in": "query",
            "name": "provider_id",
            "required": true,
            "schema": {
              "example": "cpanelid",
              "type": "string"
            }
          },
          {
            "description": "The cPanel & WHM service's name.\n* `cpaneld` — The cPanel daemon.\n* `whostmgrd` — The WHM daemon.\n* `webmaild` — The Webmail daemon.",
            "in": "query",
            "name": "service_name",
            "required": true,
            "schema": {
              "enum": [
                "cpaneld",
                "whostmgrd",
                "webmaild"
              ],
              "example": "cpaneld",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_provider_client_configurations",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update identity provider client configuration",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_provider_client_configurations service_name='cpaneld' provider_id='cpanelid' configurations='{\"client_id\":\"victoria\",\"client_secret\":\"secret\"}'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_provider_client_configurations?api.version=1&service_name=cpaneld&provider_id=cpanelid&configurations=%7b%22client_id%22%3a%22victoria%22%2c%22client_secret%22%3a%22secret%22%7d"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/set_provider_display_configurations": {
      "get": {
        "description": "This function sets the display configuration for the login button of an external authentication identity provider.",
        "operationId": "set_provider_display_configurations",
        "parameters": [
          {
            "content": {
              "application/json": {
                "example": {
                  "color": "6677aa",
                  "display_name": "Hosting Center Login",
                  "textcolor": "44ffbb"
                },
                "schema": {
                  "properties": {
                    "color": {
                      "description": "The background color of the button on the cPanel interface.",
                      "example": "dd4b39",
                      "format": "RGB",
                      "type": "string"
                    },
                    "display_name": {
                      "description": "The display name of the identity provider.",
                      "example": "cPanel",
                      "type": "string"
                    },
                    "icon": {
                      "description": "The icon file to display in the button on the cPanel login interface.",
                      "example": "iVBORw0KGgoAAAANSUhEUgAAACEAAAAhCAYAAABX5MJvAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAV1JREFUeNrsVtGNwjAMJegGYIRucBmhtwEjdAMyQjYoG2SEG6HcBGUDugFskHOQg1zTlFaN\\/\\/KkqMh2yYvt53S3KygomIZaE+y9P8BDJ9xXpdSDxT9jwX7dxDJsDMvCuvl33GF1sBwS5O8GX7eVgCabGyRkGJF25v0sJHrcyDH7iMhWEl9zWSD1\\/xs1klJn8J\\/gZ4WxNdgu8KyiDXGIfmJ7LO6R8CI5rJnwO+Kv0Wb9Z7xlZr+wMt8f\\/ANmyCoCMF3CUmP8rOmHip1AM\\/8tdbLcjfnL5NigYmIp+ilp5iYRJNkmajtLIBuJiUZ1S+aDKGDjI8tGk+N\\/9yuy0ODcGIjL8UEmcXKLDelRDQ5tHcuIkSLQE1WYhIRfMRIEmiV1Z7NES5Rh9nIisRGVWGOyyyflC5fSkDsTmk1KnVBMbForqQw+IVtUCP3KEpdojffHnRGKcq3LZ3pBgST+BRgANXt+WPKE7tYAAAAASUVORK5CYII=",
                      "type": "string"
                    },
                    "icon_type": {
                      "default": "image/svg+xml",
                      "description": "The icon file's MIME type.",
                      "example": "image/svg+xml",
                      "format": "mime",
                      "type": "string"
                    },
                    "label": {
                      "description": "The text label that will appear on the cPanel login interface.",
                      "example": "Log in with a cPanelID Account",
                      "type": "string"
                    },
                    "textcolor": {
                      "description": "The color of the text label on the cPanel login interface.",
                      "example": "FFFFFF",
                      "format": "RGB",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The display configuration in JSON-encoded key-value format.",
            "in": "query",
            "name": "configurations",
            "required": true
          },
          {
            "description": "The identity provider's key.",
            "in": "query",
            "name": "provider_id",
            "required": true,
            "schema": {
              "example": "cpanelid",
              "type": "string"
            }
          },
          {
            "description": "The cPanel & WHM service's name.\n* `cpaneld` — The cPanel daemon.\n* `whostmgrd` — The WHM daemon.\n* `webmaild` — The Webmail daemon.",
            "in": "query",
            "name": "service_name",
            "required": true,
            "schema": {
              "enum": [
                "cpaneld",
                "whostmgrd",
                "webmaild"
              ],
              "example": "cpaneld",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_provider_display_configurations",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update identity provider login interface appearance",
        "tags": [
          "Authentication",
          "External Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_provider_display_configurations service_name='cpaneld' provider_id='cpanelid' configurations='{\"color\":\"dd4b39\",\"display_name\":\"cPanel\",\"icon\":\"iVBORw0KGgoAAAANSUhEUgAAACEAAAAhCAYAAABX5MJvAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAV1JREFUeNrsVtGNwjAMJegGYIRucBmhtwEjdAMyQjYoG2SEG6HcBGUDugFskHOQg1zTlFaN\\\\/\\\\/KkqMh2yYvt53S3KygomIZaE+y9P8BDJ9xXpdSDxT9jwX7dxDJsDMvCuvl33GF1sBwS5O8GX7eVgCabGyRkGJF25v0sJHrcyDH7iMhWEl9zWSD1\\\\/xs1klJn8J\\\\/gZ4WxNdgu8KyiDXGIfmJ7LO6R8CI5rJnwO+Kv0Wb9Z7xlZr+wMt8f\\\\/ANmyCoCMF3CUmP8rOmHip1AM\\\\/8tdbLcjfnL5NigYmIp+ilp5iYRJNkmajtLIBuJiUZ1S+aDKGDjI8tGk+N\\\\/9yuy0ODcGIjL8UEmcXKLDelRDQ5tHcuIkSLQE1WYhIRfMRIEmiV1Z7NES5Rh9nIisRGVWGOyyyflC5fSkDsTmk1KnVBMbForqQw+IVtUCP3KEpdojffHnRGKcq3LZ3pBgST+BRgANXt+WPKE7tYAAAAASUVORK5CYII=\",\"icon_type\":\"image/svg+xml\",\"label\":\"Log in with a cPanelID Account\",\"textcolor\":\"FFFFFF\"}'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_provider_display_configurations?api.version=1&service_name=cpaneld&provider_id=cpanelid&configurations=%7b%22color%22%3a%22dd4b39%22%2c%22display_name%22%3a%22cPanel%22%2c%22icon%22%3a%22iVBORw0KGgoAAAANSUhEUgAAACEAAAAhCAYAAABX5MJvAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAV1JREFUeNrsVtGNwjAMJegGYIRucBmhtwEjdAMyQjYoG2SEG6HcBGUDugFskHOQg1zTlFaN%5c%5c%2f%5c%5c%2fKkqMh2yYvt53S3KygomIZaE%2by9P8BDJ9xXpdSDxT9jwX7dxDJsDMvCuvl33GF1sBwS5O8GX7eVgCabGyRkGJF25v0sJHrcyDH7iMhWEl9zWSD1%5c%5c%2fxs1klJn8J%5c%5c%2fgZ4WxNdgu8KyiDXGIfmJ7LO6R8CI5rJnwO%2bKv0Wb9Z7xlZr%2bwMt8f%5c%5c%2fANmyCoCMF3CUmP8rOmHip1AM%5c%5c%2f8tdbLcjfnL5NigYmIp%2bilp5iYRJNkmajtLIBuJiUZ1S%2baDKGDjI8tGk%2bN%5c%5c%2f9yuy0ODcGIjL8UEmcXKLDelRDQ5tHcuIkSLQE1WYhIRfMRIEmiV1Z7NES5Rh9nIisRGVWGOyyyflC5fSkDsTmk1KnVBMbForqQw%2bIVtUCP3KEpdojffHnRGKcq3LZ3pBgST%2bBRgANXt%2bWPKE7tYAAAAASUVORK5CYII%3d%22%2c%22icon_type%22%3a%22image%2fsvg%2bxml%22%2c%22label%22%3a%22Log%20in%20with%20a%20cPanelID%20Account%22%2c%22textcolor%22%3a%22FFFFFF%22%7d"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/set_public_contact": {
      "get": {
        "description": "This function sets an account's public contact information.",
        "operationId": "set_public_contact",
        "parameters": [
          {
            "description": "The public contact name of the reseller. If you do not use this\nparameter, the system retains the current setting.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "example": "Bob's Hosting",
              "type": "string"
            }
          },
          {
            "description": "The public contact URL. If you do not use this parameter, the\nsystem retains the current setting.",
            "in": "query",
            "name": "url",
            "required": false,
            "schema": {
              "example": "https://bobshosting.net",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_public_contact",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update current user's public contact information",
        "tags": [
          "Resellers",
          "Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_public_contact"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_public_contact?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "68"
      }
    },
    "/set_service_config_key": {
      "get": {
        "description": "This function configures global properties for specific services listed in the `/var/cpanel/conf` directory.",
        "operationId": "set_service_config_key",
        "parameters": [
          {
            "description": "The configuration key's name.\n\n* This parameter uses the key names listed in the `/var/cpanel/conf/{service}/main` file, where {service} is the service's name from the service parameter.\n* This function does not support subkeys.",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "mail_process_size",
              "type": "string"
            }
          },
          {
            "description": "The service's name.\n\n* A list of service names exists in the `/var/cpanel/conf` directory.",
            "in": "query",
            "name": "service",
            "required": true,
            "schema": {
              "example": "dovecot",
              "type": "string"
            }
          },
          {
            "description": "The new value for the configuration key.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "example": "512",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_service_config_key",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Succeeded",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update service configuration key",
        "tags": [
          "Server Administration",
          "Services"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_service_config_key service='dovecot' key='mail_process_size' value='512'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_service_config_key?api.version=1&service=dovecot&key=mail_process_size&value=512"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/set_service_proxy_backends": {
      "get": {
        "description": "This function lets you configure a cPanel account's\n[service proxying](https://go.cpanel.net/ServiceProxying).\n\n**Note:**\n\n* If the [Web Server](https://go.cpanel.net/howtouseserverprofiles#roles) role is active\non the server, this function rebuilds the user's web virtual hosts (vhosts) and restarts\nthe web server.\n* If the system cannot rebuild the user's vhosts, the API call will still succeed. However,\nthe function returns a failure warning in the metadata.\n* To remove an account's service proxying, use the WHM API 1 `unset_all_service_proxy_backends`\nfunction.",
        "operationId": "set_service_proxy_backends",
        "parameters": [
          {
            "description": "The cPanel account's username.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The hostname or IP address to assign as the server that handles\nthe account's service proxy requests.\n\nThis parameter defaults to the existing service proxy configuration,\nif one exists.",
            "in": "query",
            "name": "general",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "description": "A valid hostname.",
                  "example": "hostname.example.com",
                  "format": "hostname",
                  "type": "string"
                },
                {
                  "description": "A valid IP address.",
                  "example": "192.0.2.102",
                  "format": "ipv4",
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The name of a service group for which to assign a proxy backend. The\ncorresponding `service_group_backend` value will be the service group's\nnew proxy backend.\n\n* `Mail` — The [Mail service group](https://go.cpanel.net/ServiceProxying#Mail).\n\nThis parameter defaults to the existing setting, if one exists.\n\n**Note:**\n\n * When you call this parameter, you **must** include a corresponding\n `service_group_backend` value.\n * To add `multiple service_group` values, increment the parameter name. For example,\n `service_group-1`, `service_group-2`, and `service_group-3`.",
            "examples": {
              "multiple": {
                "summary": "Add multiple service backend groups.",
                "value": "service-group-0=Mail&service-group-1=Mail&service-group-3=Mail"
              },
              "single": {
                "summary": "Add a single service backend group.",
                "value": "Mail"
              }
            },
            "in": "query",
            "name": "service_group",
            "required": false,
            "schema": {
              "enum": [
                "Mail"
              ],
              "type": "string"
            }
          },
          {
            "description": "The hostname or IP address of the server to assign as the corresponding\n`service_group` value's proxy backend server.\n\nThis parameter defaults to the existing setting, if one exists.\n\n**Note:**\n\n * When you call this parameter, you **must** include a corresponding `service_group`\n value.\n * To add multiple `service_group_backend` values, increment the parameter name.\n For example, `service_group_backend-1`, `service_group_backend-2`,\n and `service_group_backend-3`.",
            "examples": {
              "multiple": {
                "summary": "Add multiple service group backend servers.",
                "value": "service_group_backend-1=mail.example1.com&service_group_backend-2=mail.example2.com&service_group_backend-3=mail.example3.com"
              },
              "single": {
                "summary": "Add a single service group backend server.",
                "value": "mail.example.com"
              }
            },
            "in": "query",
            "name": "service_group_backend",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "description": "A valid hostname.",
                  "example": "hostname.example.com",
                  "format": "hostname",
                  "type": "string"
                },
                {
                  "description": "A valid IP address.",
                  "example": "192.0.2.102",
                  "format": "ipv4",
                  "type": "string"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_service_proxy_backends",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update cPanel account service proxying",
        "tags": [
          "Server Administration",
          "Services"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_service_proxy_backends username='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_service_proxy_backends?api.version=1&username=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "90"
      }
    },
    "/set_tier": {
      "get": {
        "description": "This function sets a cPanel & WHM server to a specified [support tier](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/).",
        "operationId": "set_tier",
        "parameters": [
          {
            "description": "The support tier to use.",
            "in": "query",
            "name": "tier",
            "required": true,
            "schema": {
              "enum": [
                "edge",
                "current",
                "release",
                "stable",
                "lts"
              ],
              "example": "current",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "tier": {
                          "description": "The server's new support tier.",
                          "enum": [
                            "edge",
                            "current",
                            "release",
                            "stable",
                            "lts"
                          ],
                          "example": "current",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_tier",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Update tier successfully changed to current",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update cPanel & WHM release tier",
        "tags": [
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_tier tier='current'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_tier?api.version=1&tier=current"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/set_tweaksetting": {
      "get": {
        "description": "This function sets an option's value in WHM's\n[*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/)\ninterface (*WHM >> Home >> Server Configuration >> Tweak Settings*). The\nsystem stores the keys and values that this function updates in\nthe\n[`/var/cpanel/cpanel.config`](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-config-file/)\nfile.",
        "operationId": "set_tweaksetting",
        "parameters": [
          {
            "description": "The `cpanel.config` setting name that corresponds to the desired\nsetting in WHM's\n[*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/)\ninterface (*WHM >>Home >> Server Configuration >> Tweak Settings*).",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "example": "proxysubdomains",
              "type": "string"
            }
          },
          {
            "description": "The\n[*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/)\ninterface section.\n\n**Note:**\n\nThe possible section names are:\n* `Apache`\n* `Basic`\n* `Mail`\n* `Main`",
            "in": "query",
            "name": "module",
            "required": false,
            "schema": {
              "default": "Main",
              "example": "Main",
              "enum": [
                "Apache",
                "Basic",
                "Mail",
                "Main"
              ],
              "type": "string"
            }
          },
          {
            "description": "The value to assign to the setting. If you include this parameter in the call but\ndo **not** set a value, the value defaults to an empty value.\n\n**Note:**\n\nFor more information about the requirements for values in the `cpanel.config`\nfile settings, read our\n[`cpanel.config` file](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-config-file/)\ndocumentation.",
            "in": "query",
            "name": "value",
            "required": false,
            "schema": {
              "example": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_tweaksetting",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update Tweak Settings option",
        "tags": [
          "Server Administration",
          "Configurations"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_tweaksetting key='proxysubdomains'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_tweaksetting?api.version=1&key=proxysubdomains"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/set_up_dns_resolver_workarounds": {
      "get": {
        "description": "This function creates an [Unbound](http://www.linuxfromscratch.org/blfs/view/svn/server/unbound.html) (`libunbound`) DNS resolver configuration.\n\n**Important:**\n\nWhen you disable the [DNS role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.",
        "operationId": "set_up_dns_resolver_workarounds",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "flags": {
                          "description": "An object that contains of [`libunbound` configuration options](https://www.nlnetlabs.nl/documentation/unbound/unbound.conf/).\n\n**Note:**\n\nThe function **only** returns an option if the system finds a configuration issue.",
                          "properties": {
                            "do-ip6": {
                              "description": "The system **cannot** create an [IPv6](https://en.wikipedia.org/wiki/IPv6) socket.",
                              "example": "no",
                              "type": "string"
                            },
                            "do-udp": {
                              "description": "The system **cannot** receive a [User Datagram Protocol (UDP)](https://en.wikipedia.org/wiki/User_Datagram_Protocol) DNS response.",
                              "example": "no",
                              "type": "string"
                            },
                            "edns-buffer-size": {
                              "description": "The [extension mechanism for DNS (EDNS)](https://en.wikipedia.org/wiki/Extension_mechanisms_for_DNS) length size is at or exceeds 512 bytes.",
                              "example": "512",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_up_dns_resolver_workarounds",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create unbound DNS resolver",
        "tags": [
          "DNS",
          "Resolvers"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_up_dns_resolver_workarounds"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_up_dns_resolver_workarounds?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "84"
      }
    },
    "/set_user_email_forward_destination": {
      "get": {
        "description": "This function sets the destination to which the system forwards a system account's email.\n\n**Notes:**\n\n* Usually, the system sends notices about the server's problems and activity to the `root` account.\n* If you do **not** use the `suexec` module, the `nobody` user receives bounce messages from email that CGI scripts send.\n\n**Important:**\n\nWhen you disable the [Receive Mail role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.",
        "operationId": "set_user_email_forward_destination",
        "parameters": [
          {
            "description": "The system account name or email address to which you wish to forward email.\n\n**Note:**\n\nTo forward messages to multiple accounts or email addresses, use a comma-separated list.",
            "in": "query",
            "name": "forward_to",
            "required": true,
            "schema": {
              "example": "user",
              "type": "string"
            }
          },
          {
            "description": "The system account name to forward.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "root",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "set_user_email_forward_destination",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update cPanel account email forward destination",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 set_user_email_forward_destination user='root' forward_to='user'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/set_user_email_forward_destination?api.version=1&user=root&forward_to=user"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/setacls": {
      "get": {
        "description": "This function creates or modifies an Access Control List (ACL).\n\n**Warning:**\n\n  We strongly recommend that WHM users create and edit ACLs and privileges in WHM's  Edit Reseller Nameservers and Privileges  interface ( WHM >> Home >> Resellers >> Edit Reseller Nameservers and Privileges ).",
        "operationId": "setacls",
        "parameters": [
          {
            "description": "The reseller's username.",
            "in": "query",
            "name": "reseller",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to allow the reseller to view an account summary.",
            "in": "query",
            "name": "acl-acct-summary",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to add and remove hosting plans (packages).",
            "in": "query",
            "name": "acl-add-pkg",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with a dedicated IP address.",
            "in": "query",
            "name": "acl-add-pkg-ip",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with shell access.",
            "in": "query",
            "name": "acl-add-pkg-shell",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to grant the reseller all ACL privileges.\n\n**Warning:**\n\n A value of 1 grants root-level privileges to the reseller.",
            "in": "query",
            "name": "acl-all",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with addon domains.",
            "in": "query",
            "name": "acl-allow-addoncreate",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with parked domains (aliases).",
            "in": "query",
            "name": "acl-allow-parkedcreate",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with unlimited bandwidth.",
            "in": "query",
            "name": "acl-allow-unlimited-bw-pkgs",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with unlimited disk space.",
            "in": "query",
            "name": "acl-allow-unlimited-disk-pkgs",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create packages with unlimited features.",
            "in": "query",
            "name": "acl-allow-unlimited-pkgs",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to retrieve basic system information.",
            "in": "query",
            "name": "acl-basic-system-info",
            "required": false,
            "schema": {
              "default": "undef ",
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to access basic cPanel & WHM options.",
            "in": "query",
            "name": "acl-basic-whm-functions",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to use DNS clusters.",
            "in": "query",
            "name": "acl-clustering",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to perform Cross-Origin Resource Sharing (CORS) HTTP requests.",
            "in": "query",
            "name": "acl-cors-proxy-get",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to execute cPanel API 1,  cPanel API 2  and  UAPI  functions via WHM.",
            "in": "query",
            "name": "acl-cpanel-api",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage how their server and its services connect to other servers and services.",
            "in": "query",
            "name": "acl-cpanel-integration",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create accounts.",
            "in": "query",
            "name": "acl-create-acct",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to add DNS zones.",
            "in": "query",
            "name": "acl-create-dns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create a temporary session user for a specified service.\n\n**Notes:**\n\n This privilege allows an API token user to bypass any restrictions that you set on the API token. For more information, read our Manage API Tokens 72Docsumentation.",
            "in": "query",
            "name": "acl-create-user-session",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to enable demo mode for accounts.",
            "in": "query",
            "name": "acl-demo-setup",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage Digest Authentication support.",
            "in": "query",
            "name": "acl-digest-auth",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create accounts with shell access.",
            "in": "query",
            "name": "acl-disallow-shell",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to edit accounts.",
            "in": "query",
            "name": "acl-edit-account",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to edit DNS zones.",
            "in": "query",
            "name": "acl-edit-dns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to edit MX entries.",
            "in": "query",
            "name": "acl-edit-mx",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to edit hosting plans (packages).",
            "in": "query",
            "name": "acl-edit-pkg",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage Microsoft® FrontPage® Extensions.\n\n**Note:**\n\n cPanel & WHM will ignore all Microsoft FrontPage settings and parameters if either of the following statements are true:Your server runs cPanel & WHM version 11.44 and FrontPage extensions are not installed on your server. Your server runs cPanel & WHM version 11.46 or later.",
            "in": "query",
            "name": "acl-frontpage",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to generate a mobile configuration profile for an email account.",
            "in": "query",
            "name": "acl-generate-email-config",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to terminate accounts.",
            "in": "query",
            "name": "acl-kill-acct",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to remove DNS zones.",
            "in": "query",
            "name": "acl-kill-dns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to modify bandwidth limits (quotas).\n\n**Warning:**\n\n If you do not use resource limits, a value of 1 allows resellers to circumvent package limits for disk space.",
            "in": "query",
            "name": "acl-limit-bandwidth",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view the list of accounts.",
            "in": "query",
            "name": "acl-list-accts",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view existing hosting plans (packages).",
            "in": "query",
            "name": "acl-list-pkgs",
            "required": false,
            "schema": {
              "default": "undef ",
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to create and modify locales on the server.",
            "in": "query",
            "name": "acl-locale-edit",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to troubleshoot mail delivery.",
            "in": "query",
            "name": "acl-mailcheck",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage API tokens.\n\n**Notes:**\n\n This privilege allows an API token user to bypass any restrictions that you set on the API token. For more information, read our Manage API Tokens 72Docsumentation.",
            "in": "query",
            "name": "acl-manage-api-tokens",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage DNS records.",
            "in": "query",
            "name": "acl-manage-dns-records",
            "required": false,
            "schema": {
              "default": "undef ",
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage external authentication for their accounts.",
            "in": "query",
            "name": "acl-manage-oidc",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage their server's cPanel styles.",
            "in": "query",
            "name": "acl-manage-styles",
            "required": false,
            "schema": {
              "default": "undef ",
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to retrieve MySQL® database and user data.",
            "in": "query",
            "name": "acl-mysql-info",
            "required": false,
            "schema": {
              "default": "undef ",
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage nameservers.",
            "in": "query",
            "name": "acl-nameserver-config",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to modify the server's news.",
            "in": "query",
            "name": "acl-news",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to park DNS zones.",
            "in": "query",
            "name": "acl-park-dns",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to change passwords.\n\n**Note:**\n\n This privilege allows an API token user to change account passwords and log in with a new password. For more information, read our Manage API Tokens 72Docsumentation.",
            "in": "query",
            "name": "acl-passwd",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to modify quotas.\n\n**Warning:**\n\n If you do not use resource limits, this ACL allows resellers to circumvent package limits for disk space.",
            "in": "query",
            "name": "acl-quota",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to rearrange accounts.",
            "in": "query",
            "name": "acl-rearrange-accts",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to reset the Interchange shopping cart.\n\n**Important:**\n\n We removed this return in cPanel & WHM version 11.46. Do not use this privilege in cPanel & WHM version 11.38 or later.",
            "in": "query",
            "name": "acl-res-cart",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to resync FTP passwords.",
            "in": "query",
            "name": "acl-resftp",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to restart services.",
            "in": "query",
            "name": "acl-restart",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view account bandwidth usage.",
            "in": "query",
            "name": "acl-show-bandwidth",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to perform SSL site management.",
            "in": "query",
            "name": "acl-ssl",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to purchase SSL certificates.",
            "in": "query",
            "name": "acl-ssl-buy",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to generate SSL certificates.",
            "in": "query",
            "name": "acl-ssl-gencrt",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view their server's SSL information.",
            "in": "query",
            "name": "acl-ssl-info",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view server information.",
            "in": "query",
            "name": "acl-stats",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view the server's status.",
            "in": "query",
            "name": "acl-status",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to suspend or unsuspend accounts.",
            "in": "query",
            "name": "acl-suspend-acct",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to manage third-party services.",
            "in": "query",
            "name": "acl-thirdparty",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to view reports about email message delivery attempts from their account.",
            "in": "query",
            "name": "acl-track-email",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to upgrade or downgrade accounts.",
            "in": "query",
            "name": "acl-upgrade-account",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to allow the reseller to use all global packages. For more information, read our reseller packages documentation.",
            "in": "query",
            "name": "acl-viewglobalpackages",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The ACL to assign to the reseller.\n\n**Warning:**\n\n Functions should either use this parameter, or a combination of the acl-* parameters below. Do not include both in a single function.",
            "in": "query",
            "name": "acllist",
            "required": false,
            "schema": {
              "example": "my_acl_list",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "acl": {
                          "description": "An array of the reseller's privileges. An array that contains the names of one or more privileges.",
                          "items": {
                            "example": "all",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "setacls",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create or update reseller privilege settings",
        "tags": [
          "Resellers",
          "Account Permissions"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 setacls reseller='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/setacls?api.version=1&reseller=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/sethostname": {
      "get": {
        "description": "This function changes the server's hostname.\n\n**Warning:**\n\n* Do **not** select a hostname that begins with `www` or a number, or a\nhostname that ends with a hyphen (`-`) character.\n* You **must** use a fully-qualified domain name (FQDN) that contains two periods\n(for example, `hostname.example.com`).\n* Do **not** choose a hostname that a cPanel account on your server will use.\n* Do **not** choose a potential service subdomain (proxy subdomain) as a hostname\n(for example, `cpanel.example.com` or `whm.example.com`).\n\n**Important:**\n\nIf you update your hostname, the system blocks user access to the following interfaces and services:\n  * Horde Webmail\n  * Calendars and Contacts (CalDAV and CardDAV)\n\nThe system restores access to these interfaces and services after the hostname update finishes.\nFor more information, read our\n[Interface Lock Scripts](https://docs.cpanel.net/knowledge-base/cpanel-product/interface-lock-scripts/)\ndocumentation.\n\n**Note:**\n\nWhenever you change the server's hostname, you **must** use one of the following methods:\n  * Use WHM's\n  [*Change Hostname*](https://docs.cpanel.net/whm/networking-setup/change-hostname/)\n  interface (*WHM >> Home >> Networking Setup >> Change Hostname*).\n  * Call WHM API 1's `sethostname` function.\n  * Run the\n  [`/usr/local/cpanel/bin/set_hostname` utility](https://docs.cpanel.net/whm/scripts/the-set_hostname-utility/)\n  as the `root` user.\nThese methods ensure that all of the necessary system and service changes occur.",
        "operationId": "sethostname",
        "parameters": [
          {
            "description": "The server's new hostname.\n\n**Important:**\n\nThe server's hostname should **never** be identical to the domain name. For example,\nif the domain is `example.com`, you could use a hostname such as `server1.example.com`,\nbut **not** `example.com`.  ",
            "in": "query",
            "name": "hostname",
            "required": true,
            "schema": {
              "example": "hostname.example.com",
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "sethostname",
                          "type": "string"
                        },
                        "output": {
                          "description": "A list of the function's output.",
                          "properties": {
                            "messages": {
                              "description": "Any of the function's output messages.",
                              "example": "Updating cPanel license...Done. Update succeeded.",
                              "type": "string"
                            },
                            "warnings": {
                              "description": "Any of the function's warnings.",
                              "example": "The hostname was already set to hostname.example.com, syncing configuration only.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Stopping cPHulkd during hostname change\nService “cphulkd” is already stopped.<br />\n<br />\n<span class='cpanel_output_color_bold'>Startup Log</span><br />\n <span class='cpanel_output_indent'></span><span class='cpanel_output_color_bold cpanel_output_ color_bright_yellow cpanel_output_color_on_grey6'>Warning: Journal has been rotated since unit was started. Log output is incomplete or unavailable.</span><br />\n<br />\n<span class= 'cpanel_output_color_bold okmsg'>cphulkd stopped successfully.</span><br />\nStopping MySQL during hostname change\nChanging hostname in kernel to hostname.example.com\nAltered hostname in /etc/sysconfig/network\nUpdating cPHulkd\nStarting cPHulkd\n(XID qju5cf) The “cphulkd” service is not configured.\nRestarting Exim\nWaiting for “exim” to restart ………waiting for “exim” to initialize ………finished.<br />\n<br />\n<span class='cpanel_output_color_bold'>Service Status</span><br />\n<span class='cpanel_output_indent'></span>exim (/usr/sbin/exim -ps -bd -q1h -oP /var/spool/exim/exim-daemon.pid) is running as mailnull with PID 16943 (systemd+/proc check method).<br />\n<br />\n<span class='cpanel_output_color_bold'>Startup Log</span><br />\n <span class='cpanel_output_indent'></span>Jul 29 15:03:14 hostname.example.com systemd[1]: Starting Exim is a Mail Transport Agent, which is the program that moves mail from one machine to another....<br />\n<span class='cpanel_output_indent'></span>Jul 29 15:03:14 hostname. example.com systemd[1]: Can&#39;t open PID file /var/spool/exim/exim-daemon.pid (yet?) after start: No such file or directory<br />\n<span class='cpanel_output_indent'></span>Jul 29 15:03:14 hostname.example.com systemd[1]: Started Exim is a Mail Transport Agent, which is the program that moves mail from one machine to another..<br />\n<br />\n<span class='cpanel_output_ color_bold'>Log Messages</span><br />\n<span class='cpanel_output_indent'></span>2020-07-29 15:03:14 exim 4.93 daemon started: pid=16943, -q1h, listening for SMTP on port 25 (IPv6 and IPv4) port 587 (IPv6 and IPv4) and for SMTPS on port 465 (IPv6 and IPv4)<br />\n<span class='cpanel_ output_indent'></span>2020-07-29 14:57:20 exim 4.93 daemon started: pid=16089, -q1h, listening for SMTP on port 25 (IPv6 and IPv4) port 587 (IPv6 and IPv4) and for SMTPS on port 465 (IPv6 and IPv4)<br />\n<br />\n<span class='cpanel_output_color_bold okmsg'>exim restarted successfully.</span><br />\nUpdating Apache configuration\nUpdating cPanel license...Done. Update succeeded.\nA DNS record already exists for “hostname.example.com”.\nThe system has queued the hostname changes for the Horde and DAV services.\nUsers cannot access the Horde or DAV features that use these services until\nthe system has finished updates to the hostname. After the system adjusts a\nspecific user’s database, it restores their access to the Horde and DAV services.\n\nYou will receive a notification when the system completes the update for all users.\nWaiting for “mysql” to start ……waiting for “mysql” to initialize ………finished.<br />\n<br />\n<span class='cpanel_output_color_bold'>Service Status</span><br />\n<span class='cpanel_output_indent'></span>mysqld (/usr/sbin/mysqld --daemonize --pid-file= /var/run/mysqld/mysqld.pid) is running as mysql with PID 16886 (systemd+/proc check method). <br />\n<br />\n<span class='cpanel_output_color_bold'>Startup Log</span><br />\n<span class= 'cpanel_output_indent'></span>Jul 29 15:03:10 hostname.example.com systemd[1]: Starting MySQL Server...<br />\n<span class='cpanel_output_indent'></span>Jul 29 15:03:11 hostname.example.com systemd[1]: Started MySQL Server.<br />\n<br />\n<span class='cpanel_output_color_bold'>Log Messages</span><br />\n<span class='cpanel_output_indent'></span>2020-07-29T20:03:11.894935Z 0 [Note] /usr/sbin/mysqld: ready for connections.<br />\n<span class='cpanel_output_indent'> </span>2020-07-29T20:03:09.442015Z 0 [Note] /usr/sbin/mysqld: Shutdown complete<br />\n<span class='cpanel_output_indent'></span>2020-07-29T19:57:17.010586Z 0 [Note] /usr/sbin/mysqld: ready for connections.<br />\n<br />\n<span class='cpanel_output_color_bold okmsg'>mysql started successfully.</span><br />",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update server's hostname",
        "tags": [
          "Server Administration",
          "System Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 sethostname hostname='hostname.example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/sethostname?api.version=1&hostname=hostname.example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/setminimumpasswordstrengths": {
      "get": {
        "description": "This function sets the minimum password strength for cPanel & WHM\naccounts.\n\n**Note**\n\nIf you do **not** specify a value for a parameter, the system will retain the existing setting.",
        "operationId": "setminimumpasswordstrengths",
        "parameters": [
          {
            "description": "The minimum password strength for cPAddons.",
            "in": "query",
            "name": "cpaddons",
            "required": false,
            "schema": {
              "example": 50,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The minimum password strength for new cPanel accounts.",
            "in": "query",
            "name": "createacct",
            "required": false,
            "schema": {
              "example": 50,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The minimum password strength for all services.",
            "in": "query",
            "name": "default",
            "required": false,
            "schema": {
              "example": 50,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The minimum password strength for mailing lists.",
            "in": "query",
            "name": "list",
            "required": false,
            "schema": {
              "example": 50,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The minimum password strength for MySQL® database users.",
            "in": "query",
            "name": "mysql",
            "required": false,
            "schema": {
              "example": 50,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The minimum password strength for WHM user or system accounts.",
            "in": "query",
            "name": "passwd",
            "required": false,
            "schema": {
              "example": 50,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The minimum password strength for PostgreSQL® database users.",
            "in": "query",
            "name": "postgres",
            "required": false,
            "schema": {
              "example": 50,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The minimum password strength for SSH keys.",
            "in": "query",
            "name": "sshkey",
            "required": false,
            "schema": {
              "example": 50,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The minimum password strength for mail, FTP, Web Disk, and WebDAV accounts.",
            "in": "query",
            "name": "virtual",
            "required": false,
            "schema": {
              "example": 50,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "setminimumpasswordstrengths",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update minimum password strength",
        "tags": [
          "Server Administration",
          "Passwords"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 setminimumpasswordstrengths"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/setminimumpasswordstrengths?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/setresellerips": {
      "get": {
        "description": "This function adds IP addresses to a reseller's account.\n\n**Note:**\n\nTo assign a main IP address to a reseller's account, call the WHM API 1 `setresellermainip` function.\n\nFor more information, read our [Manage Reseller's IP Delegation](https://go.cpanel.net/whmdocsManageResellersIPDelegation) documentation.",
        "operationId": "setresellerips",
        "parameters": [
          {
            "description": "The reseller's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to allocate the reseller a dedicated IP address.\n\n* `1` — Restrict the reseller's account to its dedicated IP address.\n* `0` — Allow the user to dedicate any available IP address to an owned account.",
            "in": "query",
            "name": "delegate",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The IP addresses to allocate to the reseller's account.\n\n**Note:**\n\n* If you do **not** use this parameter, the function clears the reseller's IP address list.\n* Use a comma-separated list to allocate multiple IP addresses.",
            "in": "query",
            "name": "ips",
            "required": false,
            "schema": {
              "example": "192.168.0.20",
              "format": "ipv4",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "all": {
                          "description": "Whether the function allocated all available IP addresses to the reseller. This return **only** appears if you set the `delegate` parameter to `0`.\n\n**Note:**\n\n`1` is the only possible value.",
                          "enum": [
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "ip": {
                          "description": "An array of the reseller's allocated IP addresses.",
                          "items": {
                            "example": "192.168.0.20",
                            "format": "ipv4",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "setresellerips",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add IP addresses to reseller",
        "tags": [
          "Resellers",
          "Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 setresellerips user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/setresellerips?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/setresellerlimits": {
      "get": {
        "description": "This function sets a reseller's bandwidth and disk quotas.",
        "operationId": "setresellerlimits",
        "parameters": [
          {
            "description": "The reseller's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "The reseller's maximum total number of accounts.\n\n**Important:**\n\nThe system **only** enforces this maximum if you set the `enable_account_limit`\nvalue to `1`.",
            "in": "query",
            "name": "account_limit",
            "required": false,
            "schema": {
              "example": 10,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The reseller's total bandwidth limit.\n\n* `0` — The reseller has unlimited bandwidth.\n\n**Important:**\n\nThe system **only** enforces this limit if you set the `enable_resource_limits`\nvalue to `1`.",
            "in": "query",
            "name": "bandwidth_limit",
            "required": false,
            "schema": {
              "example": 1073741824,
              "format": "megabytes",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "The reseller's total disk space usage limit.\n\n* `0` — The reseller can use unlimited disk space.\n\n**Important:**\n\nThe system **only** enforces this limit if you set the `enable_resource_limits`\nvalue to `1`.",
            "in": "query",
            "name": "diskspace_limit",
            "required": false,
            "schema": {
              "example": 1073741824,
              "format": "megabytes",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to limit the reseller's total number of accounts.\n\n* `1` — Limit.\n* `0` — Do **not** limit.\n\n**Note:**\n\nUse this parameter with the `account_limit` parameter.",
            "in": "query",
            "name": "enable_account_limit",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether the reseller can oversell accounts.\n\n* `1` — The reseller can oversell accounts.\n* `0` — The reseller **cannot** oversell accounts.\n\n**Important:**\n\nThe system **only** enforces this limit if you set the `enable_resource_limits`\nvalue to `1`.",
            "in": "query",
            "name": "enable_overselling",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the reseller can oversell bandwidth.\n\n* `1` — The reseller can oversell bandwidth.\n* `0` — The reseller **cannot** oversell bandwidth.\n\n**Important:**\n\nThe system **only** enforces this limit if you set the `enable_resource_limits` and\nthe `enable_overselling` values to `1`.",
            "in": "query",
            "name": "enable_overselling_bandwidth",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether the reseller can oversell disk space.\n\n* `1` — The reseller can oversell disk space.\n* `0` — The reseller **cannot** oversell disk space.\n\n**Important:**\n\nThe system **only** enforces this limit if you set the `enable_resource_limits`\nand the `enable_oversellng` values to `1`.",
            "in": "query",
            "name": "enable_overselling_diskspace",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to apply package limit numbers to the reseller.\n\n* `1` — Enable package limit numbers.\n* `0` — Disable package limit numbers.",
            "in": "query",
            "name": "enable_package_limit_numbers",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to apply package limits to the reseller.\n\n* `1` — Enable package limits.\n* `0` — Disable package limits.",
            "in": "query",
            "name": "enable_package_limits",
            "required": false,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to limit the reseller's resources.\n\n* `1` — Limit resources.\n* `0` — Do **not** limit resources.\n\n**Note:**\n\nUse this parameter with the `bandwidthlimit`, `diskspace_limit`,\n`enable_overselling`, `enable_overselling_bandwidth`, `enable_overselling_diskspace`,\n`enable_overselling`, `enable_package_limits`, and `enable_package_limit_numbers`\nparameters.",
            "in": "query",
            "name": "enable_resource_limits",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "setresellerlimits",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update reseller's bandwidth and disk quotas",
        "tags": [
          "Resellers",
          "Account Limits"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 setresellerlimits user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/setresellerlimits?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/setresellermainip": {
      "get": {
        "description": "This function assigns a main IP address to a reseller's account.\n\n**Note:**\n\n  To assign additional IP addresses to a reseller's account, call the WHM API 1 `setresellerips` function.",
        "operationId": "setresellermainip",
        "parameters": [
          {
            "description": "The IP address to assign to the reseller's account as the main shared IP address.",
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "example": "192.168.0.20",
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "The reseller's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "setresellermainip",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update reseller's main IP address",
        "tags": [
          "Resellers",
          "Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 setresellermainip user='username' ip='192.168.0.20'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/setresellermainip?api.version=1&user=username&ip=192.168.0.20"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/setresellernameservers": {
      "get": {
        "description": "This function assigns nameservers to a reseller's account.",
        "operationId": "setresellernameservers",
        "parameters": [
          {
            "description": "The reseller's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "A comma-separated list of the nameserver domains to assign to the reseller's account.\n\n**Note:**\n\nIf you do **not** use this parameter, the function resets the reseller's nameservers\nto use the server default.",
            "examples": {
              "multiple": {
                "summary": "Multiple nameservers",
                "value": "ns1.example.com,ns2.example.com"
              },
              "single": {
                "summary": "A single nameserver",
                "value": "ns1.example.com"
              }
            },
            "in": "query",
            "name": "nameservers",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "setresellernameservers",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update reseller's assigned nameservers",
        "tags": [
          "Resellers",
          "Account Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 setresellernameservers user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/setresellernameservers?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/setresellerpackagelimit": {
      "get": {
        "description": "This function limits the packages that a reseller assigns to cPanel accounts.",
        "operationId": "setresellerpackagelimit",
        "parameters": [
          {
            "description": "The reseller's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether the reseller can access the package hosting plan.\n* `1` — Enable access.\n* `0` — Disable access\n\n**Note:**\n\nIf you use this parameter, you **must** also include the `package` parameter.",
            "in": "query",
            "name": "allowed",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to grant the reseller unlimited package use.\n* `1` — Grant the reseller unlimited package use.\n* `0` — Use package limits.",
            "in": "query",
            "name": "no_limit",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of accounts to which the reseller can assign the package hosting plan.\n\n**Note:**\n\n* If you use this parameter, you **must** also include the `package` parameter.\n* If you set a value for this parameter **and** set the `allowed` parameter to `0`, the reseller **cannot** use the hosting plan.",
            "in": "query",
            "name": "number",
            "required": false,
            "schema": {
              "example": 5,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "A hosting plan (package), to modify the reseller's access settings for it.\n\n**Note:**\n\n Use this parameter with the `number` or `allowed` parameters.",
            "in": "query",
            "name": "package",
            "required": false,
            "schema": {
              "example": "package1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "setresellerpackagelimit",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update reseller's hosting plan limits",
        "tags": [
          "Resellers",
          "Account Limits"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 setresellerpackagelimit user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/setresellerpackagelimit?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/setresolvers": {
      "get": {
        "description": "This function configures the server's resolver nameservers.\n\n**Warning:**\n\n* The nameservers that the server uses as resolvers **must** function correctly. If they do not, the server will experience performance and stability issues.\n* **Never** set a resolver nameserver to `127.0.0.1` on a cPanel & WHM server.",
        "operationId": "setresolvers",
        "parameters": [
          {
            "description": "The server's primary resolver nameserver.",
            "in": "query",
            "name": "nameserver1",
            "required": true,
            "schema": {
              "example": "192.168.0.20",
              "oneOf": [
                {
                  "format": "ipv4",
                  "type": "string"
                },
                {
                  "format": "ipv6",
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The server's secondary resolver nameserver.",
            "in": "query",
            "name": "nameserver2",
            "required": true,
            "schema": {
              "example": "192.168.0.21",
              "format": "ipv4",
              "oneOf": [
                {
                  "format": "ipv4",
                  "type": "string"
                },
                {
                  "format": "ipv6",
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "The server's tertiary resolver nameserver.",
            "in": "query",
            "name": "nameserver3",
            "required": false,
            "schema": {
              "default": "",
              "example": "2001:4860:4860::8888",
              "oneOf": [
                {
                  "format": "ipv4",
                  "type": "string"
                },
                {
                  "format": "ipv6",
                  "type": "string"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "setresolvers",
                          "type": "string"
                        },
                        "output": {
                          "description": "Messages returned from the call.",
                          "properties": {
                            "messages": {
                              "example": "Listed in order they are:\n192.168.0.20\n192.168.0.21\n2001:4860:4860::8888\n",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Your resolvers have been setup!",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update server's resolver nameservers",
        "tags": [
          "DNS",
          "Resolvers"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 setresolvers nameserver1='192.168.0.20' nameserver2='192.168.0.21'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/setresolvers?api.version=1&nameserver1=192.168.0.20&nameserver2=192.168.0.21"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/setsiteip": {
      "get": {
        "description": "This function changes a site's or account's IP address.",
        "operationId": "setsiteip",
        "parameters": [
          {
            "description": "The site's or user's IPv4 address.",
            "in": "query",
            "name": "ip",
            "required": true,
            "schema": {
              "example": "192.168.4.10",
              "format": "ipv4",
              "type": "string"
            }
          },
          {
            "description": "The domain's name.\n\n**Note:**\n\nYou **must** use either the `user` parameter or `domain` parameter.",
            "in": "query",
            "name": "domain",
            "schema": {
              "example": "example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The user's username.\n\n**Note:**\n\nYou **must** use either the `user` parameter or `domain` parameter.",
            "in": "query",
            "name": "user",
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "setsiteip",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update domain or cPanel account IP address",
        "tags": [
          "IP Addresses",
          "IPv4 Address Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 setsiteip ip='192.168.4.10'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/setsiteip?api.version=1&ip=192.168.4.10"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/setupreseller": {
      "get": {
        "description": "This function grants reseller status to an account.\n\n**Note:**\n\nThis function grants reseller status to an **existing** account. You **cannot** create a new account with this function.",
        "operationId": "setupreseller",
        "parameters": [
          {
            "description": "The account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to set the account to own itself.\n* `1` — Make the account own itself.\n* `0` — Keep the account's current owner.",
            "in": "query",
            "name": "makeowner",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "setupreseller",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable cPanel account's reseller status",
        "tags": [
          "Resellers",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 setupreseller user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/setupreseller?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/showbw": {
      "get": {
        "description": "This function retrieves account bandwidth information.",
        "operationId": "showbw",
        "parameters": [
          {
            "description": "The month to query, in numeric format.\n\nThis value defaults to the current month.",
            "in": "query",
            "name": "month",
            "required": false,
            "schema": {
              "example": 12,
              "maximum": 12,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "A [Perl Compatible Regular Expression (PCRE)](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions)\nthat filters the results. The system matches the PCRE against the `searchtype`\nparameter's specified type.\n\nIf you do **not** specify a value for **both** the `searchtype` and `search`\nparameters, the function does **not** use the `search` criteria.",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "ownername",
              "type": "string"
            }
          },
          {
            "description": "The account information to query.\n\n* `domain` — Match domains against the `search` regular expression.\n* `owner` — Match the WHM user who owns the account against the `search`\nregular expression.\n* `user` — Match usernames against the `search` regular expression.\n* `ip` — Match IP addresses against the `search` regular expression.\n* `package` — Match hosting plans (packages) against the `search` regular\nexpression.\n\nIf you do **not** specify a value for **both** the `searchtype` and `search`\nparameters, the function does **not** use the `searchtype` value.",
            "in": "query",
            "name": "searchtype",
            "required": false,
            "schema": {
              "enum": [
                "domain",
                "owner",
                "user",
                "ip",
                "package"
              ],
              "example": "owner",
              "type": "string"
            }
          },
          {
            "description": "The reseller to query.\n\nIf you do **not** specify a value, the function queries **all** users.",
            "in": "query",
            "name": "showres",
            "required": false,
            "schema": {
              "example": "reseller_user",
              "type": "string"
            }
          },
          {
            "description": "The year to query.\n\nThis value defaults to the current year.",
            "in": "query",
            "name": "year",
            "required": false,
            "schema": {
              "example": 2019,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "acct": {
                          "description": "Bandwidth information for the reseller's accounts.",
                          "items": {
                            "properties": {
                              "bwusage": {
                                "description": "The bandwidth information for domains on the account.",
                                "items": {
                                  "properties": {
                                    "deleted": {
                                      "description": "Whether the account was deleted.\n\n* `1` — Deleted.\n* `0` — **Not** deleted.",
                                      "enum": [
                                        1,
                                        0
                                      ],
                                      "example": 0,
                                      "type": "integer"
                                    },
                                    "domain": {
                                      "description": "The domain on the account.",
                                      "example": "example.com",
                                      "type": "string"
                                    },
                                    "usage": {
                                      "description": "The domain's bandwidth usage during the queried period, in bytes.",
                                      "example": 0,
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "deleted": {
                                "description": "Whether the account was deleted.\n\n* `1` — Deleted.\n* `0` — **Not** deleted.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "limit": {
                                "description": "The account's bandwidth limit, in bytes.",
                                "example": 0,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "maindomain": {
                                "description": "The account's main domain.",
                                "example": "example.com",
                                "type": "string"
                              },
                              "owner": {
                                "description": "The account's owner.",
                                "example": "root",
                                "type": "string"
                              },
                              "reseller": {
                                "description": "Whether the user is a reseller.\n\n* `1` — Reseller account.\n* `0` — **Not** a reseller account.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 0,
                                "type": "integer"
                              },
                              "totalbytes": {
                                "description": "The account's total bandwidth usage during the queried period, in bytes.",
                                "example": 352,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "user": {
                                "description": "The account username.",
                                "example": "user",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "month": {
                          "description": "The queried month.",
                          "example": 12,
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "reseller": {
                          "description": "The reseller username or the `root` user.",
                          "example": "root",
                          "type": "string"
                        },
                        "totalused": {
                          "description": "The total bandwidth usage of the reseller's accounts during the queried period, in bytes.",
                          "example": 352,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "year": {
                          "description": "The queried year.",
                          "example": 2019,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "showbw",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account bandwidth information",
        "tags": [
          "Accounts",
          "Bandwidth and Disk Quotas"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 showbw"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/showbw?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/start_autossl_check_for_all_users": {
      "get": {
        "description": "This function performs an AutoSSL certificate check in the background for all cPanel users that have the feature enabled.",
        "operationId": "start_autossl_check_for_all_users",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pid": {
                          "description": "The process ID of the script.",
                          "example": 29193,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "start_autossl_check_for_all_users",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Start AutoSSL check for all cPanel accounts",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 start_autossl_check_for_all_users"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/start_autossl_check_for_all_users?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/start_autossl_check_for_one_user": {
      "get": {
        "description": "This function performs an AutoSSL certificate check in the background for a cPanel user.",
        "operationId": "start_autossl_check_for_one_user",
        "parameters": [
          {
            "description": "The cPanel username.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pid": {
                          "description": "The process ID of the script.",
                          "example": 12345,
                          "minimum": 1,
                          "type": "integer"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "start_autossl_check_for_one_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Start cPanel account AutoSSL check",
        "tags": [
          "SSL",
          "Auto-Generated Certificates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 start_autossl_check_for_one_user username='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/start_autossl_check_for_one_user?api.version=1&username=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/start_background_mysql_upgrade": {
      "get": {
        "description": "This function upgrades MySQL® or MariaDB® in the background.\n\n**Important:**\n\nWhen you disable the [MySQL/MariaDB server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles) and remote MySQL is **not** already configured, the system **disables** this function.",
        "operationId": "start_background_mysql_upgrade",
        "parameters": [
          {
            "description": "The desired MySQL or MariaDB version.",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "example": 5.7,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "upgrade_id": {
                          "description": "The upgrade log's location, relative to the `/var/cpanel/logs/` directory.",
                          "example": "mysql_upgrade.20200202-172923",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "start_background_mysql_upgrade",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Start background MySQL upgrade",
        "tags": [
          "Databases",
          "Manage MySQL Server"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 start_background_mysql_upgrade version='5.7'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/start_background_mysql_upgrade?api.version=1&version=5.7"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "cPanel 11.48"
      }
    },
    "/start_background_pkgacct": {
      "get": {
        "description": "This function backs up an account with [the pkgacct script](https://go.cpanel.net/pkgacctscript).\n\n**Note:**\n\n- The `/usr/local/cpanel/scripts/pkgacct` script logs results to the `/var/cpanel/pkgacct_sessions/session_id/` directory, where `session_id` represents the backup session's ID.\n- The target system streams the output of this function with the `/usr/local/cpanel/whostmgr/docroot/cgi/live_tail_log.cgi` script on the source system. Users should **not** directly call this script.",
        "operationId": "start_background_pkgacct",
        "parameters": [
          {
            "description": "The cPanel account to back up.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to compress the data in .gzip format.\n* `compress` - Compress the data.\n* `null` - Do **not** compress the data.",
            "in": "query",
            "name": "compressionsetting",
            "required": false,
            "schema": {
              "default": null,
              "enum": [
                "compress"
              ],
              "example": "compress",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Whether to update the destination file with any new content since the previous backup.\nThis parameter also removes any content that no longer exists on the account.\nIf the destination file does **not** exist, the function creates a new file in that location.\n* `1` — Create an incremental archive file.\n* `0` — Do **not** create an incremental archive file.\n\n**Note:**\n\n When you use this parameter, the system creates the backup as an uncompressed archive.",
            "in": "query",
            "name": "incremental",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to run the background task with a reduced priority.\n* `1` — Run the backup as a low priority task.\n* `0` — Run the backup with normal priority.",
            "in": "query",
            "name": "low_priority",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The minimum version of MySQL® that the system requires to restore the backed up database files.\n\n**Note:**\n\n- You can view the server's installed version of MySQL in the `/var/cpanel/cpanel.config` file.\n- This parameter defaults to the current installed version of MySQL.",
            "in": "query",
            "name": "mysqlver",
            "required": false,
            "schema": {
              "example": "5.5",
              "type": "string"
            }
          },
          {
            "description": "Whether to encode each line of the script's output in JSON format in order to allow the `live_tail_log.cgi` script to stream it.\n* `1` — Serialize the output.\n* `0` — Do **not** serialize the output.",
            "in": "query",
            "name": "serialized_output",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's databases from the cpmove archive.\n* `1` — Do **not** back up the account's databases.\n* `0` — Back up the account's databases.",
            "in": "query",
            "name": "skipacctdb",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's API tokens from the archive.\n* `1` — Do **not** back up the account's API tokens.\n* `0` — Back up the account's API tokens.",
            "in": "query",
            "name": "skipapitokens",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's external authentication credentials from the archive.\n* `1` — Do **not** back up the account's external authentication credentials.\n* `0` — Back up the account's external authentication credentials.",
            "in": "query",
            "name": "skipauthnlinks",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's bandwidth data from the archive.\n* `1` — Do **not** back up the account's bandwidth data.\n* `0` — Back up the account's data.",
            "in": "query",
            "name": "skipbwdata",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's DNSSEC configuration from the archive.\n* `1` — Do **not** back up the account's DNSSEC configuration.\n* `0` — Back up the account's DNSSEC configuration.",
            "in": "query",
            "name": "skipdnssec",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's DNS zone file information from the archive.\n* `1` — Do **not** back up the account's DNS zone file information.\n* `0` — Back up the account's DNS zone file information.",
            "in": "query",
            "name": "skipdnszones",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's FTP user accounts from the archive.\n* `1` — Do **not** back up the account's FTP user accounts.\n* `0` — Back up the account's FTP user accounts.",
            "in": "query",
            "name": "skipftpusers",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to skip the home directory's contents.\n* `1` — Do **not** back up the account's home directory.\n* `0` — Back up the account's home directory.",
            "in": "query",
            "name": "skiphomedir",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's cPanel & WHM linked server nodes configuration from the archive.\n* `1` — Do **not** back up the account's linked server nodes configuration.\n* `0` — Back up the account's linked server nodes configuration.",
            "in": "query",
            "name": "skiplinkednodes",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's log files from the archive.\n* `1` — Do **not** back up the account's log files.\n* `0` — Back up the account's log files.",
            "in": "query",
            "name": "skiplogs",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's reseller privileges from the archive.\n* `1` — Do **not** back up the account's reseller privileges.\n* `0` — Back up the account's reseller privileges.",
            "in": "query",
            "name": "skipresellerconfig",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's shell information and privileges from the archive.\n* `1` — Do **not** back up the account's shell information and privileges.\n* `0` — Back up the account's shell information and privileges.",
            "in": "query",
            "name": "skipshell",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to exclude the account's virtual host (vhost) templates from the archive.\n* `1` — Do **not** back up the account's vhost templates.\n* `0` — Back up the account's vhost templates.",
            "in": "query",
            "name": "skipvhosttemplates",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to create the cpmove archive in chunks.\n* `1` — Create the archive in chunks.\n* `0` — Create a single archive file.",
            "in": "query",
            "name": "split",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The path to the directory in which you wish to store the cpmove archive.\n\n**Note:**\n\nThis parameter defaults to `/home/user`, where `user` represents the username of the account.",
            "in": "query",
            "name": "tarroot",
            "required": false,
            "schema": {
              "example": "/home/user",
              "type": "string"
            }
          },
          {
            "description": "Whether to use the account's last known successful backup as a template when the script creates the cpmove archive, if any exist.\n* `1` — Use the account's last known successful backup as a template, if any exist.\n* `0` — Do **not** use the account's last known successful backup.\n\n**Note:**\n\n This parameter may reduce the amount of time that the backup process requires.",
            "in": "query",
            "name": "use_backups",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "complete_master_error_log": {
                          "description": "The name of the master error log.\n\n**Note:**\n\n The target system streams the output of this file with the `live_tail_log.cgi` script; however, users should **not** directly call this script.",
                          "example": "master.error_log",
                          "type": "string"
                        },
                        "complete_master_log": {
                          "description": "The name of the master log.\n\n**Note:**\n\n The target system streams the output of this file with the `live_tail_log.cgi` script; however, users should **not** directly call this script.",
                          "example": "master.log",
                          "type": "string"
                        },
                        "session_id": {
                          "description": "The backup's session ID.",
                          "example": "example20151109162046c4xzDp55q9u4tPj",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "start_background_pkgacct",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Back up an account using the pkgacct script",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 start_background_pkgacct user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/start_background_pkgacct?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/start_local_cpmove_restore": {
      "get": {
        "description": "This function performs a full restoration of a single cPanel account from a `cpmove` tarball.",
        "operationId": "start_local_cpmove_restore",
        "parameters": [
          {
            "description": "A filepath that contains the account's `cpmove` tarball or the directory path that contains the extracted `cpmove` tarball.\n\n  **Note:**\n\nYou can use the [pkgacct script](https://go.cpanel.net/ThepkgacctScript) to create a `cpmove` tarball.",
            "in": "query",
            "name": "cpmovepath",
            "required": true,
            "schema": {
              "example": "/home/cpmove-newacct.tar.gz",
              "type": "string"
            }
          },
          {
            "description": "Whether to assign the account a dedicated IP address.\n* `1` - Assign a dedicated IP address.\n* `0` - Do **not** assign a dedicated IP address.\n\n  **Note:**\n\nThe system **must** have an available IP address.",
            "in": "query",
            "name": "dedicated_ip",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to delete the `cpmove` tarball or extracted directory, given in the `cpmovepath` parameter, after the system completes the account restoration.\n* `1` - Delete the `cpmove` tarball or extracted directory.\n* `0` - Do **not** delete the `cpmove` tarball or extracted directory.",
            "in": "query",
            "name": "delete_archive",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The server on which the account's email will reside after the system completes the transfer.\n* `.local` - Use the local server the account is being restored on.\n* `.existing` - Use the server location defined in the account's backup data. The system defaults to the `.local` parameter if this does **not** work.\n* `ALIAS` - Use a [cPanel & WHM linked node server's alias](https://go.cpanel.net/whmlinkednodes). For example, the `example-alias` for the `servernode.example.com` domain. The system defaults to the `.local` parameter if this does **not** work.",
            "in": "query",
            "name": "mail_location",
            "required": false,
            "schema": {
              "default": ".existing",
              "oneOf": [
                {
                  "enum": [
                    ".local",
                    ".existing"
                  ],
                  "type": "string"
                },
                {
                  "description": "The remote cPanel & WHM linked server node's alias.",
                  "example": "example-alias",
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "Whether to overwrite an existing account on the server, if one exists.\n* `1` - Overwrite an existing account.\n* `0` - Do **not** overwrite an existing account on the server.",
            "in": "query",
            "name": "overwrite",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to perform a restricted restore for the account. The system will perform security checks on the backup file. If you do not trust the source of the account backup with `root` access to your server, use this parameter to protect your server.\n\n* `1` - Perform a restricted restore.\n* `0` - Do **not** perform a restricted restore.\n\n**Important:**\n\n* This parameter is **experimental**. Do **not** consider it as an effective security control. For more information, read our [restricted restore](https://go.cpanel.net/whmdocsTransferorRestoreacPanelAccount#restricted-restore) documentation.\n* If the account owns PostgreSQL® databases, your server **must** use PostgreSQL version 8.4 or newer.\n* This parameter **only** allows restored accounts to use the `noshell` or [`jailshell`](https://go.cpanel.net/VirtFSJailedShell) environments. If the account uses a different shell, the system will set the account to use the `noshell` environment.\n* If there is an issue with the backup file, the system will **not** restore that part of the backup file. It will also adds a warning to the log file.",
            "in": "query",
            "name": "restricted",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "Whether to perform one of the following actions to the account's A records:\n* `all` - Replace **all** instances of the original server's IP address with the new server's IP address.\n* `basic` - **Only** replace the cPanel provided A records.",
            "in": "query",
            "name": "update_a_records",
            "required": false,
            "schema": {
              "default": "all",
              "enum": [
                "all",
                "basic"
              ],
              "example": "all",
              "type": "string"
            }
          },
          {
            "description": "The username to give to the restored cPanel account. This will default to the username provided in the backup files.",
            "in": "query",
            "name": "username",
            "required": false,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "transfer_session_id": {
                          "description": "The background transfer process ID.",
                          "example": "example202003301756425ugO",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "start_local_cpmove_restore",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Restore one cPanel account from a backup",
        "tags": [
          "Backups",
          "Backup or Restore"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 start_local_cpmove_restore cpmovepath='/home/cpmove-newacct.tar.gz'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/start_local_cpmove_restore?api.version=1&cpmovepath=%2fhome%2fcpmove-newacct.tar.gz"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "88"
      }
    },
    "/start_profile_activation": {
      "get": {
        "description": "This function activates a server profile.\n\n**Note:**\n\n* If a server profile enables a service, the system will **also** enable service monitoring. To disable a service's monitoring, use WHM's [*Service Manager*](https://docs.cpanel.net/whm/service-configuration/service-manager/) interface (*WHM >> Home >> Service Configuration >> Service Manager*).\n* For a list of the server's available profiles, use the `get_available_profiles` function.",
        "operationId": "start_profile_activation",
        "parameters": [
          {
            "description": "The code value of the server profile.\n\n* `STANDARD` — The Standard Node profile.\n* `DATABASENODE` — The Database Node profile.\n* `MAILNODE` — The Mail Node profile.\n* `DNSNODE` — The DNS Node profile.",
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "enum": [
                "STANDARD",
                "DATABASENODE",
                "MAILNODE",
                "DNSNODE"
              ],
              "example": "MAILNODE",
              "type": "string"
            }
          },
          {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "description": "Each key is a role. Each key **must** have one of the following values:\n\n* `1` — Enable the role.\n* `0` — Disable the role.",
                    "enum": [
                      1,
                      0
                    ],
                    "example": 0,
                    "type": "integer"
                  },
                  "example": {
                    "DNS": 0,
                    "SpamFilter": 1
                  },
                  "type": "object"
                }
              }
            },
            "description": "The optional roles to enable or disable with the profile, in\nJSON format. You **must** URI-encode this value.\n\n**Note:**\n\n* As an example, if you wished to enable `SpamFilter` and disable `DNS`, the JSON object would be:\n\n   `{ \"SpamFilter\": 1, \"DNS\": 0 }`.\n\n* This parameter does **not** enable optional roles for profiles that do **not** possess any optional roles.\n* If you do not pass this parameter, the system **disables** a profile's optional roles, if any exist.",
            "in": "query",
            "name": "optional",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "log_id": {
                          "description": "The profile activation log ID. The system creates the log files in the `/var/cpanel/logs/activate_profile/` directory.",
                          "example": "17053.10418168.1533478604",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "start_profile_activation",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update server node profile",
        "tags": [
          "Server Administration",
          "Server Profiles"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 start_profile_activation code='MAILNODE'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/start_profile_activation?api.version=1&code=MAILNODE"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/start_transfer_session": {
      "get": {
        "description": "This function starts or restarts a transfer session.\n\n**Note:**\n\n  For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.",
        "operationId": "start_transfer_session",
        "parameters": [
          {
            "description": "The transfer session's ID.",
            "in": "query",
            "name": "transfer_session_id",
            "required": true,
            "schema": {
              "example": "exampleservercopya20140206192428NtyW",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "pid": {
                          "description": "The transfer session's process ID.",
                          "example": 90210,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "start_transfer_session",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Start or restart transfer session",
        "tags": [
          "Transfers",
          "cPanel Account Transfer"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 start_transfer_session transfer_session_id='exampleservercopya20140206192428NtyW'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/start_transfer_session?api.version=1&transfer_session_id=exampleservercopya20140206192428NtyW"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/suspend_outgoing_email": {
      "get": {
        "description": "This function sets Exim's queue to suspend and force failure for email that a user sends to an external address.\n\n**Note:**\n\n  If mail for a cPanel user's account is suspended, the system will reject their email before the mail server puts it in queue.",
        "operationId": "suspend_outgoing_email",
        "parameters": [
          {
            "description": "The cPanel account.\n\n**Note**\n\nYou **cannot** suspend the `root` user's outgoing email with this function.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "suspend_outgoing_email",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Suspend cPanel account outgoing email",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 suspend_outgoing_email user='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/suspend_outgoing_email?api.version=1&user=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/suspendacct": {
      "get": {
        "description": "This function suspends an account.",
        "operationId": "suspendacct",
        "parameters": [
          {
            "description": "The account to suspend.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to allow only the `root` user to unsuspend the account.\n* `1` - **Only** the `root` user can unsuspend the account.\n* `0` - The `root` user or the account's owner can unsuspend the account.",
            "in": "query",
            "name": "disallowun",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to skip suspension of the account's FTP accounts.\n* `1` - Do **not** suspend the FTP accounts.\n* `0` - Suspend the FTP accounts.",
            "in": "query",
            "name": "leave-ftp-accts-enabled",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The reason for suspension.\n\n**Important:**\n\n We strongly recommend that you provide a reason for suspension whenever you suspend an account.",
            "in": "query",
            "name": "reason",
            "required": false,
            "schema": {
              "default": "Unknown",
              "example": "Nonpayment",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "suspendacct",
                          "type": "string"
                        },
                        "output": {
                          "description": "System messages generated while suspending the account.",
                          "properties": {
                            "raw": {
                              "description": "The raw system message.",
                              "example": "Changing Shell to /bin/false...Changing shell for username. Warning: \"/bin/false\" is not listed in /etc/shells. Shell changed. Done Locking Password...Locking password for user username. passwd: Success Done Suspending mysql users Using Universal Quota Support (quota=0) Suspending websites... Using Universal Quota Support (quota=0) Suspending FTP accounts... Updating FTP passwords for username FTP password files updated. FTP vhost passwords synced username's account has been suspended\n",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Suspend cPanel account",
        "tags": [
          "Accounts",
          "Suspensions"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 suspendacct user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/suspendacct?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/suspendreseller": {
      "get": {
        "description": "This function suspends a reseller account.",
        "operationId": "suspendreseller",
        "parameters": [
          {
            "description": "The reseller's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to allow only the `root` user to unsuspend the account.\n* `1` — **Only** the `root` user can unsuspend the account.\n* `0` — The `root` user or the account's owner can unsuspend the account.",
            "in": "query",
            "name": "disallow",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The reason for the reseller's suspension.\n\n**Note:**\n\n We **strongly** recommend that you **always** include a reason for suspension.",
            "in": "query",
            "name": "reason",
            "required": false,
            "schema": {
              "example": "Nonpayment",
              "type": "string"
            }
          },
          {
            "description": "Whether to suspend only the reseller account.\n* `1` — The function **only** suspends the reseller account. The function will **not** suspend the accounts that the reseller account owns.\n* `0` — The function suspends the reseller account **and** the accounts that it owns.",
            "in": "query",
            "name": "reseller-only",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "suspendreseller",
                          "type": "string"
                        },
                        "output": {
                          "properties": {
                            "raw": {
                              "description": "The raw output from the function.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Suspend reseller",
        "tags": [
          "Resellers",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 suspendreseller user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/suspendreseller?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/system_needs_reboot": {
      "get": {
        "description": "This function determines if your system requires a reboot to apply quotas, software package updates, or kernel updates.\n\n**Important:**\n\nThis function **cannot** detect whether your system needs a reboot if you use cPanel & WHM inside of a [Linux Container (LXC)](https://docs.cpanel.net/knowledge-base/general-systems-administration/linux-containers/).",
        "operationId": "system_needs_reboot",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "An object that contains reasons why the system requires a reboot.",
                      "properties": {
                        "kernel": {
                          "description": "An object of kernel versions.\n\n**Note:**\n\nThe function **only** returns this object if the kernel updates and requires a reboot.",
                          "properties": {
                            "boot_version": {
                              "description": "The version that the system's kernel updated to.",
                              "example": "3.10.0-514.10.2.e17.x86_64",
                              "type": "string"
                            },
                            "running_version": {
                              "description": "The kernel version that the server currently runs.",
                              "example": "3.10.0-514.10.2.e17.x86_64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "quota": {
                          "description": "Whether the system requires a reboot to enable quotas.\n\n* `1` — System requires a reboot to enable quotas.\n\n**Note:**\n\nThe function **only** returns this value if the kernel updates and requires a reboot.",
                          "enum": [
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "updates": {
                          "description": "A list of software packages that require an update and their most recent versions.\n\n**Note:**\n\nThe function **only** returns this object if software packages on your server require updates.",
                          "example": {
                            "glibc": "2.17-157.el7_3.1"
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "system_needs_reboot",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    },
                    "needs_reboot": {
                      "description": "Whether the system requires a reboot.\n\n* `1` — System requires a reboot.\n* `0` — System does **not** require a reboot.",
                      "enum": [
                        0,
                        1
                      ],
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return whether system needs reboot",
        "tags": [
          "Server Administration",
          "System Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 system_needs_reboot"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/system_needs_reboot?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/systemloadavg": {
      "get": {
        "description": "This function retrieves the system's load average.\n\n**Note:**\n\nThe values the function returns represent a percentage of the CPU's processor capacity.",
        "operationId": "systemloadavg",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "fifteen": {
                          "description": "The server's load average over the previous fifteen minutes.",
                          "example": 0.19,
                          "type": "number"
                        },
                        "five": {
                          "description": "The server's load average over the previous five minutes.",
                          "example": 0.18,
                          "type": "number"
                        },
                        "one": {
                          "description": "The server's load average over the previous minute.",
                          "example": 0.17,
                          "type": "number"
                        }
                      }
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "systemloadavg",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return system load average",
        "tags": [
          "Server Administration",
          "System Information"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 systemloadavg"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/systemloadavg?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.28"
      }
    },
    "/terminate_cpuser_mailbox_sessions": {
      "get": {
        "description": "This function terminates all IMAP and POP3 connections for a cPanel account.\n\n**Note:**\n\nThis function ends connections for every email address, which includes the [default address](https://go.cpanel.net/cpaneldocsDefaultAddress).",
        "operationId": "terminate_cpuser_mailbox_sessions",
        "parameters": [
          {
            "description": "The cPanel account's username.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "terminate_cpuser_mailbox_sessions",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Stop cPanel account IMAP and POP3 connections",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 terminate_cpuser_mailbox_sessions username='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/terminate_cpuser_mailbox_sessions?api.version=1&username=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "90"
      }
    },
    "/terminatereseller": {
      "get": {
        "description": "This function deletes a reseller and **all** of the reseller's cPanel accounts.\n\n**Warning:**\n\n* You **cannot** recover deleted accounts. **Use this function with extreme caution.**\n* This function deletes the reseller account and **all** of the accounts that the reseller\nowns.\n* To remove reseller privileges from an account but **not** delete the reseller's account\nor any accounts that the reseller owns, use the WHM API 1 `unsetupreseller` function.",
        "operationId": "terminatereseller",
        "parameters": [
          {
            "description": "Whether to terminate the reseller's main account.\n\n* `1` — Terminate.\n* `0` — Do **not** terminate.",
            "in": "query",
            "name": "terminatereseller",
            "required": true,
            "schema": {
              "enum": [
                1,
                0
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "The reseller account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "acct": {
                          "description": "An array of objects containing the function's output.",
                          "items": {
                            "properties": {
                              "output": {
                                "description": "An object containing the termination data for the reseller's accounts.",
                                "properties": {
                                  "raw": {
                                    "description": "Output from the account's removal.\n\n**Note:**\n\nThis output may contain HTML.",
                                    "example": "Running pre removal script (/usr/local/cpanel/scripts/prekillacct)......DoneCollecting\nDomain Name and IP...User: example Domain: example.com\n...DoneLocking account and setting shell to nologin...Locking\npassword for user example. passwd: Success ...DoneKilling\nall processes owned by user......DoneRemoving\nSessions.........DoneRemoving Suspended Info.........DoneCleaning\nVirtfs.........DoneRemoving Web Logs......DoneRemoving\nBandwidth Files......DoneRemoving Email Sending\nLimits Cache......DoneRemoving DKIM keys......DoneRemoving\nCrontab......DoneRemoving HTTP Virtual Hosts...Removed\nthe following non-SSL virtual hosts: example.com\nRemoved the following SSL virtual hosts: ...DoneRemoving\nftp Virtual Hosts......Done Removing user''''s\nweb content directory symlinks......DoneRemoving\nMySQL databases and users......DoneRemoving PostgreSQL\ndatabases and users......DoneRemoving User & Group.......Success...Done\nRemoving DNS Entries...example.com => deleted\nfrom hostname. ...Done Removing Email Setup...Removing\n/etc/valiases/example.com ...Done Removing mailman\nlists......Done Updating Databases......Done Removing\nbandwidth limits......Done Removing Counter Data......Done\nAdding IP back to the IP address pool...System\nhas 3 free ips. ...Done Removing user''''s cPanel\nDatabases & Updating......Done Reloading Services......Done\nRemoving mail and service configs... ...Done Removing\nLogaholic Webstats...Id: TQ:TaskQueue:129 ...Done\nSending Contacts......Done Updating internal databases...Updating\nftp passwords for example Purging ftp user example\nFtp password files updated. Ftp vhost passwords\nsynced ...Done Running post removal scripts (/usr/local/cpanel/scripts/legacypostkillacct,\n/usr/local/cpanel/scripts/postkillacct)......Done\nAccount Removal Complete!!!...example account\nremoved...Done\n",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "reason": {
                                "description": "A message of success or the reason for a failure.",
                                "example": "username account removed",
                                "type": "string"
                              },
                              "result": {
                                "description": "Whether the function succeeded.\n\n* `1` — Success.\n* `0` — Failure.",
                                "enum": [
                                  1,
                                  0
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "user": {
                                "description": "The account username.",
                                "example": "username",
                                "format": "username",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "terminatereseller",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete reseller and reseller's cPanel accounts",
        "tags": [
          "Resellers",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 terminatereseller user='username' terminatereseller='1'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/terminatereseller?api.version=1&user=username&terminatereseller=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/ticket_create_stub_ticket": {
      "get": {
        "description": "This function creates a stub ticket. The system uses the stub ticket\nto create a cPanel support ticket.\n\n**Note:**\n\nThis function is **not** available through the command line. You **must** call\nit as a request body.",
        "operationId": "ticket_create_stub_ticket",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "secure_id": {
                          "description": "The support ticket's secure ID token.",
                          "example": "rofh411bv8",
                          "type": "string"
                        },
                        "ticket_id": {
                          "description": "The support ticket number that other functions can look up.",
                          "example": 7648492,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_create_stub_ticket",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create initial Support ticket request",
        "tags": [
          "Support Tickets",
          "Ticket Management"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_create_stub_ticket?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_get_support_agreement": {
      "get": {
        "description": "This function retrieves the cPanel, L.L.C. Technical Support Agreement text\nand metadata about the user's agreement status from the\n[cPanel Customer Portal](https://tickets.cpanel.net/).\n\n**Note:**\n* This function is **not** available through the command line. You **must** call it\nas a request body.\n* To use this function, you **must** set up a cPanelID token in your current session.\nFor more information, read our\n[cPanelID](https://docs.cpanel.net/knowledge-base/accounts/cpanelid/)\ndocumentation.",
        "operationId": "ticket_get_support_agreement",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "accepted": {
                          "description": "Whether the user associated with the OAuth token has already accepted this\nversion of the agreement.\n\n* `1` — Accepted.\n* `0` — **Not** accepted.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "accepted_date": {
                          "description": "The [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time)\nat which the user associated with the OAuth token accepted the\nTechnical Support Agreement.\n\n* A valid Unix timestamp.\n* `null` — Never accepted.",
                          "example": 1566000000,
                          "format": "unix_timestamp",
                          "nullable": true,
                          "type": "integer"
                        },
                        "accepted_date_human": {
                          "description": "The human-readable date at which the user associated with the OAuth token\naccepted the Technical Support Agreement.\n\n* A human-readable date, in `MM/DD/YY` format.\n* `null` — Never accepted.",
                          "example": "8/17/19",
                          "nullable": true,
                          "type": "string"
                        },
                        "body": {
                          "description": "The full Technical Support Agreement.\n\n**Note:**\n\nThis returned value may contain HTML.",
                          "example": "<p>IMPORTANT: THIS TECHNICAL SUPPORT AGREEMENT ... at the end of AGREEMENT",
                          "type": "string"
                        },
                        "create_date": {
                          "description": "The creation or publication Unix timestamp of the Technical Support Agreement's current version.",
                          "example": 1564790400,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "create_date_human": {
                          "description": "The human-readable date at which the current version of the Technical Support Agreement was created or published, in `MM/DD/YY` format.",
                          "example": "8/3/19",
                          "type": "string"
                        },
                        "download_url": {
                          "description": "The URL at which the end-user may download the support agreement.",
                          "example": "https://www.cpanel.net/legal/techagreement_download.cgi",
                          "format": "url",
                          "type": "string"
                        },
                        "title": {
                          "description": "The Technical Support Agreement's title.",
                          "example": "Technical Support Agreement",
                          "type": "string"
                        },
                        "version": {
                          "description": "The Technical Support Agreement's version.",
                          "example": "2019-04.v01.TSUPPORT",
                          "type": "string"
                        },
                        "view_url": {
                          "description": "The URL at which the end-user may view the Technical Support Agreement agreement as a standalone HTML document.",
                          "example": "http://cpanel.com/technical-support-agreements.html",
                          "format": "url",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_get_support_agreement",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Import Technical Support Agreement text",
        "tags": [
          "Support Tickets",
          "Ticket Management"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_get_support_agreement?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_get_support_info": {
      "get": {
        "description": "This function retrieves the license holder's support-related information.\n\n**Note:**\n\n* This function is **not** available through the command line. You **must** call\nit as a request body.\n* To use this function, you **must** set up a cPanelID token in your current session.\nFor more information, read our\n[cPanelID](https://docs.cpanel.net/knowledge-base/accounts/cpanelid/)\ndocumentation.",
        "operationId": "ticket_get_support_info",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "arch": {
                          "description": "The server's CPU architecture retrieved at the last license check.",
                          "example": "x86_64",
                          "type": "string"
                        },
                        "arch_supported": {
                          "description": "Whether cPanel Support provides assistance with the server's CPU architecture.\n\n* `1` — Yes.\n* `0` — No.\n* `-1` — Unknown architecture.",
                          "enum": [
                            1,
                            0,
                            -1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "company_id": {
                          "description": "A number that represents the company with the licensed IP address.",
                          "example": 7,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "company_name": {
                          "description": "The company name associated with the submitted IP address.",
                          "example": "Example, L.L.C.",
                          "type": "string"
                        },
                        "distro": {
                          "description": "The server's operating system retrieved during the last license check.",
                          "example": "centos enterprise 6.8",
                          "type": "string"
                        },
                        "distro_supported": {
                          "description": "Whether cPanel Technical Support provides assistance for the server's\noperating system.\n\n* `1` — Yes.\n* `0` — No.\n* `-1` — Unknown OS.",
                          "enum": [
                            1,
                            0,
                            -1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "gets_direct_support": {
                          "description": "Whether the IP address owner's primary support is cPanel, L.L.C.\n\n* `1` — Receives initial support from cPanel, L.L.C.\n* `0` — Receives initial support from a partner.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "has_company_info": {
                          "description": "Whether the response contains the company information associated with\nthe licensed IP address.\n\n* `1` — Contains company info.\n* `0` — Does **not** contain company info.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        },
                        "has_compatibility_info": {
                          "description": "Whether the response contains the server's compatibility information.\n\n* `1` — Contains compatibility info.\n* `0` — Does **not** contain compatibility info.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "hostname": {
                          "description": "The hostname or IP address of the server, as recorded in the license database.",
                          "example": "server.example.com",
                          "type": "string"
                        },
                        "ip": {
                          "description": "The license provider's IP address.",
                          "example": "192.168.0.1",
                          "format": "ipv4",
                          "type": "string"
                        },
                        "logo_url": {
                          "description": "The optional URL to the company's brand image file on the partner website.",
                          "example": "http://example.com/assets/ourlogo.png",
                          "format": "url",
                          "type": "string"
                        },
                        "pub_support_contact": {
                          "description": "The URL to the company's general support resources, if available.",
                          "example": "http://documentation.example.com/",
                          "format": "url",
                          "type": "string"
                        },
                        "pub_tech_contact": {
                          "description": "The optional URL to the company's technical support resources.\n\n**Note:**\n\nIf the `pub_tech_contact` return does not contain a value, the system\nwill use the `pub_support_contact` return's value.",
                          "example": "https://support.example.com/",
                          "format": "url",
                          "type": "string"
                        },
                        "tech_contact_email": {
                          "description": "The contact email address for the company's technical support.",
                          "example": "support@example.com",
                          "format": "email",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_get_support_info",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Import customer information from Customer Portal",
        "tags": [
          "Support Tickets",
          "Ticket Management"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_get_support_info?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78.0.6",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_grant": {
      "get": {
        "description": "This function installs an SSH key from the\n[cPanel Customer Portal](https://tickets.cpanel.net/).\n\n**Note:**\n\nThis function is **not** available through the command line. You **must** call\nit as a request body.",
        "operationId": "ticket_grant",
        "parameters": [
          {
            "description": "The support ticket's secure ID token.",
            "in": "query",
            "name": "secure_id",
            "required": true,
            "schema": {
              "example": "rofh411bv8",
              "type": "string"
            }
          },
          {
            "description": "The server's support ticket ID number.",
            "in": "query",
            "name": "server_num",
            "required": true,
            "schema": {
              "example": 1,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The support ticket's ID number.",
            "in": "query",
            "name": "ticket_id",
            "required": true,
            "schema": {
              "example": 999999999,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The username for incoming SSH connections before they escalate to the `root` user. If you do **not** specify a value, the function retrieves the user from the support ticket.",
            "in": "query",
            "name": "ssh_username",
            "required": false,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "auth_status": {
                          "description": "The installation status.",
                          "example": "AUTHED",
                          "type": "string"
                        },
                        "auth_time": {
                          "description": "When the system authorized access.",
                          "example": 1477338450,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "chain_status": {
                          "description": "The status of the\n[`iptables`](https://netfilter.org/projects/iptables/index.html)\nwhitelist entries.\n\n* `ACTIVE` — The system added the appropriate `iptables` whitelist\nentries or they already existed.\n* `INACTIVE` — The `iptables` whitelist entries were successfully\nremoved or were already deleted.\n* `ERR_SETUP` — The system failed to add the `iptables` whitelist\nentries.\n* `ERR_UNSETUP` — The system failed to remove the `iptables` whitelist\nentries.\n* `ERR_UNKNOWN` — An unknown error occurred.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "csf_wl_status": {
                          "description": "The status of the\n[ConfigServer Security & Firewall (CSF)](https://www.configserver.com/)\nwhitelist entries.\n\n* `ACTIVE` — The system added the appropriate CSF whitelist entries or they\nalready existed.\n* `INACTIVE` — The CSF whitelist entries were successfully removed or they\nwere already deleted.\n* `ERR_SETUP` — The system failed to add the CSF whitelist entries.\n* `ERR_UNSETUP` — The system failed to remove the CSF whitelist entries.\n* `ERR_UNKNOWN` — An unknown error occurred.\n\n**Note:**\n\nIf CSF does not exist on the server, the function will **not**\ndisplay this return.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "host_access_wl_status": {
                          "description": "The status of the `/etc/hosts.allow` file's whitelist entries.\n\n* `ACTIVE` — The system added the appropriate `/etc/hosts.allow` file whitelist\nentries or they already existed.\n* `INACTIVE` — The `/etc/hosts.allow` file whitelist entries were successfully\nremoved or they were already deleted.\n* `ERR_SETUP` — The system failed to add the `/etc/hosts.allow` file whitelist\nentries.\n* `ERR_UNSETUP` — The system failed to remove the `/etc/hosts.allow` file\nwhitelist entries.\n* `ERR_UNKNOWN` — An unknown error occurred. ",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "hulk_wl_status": {
                          "description": "The status of the\n[cPHulk](https://docs.cpanel.net/whm/security-center/cphulk-brute-force-protection/)\nwhitelist entries.\n\n* `ACTIVE` — The system added the appropriate cPHulk whitelist entries or they\nalready existed.\n* `INACTIVE` — The cPHulk whitelist entries were successfully removed or they\nwere already deleted.\n* `ERR_SETUP` — The system failed to add the cPHulk whitelist entries.\n* `ERR_UNSETUP` — The system failed to remove the cPHulk whitelist entries.\n* `ERR_UNKNOWN` — An unknown error occurred.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "non_fatals": {
                          "description": "Any non-fatal errors.\n\n* `ticket_system_log_entry` — The function could not record the grant\noperation in the ticket.\n* `audit_log` — The function could not record the grant operation in the\nlocal audit log.\n\n**Note:**\n\nThe system stores the local audit log in the\n`/var/cpanel/logs/supportauth/audit.log`\nfile.",
                          "example": [],
                          "items": {
                            "enum": [
                              "ticket_system_log_entry",
                              "audit_log"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "server_name": {
                          "description": "The server's human-readable description from the\n[cPanel Customer Portal](https://tickets.cpanel.net/).",
                          "example": "example",
                          "type": "string"
                        },
                        "server_num": {
                          "description": "The server's ID number.",
                          "example": 1,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "ssh_username": {
                          "description": "The username for incoming SSH connections before they escalate the `root` user.",
                          "example": "username",
                          "type": "string"
                        },
                        "ticket_id": {
                          "description": "The support ticket's ID number.",
                          "example": 999999999,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "ticket_status": {
                          "description": "The support ticket's status.\n\n* `OPEN`\n* `CLOSED`\n* `UNKNOWN`",
                          "enum": [
                            "OPEN",
                            "CLOSED",
                            "UNKNOWN"
                          ],
                          "example": "OPEN",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_grant",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create Support SSH key",
        "tags": [
          "Support Tickets",
          "Support Access"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_grant?api.version=1&ticket_id=999999999&secure_id=rofh411bv8&server_num=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_list": {
      "get": {
        "description": "This function lists all active and open support tickets from the\n[cPanel Customer Portal](https://tickets.cpanel.net/).\n\n**Note:**\n\nThis function is **not** available through the command line. You **must** call\nit as a request body.",
        "operationId": "ticket_list",
        "parameters": [
          {
            "description": "The server's ID number.",
            "in": "query",
            "name": "server_num",
            "required": true,
            "schema": {
              "example": 2,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The ticket's ID number.",
            "in": "query",
            "name": "ticket_id",
            "required": true,
            "schema": {
              "example": 999999999,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The username for incoming SSH connections before they escalate to the `root` user. If you do not specify a value, the function will select the user from the ticket.",
            "in": "query",
            "name": "ssh_username",
            "required": false,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "auths": {
                          "description": "An array of objects containing the ticket authorization information.",
                          "items": {
                            "properties": {
                              "servers": {
                                "description": "An array of objects containing the server information.",
                                "items": {
                                  "properties": {
                                    "auth_status": {
                                      "description": "The installation status.\n\n* `AUTHED`\n* `NOT_AUTHED`\n* `EXPIRED`",
                                      "enum": [
                                        "AUTHED",
                                        "NOT_AUTHED",
                                        "EXPIRED"
                                      ],
                                      "example": "AUTHED",
                                      "type": "string"
                                    },
                                    "auth_time": {
                                      "description": "When the grant happened, in\n[Unix time format](http://en.wikipedia.org/wiki/Unix_time).",
                                      "example": 1400603208,
                                      "format": "unit_timestamp",
                                      "type": "integer"
                                    },
                                    "server_name": {
                                      "description": "The server's human-readable description, from the\n[cPanel Customer Portal](https://tickets.cpanel.net/).",
                                      "example": "My Server",
                                      "type": "string"
                                    },
                                    "server_num": {
                                      "description": "The server's ID number.",
                                      "example": 2,
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "ssh": {
                                      "description": "The server's IP address and port number for SSH connections.",
                                      "example": "10.11.12.13:22",
                                      "type": "string"
                                    },
                                    "ssh_username": {
                                      "description": "The username for incoming SSH connections before they escalate to the `root` user.",
                                      "example": "username",
                                      "type": "string"
                                    },
                                    "whm_ip": {
                                      "description": "The server's IP address for WHM connections.",
                                      "example": "10.11.12.13",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "ticket_id": {
                                "description": "The ticket's ID number.",
                                "example": 999999999,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "ticket_status": {
                                "description": "The ticket's status.\n\n* `OPEN`\n* `CLOSED`\n* `UNKNOWN`",
                                "enum": [
                                  "OPEN",
                                  "CLOSED",
                                  "UNKNOWN"
                                ],
                                "example": "OPEN",
                                "type": "string"
                              },
                              "ticket_subject": {
                                "description": "The ticket's subject line.",
                                "example": "Example ticket",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "non_fatals": {
                          "description": "Any non-fatal errors.\n\n* `ticket_system_log_entry` — The function could not record the grant\noperation in the ticket.\n* `audit_log` — The function could not record the grant operation in the\nlocal audit log.\n\n**Note:**\n\nThe system stores the local audit log in the\n`/var/cpanel/logs/supportauth/audit.log` file.",
                          "example": [],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_list",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return Support ticket status",
        "tags": [
          "Support Tickets",
          "Ticket Management"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_list?api.version=1&ticket_id=999999999&server_num=2"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_remove_closed": {
      "get": {
        "description": "This function removes cPanel Support's SSH keys and removes closed\nsupport tickets. You can view closed support tickets in WHM's\n[*Grant cPanel Support Access*](https://docs.cpanel.net/whm/support/grant-cpanel-support-access/)\ninterface (*WHM >> Home >> Support >> Grant cPanel Support Access*).\n\n**Note:**\n\nThis function is **not** available through the command line. You **must** call\nit as a request body.",
        "operationId": "ticket_remove_closed",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "chain_status": {
                          "description": "The status of the `iptables` whitelist entries.\n\n* `ACTIVE` — The system added the appropriate `iptables` whitelist entries,\nor they already existed.\n* `INACTIVE` — The system successfully removed the `iptables` whitelist\nentries, or they did not exist.\n* `ERR_SETUP` — The system failed to add the `iptables` whitelist entries.\n* `ERR_UNSETUP` — The system failed to remove the `iptables` whitelist entries.\n* `ERR_UNKNOWN` — An unknown error occurred.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "csf_wl_status": {
                          "description": "The status of the\n[ConfigServer Security & Firewall (CSF)](https://www.configserver.com/)\nwhitelist entries.\n\n* `ACTIVE` — The system added the appropriate CSF whitelist entries or they\nalready existed.\n* `INACTIVE` — The CSF whitelist entries were successfully removed or they\nwere already deleted.\n* `ERR_SETUP` — The system failed to add the CSF whitelist entries.\n* `ERR_UNSETUP` — The system failed to remove the CSF whitelist entries.\n* `ERR_UNKNOWN` — An unknown error occurred.\n\n**Note:**\n\nIf CSF does not exist on the server, the function will **not**\ndisplay this return.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "host_access_wl_status": {
                          "description": "The status of the `/etc/hosts.allow` file's whitelist entries.\n\n* `ACTIVE` — The system added the appropriate `/etc/hosts.allow` file whitelist\nentries or they already existed.\n* `INACTIVE` — The `/etc/hosts.allow` file whitelist entries were successfully\nremoved or they were already deleted.\n* `ERR_SETUP` — The system failed to add the `/etc/hosts.allow` file whitelist\nentries.\n* `ERR_UNSETUP` — The system failed to remove the `/etc/hosts.allow` file\nwhitelist entries.\n* `ERR_UNKNOWN` — An unknown error occurred.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "INACTIVE",
                          "type": "string"
                        },
                        "hulk_wl_status": {
                          "description": "The status of the\n[cPHulk](https://docs.cpanel.net/whm/security-center/cphulk-brute-force-protection/)\nwhitelist entries.\n\n* `ACTIVE` — The system added the appropriate cPHulk whitelist entries or they\nalready existed.\n* `INACTIVE` — The cPHulk whitelist entries were successfully removed or they\nwere already deleted.\n* `ERR_SETUP` — The system failed to add the cPHulk whitelist entries.\n* `ERR_UNSETUP` — The system failed to remove the cPHulk whitelist entries.\n* `ERR_UNKNOWN` — An unknown error occurred.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "non_fatals": {
                          "description": "Any non-fatal errors.\n\n* `ticket_system_log_entry` — The function could not record the grant operation\nin the ticket.\n* `audit_log` — The function could not record the grant operation in the local\naudit log.\n\n**Note:**\n\nThe system stores the local audit log in the\n`/var/cpanel/logs/supportauth/audit.log` file.",
                          "example": [],
                          "items": {
                            "enum": [
                              "ticket_system_log_entry",
                              "audit_log"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "revoked_keys": {
                          "description": "The total number of SSH keys that the system removed.",
                          "example": 9,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_remove_closed",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete Support SSH key and closed tickets",
        "tags": [
          "Support Tickets",
          "Support Access"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_remove_closed?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_revoke": {
      "get": {
        "description": "This function removes a\n[cPanel Customer Portal](https://tickets.cpanel.net/)\nSSH key from the server.\n\n**Note:**\n\nThis function is **not** available through the command line. You **must** call it\nas a request body.",
        "operationId": "ticket_revoke",
        "parameters": [
          {
            "description": "The server's ID number.",
            "in": "query",
            "name": "server_num",
            "required": true,
            "schema": {
              "example": 1,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The username for incoming SSH connections before they escalate to the `root` user.",
            "in": "query",
            "name": "ssh_username",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "The support ticket's ID number.",
            "in": "query",
            "name": "ticket_id",
            "required": true,
            "schema": {
              "example": 999999999,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "chain_status": {
                          "description": "The status of the\n[`iptables`](https://netfilter.org/projects/iptables/index.html)\nwhitelist entries.\n\n* `ACTIVE` — The system added the appropriate whitelist entries or they\nalready existed.\n* `INACTIVE` — The whitelist entries were successfully removed or were\nalready deleted.\n* `ERR_SETUP` — The system failed to add the whitelist entries.\n* `ERR_UNSETUP` — The system failed to remove the whitelist entries.\n* `ERR_UNKNOWN` — An unknown error occurred.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "csf_wl_status": {
                          "description": "The status of the\n[ConfigServer Security & Firewall (CSF)](https://www.configserver.com/)\nwhitelist entries.\n\n* `ACTIVE` — The system added the appropriate CSF whitelist entries or they\nalready existed.\n* `INACTIVE` — The CSF whitelist entries were successfully removed or they\nwere already deleted.\n* `ERR_SETUP` — The system failed to add the CSF whitelist entries.\n* `ERR_UNSETUP` — The system failed to remove the CSF whitelist entries.\n* `ERR_UNKNOWN` — An unknown error occurred.\n\n**Note:**\n\nIf CSF does not exist on the server, the function will **not**\ndisplay this return.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "host_access_wl_status": {
                          "description": "The status of the `/etc/hosts.allow` file's whitelist\nentries.\n\n* `ACTIVE` — The system added the appropriate `/etc/hosts.allow` file whitelist\nentries or they already existed.\n* `INACTIVE` — The `/etc/hosts.allow` file whitelist entries were successfully\nremoved or they were already deleted.\n* `ERR_SETUP` — The system failed to add the `/etc/hosts.allow` file whitelist entries.\n* `ERR_UNSETUP` — The system failed to remove the `/etc/hosts.allow` file whitelist\nentries.\n* `ERR_UNKNOWN` — An unknown error occurred.                          ",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "hulk_wl_status": {
                          "description": "The status of the\n[cPHulk](https://docs.cpanel.net/whm/security-center/cphulk-brute-force-protection/)\nwhitelist entries.\n\n* `ACTIVE` — The system added the appropriate cPHulk whitelist entries or they\nalready existed.\n* `INACTIVE` — The cPHulk whitelist entries were successfully removed or they\nwere already deleted.\n* `ERR_SETUP` — The system failed to add the cPHulk whitelist entries.\n* `ERR_UNSETUP` — The system failed to remove the cPHulk whitelist entries.\n* `ERR_UNKNOWN` — An unknown error occurred.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "ERR_SETUP",
                            "ERR_UNSETUP",
                            "ERR_UNKNOWN"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "non_fatals": {
                          "description": "Any non-fatal errors.\n\n* `ticket_system_log_entry` — The function could not record the grant operation\nin the ticket.\n* `audit_log` — The function could not record the grant operation in the local\naudit log.\n\n**Note:**\n\nThe system stores the local audit log in the\n`/var/cpanel/logs/supportauth/audit.log` file.",
                          "example": [],
                          "items": {
                            "enum": [
                              "ticket_system_log_entry",
                              "audit_log"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "revoked_keys": {
                          "description": "The total number of revoked SSH keys.",
                          "example": 1,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "server_num": {
                          "description": "The server's ID number.",
                          "example": 2,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "ssh_username": {
                          "description": "The username for incoming SSH connections before they escalate to the `root` user.",
                          "example": "username",
                          "type": "string"
                        },
                        "ticket_id": {
                          "description": "The revoked support ticket's ID number.",
                          "example": 999999999,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_revoke",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Delete Support SSH key",
        "tags": [
          "Support Tickets",
          "Support Access"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_revoke?api.version=1&ticket_id=999999999&server_num=1&ssh_username=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_ssh_test": {
      "get": {
        "description": "This function verifies the connection from the\n[cPanel Customer Portal](https://tickets.cpanel.net/)\nto the server.\n\n**Note:**\n\nThis function is **not** available through the command line. You **must** call it as\na request body.",
        "operationId": "ticket_ssh_test",
        "parameters": [
          {
            "description": "The server's ID number.",
            "in": "query",
            "name": "server_num",
            "required": true,
            "schema": {
              "example": 2,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The ticket's ID number.",
            "in": "query",
            "name": "ticket_id",
            "required": true,
            "schema": {
              "example": 999999999,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "non_fatals": {
                          "description": "A list of non-fatal errors, if any exist.\n\n* `ticket_system_log_entry` — The function could not record the grant operation\nin the ticket.\n* `audit_log` — The function could not record the grant operation in the local\naudit log. The system stores the local audit log in the `/var/cpanel/logs/supportauth/audit.log`\nfile.",
                          "items": {
                            "enum": [
                              "ticket_system_log_entry",
                              "audit_log"
                            ],
                            "example": "audit_log",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "result": {
                          "description": "The SSH test's result.",
                          "example": "SUCCESS",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_ssh_test",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate Customer Portal connection",
        "tags": [
          "Support Tickets",
          "Support Access"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_ssh_test?api.version=1&ticket_id=999999999&server_num=2"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_ssh_test_start": {
      "get": {
        "description": "This function initiates an SSH connection test.\n\n**Important:**\n\nThis function is **not** available through the command line. You **must** call it\nas a request body.",
        "operationId": "ticket_ssh_test_start",
        "parameters": [
          {
            "description": "An integer that represents the ticket's actionable server. Increment the value by one for each server in the support ticket.",
            "in": "query",
            "name": "server_num",
            "required": true,
            "schema": {
              "example": 1,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The support ticket number that other functions can use to query or make additional changes to the support ticket.",
            "in": "query",
            "name": "ticket_id",
            "required": true,
            "schema": {
              "example": 7648492,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_ssh_test_start",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate Support SSH connection",
        "tags": [
          "Support Tickets",
          "Support Access"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_ssh_test_start?api.version=1&ticket_id=7648492&server_num=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_update_service_agreement_approval": {
      "get": {
        "description": "This function records a user's acceptance of the Technical Support\nAgreement (TSA). The cPanel Customer Portal stores each record with the user's\nlogin, the date and time, and the TSA's version.\n\n**Note:**\n\nThis function is **not** available through the command line.\nYou **must** call it as a request body.",
        "operationId": "ticket_update_service_agreement_approval",
        "parameters": [
          {
            "description": "The version of the TSA that the user approved.",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "example": "2020-04.v01.TSUPPORT",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_update_service_agreement_approval",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable Technical Support Agreement acceptance",
        "tags": [
          "Support Tickets",
          "Ticket Management"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_update_service_agreement_approval?api.version=1&version=2020-04.v01.TSUPPORT"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_validate_oauth2_code": {
      "get": {
        "description": "This function validates the OAuth2 code from the\n[cPanel Customer Portal](https://tickets.cpanel.net/).\nAfter the function validates the token, the system stores it on the current session.\n\n**Note:**\n\nThis function is **not** available through the command line. You **must** call it\nas a request body.",
        "operationId": "ticket_validate_oauth2_code",
        "parameters": [
          {
            "description": "The code from the OAuth2 redirect. The system validates this code and exchanges it for a token.",
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "example": "84b1a729-63e3-11e6-a0fb-bfcf357fd76d",
              "type": "string"
            }
          },
          {
            "description": "The redirect URI query argument that the system sent to the initial OAuth2 authentication endpoint.",
            "in": "query",
            "name": "redirect_uri",
            "required": true,
            "schema": {
              "example": "https://hostname.example.com:2087/",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_validate_oauth2_code",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate Customer Portal OAuth2 code",
        "tags": [
          "Support Tickets",
          "Ticket Management"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_validate_oauth2_code?api.version=1&code=84b1a729-63e3-11e6-a0fb-bfcf357fd76d&redirect_uri=https%3a%2f%2fhostname.example.com%3a2087%2f"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "60",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_whitelist_check": {
      "get": {
        "description": "This function checks whether the server's firewall whitelist correlates\nwith the granted support tickets. You can view granted support tickets in\nWHM's\n[*Grant cPanel Support Access*](https://docs.cpanel.net/whm/support/grant-cpanel-support-access/)\ninterface (*WHM >> Home >> Support >> Grant cPanel Support Access*).\n\n**Note:**\n\nThis function is **not** available through the command line. You **must** call it as\na request body.",
        "operationId": "ticket_whitelist_check",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "chain_status": {
                          "description": "The status of the server's firewall whitelist.\n\n* `ACTIVE` — The whitelist is active.\n* `INACTIVE` — The whitelist is inactive.",
                          "enum": [
                            "ACTIVE",
                            "INACTIVE"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        },
                        "problem": {
                          "description": "message that indicates whether a problem exists with the current status.\n* `NO` — The firewall does not require changes.\n* `NEED_SETUP` — You have granted cPanel Support access, but the system's\nfirewall whitelist does not contain support's IP addresses.\n* `NEED_UNSETUP` — The system detected that **no** cPanel Support access\ngrants exist, but the system's firewall whitelist contains support's IP\naddresses.",
                          "enum": [
                            "NO",
                            "NEED_SETUP",
                            "NEED_UNSETUP"
                          ],
                          "example": "NO",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_whitelist_check",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate Support IP addresses on firewall",
        "tags": [
          "Support Tickets",
          "Support Access"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_whitelist_check?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_whitelist_setup": {
      "get": {
        "description": "This function adds cPanel Support's IP addresses to your server's firewall\nwhitelist. This function is firewall-specific and does **not** change the\n[cPHulk](https://docs.cpanel.net/whm/security-center/cphulk-brute-force-protection/)\nwhitelist.\n\n**Note:**\n\n* This function is **not** available through the command line. You **must** call it as\na request body.\n* This function logs error messages to the\n[`/usr/local/cpanel/logs/error_log`](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-log-files/#usr-local-cpanel-logs-error-log)\nfile.",
        "operationId": "ticket_whitelist_setup",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "chain_status": {
                          "description": "A message that indicates whether the whitelist setup succeeded.\n\n* `ACTIVE` — A successful setup.\n* `ERR_SETUP` — An error occurred.",
                          "enum": [
                            "ACTIVE",
                            "ERR_SETUP"
                          ],
                          "example": "ACTIVE",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_whitelist_setup",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Add Support IP addresses to firewall",
        "tags": [
          "Support Tickets",
          "Support Access"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_whitelist_setup?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44",
        "x-cpanel-cli-support": false
      }
    },
    "/ticket_whitelist_unsetup": {
      "get": {
        "description": "This function removes cPanel Support's IP addresses from your server's firewall\nwhitelist. This function is firewall-specific and does **not** change the\n[cPHulk](https://docs.cpanel.net/whm/security-center/cphulk-brute-force-protection/)\nwhitelist.\n\n**Note:**\n\n* This function is **not** available through the command line. You **must** call it as\na request body.\n* This function logs error messages to the\n[`/usr/local/cpanel/logs/error_log`](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-log-files/#usr-local-cpanel-logs-error-log)\nfile.",
        "operationId": "ticket_whitelist_unsetup",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "chain_status": {
                          "description": "A message that indicates whether the whitelist removal succeeded.\n\n* `INACTIVE` — Success.\n* `ERR_UNSETUP` — An error occurred.",
                          "enum": [
                            "INACTIVE",
                            "ERR_UNSETUP"
                          ],
                          "example": "INACTIVE",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "ticket_whitelist_unsetup",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove Support IP addresses from firewall",
        "tags": [
          "Support Tickets",
          "Support Access"
        ],
        "x-code-samples": [
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/ticket_whitelist_unsetup?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44",
        "x-cpanel-cli-support": false
      }
    },
    "/toggle_user_backup_state": {
      "get": {
        "description": "This function enables or disables legacy backups for a user.",
        "operationId": "toggle_user_backup_state",
        "parameters": [
          {
            "description": "The cPanel account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether the account should use the legacy backup system.\n* `1` - Use the legacy backup system.\n* `0` - Use the standard backup system.",
            "in": "query",
            "name": "legacy",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "toggle_status": {
                          "description": "Whether backups are active on the account.\n* `1` - Active.\n* `0` - Inactive.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "toggle_user_backup_state",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.",
                          "example": "Backup state modified",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable or disable legacy backups",
        "tags": [
          "Backups",
          "Backup Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 toggle_user_backup_state user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/toggle_user_backup_state?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/transfer_module_schema": {
      "get": {
        "description": "This function retrieves a transfer module's key structure.\n\n**Note:**\n\nFor more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.",
        "operationId": "transfer_module_schema",
        "parameters": [
          {
            "description": "The transfer module's name.\n\n* `AccountLocal`\n* `AccountRemoteRoot`\n* `AccountRemoteUser`\n* `FeaturesListRemoteRoot`\n* `LegacyAccountBackup`\n* `PackageRemoteRoot`",
            "in": "query",
            "name": "module",
            "required": true,
            "schema": {
              "enum": [
                "AccountLocal",
                "AccountRemoteRoot",
                "AccountRemoteUser",
                "FeaturesListRemoteRoot",
                "LegacyAccountBackup",
                "PackageRemoteRoot"
              ],
              "example": "AccountRemoteRoot",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "schema": {
                          "description": "An object containing information about the schema's keys.",
                          "properties": {
                            "keys": {
                              "additionalProperties": {
                                "description": "An object containing the key's information.\n\n**Note:**\n\nThe key's name is the return's name.",
                                "properties": {
                                  "def": {
                                    "description": "The first value is the parameter's type and length:\n\n* `int`\n* `char`\n* `bigint`\n* `text`\n\nThe second value is the default prepended by the word `DEFAULT`.",
                                    "example": "char(255) DEFAULT NULL",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "description": "An object containing the schema's keys.",
                              "example": {
                                "copypoint": {
                                  "def": "text"
                                },
                                "cpmovefile": {
                                  "def": "text"
                                },
                                "customip": {
                                  "def": "char(255) DEFAULT NULL"
                                },
                                "detected_remote_user": {
                                  "def": "char(255) DEFAULT NULL"
                                },
                                "disabled": {
                                  "def": "text"
                                },
                                "domain": {
                                  "def": "char(255) DEFAULT NULL"
                                },
                                "files": {
                                  "def": "BIGINT UNSIGNED DEFAULT 1"
                                },
                                "force": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "ip": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "live_transfer": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "localuser": {
                                  "def": "char(255) DEFAULT NULL"
                                },
                                "mail_location": {
                                  "def": "char(255) DEFAULT NULL"
                                },
                                "overwrite_all_dbs": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "overwrite_all_dbusers": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "overwrite_sameowner_dbs": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "overwrite_sameowner_dbusers": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "overwrite_with_delete": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "prerequisite_user": {
                                  "def": "char(255) DEFAULT NULL"
                                },
                                "priority": {
                                  "def": "int(1) DEFAULT 255"
                                },
                                "replaceip": {
                                  "def": "char(255) DEFAULT NULL"
                                },
                                "reseller": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "shared_mysql_server": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "size": {
                                  "def": "BIGINT UNSIGNED DEFAULT 1"
                                },
                                "skipaccount": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "skipacctdb": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "skipbwdata": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "skipemail": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "skiphomedir": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "skipres": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "skipsubdomains": {
                                  "def": "int(1) DEFAULT 0"
                                },
                                "user": {
                                  "def": "char(255) DEFAULT NULL"
                                },
                                "xferpoint": {
                                  "def": "int(1) DEFAULT 0"
                                }
                              },
                              "type": "object"
                            },
                            "primary": {
                              "description": "The schema's primary key.",
                              "example": [
                                "user"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "required": {
                              "description": "A list of schema's required keys.",
                              "example": [
                                "user",
                                "localuser"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "transfer_module_schema",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return a transfer module's schema",
        "tags": [
          "Transfers",
          "Transfer Configuration"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 transfer_module_schema module='AccountRemoteRoot'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/transfer_module_schema?api.version=1&module=AccountRemoteRoot"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "cPanel 11.44"
      }
    },
    "/twofactorauth_disable_policy": {
      "get": {
        "description": "This function disables the Two-Factor Authentication (2FA) security policy on the server.",
        "operationId": "twofactorauth_disable_policy",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "twofactorauth_disable_policy",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disable 2FA",
        "tags": [
          "Authentication",
          "Two-Factor Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 twofactorauth_disable_policy"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/twofactorauth_disable_policy?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/twofactorauth_enable_policy": {
      "get": {
        "description": "This function enables the Two-Factor Authentication (2FA) security policy on the server.",
        "operationId": "twofactorauth_enable_policy",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "twofactorauth_enable_policy",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable 2FA",
        "tags": [
          "Authentication",
          "Two-Factor Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 twofactorauth_enable_policy"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/twofactorauth_enable_policy?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/twofactorauth_generate_tfa_config": {
      "get": {
        "description": "This function generates a random secret and a one-time password authentication (OTP auth) URL for the user. Use the secret that this function returns and a valid verification token with WHM API 1's `twofactorauth_set_tfa_config` function to configure Two-Factor Authentication (2FA) on an account.",
        "operationId": "twofactorauth_generate_tfa_config",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "otpauth_str": {
                          "description": "A one-time authentication URL to encode as the QR code.",
                          "example": "otpauth://totp/Example:root?secret=CAOXW75HKYJJ6E5Y&issuer=Example",
                          "format": "uri",
                          "type": "string"
                        },
                        "secret": {
                          "description": "A generated security code for use with 2FA.",
                          "example": "WJ73QJSKZBXCFIPZ",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "twofactorauth_generate_tfa_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Create a one-time authentication secret and code",
        "tags": [
          "Authentication",
          "Two-Factor Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 twofactorauth_generate_tfa_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/twofactorauth_generate_tfa_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/twofactorauth_get_issuer": {
      "get": {
        "description": "This function returns the currently configured issuer. The issuer appears within the authentication app.",
        "operationId": "twofactorauth_get_issuer",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "issuer": {
                          "description": "The issuer's name for the currently-authenticated user.",
                          "example": "example.cpanel.net",
                          "type": "string"
                        },
                        "system_wide_issuer": {
                          "description": "The system's default issuer's name.\n\n**Note:**\n\nIf the `root` user has **not** configured a system-wide issuer, this value defaults to the system hostname.",
                          "example": "example.cpanel.net",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "twofactorauth_get_issuer",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return configured issuer for current user",
        "tags": [
          "Authentication",
          "Two-Factor Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 twofactorauth_get_issuer"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/twofactorauth_get_issuer?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/twofactorauth_get_user_configs": {
      "get": {
        "description": "This function returns a list of user-controlled accounts and whether the accounts have Two-Factor Authentication (2FA) enabled.",
        "operationId": "twofactorauth_get_user_configs",
        "parameters": [
          {
            "description": "The username for a specified account.\n\n**Note:**\n\nIf you do **not** specify a value, the function returns **all** user accounts.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "example": "example",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "description": "An object that contains a hash of the account's data.",
                        "properties": {
                          "is_enabled": {
                            "description": "Whether the account has 2FA enabled.\n* `1` - Enabled.\n* `0` - **Not** enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "example": 1,
                            "type": "integer"
                          },
                          "primary_domain": {
                            "description": "The account's primary domain.",
                            "example": "example.com",
                            "format": "domain",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "description": "The data that the function returns.",
                      "example": {
                        "example": {
                          "is_enabled": 0,
                          "primary_domain": "example.com"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "twofactorauth_get_user_configs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel accounts with 2FA enabled",
        "tags": [
          "Authentication",
          "Two-Factor Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 twofactorauth_get_user_configs"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/twofactorauth_get_user_configs?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/twofactorauth_policy_status": {
      "get": {
        "description": "This function displays the Two-Factor Authentication (2FA) policy status on the server.",
        "operationId": "twofactorauth_policy_status",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "is_enabled": {
                          "description": "Whether the 2FA security policy is enabled.\n- `1` — Enabled.\n- `0` — **Not** enabled.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "twofactorauth_policy_status",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return 2FA policy status",
        "tags": [
          "Authentication",
          "Two-Factor Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 twofactorauth_policy_status"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/twofactorauth_policy_status?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/twofactorauth_remove_user_config": {
      "get": {
        "description": "This function removes the Two-Factor Authentication (2FA) settings for one or more specified user accounts.\n\n**Note:**\n\nIf you remove the 2FA settings for an account, the user **must** perform the setup procedure again to re-configure 2FA on the account.",
        "operationId": "twofactorauth_remove_user_config",
        "parameters": [
          {
            "description": "The account's username.\n\n**Note:**\n\n To remove multiple users, increment the parameter name. For example, `user-1`, `user-2`, or `user-3`.",
            "examples": {
              "multiple": {
                "description": "Multiple users.",
                "value": "user-1=username1 user-2=username2 user-3=username3"
              },
              "single": {
                "description": "A single user.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "failed": {
                          "additionalProperties": {
                            "description": "The reason for the failure.\n\n**Note:**\n\nThe user's name is the return name.",
                            "example": "You are not authorized to modify example",
                            "type": "string",
                            "x-additionalPropertiesName": "username"
                          },
                          "description": "An object that contains the user accounts for which removal failed.",
                          "type": "object"
                        },
                        "users_modified": {
                          "description": "An array of the user accounts for which you successfully removed 2FA settings.",
                          "items": {
                            "example": "example",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "twofactorauth_remove_user_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove 2FA settings",
        "tags": [
          "Authentication",
          "Two-Factor Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 twofactorauth_remove_user_config user='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/twofactorauth_remove_user_config?api.version=1&user=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/twofactorauth_set_issuer": {
      "get": {
        "description": "This function sets the `issuer` value that the system uses to generate the `secret` and `otpurls` values for Two-Factor Authentication on your accounts.",
        "operationId": "twofactorauth_set_issuer",
        "parameters": [
          {
            "description": "The issuer's name.",
            "in": "query",
            "name": "issuer",
            "required": true,
            "schema": {
              "example": "hostname.example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "twofactorauth_set_issuer",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update 2FA issuer value",
        "tags": [
          "Authentication",
          "Two-Factor Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 twofactorauth_set_issuer issuer='hostname.example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/twofactorauth_set_issuer?api.version=1&issuer=hostname.example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/twofactorauth_set_tfa_config": {
      "get": {
        "description": "This function sets the secret and the authentication code for Two-Factor Authentication (2FA) for the `root` or reseller account. You can generate a random secret and an OTP authentication URL with WHM API 1's `twofactorauth_generate_tfa_configorauth_generate_tfa_config` function.",
        "operationId": "twofactorauth_set_tfa_config",
        "parameters": [
          {
            "description": "A generated code for use with 2FA in Base32 format.",
            "in": "query",
            "name": "secret",
            "required": true,
            "schema": {
              "example": "WJ73QJSKZBXCFIPZ",
              "type": "string"
            }
          },
          {
            "description": "The time-based one-time password (TOTP) that the authentication app provides.",
            "in": "query",
            "name": "tfa_token",
            "required": true,
            "schema": {
              "example": "227174",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "success": {
                          "description": "Whether the account successfully enabled 2FA.\n* `1` — Enabled.\n* `0` — **Not** enabled.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "twofactorauth_set_tfa_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update 2FA authentication secret and code",
        "tags": [
          "Authentication",
          "Two-Factor Authentication"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 twofactorauth_set_tfa_config secret='WJ73QJSKZBXCFIPZ' tfa_token='227174'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/twofactorauth_set_tfa_config?api.version=1&secret=WJ73QJSKZBXCFIPZ&tfa_token=227174"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/uapi_cpanel": {
      "get": {
        "description": "This function calls a UAPI function through the WHM API. This function's output will match the UAPI function that it calls.",
        "operationId": "uapi_cpanel",
        "parameters": [
          {
            "description": "The UAPI function to call.\n\n***Note:***\n\nYou must include the UAPI function's required parameters. You can also include its optional parameters.\n\nFor example, to call the UAPI `get_stats` function with its required display parameter and the bandwidthusage and diskusage values:\n\n`display=bandwidthusage|diskusage`",
            "in": "query",
            "name": "cpanel.function",
            "required": true,
            "schema": {
              "example": "get_stats",
              "type": "string"
            }
          },
          {
            "description": "The UAPI function's cPanel module.",
            "in": "query",
            "name": "cpanel.module",
            "required": true,
            "schema": {
              "example": "StatsBar",
              "type": "string"
            }
          },
          {
            "description": "The cPanel username to call with the UAPI function.",
            "in": "query",
            "name": "cpanel.user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "uapi": {
                          "description": "hash of function output. Each hash contains the returns from the called UAPI function. For information about a function's returns, read the function's documentation.",
                          "example": {
                            "data": [
                              {
                                "_count": "0",
                                "_max": "unlimited",
                                "_maxed": 0,
                                "count": "0",
                                "feature": "addondomains",
                                "id": "addondomains",
                                "is_maxed": 0,
                                "item": "Addon Domains",
                                "max": "unlimited",
                                "maxed_phrase": "You are using your maximum allotment ([numf,_1]) of addon domains.",
                                "module": "Park",
                                "name": "addondomains",
                                "near_limit_phrase": "You are using [numf,_1] of [numf,_2] available addon [numerate,_2,domain,domains].",
                                "percent": 0,
                                "percent10": 0,
                                "percent20": 0,
                                "percent5": 0,
                                "phrase": "Addon Domains",
                                "role": "WebServer",
                                "zeroisunlimited": 0
                              }
                            ],
                            "errors": null,
                            "messages": null,
                            "metadata": {
                              "transformed": 1
                            },
                            "status": 1,
                            "warnings": null
                          },
                          "properties": {
                            "data": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "items": {},
                                  "type": "array"
                                },
                                {
                                  "type": "object"
                                }
                              ],
                              "description": "The UAPI response. This value varies based on the UAPI function requested."
                            },
                            "errors": {
                              "description": "List of errors produced the by the API if any.",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "messages": {
                              "description": "List of messages produced the by the API if any.",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "metadata": {
                              "properties": {
                                "transformed": {
                                  "description": "- 1 - A transform was applied.\n- 0 - A transform was not applied.",
                                  "enum": [
                                    0,
                                    1
                                  ],
                                  "example": 1,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "status": {
                              "description": "- 1 - Success\n- 0 - Failed: Check the errors field for more details.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            },
                            "warnings": {
                              "description": "List of warnings produced the by the API if any.",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "uapi_cpanel",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Run UAPI function through WHM API",
        "tags": [
          "Server Administration",
          "API Execution"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 uapi_cpanel cpanel.function='get_stats' cpanel.module='StatsBar' cpanel.user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/uapi_cpanel?api.version=1&cpanel.function=get_stats&cpanel.module=StatsBar&cpanel.user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/unblock_incoming_email_from_country": {
      "get": {
        "description": "This function unblocks email from specific countries.",
        "operationId": "unblock_incoming_email_from_country",
        "parameters": [
          {
            "description": "The country to unblock. A valid [ISO 3166-1 alpha-2 code](https://www.iso.org/iso-3166-country-codes.html) two-letter country code.\n\n**Note:**\n* To search all available country codes, read the ISO's [Full list of Country Codes](https://www.iso.org/obp/ui) documentation.\n* To unblock multiple countries, duplicate or increment the parameter name. For example, to unblock three countries, you could:\n  - Use the `country_code` parameter multiple times.\n  - Use the `country_code`, `country_code-1`, and `country_code-2` parameters.",
            "examples": {
              "multiple": {
                "description": "To unblock multiple country codes.",
                "value": "country_code=US&country_code=AD"
              },
              "multiple-alternative": {
                "description": "To unblock multiple country codes using index parameters.",
                "value": "country_code=US&country_code-1=AD&country_code-2=ES"
              },
              "single": {
                "description": "To unblock one country code.",
                "value": "US"
              }
            },
            "in": "query",
            "name": "country_code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "updated": {
                          "description": "Whether the function unblocked one or more countries.\n* `1` - Success.\n* `0` - Failure.\n\n**Note:**\nIf the server already doesn't block that country, `updated` will return `0`.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unblock_incoming_email_from_country",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove block on emails from specific countries",
        "tags": [
          "Mail",
          "Spam Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unblock_incoming_email_from_country"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unblock_incoming_email_from_country?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "84"
      }
    },
    "/unblock_incoming_email_from_domain": {
      "get": {
        "description": "This function unblocks email from specific domains.",
        "operationId": "unblock_incoming_email_from_domain",
        "parameters": [
          {
            "description": "The domain to unblock.\n\n**Note:**\n\n* The function returns `0` for the updated return if the server already doesn't block that domain.\n* An FQDN requires **at least** [a label, a dot (`.`), and a top-level domain (TLD)](https://en.wikipedia.org/wiki/Domain_name#Domain_name_syntax).\n* Enter an asterisk (`*`) to represent [a wildcard label or TLD](https://en.wikipedia.org/wiki/Wildcard_DNS_record).\n* To unblock multiple domains, duplicate or increment the parameter name.",
            "examples": {
              "multiple": {
                "summary": "Multiple domains.",
                "value": "domain=example.com domain-1=example1.com domain-2=example2.com"
              },
              "multiple-alternative": {
                "summary": "Multiple domains.",
                "value": "domain=example.com domain=example1.com domain=example2.com"
              },
              "single": {
                "summary": "A single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "updated": {
                          "description": "Whether the function unblocked one or more domains.\n* `1` — Success.\n* `0` — Failure.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unblock_incoming_email_from_domain",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove block on emails from specific domains",
        "tags": [
          "Mail",
          "Spam Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unblock_incoming_email_from_domain domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unblock_incoming_email_from_domain?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "84"
      }
    },
    "/uninstall_rpm_plugin": {
      "get": {
        "description": "This function starts the uninstall process for a plugin. The uninstall process runs as a background process.",
        "operationId": "uninstall_rpm_plugin",
        "parameters": [
          {
            "description": "The name of a plugin RPM to uninstall.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "plugin_name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "log_entry": {
                          "description": "The name of the RPM plugin log entry for this uninstall process, including a timestamp.",
                          "example": "2017-01-01T19:39:27Z_plugin_name",
                          "type": "string"
                        },
                        "pid": {
                          "description": "The PID of the process that is doing the removal.",
                          "example": 1234,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "uninstall_rpm_plugin",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Uninstall WHM plugin RPM package",
        "tags": [
          "RPM",
          "Install or Uninstall Package"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 uninstall_rpm_plugin name='plugin_name'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/uninstall_rpm_plugin?api.version=1&name=plugin_name"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "64"
      }
    },
    "/unlink_server_node": {
      "get": {
        "description": "This function unlinks a remote server node from your server.\n\n**Important:**\n\n  This function does **not** unlink mail servers that are currently in use. \n  You **must** first delete any accounts that use the linked mail server.",
        "operationId": "unlink_server_node",
        "parameters": [
          {
            "description": "The name of a linked remote server node.",
            "in": "query",
            "name": "alias",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "alias": {
                          "description": "The name of a linked remote server node.",
                          "example": "example",
                          "type": "string"
                        },
                        "enabled_services": {
                          "description": "A list of services enabled on the linked remote server node.",
                          "items": {
                            "example": "apache_php_fpm",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "hostname": {
                          "description": "The remote server node's hostname.",
                          "example": "example.com",
                          "format": "hostname",
                          "type": "string"
                        },
                        "last_check": {
                          "description": "The last time that the server queried the current status of the remote server.",
                          "example": 1556576165,
                          "format": "unix_timestamp",
                          "type": "integer"
                        },
                        "system_settings": {
                          "description": "A list of the `worker_capabilities` return's system settings.",
                          "example": {
                            "Mail": {
                              "globalspamassassin": "0"
                            }
                          },
                          "properties": {},
                          "type": "object"
                        },
                        "tls_verified": {
                          "description": "Whether the remote server node has a valid [SSL certificate](https://docs.cpanel.net/knowledge-base/security/guide-to-ssl/).\n* `1` - The remote server node has a valid SSL certificate.\n* `0` - The remote server node does not have a valid SSL certificate.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "username": {
                          "description": "The username required to make API calls to the linked remote server node.",
                          "example": "root",
                          "type": "string"
                        },
                        "version": {
                          "description": "The version of cPanel & WHM installed on the remote server node.",
                          "example": "11.86.0.0",
                          "type": "string"
                        },
                        "worker_capabilities": {
                          "additionalProperties": {
                            "description": "The current role of the linked remote server node. This will\nreturn the required options for the role, if any exist.\n\n**Note:**\n\nThis return's name is the name of the remote server node's current\nrole.",
                            "items": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "description": "A group of services required for a remote server node to perform a\nspecific task.",
                          "example": {
                            "Mail": {}
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unlink_server_node",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove linked server node",
        "tags": [
          "Server Administration",
          "Server Nodes"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unlink_server_node alias='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unlink_server_node?api.version=1&alias=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/unlink_user_authn_provider": {
      "get": {
        "description": "This function unlinks a cPanel account from an external authentication identity provider.",
        "operationId": "unlink_user_authn_provider",
        "parameters": [
          {
            "description": "The system's internal key for the identity provider.",
            "in": "query",
            "name": "provider_id",
            "required": true,
            "schema": {
              "example": "cpanelid",
              "type": "string"
            }
          },
          {
            "description": "The unique identifier for the user at the identity provider.",
            "in": "query",
            "name": "subject_unique_identifier",
            "required": true,
            "schema": {
              "example": "123456789012345678901",
              "type": "string"
            }
          },
          {
            "description": "The account's username.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unlink_user_authn_provider",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Unregister cPanel account from authentication provider",
        "tags": [
          "Authentication",
          "Authentication Providers"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unlink_user_authn_provider username='example' provider_id='cpanelid' subject_unique_identifier='123456789012345678901'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unlink_user_authn_provider?api.version=1&username=example&provider_id=cpanelid&subject_unique_identifier=123456789012345678901"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/unset_all_service_proxy_backends": {
      "get": {
        "description": "This function removes a cPanel account's\n[service proxying](https://go.cpanel.net/ServiceProxying).\n\n**Note:**\n\n* If the [Web Server](https://go.cpanel.net/howtouseserverprofiles#roles) role is active on\nthe server, this function rebuilds the cPanel user's web virtual hosts (vhosts) and restarts\nthe web server.\n* If the system **cannot** rebuild the cPanel user's vhosts, the API call will still succeed.\nHowever, the function returns a failure warning in the metadata.\n* To set a service proxying for a cPanel account, use the WHM API 1\n`set_service_proxy_backends` function.",
        "operationId": "unset_all_service_proxy_backends",
        "parameters": [
          {
            "description": "The cPanel account's username.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unset_all_service_proxy_backends",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove cPanel account service proxying",
        "tags": [
          "Server Administration",
          "Services"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unset_all_service_proxy_backends username='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unset_all_service_proxy_backends?api.version=1&username=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "90"
      }
    },
    "/unset_manual_mx_redirects": {
      "get": {
        "description": "This function removes a domain's manual Exim mail exchanger (MX) redirect entry. The function also removes the manual MX redirect entry from the /etc/manualmx file.\n\n**Note:**\n\n  To set a domain's manual MX redirection, use the WHM API 1  set_manual_mx_redirects function.",
        "operationId": "unset_manual_mx_redirects",
        "parameters": [
          {
            "description": "The domain for which to remove a manual MX redirect entry.\n\n**Note:**\n\n To remove multiple domain entries, increment the parameter. For example, use the domain, domain-1, and domain-2 parameters.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "hash that contains a list of domains and the removed manual MX redirect entries. Each hash contains the DOMAIN return.",
                          "properties": {
                            "DOMAIN": {
                              "description": "The domain for which the function removed the manual MX redirect entry.\n\n**Note:**\n\n This return's name is the domain parameter's value.\n- A domain.\n- null  The domain did not have a manual MX redirect entry.",
                              "example": "mailhostexample.com",
                              "type": "string"
                            },
                            "example.com": {}
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unset_manual_mx_redirects",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove manual mail exchanger redirect record",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unset_manual_mx_redirects domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unset_manual_mx_redirects?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "90"
      }
    },
    "/unset_nsec3_for_domains": {
      "get": {
        "description": "This function configures the domain to use [Next Secure Record](https://tools.ietf.org/html/rfc4470) (NSEC) semantics instead of [Next Secure Record 3](https://tools.ietf.org/html/rfc4470) (NSEC3) semantics.\n\n**Note:**\n\nOnly servers that run PowerDNS can use DNSSEC. If you call this function on a server that doesn't use PowerDNS, you will receive an error.",
        "operationId": "unset_nsec3_for_domains",
        "parameters": [
          {
            "description": "The domain for which to disable NSEC3 semantics and use NSEC semantics.",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "domains": {
                          "description": "An array of objects that contain information about each domain.",
                          "items": {
                            "properties": {
                              "disabled": {
                                "description": "Whether the system disabled NSEC3.\n* `1` — Disabled.\n* `0` — The system failed to disable NSEC3.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              },
                              "domain": {
                                "description": "The domain for which to disable NSEC3.",
                                "example": "example.com",
                                "type": "string"
                              },
                              "error": {
                                "description": "An error message that describes why the system could not disable NSEC3.\n\n**Note:**\n\nThe function **only** displays this return when the `disabled` return is a `0` value.",
                                "example": "Error message.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unset_nsec3_for_domains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Enable NSEC semantics for domain",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unset_nsec3_for_domains domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unset_nsec3_for_domains?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/unsetupreseller": {
      "get": {
        "description": "This function revokes reseller status from an account.",
        "operationId": "unsetupreseller",
        "parameters": [
          {
            "description": "The reseller account's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unsetupreseller",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Disables cPanel account's reseller status",
        "tags": [
          "Resellers",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unsetupreseller user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unsetupreseller?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/unsuspend_outgoing_email": {
      "get": {
        "description": "This function unsuspends outgoing email for a cPanel account's users.",
        "operationId": "unsuspend_outgoing_email",
        "parameters": [
          {
            "description": "The cPanel account.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unsuspend_outgoing_email",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Unsuspend account outgoing email",
        "tags": [
          "Mail",
          "cPanel Account Mail Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unsuspend_outgoing_email user='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unsuspend_outgoing_email?api.version=1&user=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/unsuspendacct": {
      "get": {
        "description": "This function unsuspends an account.\n\n**Note:**\n\n**Only** the `root` account and `root`-enabled resellers can unsuspend a locked account.",
        "operationId": "unsuspendacct",
        "parameters": [
          {
            "description": "The account to unsuspend.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to retain any [service proxies](https://go.cpanel.net/serviceproxyglossary) on an account.\n* `1` — Retain service proxies.\n* `0` — Do **not** retain service proxies.",
            "in": "query",
            "name": "retain-service-proxies",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unsuspendacct",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Unsuspend cPanel account",
        "tags": [
          "Accounts",
          "Suspensions"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unsuspendacct user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unsuspendacct?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/unsuspendreseller": {
      "get": {
        "description": "This function unsuspends a reseller account.",
        "operationId": "unsuspendreseller",
        "parameters": [
          {
            "description": "The reseller's username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          },
          {
            "description": "Whether to unsuspend only the reseller account.\n* `1` — The function **only** unsuspends the reseller account. The function will **not** unsuspend the accounts that the reseller account owns.\n* `0` — The function unsuspends the reseller account **and** the accounts that it owns.",
            "in": "query",
            "name": "reseller-only",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "unsuspendreseller",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Unsuspend reseller",
        "tags": [
          "Resellers",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 unsuspendreseller user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/unsuspendreseller?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/untrack_acct_id": {
      "get": {
        "description": "This function removes a user identification number (UID) or group\nidentification number (GID) from the tracked ID list.",
        "operationId": "untrack_acct_id",
        "parameters": [
          {
            "description": "The user or group ID to remove from the track list.\n\n**Note:**\n\n You **must** include the `uid` parameter, the `gid` parameter, or both.",
            "in": "query",
            "name": "uid or gid",
            "required": true,
            "schema": {
              "example": 1012,
              "type": "integer"
            }
          },
          {
            "description": "Whether to prevent removal of user or group IDs currently in use.\n\n* `1` — Prevent removal.\n* `0` — Do **not** prevent removal.",
            "in": "query",
            "name": "check_exists",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to prevent removal of the user ID if the quota system tracks associated files.\n\n* `1` — Prevent removal.\n* `0` — Do **not** prevent removal.\n\n**Note:**\n\n* This parameter **only** applies to user IDs and **not** group IDs.\n* You cannot check filesystems if the quota system does **not** track them.",
            "in": "query",
            "name": "check_quota",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to prevent removal of system user or group IDs.\n\n* `1` — Prevent removal.\n* `0` — Do **not** prevent removal.",
            "in": "query",
            "name": "protect_system",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "untrack_acct_id",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Remove UID or GID from tracked list",
        "tags": [
          "Accounts",
          "Account Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 untrack_acct_id uid or gid='1012'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/untrack_acct_id?api.version=1&uid%20or%20gid=1012"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/update_configclusterserver": {
      "get": {
        "description": "This function updates the username or remote access key for a cluster server.\n\n**Important:**\n\n* If you log in to a configuration cluster server that is *not* the parent server, *nothing* will indicate that the server is part of a configuration cluster. You can *only* view and modify this information from the master server.\n\n* We recommend that you run this function as a `POST` request with SSL enabled:\n  * The length of the remote access key may cause problems if you run the function with the `GET` method (for example, a URL in your browser).\n  * You risk security problems if you enter a remote access key through the `GET` method.",
        "operationId": "update_configclusterserver",
        "parameters": [
          {
            "description": "The remote configuration cluster server's name or IP address.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "The new [remote access key](https://docs.cpanel.net/whm/clusters/remote-access-key/). If you do **not** specify a value, the function does not update the remote access key.",
            "in": "query",
            "name": "key",
            "required": false,
            "schema": {
              "example": "d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0",
              "type": "string"
            }
          },
          {
            "description": "The server's `root`-level account username. If you do not specify a value, the function does not update the username.",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "example": "root",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "update_configclusterserver",
                          "type": "string"
                        },
                        "name": {
                          "description": "The remote configureation cluster server's name.",
                          "example": "example.com",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "signature": {
                          "description": "The new remote access key.",
                          "example": "d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0",
                          "type": "string"
                        },
                        "user": {
                          "description": "The server's `root`-level account username.",
                          "example": "root",
                          "type": "string"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update configuration cluster server credentials",
        "tags": [
          "Server Administration",
          "Configuration Clusters"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 update_configclusterserver name='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/update_configclusterserver?api.version=1&name=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/update_contact_email": {
      "get": {
        "description": "This function updates the contact email address in the `wwwacct.conf` file.\nFor more information, read our \n[Installation Guide - Customize Your Installation](https://docs.cpanel.net/installation-guide/customize-your-installation/)\ndocumentation.",
        "operationId": "update_contact_email",
        "parameters": [
          {
            "description": "The contact email address to add as the `wwwacct.conf` file's `CONTACTEMAIL`\nsetting.",
            "in": "query",
            "name": "contact_email",
            "required": true,
            "schema": {
              "example": "user@example.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "update_contact_email",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update WHM contact email address",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 update_contact_email contact_email='user@example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/update_contact_email?api.version=1&contact_email=user%40example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/update_featurelist": {
      "get": {
        "description": "This function creates or updates a feature list.",
        "operationId": "update_featurelist",
        "parameters": [
          {
            "description": "The feature list's name.",
            "in": "query",
            "name": "featurelist",
            "required": true,
            "schema": {
              "example": "TheBlackLagoon",
              "type": "string"
            }
          },
          {
            "description": "Whether to include the feature in the feature list.\n\n**Notes:**\n\n This parameter's name is the feature's name. If you do not specify any features, the system will disable all features in the feature list.",
            "in": "query",
            "name": "feature name",
            "required": false,
            "schema": {
              "enum": [
                0,
                1
              ],
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "featurelist": {
                          "description": "The feature list's name. A valid string.",
                          "example": "TheBlackLagoon",
                          "type": "string"
                        },
                        "invalid_features": {
                          "description": "An array of invalid feature names. This array includes the invalid  feature return.",
                          "items": {
                            "properties": {
                              "invalid feature": {
                                "description": "Whether the feature exists in the feature list.\n\n**Note:**\n\n The feature's name is the return's name.\n- 1  The feature exists in the feature list.\n- 0  The feature does not exist in the feature list.",
                                "enum": [
                                  0,
                                  1
                                ],
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "updated_features": {
                          "description": "hash of features in the feature list. This hash includes the feature  name return.",
                          "properties": {
                            "autoresponders": {},
                            "feature name": {
                              "description": "Whether the feature exists in the feature list.\n\n**Note:**\n\n The feature's name is the return's name.\n- 1  The feature exists in the feature list.\n- 0  The feature does not exist in the feature list.",
                              "enum": [
                                0,
                                1
                              ],
                              "example": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "update_featurelist",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update feature list",
        "tags": [
          "Packages",
          "Feature Lists"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 update_featurelist featurelist='TheBlackLagoon'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/update_featurelist?api.version=1&featurelist=TheBlackLagoon"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/update_integration_link_token": {
      "get": {
        "description": "This function refreshes the token for an integration link.",
        "operationId": "update_integration_link_token",
        "parameters": [
          {
            "description": "The name of the application to link.\n\n**Note:**\n\n To update the name of the application in the interface, you **must** delete it and then recreate it with WHM API 1's `create_integration_link` function.",
            "in": "query",
            "name": "app",
            "required": true,
            "schema": {
              "example": "WHMCS_billing",
              "type": "string"
            }
          },
          {
            "description": "The new access token to use for the application.",
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "example": "subway",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account name.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {},
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "update_integration_link_token",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Ok",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update integration link token",
        "tags": [
          "Integration",
          "Links"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 update_integration_link_token user='username' app='WHMCS_billing' token='subway'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/update_integration_link_token?api.version=1&user=username&app=WHMCS_billing&token=subway"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "54"
      }
    },
    "/update_linked_server_node": {
      "get": {
        "description": "This function updates a linked remote cPanel server node.\n\n**Important:**\n\n* You **cannot** link to a remote cPanel server node that uses cPanel & WHM version\n  76 and earlier. The remote cPanel server node **must** use a version that is the\n  same as or greater than your server version.\n* This function **requires** the use of an API token. For more information,\n  read our [Guide to API Authentication - API Tokens in WHM](https://documentation.cpanel.net/display/DD/Guide+to+API+Authentication+-+API+Tokens+in+WHM)\n  documentation.\n* In cPanel & WHM version 82, this function **only** links cPanel servers that are\n  capable of mail services. If a server does **not** have mail service capability, you\n  cannot use this function.",
        "operationId": "update_linked_server_node",
        "parameters": [
          {
            "description": "The name of a linked remote cPanel server node.",
            "in": "query",
            "name": "alias",
            "required": true,
            "schema": {
              "example": "example",
              "type": "string"
            }
          },
          {
            "description": "The API token required to make API calls to the remote cPanel server node.\n\nThis value defaults to the existing API token.\n\n**Note:**\n\n The API token **must** have `root`-level access on the remote cPanel server node.",
            "in": "query",
            "name": "api_token",
            "required": false,
            "schema": {
              "example": "23ZX8RA1FTE1IVJRL90MB5CREDS4UE2H",
              "type": "string"
            }
          },
          {
            "description": "A new remote cPanel server node's hostname. The system will update your remote\ncPanel server node's hostname to this value.\n\nThis value defaults to the existing hostname.\n\n**Note:**\n\nThis parameter does **not** accept an IP address.",
            "in": "query",
            "name": "hostname",
            "required": false,
            "schema": {
              "example": "example.com",
              "type": "string"
            }
          },
          {
            "description": "Whether to skip [SSL/TLS verification](https://docs.cpanel.net/knowledge-base/security/guide-to-ssl/).\nThe system performs this action when it queries the remote cPanel server node.\n\n**Note:**\n\nIf the remote cPanel server is SSL/TLS verified, you **cannot** skip verification.",
            "in": "query",
            "name": "skip_tls_verification",
            "required": false,
            "schema": {
              "default": 1,
              "enum": [
                0,
                1
              ],
              "example": 0,
              "type": "integer"
            }
          },
          {
            "description": "The username required to make API calls to the remote cPanel server node.\n\nThis value defaults to the existing username.\n\n**Note:**\n\nThe username **must** have `root`-level access on the remote cPanel server node.",
            "in": "query",
            "name": "username",
            "required": false,
            "schema": {
              "example": "root",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "update_linked_server_node",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update linked server node settings",
        "tags": [
          "Server Administration",
          "Server Nodes"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 update_linked_server_node alias='example'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/update_linked_server_node?api.version=1&alias=example"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/update_nameservers_config": {
      "get": {
        "description": "This function updates nameservers in the `wwwacct.conf` file. For more information, read our [Installation Guide - Customize Your Installation](https://go.cpanel.net/advancedinstall) documentation.",
        "operationId": "update_nameservers_config",
        "parameters": [
          {
            "description": "The nameserver to add or update as the `wwwacct.conf` file's `NS` setting. If you do not supply a value, the function does not update the setting.",
            "in": "query",
            "name": "nameserver",
            "required": false,
            "schema": {
              "example": "ns1.example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The nameserver to add or update as the `wwwacct.conf` file's `NS2` setting. If you do not supply a value, the function does not update the setting.",
            "in": "query",
            "name": "nameserver2",
            "required": false,
            "schema": {
              "example": "ns2.example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The nameserver to add or update as the `wwwacct.conf` file's `NS3` setting. If you do not supply a value, the function does not update the setting.",
            "in": "query",
            "name": "nameserver3",
            "required": false,
            "schema": {
              "example": "ns3.example.com",
              "format": "domain",
              "type": "string"
            }
          },
          {
            "description": "The nameserver to add or update as the `wwwacct.conf` file's `NS4` setting. If you do not supply a value, the function does not update the setting.",
            "in": "query",
            "name": "nameserver4",
            "required": false,
            "schema": {
              "example": "ns4.example.com",
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "update_nameservers_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update default nameservers",
        "tags": [
          "DNS",
          "Resolvers"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 update_nameservers_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/update_nameservers_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "76"
      }
    },
    "/update_reverse_dns_cache": {
      "get": {
        "description": "This function queries DNS and updates the map of local IP addresses to reverse DNS names.",
        "operationId": "update_reverse_dns_cache",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "update_reverse_dns_cache",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update reverse DNS cache",
        "tags": [
          "DNS",
          "DNS Zones"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 update_reverse_dns_cache"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/update_reverse_dns_cache?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/update_updateconf": {
      "post": {
        "description": "This function modifies a server's `/etc/cpupdate.conf` file. This file controls how the server handles software updates and upgrades.\n\n**Important:**\n\nYou **must** have the [`root` level Access Control List (ACL) privilege](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) to execute this function.",
        "operationId": "update_updateconf",
        "parameters": [
          {
            "description": "The cPanel & WHM installation's release tier, or a [valid version number](https://go.cpanel.net/longtermsupport).\n\nIf you do not use this parameter, the system retains the current setting.\n\n* A valid cPanel & WHM version number.\n* `STABLE` - This version has received considerable public exposure, testing, and verification.\n* `RELEASE` - This version is feature-complete and well-tested. It contains all intended features and functionality.\n* `CURRENT` - This version is tested and verified, but it may not contain all of the proposed functionality of a release. This tier is similar to the \"release candidate\" tier that other publication schemes use.\n* `EDGE` - This version only has rudimentary testing. The features are subject to further modification. This version usually lacks official public documentation.\n* `LTS` - Some hosting providers do not wish to upgrade cPanel & WHM to newer major versions. This is a single cPanel & WHM version for the year-long period in which cPanel, L.L.C. supports it.\n\n  If you do not set this parameter, the system retains the current setting.\n\n New installations default to RELEASE.",
            "in": "query",
            "name": "CPANEL",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "STABLE",
                    "RELEASE",
                    "CURRENT",
                    "EDGE",
                    "LTS"
                  ],
                  "type": "string"
                },
                {
                  "format": "cPanel version",
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "example": "RELEASE"
            }
          },
          {
            "description": "The frequency with which the server updates the operating system distribution's RPM packages each time that the `/usr/local/cpanel/scripts/upcp` script runs.\n\nIf you do not set this parameter, the system retains the current setting.\n\n* `daily` - Update the RPM packages daily.\n* `manual` - Update the RPM packages manually.\n* `never` - If you specify `never`, the server administrator **must** run the `/usr/local/cpanel/scripts/rpmup2` script when they update the server's RPM packages.",
            "in": "query",
            "name": "RPMUP",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "daily",
                    "manual",
                    "never"
                  ],
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "example": "daily"
            }
          },
          {
            "description": "The frequency with which the server updates Apache SpamAssassin's™ rules when the `/usr/local/cpanel/scripts/upcp` script runs.\n\nIf you do not set this parameter, the system retains the current setting.\n\n* `daily` - Update Apache SpamAssassin rules daily.\n* `manual` - Update Apache SpamAssassin rules manually.\n* `never` - If you specify `never`, the server administrator **must** run the `/usr/local/cpanel/scripts/rpmup2` script when they update Apache SpamAssassin's rules.",
            "in": "query",
            "name": "SARULESUP",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "daily",
                    "manual",
                    "never"
                  ],
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "example": "daily"
            }
          },
          {
            "description": "The absolute directory path to the staging directory for updates.\n\nIf you do not set this parameter, the system retains the current setting.",
            "in": "query",
            "name": "STAGING_DIR",
            "required": false,
            "schema": {
              "example": "/usr/local/cpanel",
              "type": "string"
            }
          },
          {
            "description": "When the system will check for updates.\n\nIf you do not set this parameter, the system retains the current setting.\n\n* `daily` - Update cPanel & WHM automatically through a cron job once every 24 hours.\n* `manual` - Update cPanel & WHM manually.\n* `never` - Do **not** update cPanel & WHM.",
            "in": "query",
            "name": "UPDATES",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "daily",
                    "manual",
                    "never"
                  ],
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "example": "daily"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "update_updateconf",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update software update behavior",
        "tags": [
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 update_updateconf"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/update_updateconf?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    },
    "/updateuserdomains": {
      "get": {
        "description": "This function updates the `/etc/userdomains` file based on the entries in `/var/cpanel/users` directory.",
        "operationId": "updateuserdomains",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "updateuserdomains",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Update /etc/userdomains file",
        "tags": [
          "DNS",
          "Domain Management"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 updateuserdomains"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/updateuserdomains?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "86"
      }
    },
    "/validate_current_dkims": {
      "get": {
        "description": "This function retrieves and checks the DomainKeys Identified Mail (DKIM) records for one or more domains.",
        "operationId": "validate_current_dkims",
        "parameters": [
          {
            "description": "The domain for which to check the DKIM records.\n\n**Note:**\n\nTo check multiple domains, duplicate or increment the parameter name.\nFor example, `domain-1`, `domain-2`, and `domain-3` parameters.",
            "examples": {
              "multiple": {
                "summary": "Check the DKIM records for multiple domains.",
                "value": "domain-1=example.com&domain-2=example.com&domain-3=example3.com"
              },
              "multiple-alternative": {
                "summary": "Check the DKIM records for multiple domains.",
                "value": "domain=example.com&domain=example2.com&domain=example3.com"
              },
              "single": {
                "summary": "Check the DKIM records for a single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects containing information about the domain's DKIM records.",
                          "example": [
                            {
                              "domain": "default._domainkey.example.com",
                              "expected": "v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDw5nw4NP1RsWXlfmiMzByDfOT16QCZO/xJtrPZKskZF8/sU0zWGTqKUOErlyJfoJzMDUv3/zzjGswc2nEmYqxxoQZaBkN4QaS6MvJQxysAr+sK8C248/r9zMperQdhJedUVejtpFQHJwgqpHy1tQMxY37L7sQjdxmQ5WnQ1acXiwIDAQAB\\",
                              "records": [
                                {
                                  "current": "v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDw5nw4NP1RsWXlfmiMzByDfOT16QCZO/xJtrPZKskZF8/sU0zWGTqKUOErlyJfoJzMDUv3/zzjGswc2nEmYqxxoQZaBkN4QaS6MvJQxysAr+sK8C248/r9zMperQdhJedUVejtpFQHJwgqpHy1tQMxY37L7sQjdxmQ5WnQ1acXiwIDAQAB\\",
                                  "state": "VALID"
                                }
                              ],
                              "state": "VALID",
                              "validity_cache_update": "valid"
                            },
                            {
                              "domain": "default._domainkey.example2.com",
                              "error": "(XID 4krw35) DNS returned “SERVFAIL” (code 2) in response to the system’s query for “default._domainkey.example2.com”’s “TXT” records.",
                              "expected": "v=DKIM1; k=rsa; p=MIIBIjAAAgkrhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4mA8NH3BkYvOmB0+ll23U78JesahG8304unKhW+MAm0ZE+i6EWN6iXhUj7FRPvI/6jFRd7qAHCPKFLo5+/PTy8C8eK312tfSnF3N0eucYFbgZ8F8iSRdgrcgEjvJ1vM1uvcUF211yd/e3jxT2Ge4/fmZcTYNjfH3uAuriv61L6pdIwHUWPhcjQvgOQoKQgXgooCUbUkWFDkMAH+EF/0g1dnXf289LjlvQsKhY7Y135Zpvm21kjUcj5mrLDlHJALzCVb8K/r/LCxjV5GFUyJiiNLAxkI9V1vZ4pMQvKIsN7wzu6gXK87w6mEWvKvipMAP8A2choDrk6H/fcQtfNodgwIDADAB;",
                              "records": [],
                              "state": "ERROR",
                              "validity_cache_update": "none"
                            }
                          ],
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The domain that the function used to check the DKIM record with a `default._domainkey` prefix.",
                                "type": "string"
                              },
                              "error": {
                                "description": "An error message that details the reason why the DNS lookup failed.\n\n**Note:**\n\nThe function **only** returns this value when the `state` return\nis the `ERROR` value.",
                                "type": "string"
                              },
                              "expected": {
                                "description": "The DKIM record's contents.",
                                "type": "string"
                              },
                              "records": {
                                "description": "The domain's DNS `DKIM TXT` records.",
                                "items": {
                                  "properties": {
                                    "current": {
                                      "description": "The full contents of the domain's `DKIM TXT` record data.",
                                      "type": "string"
                                    },
                                    "state": {
                                      "description": "The DKIM TXT record's status.\n\n* `VALID` — The `DKIM TXT` record matches the local server's\npublic key.\n* `MISMATCH` — The `DKIM TXT` record does **not** match the\nlocal server's public key.\n* `PERMFAIL` — Multiple `DKIM TXT` records for the domain\nexist or a misconfigured `DKIM TXT` record exists.",
                                      "enum": [
                                        "VALID",
                                        "MISMATCH",
                                        "PERMFAIL"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "state": {
                                "description": "The domain's DKIM record status.\n\n* `VALID` — The DKIM record is valid.\n* `MALFORMED` — A single DKIM record exists, but the record\ndoes **not** match the expected DKIM specifications.\n* `MISMATCH` — A DKIM record exists, but it does **not** match the\nexpected public key.\n* `MISSING` — No DKIM record exists for the domain.\n* `MULTIPLE` — Multiple DKIM records exist.\n* `NOPUB` — No key exists on the local server for the domain.\n* `ERROR` — The record's DNS lookup failed. The function returns\nthe reason in the `error` return value.",
                                "enum": [
                                  "VALID",
                                  "MALFORMED",
                                  "MISMATCH",
                                  "MISSING",
                                  "MULTIPLE",
                                  "NOPUB",
                                  "ERROR"
                                ],
                                "type": "string"
                              },
                              "validity_cache_update": {
                                "description": "The result of the DKIM record's validity cache update operation.\n\n* `set` — The domain is invalid but passed its validity check.\nThe validity check now passes the domain as valid.\n* `valid` — The domain is valid and passed its validity check.\nThere are no changes required.\n* `none` — The domain is invalid but the system will **not** take\nfurther action.\n* `error` — The domain's validity check operation failed.",
                                "enum": [
                                  "set",
                                  "valid",
                                  "none",
                                  "error"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "validate_current_dkims",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate DKIM records",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 validate_current_dkims domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/validate_current_dkims?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/validate_current_installed_exim_config": {
      "get": {
        "description": "This function validates the system's current Exim configuration.",
        "operationId": "validate_current_installed_exim_config",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "message": {
                          "description": "A list of Exim's configuration parameters.",
                          "example": "<pre>Doing Dry Run\nDry Run ok\nEnabled system filter options: attachments| fail_spam_score_over_int|spam_rewrite\nEnabled ACL options in block ACL_MAIL_PRE_BLOCK: default_mail_pre\nEnabled ACL options in block ACL_RBL_BLOCK: primary_hostname_bl\n Enabled ACL options in block ACL_RECIPIENT_POST_BLOCK: default_recipient_post\nEnabled ACL options in block ACL_SPAM_SCAN_CHECK_BLOCK: default_spam_scan_check\nEnabled ACL options in block ACL_CHECK_MESSAGE_PRE_BLOCK: default_check_message_pre \nEnabled ACL options in block ACL_CONNECT_POST_BLOCK: default_connect_post \nEnabled ACL options in block ACL_CONNECT_BLOCK: ratelimit|spammerlist \nEnabled ACL options in block ACL_POST_RECP_VERIFY_BLOCK: dictionary_attack\nEnabled ACL options in block ACL_IDENTIFY_SENDER_BLOCK: default_identify_sender\nEnabled ACL options in block ACL_MAIL_BLOCK: requirehelo| requirehelonoforge|requirehelosyntax\nEnabled ACL options in block ACL_RATELIMIT_SPAM_BLOCK: ratelimit_spam_score_over_int\nEnabled ACL options in block ACL_CHECK_MESSAGE_POST_BLOCK: default_check_message_post\nEnabled ACL options in block ACL_POST_SPAM_SCAN_CHECK_BLOCK: mailproviders \nEnabled ACL options in block ACL_SPAM_SCAN_BLOCK: default_spam_scan \nEnabled ACL options in block ACL_RATELIMIT_BLOCK: 0tracksenders\nEnabled ACL options in block ACL_NOTQUIT_BLOCK: ratelimit\nEnabled ACL options in block ACL_RECP_VERIFY_BLOCK: default_recp_verify\nEnabled ACL options in block ACL_PRE_SPAM_SCAN: mailproviders\nEnabled ACL options in block ACL_SPAM_BLOCK: deny_spam_score_over_int\nEnabled ACL options in block ACL_EXISCAN_BLOCK: default_exiscan\nEnabled ACL options in block ACL_RECIPIENT_BLOCK: default_recipient\nEnabled ACL options in block ACL_MAIL_POST_BLOCK: default_mail_post\nThe system detected spam handling in acls and will now disable Apache SpamAssassin in routers and transports!\nThe Apache SpamAssassin method remains unchanged.\nConfigured options list is:\nACL: acl_smtp_connect is active\nACL: acl_smtp_data is active\nACL: acl_smtp_mail is active\nACL: acl_smtp_notquit is active\nACL: acl_smtp_rcpt is active\nProvided options list is: daemon_smtp_ports| tls_on_connect_ports|system_filter_user|system_filter_group|tls_require_ciphers|hostlist loopback|hostlist senderverifybypass_hosts|hostlist skipsmtpcheck_hosts|hostlist spammeripblocks|hostlist backupmx_hosts|hostlist trustedmailhosts|hostlist relay_hosts| domainlist user_domains|remote_max_parallel|smtp_receive_timeout| ignore_bounce_errors_after|rfc1413_query_timeout|timeout_frozen_after|auto_thaw| callout_domain_negative_expire|callout_negative_expire|acl_smtp_connect| acl_smtp_data|acl_smtp_mail|acl_smtp_notquit|acl_smtp_rcpt|perl_at_start| daemon_smtp_ports|tls_on_connect_ports|system_filter_user|system_filter_ group|tls_require_ciphers|spamd_address\nExim Insert Regex is: virtual_userdelivery| virtual_aliases|lookuphost|virtual_user|address_pipe|virtual_sa_user|localuser\nExim Replace Regex is: virtual_sa_user|sa_localuser|virtual_sa_userdelivery| local_sa_delivery|central_filter|central_user_filter|democheck|fail_remote_domains| fixed_login|fixed_plain|has_alias_but_no_mailbox_discarded_to_prevent_loop|literal| local_delivery|local_delivery_spam|localuser|localuser_spam|lookuphost|remote_smtp| secure_login|secure_plain|userforward|virtual_aliases|virtual_aliases_nostar| virtual_user|virtual_user_spam|virtual_userdelivery|virtual_userdelivery_spam\nExim Match Insert Regex is: quota_directory|maildir_format\nExim version 4.76 #1 built 16- Aug-2011 11:41:07\nCopyright (c) University of Cambridge, 1995 - 2007\nBerkeley DB: Sleepycat Software: Berkeley DB 4.3.29: (July 12, 2010)\nSupport for: crypteq iconv() IPv6 PAM Perl OpenSSL Content_Scanning DKIM Old_Demime Experimental_SPF Experimental_SRS\nLookups (built-in): lsearch wildlsearch nwildlsearch iplsearch dbm dbmnz passwd\nAuthenticators: cram_md5 dovecot plaintext spa\nRouters: accept dnslookup ipliteral manualroute queryprogram redirect\nTransports: appendfile/maildir autoreply pipe smtp\nSize of off_t: 8\n\n</pre>",
                          "format": "HTML",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "validate_current_installed_exim_config",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "Your configuration is currently valid.",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success.\n* `0` - Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate Exim configuration",
        "tags": [
          "Mail",
          "Mail Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 validate_current_installed_exim_config"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/validate_current_installed_exim_config?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/validate_current_ptrs": {
      "get": {
        "description": "This function validates the pointer records (PTR) for IPv4 and IPv6 addresses an account's domains send mail from. It retrieves the PTR records for each IP address and determines which of the domain's IP addresses send mail. It then validates the PTR records for each IP address and validates the A (IPv4) or AAAA (IPv6) records pointing to each domain. This function also ensures that at least one of that domain's A or AAAA records points back to the IP address.",
        "operationId": "validate_current_ptrs",
        "parameters": [
          {
            "description": "The domain for which to validate the PTR records.\n\n**Note:**\n\nTo check multiple domains, duplicate or increment the parameter name.\nFor example, use the `domain-1`, `domain-2`, and `domain-3` parameters.",
            "examples": {
              "multiple": {
                "summary": "Validate multiple domains' PTR records.",
                "value": "domain-1=example.com domain-2=example2.com domain-3=example3.com"
              },
              "multiple-alternative": {
                "summary": "Validate multiple domains' PTR records.",
                "value": "domain=example.com&domain=example2.com&domain=example3.com"
              },
              "single": {
                "summary": "Validate a single domain's PTR records.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects containing information about the account's PTR records.",
                          "example": [
                            {
                              "arpa_domain": "1.0.0.10.in-addr.arpa",
                              "domain": "example.com",
                              "helo": "example.com",
                              "ip_address": "10.0.0.1",
                              "ip_version": 4,
                              "nameservers": [
                                "ns1.example.com",
                                "ns2.example.com",
                                "ns3.example.com"
                              ],
                              "ptr_records": [
                                {
                                  "domain": "example.com",
                                  "forward_records": [
                                    "10.0.0.1"
                                  ],
                                  "state": "VALID"
                                }
                              ],
                              "state": "VALID"
                            },
                            {
                              "arpa_domain": "3.0.0.10.in-addr.arpa",
                              "domain": "example.com",
                              "helo": "example.com",
                              "ip_address": "10.0.0.3",
                              "ip_version": 4,
                              "nameservers": [
                                "ns1.example.com",
                                "ns2.example.com",
                                "ns3.example.com"
                              ],
                              "ptr_records": [
                                {
                                  "domain": "example.com",
                                  "forward_records": [
                                    "192.168.12.34"
                                  ],
                                  "state": "FWD_MISMATCH"
                                }
                              ],
                              "state": "PTR_MISMATCH"
                            },
                            {
                              "arpa_domain": "4.3.3.7.0.7.3.0.e.2.a.8.0.0.0.0.0.0.0.0.3.a.5.8.8.b.d.0.1.0.0.2.ip6.arpa",
                              "domain": "example.com",
                              "helo": "example.com",
                              "ip_address": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
                              "ip_version": 6,
                              "nameservers": [
                                "ns1.example.com",
                                "ns2.example.com",
                                "ns3.example.com"
                              ],
                              "ptr_records": [
                                {
                                  "domain": "example.com",
                                  "forward_records": [
                                    "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
                                  ],
                                  "state": "VALID"
                                }
                              ],
                              "state": "VALID"
                            },
                            {
                              "arpa_domain": "2.0.0.10.in-addr.arpa",
                              "domain": "example.com",
                              "helo": "example.com",
                              "ip_address": "10.0.0.2",
                              "ip_version": 4,
                              "nameservers": [
                                "ns1.example.com",
                                "ns2.example.com",
                                "ns3.example.com"
                              ],
                              "ptr_records": [],
                              "state": "MISSING_PTR"
                            },
                            {
                              "domain": "thisotheremaildomain.com",
                              "error": "1.1.1.1.1 is not a valid IP address.",
                              "helo": "thisothermaildomain.com",
                              "ip_address": "1.1.1.1.1",
                              "ptr_records": [],
                              "state": "ERROR"
                            },
                            {
                              "arpa_domain": "4.0.0.10.in-addr.arpa",
                              "domain": "example.com",
                              "helo": "example.com",
                              "ip_address": "10.0.0.4",
                              "ip_version": 4,
                              "nameservers": [
                                "ns1.example.com",
                                "ns2.example.com",
                                "ns3.example.com"
                              ],
                              "ptr_records": [
                                {
                                  "domain": "example.com",
                                  "forward_records": [],
                                  "state": "MISSING_FWD"
                                }
                              ],
                              "state": "PTR_MISMATCH"
                            }
                          ],
                          "items": {
                            "properties": {
                              "arpa_domain": {
                                "description": "The IP address used to perform a\n[reverse DNS (rDNS) lookup](https://go.cpanel.net/HowtoConfigureReverseDNSforBINDinWHM),\nin reversed format and appended with one of the following:\n\n* `in-addr.arpa` — An IPv4 address\n* `ip6.arpa` — An IPv6 address.\n\nFor information about `.arpa` domains, read Wikipedia's\n[Reverse DNS lookup](https://en.wikipedia.org/wiki/Reverse_DNS_lookup)\narticle.\n\n**Note:**\n\nThe function does **not** return this value for a domain with an invalid IP address.",
                                "type": "string"
                              },
                              "domain": {
                                "description": "The queried domain.",
                                "type": "string"
                              },
                              "error": {
                                "description": "An error message that details the reason why the domain's IP address\nvalidation failed.\n\n**Note:**\n\nThe function **only** returns this value when the `state` return is\nthe `ERROR` value.",
                                "type": "string"
                              },
                              "helo": {
                                "description": "The hostname that the domain uses to identify itself to remote SMTP servers.",
                                "format": "hostname",
                                "type": "string"
                              },
                              "ip_address": {
                                "description": "The IPv4 or IPv6 address.\n\n**Note:**\n\nThe function does **not** return this value for a domain with an\ninvalid IP address.",
                                "type": "string"
                              },
                              "ip_version": {
                                "description": "The IP version number.\n\n* `4` — An IPv4 address.\n* `6` — An IPv6 address.\n\n**Note:**\n\nThe function does **not** return this value for a domain with an\ninvalid IP address.",
                                "type": "integer"
                              },
                              "nameservers": {
                                "description": "An array of the authoritative nameservers for the domain's PTR record.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "ptr_records": {
                                "description": "An array of objects containing the domain's PTR records.\n\n**Note:**\n\nThe function does **not** return this array for a domain with an\ninvalid IP address.",
                                "items": {
                                  "properties": {
                                    "domain": {
                                      "description": "The fully qualified domain name (FQDN) that a PTR record points to.",
                                      "type": "string"
                                    },
                                    "forward_records": {
                                      "description": "An array of IP addresses that the domain resolves to for A (IPv4) and AAAA (IPv6) records.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "state": {
                                      "description": "Whether the domain's PTR record points to a domain with an A\n(IPv4) or a AAAA (IPv6) record.\n\n* `VALID` — The PTR record is valid.\n* `MISSING_FWD` — The PTR points to a domain without an A or\nAAAA record.\n* `FWD_MISMATCH` — The PTR record points to a domain without\nan A or AAAA record that points back to the IP address.",
                                      "enum": [
                                        "VALID",
                                        "MISSING_FWD",
                                        "FWD_MISMATCH"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "state": {
                                "description": "Whether the PTR records are valid for the domain.\n\n* `ERROR` — The domain's IP address is invalid. The function returns\nthe reason in the `error` return.\n* `IP_IS_PRIVATE` — The IP address exists within a range of private\nIP addresses. DNS does **not** define PTR records for private IP\naddresses.\n* `VALID` — The PTR record is valid. The function **only** returns\nthis response if **all** of an IP address's PTR records are valid.\n* `MISSING_PTR` — No PTR record exists for the IP address.\n* `PTR_MISMATCH` — One or more PTR records point to a domain that\ndoes not point back to the correct IP address.",
                                "enum": [
                                  "ERROR",
                                  "IP_IS_PRIVATE",
                                  "VALID",
                                  "MISSING_PTR",
                                  "PTR_MISMATCH"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "validate_current_ptrs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate domain PTR records",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 validate_current_ptrs domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/validate_current_ptrs?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/validate_current_spfs": {
      "get": {
        "description": "This function installs a Sender Policy Framework (SPF) record for one or more domains.",
        "operationId": "validate_current_spfs",
        "parameters": [
          {
            "description": "The domain for which to check the SPF records.",
            "examples": {
              "multiple": {
                "summary": "Check multiple domains.",
                "value": "domain-1=example.com domain-2=example2.com domain-3=example3.com"
              },
              "multiple-alternative": {
                "summary": "Check multiple domains.",
                "value": "domain=example.com domain=example2.com domain=example3.com"
              },
              "single": {
                "summary": "Check a single domain.",
                "value": "example.com"
              }
            },
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "format": "domain",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects containing information about a domain's SPF records.",
                          "example": [
                            {
                              "domain": "example.com",
                              "expected": "ip6:0:0:0:0:0:ffff:c0a8:101",
                              "ip_address": "0:0:0:0:0:ffff:c0a8:101",
                              "ip_version": 6,
                              "records": [
                                {
                                  "current": "v=spf1 ~all",
                                  "reason": "example.com: Sender is not authorized by default to use 'example.com' in 'helo' identity (mechanism '-all' matched)",
                                  "state": "FAIL"
                                }
                              ],
                              "state": "VALID"
                            },
                            {
                              "domain": "example2.com",
                              "error": "(XID rm8h9f) DNS returned “SERVFAIL” (code 2) in response to the system’s query for “example2.com”’s “TXT” records.",
                              "ip_address": "198.252.32.45",
                              "ip_version": 4,
                              "records": [],
                              "state": "ERROR"
                            }
                          ],
                          "items": {
                            "properties": {
                              "domain": {
                                "description": "The queried domain.",
                                "format": "domain",
                                "type": "string"
                              },
                              "error": {
                                "description": "An error message that details the reason why the DNS lookup failed.\n\n**Note:**\n\nThe function **only** returns this value when the `state` return is\nthe `ERROR` value.",
                                "type": "string"
                              },
                              "expected": {
                                "description": "The SPF record for the domain in the DNS.",
                                "type": "string"
                              },
                              "ip_address": {
                                "anyOf": [
                                  {
                                    "format": "ipv4",
                                    "type": "string"
                                  },
                                  {
                                    "format": "ipv6",
                                    "type": "string"
                                  }
                                ],
                                "description": "The domain's IPv4 or IPv6 address."
                              },
                              "ip_version": {
                                "description": "The IP address version.\n\n* `4` — IPv4.\n* `6` — IPv6.",
                                "enum": [
                                  4,
                                  6
                                ],
                                "type": "integer"
                              },
                              "records": {
                                "description": "The SPF records of the domain's DNS.",
                                "items": {
                                  "properties": {
                                    "current": {
                                      "description": "The SPF record's contents.",
                                      "type": "string"
                                    },
                                    "reason": {
                                      "description": "The reason for the SPF record's status.",
                                      "type": "string"
                                    },
                                    "state": {
                                      "description": "The SPF record's status.\n\n* `PASS` — The SPF record confirms that the `ip_address` value\nis a valid sender.\n* `NEUTRAL` — The current SPF record configuration does not\ndetermine the `ip_address` value's validity.\n* `FAIL` — The SPF record states that the `ip_address` value\nis **not** a valid sender.\n* `SOFTFAIL` — The SPF record states that the `ip_address` value\nis **not** a valid sender, but does not `FAIL` state it.\n* `TEMPERROR` — The SPF record check resulted in a failure. For\nexample, a network failure.\n* `PERMERROR` — The domain's SPF records are **incorrect** and\nrequire manual correction.\n\n**Note:**\n\nThese values correspond with\n[RFC 7208 section 2.6](https://tools.ietf.org/html/rfc7208#section-2.6).",
                                      "enum": [
                                        "PASS",
                                        "NEUTRAL",
                                        "FAIL",
                                        "SOFTFAIL",
                                        "TEMPERROR",
                                        "PERMERROR"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "state": {
                                "description": "The SPF record's status.\n\n* `VALID` — A single `SPF TXT` record exists in the domain's DNS\nwith the correct `ip_address` value or redirect mechanism.\n* `MISMATCHED` — An `SPF TXT` record exists for the domain that\ndoes **not** match the `ip_address` value.\n* `MULTIPLE` — Multiple `SPF TXT` records exist in the domain's DNS.\n* `MISSING` — No `SPF TXT` record exists for the domain's DNS.\n* `ERROR` — The record's DNS lookup failed. The system returns the\nreason in the `error` return.",
                                "enum": [
                                  "VALID",
                                  "MISMATCHED",
                                  "MULTIPLE",
                                  "MISSING",
                                  "ERROR"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "validate_current_spfs",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate domain SPF records",
        "tags": [
          "Mail",
          "Mail DNS Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 validate_current_spfs domain='example.com'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/validate_current_spfs?api.version=1&domain=example.com"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "78"
      }
    },
    "/validate_exim_configuration_syntax": {
      "get": {
        "description": "This function evaluates and validates an Exim configuration file's syntax.\n\n**Note:**\n\nOn servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource\nrecords on DNS.\n  * This warning is not relevant on CentOS 7 servers, because\n  [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208).\n  CentOS 7 servers use TXT records instead of SPF records.\n  * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of\n  BIND that complies with RFC 7208. To resolve this issue, update your operating system to a\n  version that contains the updated version of BIND. For more information, read the\n  [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).",
        "operationId": "validate_exim_configuration_syntax",
        "parameters": [
          {
            "description": "The Exim configuration file's raw text.\n\n**Note:**\n\nIf you do not use this parameter, the function will analyze Exim's current configuration.",
            "in": "query",
            "name": "cfg_text",
            "required": false,
            "schema": {
              "example": "RAW_CONFIGURATION_TEXT",
              "format": "HTML",
              "type": "string"
            }
          },
          {
            "description": "The Exim configuration file's section to check.\n\n**Note:**\n\nIf you use this parameter, pass **only** the desired section to validate as the\n`cfg_text` value.",
            "in": "query",
            "name": "section",
            "required": false,
            "schema": {
              "example": "acl",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "error_msg": {
                    "summary": "An invalid Exim configuration.",
                    "value": {
                      "command": "validate_exim_configuration_syntax",
                      "data": {
                        "broken_cfg_html": "RAW_CONFIGURATION_TEXT",
                        "broken_cfg_text": "==>RAW_CONFIGURATION_TEXT<==\n",
                        "error_line": 1,
                        "error_msg": "This is an error message."
                      },
                      "output": {
                        "raw": "\n"
                      },
                      "reason": "OK",
                      "result": 1,
                      "version": 1
                    }
                  },
                  "exim_caps": {
                    "summary": "A valid Exim configuration.",
                    "value": {
                      "command": "validate_exim_configuration_syntax",
                      "data": {
                        "exim_caps": {
                          "add_header": 1,
                          "archive": 1,
                          "boxtrapper": 1,
                          "content_scanning": 1,
                          "directives": {
                            "accept_8bitmime": 1,
                            "acl_not_smtp": 1,
                            "acl_not_smtp_mime": 1,
                            "acl_not_smtp_start": 1,
                            "acl_smtp_auth": 1,
                            "acl_smtp_connect": 1,
                            "acl_smtp_data": 1,
                            "acl_smtp_data_prdr": 1,
                            "acl_smtp_dkim": 1,
                            "acl_smtp_etrn": 1,
                            "acl_smtp_expn": 1,
                            "acl_smtp_helo": 1,
                            "acl_smtp_mail": 1,
                            "acl_smtp_mailauth": 1,
                            "acl_smtp_mime": 1,
                            "acl_smtp_notquit": 1,
                            "acl_smtp_predata": 1,
                            "acl_smtp_quit": 1,
                            "acl_smtp_rcpt": 1,
                            "acl_smtp_starttls": 1,
                            "acl_smtp_vrfy": 1,
                            "add_environment": 1,
                            "admin_groups": 1,
                            "allow_domain_literals": 1,
                            "allow_mx_to_ip": 1,
                            "allow_utf8_domains": 1,
                            "auth_advertise_hosts": 1,
                            "auto_thaw": 1,
                            "av_scanner": 1,
                            "bi_command": 1,
                            "bounce_message_file": 1,
                            "bounce_message_text": 1,
                            "bounce_return_body": 1,
                            "bounce_return_linesize_limit": 1,
                            "bounce_return_message": 1,
                            "bounce_return_size_limit": 1,
                            "bounce_sender_authentication": 1,
                            "callout_domain_negative_expire": 1,
                            "callout_domain_positive_expire": 1,
                            "callout_negative_expire": 1,
                            "callout_positive_expire": 1,
                            "callout_random_local_part": 1,
                            "check_log_inodes": 1,
                            "check_log_space": 1,
                            "check_rfc2047_length": 1,
                            "check_spool_inodes": 1,
                            "check_spool_space": 1,
                            "daemon_smtp_ports": 1,
                            "daemon_startup_retries": 1,
                            "daemon_startup_sleep": 1,
                            "delay_warning": 1,
                            "delay_warning_condition": 1,
                            "deliver_drop_privilege": 1,
                            "deliver_queue_load_max": 1,
                            "delivery_date_remove": 1,
                            "disable_ipv6": 1,
                            "dkim_verify_signers": 1,
                            "dns_again_means_nonexist": 1,
                            "dns_check_names_pattern": 1,
                            "dns_csa_search_limit": 1,
                            "dns_csa_use_reverse": 1,
                            "dns_dnssec_ok": 1,
                            "dns_ipv4_lookup": 1,
                            "dns_retrans": 1,
                            "dns_retry": 1,
                            "dns_trust_aa": 1,
                            "dns_use_edns0": 1,
                            "drop_cr": 1,
                            "dsn_advertise_hosts": 1,
                            "dsn_from": 1,
                            "envelope_to_remove": 1,
                            "errors_copy": 1,
                            "errors_reply_to": 1,
                            "event_action": 1,
                            "exim_group": 1,
                            "exim_path": 1,
                            "exim_user": 1,
                            "extra_local_interfaces": 1,
                            "extract_addresses_remove_arguments": 1,
                            "finduser_retries": 1,
                            "freeze_tell": 1,
                            "gecos_name": 1,
                            "gecos_pattern": 1,
                            "gnutls_allow_auto_pkcs11": 1,
                            "gnutls_compat_mode": 1,
                            "gnutls_require_kx": 1,
                            "gnutls_require_mac": 1,
                            "gnutls_require_protocols": 1,
                            "header_line_maxsize": 1,
                            "header_maxsize": 1,
                            "headers_charset": 1,
                            "helo_accept_junk_hosts": 1,
                            "helo_allow_chars": 1,
                            "helo_lookup_domains": 1,
                            "helo_try_verify_hosts": 1,
                            "helo_verify_hosts": 1,
                            "hold_domains": 1,
                            "host_lookup": 1,
                            "host_lookup_order": 1,
                            "host_reject_connection": 1,
                            "hosts_connection_nolog": 1,
                            "hosts_treat_as_local": 1,
                            "ignore_bounce_errors_after": 1,
                            "ignore_fromline_hosts": 1,
                            "ignore_fromline_local": 1,
                            "keep_environment": 1,
                            "keep_malformed": 1,
                            "local_from_check": 1,
                            "local_from_prefix": 1,
                            "local_from_suffix": 1,
                            "local_interfaces": 1,
                            "local_scan_timeout": 1,
                            "local_sender_retain": 1,
                            "localhost_number": 1,
                            "log_file_path": 1,
                            "log_selector": 1,
                            "log_timezone": 1,
                            "lookup_open_max": 1,
                            "max_username_length": 1,
                            "message_body_newlines": 1,
                            "message_body_visible": 1,
                            "message_id_header_domain": 1,
                            "message_id_header_text": 1,
                            "message_logs": 1,
                            "message_size_limit": 1,
                            "mua_wrapper": 1,
                            "never_users": 1,
                            "openssl_options": 1,
                            "percent_hack_domains": 1,
                            "perl_at_start": 1,
                            "perl_startup": 1,
                            "pid_file_path": 1,
                            "pipelining_advertise_hosts": 1,
                            "prdr_enable": 1,
                            "preserve_message_logs": 1,
                            "primary_hostname": 1,
                            "print_topbitchars": 1,
                            "process_log_path": 1,
                            "prod_requires_admin": 1,
                            "qualify_domain": 1,
                            "qualify_recipient": 1,
                            "queue_domains": 1,
                            "queue_list_requires_admin": 1,
                            "queue_only": 1,
                            "queue_only_file": 1,
                            "queue_only_load": 1,
                            "queue_only_load_latch": 1,
                            "queue_only_override": 1,
                            "queue_run_in_order": 1,
                            "queue_run_max": 1,
                            "queue_smtp_domains": 1,
                            "receive_timeout": 1,
                            "received_header_text": 1,
                            "received_headers_max": 1,
                            "recipient_unqualified_hosts": 1,
                            "recipients_max": 1,
                            "recipients_max_reject": 1,
                            "remote_max_parallel": 1,
                            "remote_sort_domains": 1,
                            "retry_data_expire": 1,
                            "retry_interval_max": 1,
                            "return_path_remove": 1,
                            "rfc1413_hosts": 1,
                            "rfc1413_query_timeout": 1,
                            "sender_unqualified_hosts": 1,
                            "slow_lookup_log": 1,
                            "smtp_accept_keepalive": 1,
                            "smtp_accept_max": 1,
                            "smtp_accept_max_nonmail": 1,
                            "smtp_accept_max_nonmail_hosts": 1,
                            "smtp_accept_max_per_connection": 1,
                            "smtp_accept_max_per_host": 1,
                            "smtp_accept_queue": 1,
                            "smtp_accept_queue_per_connection": 1,
                            "smtp_accept_reserve": 1,
                            "smtp_active_hostname": 1,
                            "smtp_banner": 1,
                            "smtp_check_spool_space": 1,
                            "smtp_connect_backlog": 1,
                            "smtp_enforce_sync": 1,
                            "smtp_etrn_command": 1,
                            "smtp_etrn_serialize": 1,
                            "smtp_load_reserve": 1,
                            "smtp_max_synprot_errors": 1,
                            "smtp_max_unknown_commands": 1,
                            "smtp_ratelimit_hosts": 1,
                            "smtp_ratelimit_mail": 1,
                            "smtp_ratelimit_rcpt": 1,
                            "smtp_reserve_hosts": 1,
                            "smtp_return_error_details": 1,
                            "spamd_address": 1,
                            "spf_guess": 1,
                            "split_spool_directory": 1,
                            "spool_directory": 1,
                            "sqlite_lock_timeout": 1,
                            "srs_config": 1,
                            "srs_hashlength": 1,
                            "srs_hashmin": 1,
                            "srs_maxage": 1,
                            "srs_secrets": 1,
                            "srs_usehash": 1,
                            "srs_usetimestamp": 1,
                            "strict_acl_vars": 1,
                            "strip_excess_angle_brackets": 1,
                            "strip_trailing_dot": 1,
                            "syslog_duplication": 1,
                            "syslog_facility": 1,
                            "syslog_processname": 1,
                            "syslog_timestamp": 1,
                            "system_filter": 1,
                            "system_filter_directory_transport": 1,
                            "system_filter_file_transport": 1,
                            "system_filter_group": 1,
                            "system_filter_pipe_transport": 1,
                            "system_filter_reply_transport": 1,
                            "system_filter_user": 1,
                            "tcp_nodelay": 1,
                            "timeout_frozen_after": 1,
                            "timezone": 1,
                            "tls_advertise_hosts": 1,
                            "tls_certificate": 1,
                            "tls_crl": 1,
                            "tls_dh_max_bits": 1,
                            "tls_dhparam": 1,
                            "tls_eccurve": 1,
                            "tls_ocsp_file": 1,
                            "tls_on_connect_ports": 1,
                            "tls_privatekey": 1,
                            "tls_remember_esmtp": 1,
                            "tls_require_ciphers": 1,
                            "tls_try_verify_hosts": 1,
                            "tls_verify_certificates": 1,
                            "tls_verify_hosts": 1,
                            "trusted_groups": 1,
                            "trusted_users": 1,
                            "unknown_login": 1,
                            "unknown_username": 1,
                            "untrusted_set_sender": 1,
                            "uucp_from_pattern": 1,
                            "uucp_from_sender": 1,
                            "warn_message_file": 1,
                            "write_rejectlog": 1
                          },
                          "dkim": 1,
                          "domainkeys": 0,
                          "dovecot": 1,
                          "exiscan": 1,
                          "force_command": 1,
                          "maildir": 1,
                          "mailman": 1,
                          "no_forward_outbound_spam": 1,
                          "no_forward_outbound_spam_over_int": 0,
                          "notquit": 1,
                          "passwd": 1,
                          "rewrite_from_all": 0,
                          "rewrite_from_remote": 0,
                          "spf": 1,
                          "srs": 0
                        }
                      },
                      "output": {
                        "raw": "\n"
                      },
                      "reason": "OK",
                      "result": 1,
                      "version": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "description": "The function returns this object for an invalid Exim configuration.",
                          "properties": {
                            "broken_cfg_html": {
                              "description": "The line with the broken configuration, in HTML format.",
                              "example": "RAW_CONFIGURATION_TEXT\n",
                              "format": "HTML",
                              "type": "string"
                            },
                            "broken_cfg_text": {
                              "description": "The line that includes the broken configuration.",
                              "example": "==>RAW_CONFIGURATION_TEXT<==\n",
                              "format": "HTML",
                              "type": "string"
                            },
                            "error_line": {
                              "description": "The first line in the Exim configuration file that contains an error.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "error_msg": {
                              "description": "Any error messages that the validation script encountered.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "exim_caps": {
                              "description": "The function returns this object for a valid Exim configuration.",
                              "properties": {
                                "add_header": {
                                  "description": "Whether the server supports the `add_header` directive.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "archive": {
                                  "description": "Whether the server supports system-wide archives.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "boxtrapper": {
                                  "description": "Whether the server supports BoxTrapper functionality.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "content_scanning": {
                                  "description": "Whether the server supports content scanning functionality.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "directives": {
                                  "additionalProperties": {
                                    "description": "Whether the directive is active or inactive on the server.\n\n* `1` — Active.\n* `0` — Inactive.\n\n**Note:**\n\nThe return's name is the directive's name.",
                                    "enum": [
                                      1,
                                      0
                                    ],
                                    "type": "integer"
                                  },
                                  "description": "A list of individual Exim directives.",
                                  "type": "object"
                                },
                                "dkim": {
                                  "description": "Whether the server supports DomainKeys Identified Mail (DKIM).\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "domainkeys": {
                                  "description": "Whether the server supports DKIM.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "dovecot": {
                                  "description": "Whether the server supports Dovecot authentication.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "exiscan": {
                                  "description": "Whether the server contains exiscan, which scans messages from\nauthenticated senders for malware.\n\n* `1` — Contains exiscan.\n* `0` — Does **not** contain exiscan.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "force_command": {
                                  "description": "Whether the server supports the `force_command` directive for\npipe transports.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "maildir": {
                                  "description": "Whether the server supports the Maildir format.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "mailman": {
                                  "description": "Whether the server supports the Mailman feature.\n\n* `1` — Supports.\n*  `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "no_forward_outbound_spam": {
                                  "description": "Whether the server will refuse to forward outbound spam if it\nmatches the Apache SpamAssassin™ internal `spam_score` setting.\n\n* `1` — Server refuses to forward.\n* `0` — Server allows.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "no_forward_outbound_spam_over_int": {
                                  "description": "Whether the server will refuse to forward outbound spam if it\nmatches a defined Apache SpamAssassin score.\n\n* `1` — Server refuses to forward.\n* `0` — Server allows.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "notquit": {
                                  "description": "Whether the server supports the `acl_smtp_notquit` ACL, which runs\nwhen an SMTP session ends without a `QUIT`.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "passwd": {
                                  "description": "Whether the server supports password authentication.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "rewrite_from_all": {
                                  "description": "Whether the server supports the rewrite function on all incoming\nmail.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "rewrite_from_remote": {
                                  "description": "Whether the server can rewrite the outgoing `From:` header to the\nactual sender.\n\n* `1` — Can rewrite.\n* `0` — **Cannot** rewrite.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "spf": {
                                  "description": "Whether the server supports SPF checks.\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                },
                                "srs": {
                                  "description": "Whether the server supports the Sender Rewriting Scheme (SRS).\n\n* `1` — Supports.\n* `0` — Does **not** support.",
                                  "enum": [
                                    1,
                                    0
                                  ],
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "description": "An object containing a valid or invalid Exim configuration information.",
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "validate_exim_configuration_syntax",
                          "type": "string"
                        },
                        "output": {
                          "description": "The function's raw HTML output, if any exists.",
                          "format": "HTML",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate Exim configure file syntax",
        "tags": [
          "Mail",
          "Mail Server Settings"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 validate_exim_configuration_syntax"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/validate_exim_configuration_syntax?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11"
      }
    },
    "/validate_login_token": {
      "get": {
        "description": "This function validates a login token with the cPanel Store or a cPanel Market provider, and then returns access tokens.",
        "operationId": "validate_login_token",
        "parameters": [
          {
            "description": "The login token to validate.",
            "in": "query",
            "name": "login_token",
            "required": true,
            "schema": {
              "example": "1a676e6f-99fc-11e6-9ab6-e60a769b73bc",
              "type": "string"
            }
          },
          {
            "description": "The cPanel Store or cPanel Market provider's name.",
            "in": "query",
            "name": "provider",
            "required": true,
            "schema": {
              "example": "cPStore",
              "type": "string"
            }
          },
          {
            "description": "The location to which the cPanel Store or cPanel Market provider redirects the user's browser after they log in.",
            "in": "query",
            "name": "url_after_login",
            "required": true,
            "schema": {
              "example": "http://hostname.example.com/redirectionlocation.cgi?state",
              "format": "url",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "payload": {
                          "description": "An array of objects that contain token information.",
                          "items": {
                            "properties": {
                              "access_token": {
                                "description": "The access token that the cPanel Store or cPanel Market provider returns after you log in.",
                                "example": "b7a6f029-99fc-11e6-a0bd-87581cb027ac",
                                "type": "string"
                              },
                              "refresh_token": {
                                "description": "The refresh token that the cPanel Store or cPanel Market provider returns after you log in .",
                                "example": "b7a7107f-99fc-11e6-a0bd-b46329164206",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "validate_login_token",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the 'reason' field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate login token and return access token",
        "tags": [
          "Authentication",
          "Market Integration"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 validate_login_token provider='cPStore' url_after_login='http://hostname.example.com/redirectionlocation.cgi?state' login_token='1a676e6f-99fc-11e6-9ab6-e60a769b73bc'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/validate_login_token?api.version=1&provider=cPStore&url_after_login=http%3a%2f%2fhostname.example.com%2fredirectionlocation.cgi%3fstate&login_token=1a676e6f-99fc-11e6-9ab6-e60a769b73bc"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "62"
      }
    },
    "/validate_system_user": {
      "get": {
        "description": "This function validates a system user for use on the target server.\n\n**Note:**\n\n  For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://documentation.cpanel.net/display/DD/Guide+to+Transfer+and+Restore+API+Functions) documentation.",
        "operationId": "validate_system_user",
        "parameters": [
          {
            "description": "The system username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "exists": {
                          "description": "Whether the username exists on the server.\n* `1` — Exists.\n* `0` — Does **not** exist.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "reserved": {
                          "description": "Whether the username is reserved.\n* `1` — Reserved.\n* `0` — **Not** reserved.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "valid_for_new": {
                          "description": "Whether the system can use the username to create a new account.\n* `1` — Usable.\n* `0` — Unusable.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "valid_for_transfer": {
                          "description": "Whether the username is valid for a transferred account, but not a new account.\n* `1` — Valid for transfer, but **not** a new account.\n* `0` — Invalid.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "validate_system_user",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate username availability on target server",
        "tags": [
          "Transfers",
          "Transfer Configuration"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 validate_system_user user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/validate_system_user?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.44"
      }
    },
    "/verify_icq_access": {
      "get": {
        "description": "This function calls WHM API 1's `verify_oscar_access`\nfunction with your specified ICQ accounts. You can specify ICQ\naccounts in the _Contact Information_ section of WHM's [*Basic WebHost Manager\nSetup*](https://docs.cpanel.net/whm/server-configuration/basic-webhost-manager-setup/) interface (_Home >> Server Configuration >> Basic WebHost Manager\nSetup_).",
        "operationId": "verify_icq_access",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "message_id": {
                          "description": "The test message's ID.",
                          "example": "554d2cbd-efe61da3cacb",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "verify_icq_access",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate stored ICQ username and password",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 verify_icq_access"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/verify_icq_access?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/verify_new_username": {
      "get": {
        "description": "This function checks for username conflicts during account creation.",
        "operationId": "verify_new_username",
        "parameters": [
          {
            "description": "The account that you wish to create.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "verify_new_username",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result`\nfield is `0`. This field may display a success message when\na function succeeds.\n\n**Note:**\n\nIf the function detects a username conflict, it returns an error\nmessage in this field.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- `1` — Success.\n- `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate new cPanel account username",
        "tags": [
          "Accounts",
          "Account Creation"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 verify_new_username user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/verify_new_username?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/verify_new_username_for_restore": {
      "get": {
        "description": "This function checks for username conflicts during account restoration. If the function detects a username conflict, it outputs an error message in the `reason` return.",
        "operationId": "verify_new_username_for_restore",
        "parameters": [
          {
            "description": "The cPanel account that you wish to transfer to the server.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "verify_new_username_for_restore",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- `1` — Success.\n- `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate username during restoration",
        "tags": [
          "Account Restoration",
          "Restore Account"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 verify_new_username_for_restore user='username'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/verify_new_username_for_restore?api.version=1&user=username"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "58"
      }
    },
    "/verify_oscar_access": {
      "get": {
        "description": "This function tests the ICQ credentials that the system uses for notifications. The system generates a unique string and includes it in the test message.\n\nYou can also review the user's ICQ message history to confirm that the server sent and received the message.\n\nThe test's success or failure depends on the following conditions:\n* Valid username and password combination.\n* Network configuration.\n* Service outages.\n* External server rate limit.\n\n**Warning:**\n\n  AOL discontinued support for AIM in December 2017. This function only tests ICQ credentials, not AIM credentials.",
        "operationId": "verify_oscar_access",
        "parameters": [
          {
            "description": "The ICQ account's password.\n\n  **Note:**\n\nYou **cannot** use this function to test an AIM account.",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "example": "12345luggage",
              "type": "string"
            }
          },
          {
            "description": "The ICQ account.\n\n**Notes:**\n\n* If the username value consists entirely of numbers, the system assumes that it is an ICQ account. Otherwise, the system treats the account as an AOL account.\n* You **cannot** use this function to test an AIM account.",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "example": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "message_id": {
                          "description": "The test message's ID. A valid string.",
                          "example": "554d2cbd-efe61da3cacb",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "verify_oscar_access",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Validate ICQ username and password",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 verify_oscar_access username='username' password='12345luggage'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/verify_oscar_access?api.version=1&username=username&password=12345luggage"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52–68"
      }
    },
    "/verify_posturl_access": {
      "get": {
        "description": "This function calls the WHM API 1 `send_test_posturl` function for\nyour specified POST notification URLs. Users can specify POST notification\nURLs in the *Contact Information* section of WHM's\n[*Basic WebHost Manager Setup*](https://docs.cpanel.net/whm/server-configuration/basic-webhost-manager-setup)\ninterface (*WHM >> Home >> Server Configuration >> Basic WebHost Manager Setup*).\n\n**Note:**\n\nIf the *Contact Information* section of WHM's\n[*Basic WebHost Manager Setup*](https://docs.cpanel.net/whm/server-configuration/basic-webhost-manager-setup)\ninterface (*Home >> Server Configuration >> Basic WebHost Manager Setup*) contains\nmultiple POST URLs, the function will return an array that contains the results\nfor each URL.",
        "operationId": "verify_posturl_access",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "results": {
                          "description": "An array of objects containing POST notification URL data.",
                          "items": {
                            "properties": {
                              "result": {
                                "description": "A list of data about the POST notification URLs.",
                                "properties": {
                                  "message_id": {
                                    "description": "The test message's ID.",
                                    "example": "88M7",
                                    "type": "string"
                                  },
                                  "payload": {
                                    "description": "A list that contains information about a POST notification URL.",
                                    "properties": {
                                      "content": {
                                        "description": "The URLs content.",
                                        "example": "<!doctype html>\n<html>\n<head>\n    <title>Example Domain</title>\n\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <style type=\"text/css\">\n    body {\n        background-color: #f0f0f2;\n        margin: 0;\n        padding: 0;\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    }\n    div {\n        width: 600px;\n        margin: 5em auto;\n        padding: 2em;\n        background-color: #fdfdff;\n        border-radius: 0.5em;\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n    }\n    a:link, a:visited {\n        color: #38488f;\n        text-decoration: none;\n    }\n    @media (max-width: 700px) {\n        div {\n            margin: 0 auto;\n            width: auto;\n        }\n    }\n    </style>\n</head>\n\n<body>\n<div>\n    <h1>Example Domain</h1>\n    <p>This domain is for use in illustrative examples in documents. You may use this\n    domain in literature without prior coordination or asking for permission.</p>\n    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n</div>\n</body>\n</html>\n",
                                        "type": "string"
                                      },
                                      "headers": {
                                        "description": "An object of the header fields that the request returned.\n\n**Note:**\n\nThis object's returns vary based on the URL's headers.",
                                        "example": {
                                          "connection": "keep-alive",
                                          "content-length": "743",
                                          "content-type": "application/json; charset=utf-8",
                                          "date": "Tue, 05 May 2020 19:10:13 GMT",
                                          "e-tag": "z'W/\\\"2e7-Klmw/9Djp5E2M7VZdH2LwFWXX6s\\\"\"",
                                          "server": "nginx",
                                          "set-cookie": "sails.sid=s%3Arpjt9JrVXDIYMxpjyUqLuCtcUxSwbEWX.6ldYuWKV2zqn%2BhmsUlAi7PtsIEd9RXI32y6gjg0gwJA; Path=/; HttpOnly",
                                          "vary": "Accept-Encoding"
                                        },
                                        "type": "object"
                                      },
                                      "protocol": {
                                        "description": "The URL's HTTP protocol.",
                                        "example": "HTTP/1",
                                        "type": "string"
                                      },
                                      "reason": {
                                        "description": "The response that the server returned.",
                                        "example": "OK",
                                        "type": "string"
                                      },
                                      "status": {
                                        "description": "The response's\n[HTTP status](https://wikipedia.org/wiki/List_of_HTTP_status_codes)\ncode.",
                                        "example": "200",
                                        "type": "string"
                                      },
                                      "success": {
                                        "description": "Whether the function returned a\n[2XX HTTP](https://wikipedia.org/wiki/List_of_HTTP_status_codes#2xx_Success)\nstatus code.\n\n* `1` — Success.\n* `0` — Failure.",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "url": {
                                        "description": "The URL that provided the response.",
                                        "example": "http://www.example.com",
                                        "format": "url",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "url": {
                                "description": "The URL and query string for the POST notification URL.",
                                "example": "https://postman-echo.com/post",
                                "format": "url",
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "verify_posturl_access",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            1,
                            0
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Send notification URL via POST verification",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 verify_posturl_access"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/verify_posturl_access?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/verify_pushbullet_access": {
      "get": {
        "description": "This function calls the WHM API 1 `send_test_pushbullet_note` function with the system's specified\nPushbullet™ accounts. You can specify Pushbullet accounts in the *Contact Information* section of WHM's\n*[Basic WebHost Manager Setup](https://docs.cpanel.net/whm/server-configuration/basic-webhost-manager-setup/)*\ninterface (*Home >> Server Configuration >> Basic WebHost Manager Setup*).",
        "operationId": "verify_pushbullet_access",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "results": {
                          "items": {
                            "properties": {
                              "access_token": {
                                "description": "The Pushbullet token used.\n\n**Note:**\n* To access your Pushbullet token, navigate to\n[Pushbullet's My Account](https://go.cpanel.net/pushbulletaccount)\npage. It will appear under the Access Token heading.\n* This is confidential information that your server sends via a secure channel.",
                                "example": "123456789012345678901234567890",
                                "type": "string"
                              },
                              "result": {
                                "properties": {
                                  "message_id": {
                                    "description": "The test message's ID.",
                                    "example": "554d2cbd-efe61da3cacb",
                                    "type": "string"
                                  },
                                  "payload": {
                                    "description": "The payload from the Pushbullet server.\n\nFor more information, visit\n[Pushbullet's API documentation](https://go.cpanel.net/pushbulletdocs).",
                                    "example": {
                                      "active": "true,",
                                      "body": "This message confirms that ??hostname.example.com?? (192.168.0.20) can send a\nmessage to you via Pushbullet.\n\nThis message was sent on Tuesday, March 17, 2020 at 3:09:20 PM UTC.",
                                      "created": "1584457760.74319,",
                                      "direction": "self",
                                      "dismissed": "false,",
                                      "iden": "ABCDEFGHIJKLABCDEFGHIJKL",
                                      "modified": "1584457760.74993,",
                                      "receiver_email": "user@example.com",
                                      "receiver_email_normalized": "user@example.com",
                                      "receiver_iden": "ABCDEFGHIJKL",
                                      "sender_email": "user@example.com",
                                      "sender_email_normalized": "user@example.com",
                                      "sender_iden": "ABCDEFGHIJKL",
                                      "sender_name": "Firstname Lastname",
                                      "title": "Test message (ID: J2SY)",
                                      "type": "note"
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "verify_pushbullet_access",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Send Pushbullet™ access verification",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 verify_pushbullet_access"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/verify_pushbullet_access?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.52"
      }
    },
    "/verify_slack_access": {
      "get": {
        "description": "This function verifies the connection to a Slack® WebHook. You can specify Slack accounts in the Contact Information section of WHM's Basic WebHost Manager Setup  interface ( Home >> Server Configuration >> Basic WebHost Manager Setup ).",
        "operationId": "verify_slack_access",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "results": {
                          "description": "The payload from the Slack server. For more information, visit Slack's WebHooks documentation .",
                          "items": {
                            "properties": {
                              "result": {
                                "properties": {
                                  "message_id": {},
                                  "payload": {
                                    "properties": {
                                      "content": {},
                                      "headers": {
                                        "properties": {
                                          "access-control-allow-origin": {},
                                          "content-type": {},
                                          "date": {},
                                          "referrer-policy": {},
                                          "server": {},
                                          "strict-transport-security": {},
                                          "transfer-encoding": {},
                                          "vary": {},
                                          "x-frame-options": {},
                                          "x-slack-backend": {},
                                          "x-via": {}
                                        },
                                        "type": "object"
                                      },
                                      "protocol": {},
                                      "reason": {},
                                      "status": {},
                                      "success": {},
                                      "url": {}
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "url": {}
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "verify_slack_access",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is 0. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "- 1 - Success\n- 0 - Failed: Check the reason field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Verify Slack® Webhook connection",
        "tags": [
          "Server Administration",
          "Notifications"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 verify_slack_access"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/verify_slack_access?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "90"
      }
    },
    "/verify_user_has_feature": {
      "get": {
        "description": "This function checks whether a user has access to a feature on a [feature list](https://go.cpanel.net/whmdocsFeatureManager).",
        "operationId": "verify_user_has_feature",
        "parameters": [
          {
            "description": "The feature's ID.\n\n**Note:**\n\nCall WHM API 1's `get_feature_names` function to view available features.",
            "in": "query",
            "name": "feature",
            "required": true,
            "schema": {
              "example": "sslinstall",
              "type": "string"
            }
          },
          {
            "description": "The cPanel account username.",
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "example": "username",
              "format": "username",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "has_feature": {
                          "description": "Whether the user can access the feature.\n\n* `1` — The user can access the feature.\n* `0` — The user **cannot** access the feature.\n\n**Note:**\n\nThis function returns a `1` value for any feature that does **not** exist in\na [feature list](https://go.cpanel.net/whmdocsFeatureManager). This is because\nthe system presumes users have access to features that exist outside of the\nsystem's feature lists.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "query_feature": {
                          "description": "The queried feature's ID.",
                          "example": "sslinstall",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "verify_user_has_feature",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` — Success.\n* `0` — Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel account feature access",
        "tags": [
          "Packages",
          "Feature Access"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 verify_user_has_feature user='username' feature='sslinstall'"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/verify_user_has_feature?api.version=1&user=username&feature=sslinstall"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "56"
      }
    },
    "/version": {
      "get": {
        "description": "This function returns [the cPanel & WHM version](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/) that a server runs.",
        "operationId": "version",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "version": {
                          "description": "The server's cPanel & WHM version.",
                          "example": "11.88.0.9999",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "metadata": {
                      "properties": {
                        "command": {
                          "description": "The method name called.",
                          "example": "version",
                          "type": "string"
                        },
                        "reason": {
                          "description": "The reason the API function failed when the `metadata.result` field is `0`. This field may display a success message when a function succeeds.",
                          "example": "OK",
                          "type": "string"
                        },
                        "result": {
                          "description": "* `1` - Success\n* `0` - Failed. Check the `reason` field for more details.",
                          "enum": [
                            0,
                            1
                          ],
                          "example": 1,
                          "type": "integer"
                        },
                        "version": {
                          "description": "The version of the API function.",
                          "example": 1,
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "HTTP Request was successful."
          }
        },
        "summary": "Return cPanel & WHM version",
        "tags": [
          "Updates"
        ],
        "x-code-samples": [
          {
            "label": "CLI",
            "lang": "Shell",
            "source": "whmapi1 version"
          },
          {
            "label": "URL",
            "lang": "HTTP",
            "source": "https://hostname.example.com:2087/cpsess##########/json-api/version?api.version=1"
          }
        ],
        "x-cpanel-api-version": "WHM API 1",
        "x-cpanel-available-version": "11.38"
      }
    }
  },
  "security": [
    {
      "BasicAuth": []
    }
  ],
  "servers": [
    {
      "description": "A server running WHM.",
      "url": "https://{host}:{port}/json-api",
      "variables": {
        "host": {
          "default": "whm-server.tld",
          "description": "The hostname of a server running WHM."
        },
        "port": {
          "default": "2087",
          "description": "The WHM port."
        }
      }
    }
  ],
  "tags": [
    {
      "description": "Accounts / Account Creation",
      "name": "Account Creation"
    },
    {
      "description": "Resellers / Account Limits",
      "name": "Account Limits"
    },
    {
      "description": "Accounts / Account Management",
      "name": "Account Management"
    },
    {
      "description": "Server Administration / Account Management",
      "name": "Account Management"
    },
    {
      "description": "Resellers / Account Management",
      "name": "Account Management"
    },
    {
      "description": "Resellers / Account Permissions",
      "name": "Account Permissions"
    },
    {
      "description": "The Account Restoration module for WHM API 1.",
      "name": "Account Restoration"
    },
    {
      "description": "Resellers / Account Settings",
      "name": "Account Settings"
    },
    {
      "description": "The Accounts module for WHM API 1.",
      "name": "Accounts"
    },
    {
      "description": "The Addon Domains module for WHM API 1.",
      "name": "Addon Domains"
    },
    {
      "description": "Integrations / API Authentication",
      "name": "API Authentication"
    },
    {
      "description": "API Development Tools / API Execution",
      "name": "API Execution"
    },
    {
      "description": "API Development Tools / API Statistics",
      "name": "API Statistics"
    },
    {
      "description": "API Development Tools / API Token Management",
      "name": "API Token Management"
    },
    {
      "description": "API Development Tools / Applications",
      "name": "Applications"
    },
    {
      "description": "The Authentication module for WHM API 1.",
      "name": "Authentication"
    },
    {
      "description": "Authentication / Authentication Providers",
      "name": "Authentication Providers"
    },
    {
      "description": "SSL Certificates / Auto-Generated Certificates",
      "name": "Auto-Generated Certificates"
    },
    {
      "description": "Backups / Backup Destination",
      "name": "Backup Destination"
    },
    {
      "description": "Backups / Backup or Restore",
      "name": "Backup or Restore"
    },
    {
      "description": "Backups / Backup Settings",
      "name": "Backup Settings"
    },
    {
      "description": "The Backups module for WHM API 1.",
      "name": "Backups"
    },
    {
      "description": "Accounts / Bandwidth and Disk Quotas",
      "name": "Bandwidth and Disk Quotas"
    },
    {
      "description": "Server Administration / Configuration Clusters",
      "name": "Configuration Clusters"
    },
    {
      "description": "Server Administration / Configurations",
      "name": "Configurations"
    },
    {
      "description": "Server Administration / Connections",
      "name": "Connections"
    },
    {
      "description": "Mail / cPanel Account Mail Management",
      "name": "cPanel Account Mail Management"
    },
    {
      "description": "SSL Certificates / cPanel Account Settings",
      "name": "cPanel Account Settings"
    },
    {
      "description": "Transfers / cPanel Account Transfer",
      "name": "cPanel Account Transfer"
    },
    {
      "description": "The cPanel Analytics module for WHM API 1.",
      "name": "cPanel Analytics"
    },
    {
      "description": "The cPHulk module for WHM API 1.",
      "name": "cPHulk"
    },
    {
      "description": "The Databases module for WHM API 1.",
      "name": "Databases"
    },
    {
      "description": "The DNS module for WHM API 1.",
      "name": "DNS"
    },
    {
      "description": "DNS / DNS Cluster Settings",
      "name": "DNS Cluster Settings"
    },
    {
      "description": "DNS / DNS Security",
      "name": "DNS Security"
    },
    {
      "description": "DNS / DNS Zones",
      "name": "DNS Zones"
    },
    {
      "description": "Accounts / Domain Management",
      "name": "Domain Management"
    },
    {
      "description": "DNS / Domain Management",
      "name": "Domain Management"
    },
    {
      "description": "The EasyApache module for WHM API 1.",
      "name": "EasyApache"
    },
    {
      "description": "Web Server Configuration / EasyApache Settings",
      "name": "EasyApache Settings"
    },
    {
      "description": "Authentication / External Authentication",
      "name": "External Authentication"
    },
    {
      "description": "Hosting Plans / Feature Access",
      "name": "Feature Access"
    },
    {
      "description": "Hosting Plans / Feature Lists",
      "name": "Feature Lists"
    },
    {
      "description": "The Greylisting module for WHM API 1.",
      "name": "Greylisting"
    },
    {
      "description": "Hosting Plans / Hosting Plan Extensions",
      "name": "Hosting Plan Extensions"
    },
    {
      "description": "Hosting Plans / Hosting Plans",
      "name": "Hosting Plans"
    },
    {
      "description": "System Package Management / Install or Uninstall Package",
      "name": "Install or Uninstall Package"
    },
    {
      "description": "The Integration module for WHM API 1.",
      "name": "Integration"
    },
    {
      "description": "The IP Addresses module for WHM API 1.",
      "name": "IP Addresses"
    },
    {
      "description": "IP Address Management / IPv4 Address Settings",
      "name": "IPv4 Address Settings"
    },
    {
      "description": "IP Address Management / IPv6 Address Settings",
      "name": "IPv6 Address Settings"
    },
    {
      "description": "Backups / Legacy Migration",
      "name": "Legacy Migration"
    },
    {
      "description": "Server Administration / License Management",
      "name": "License Management"
    },
    {
      "description": "Integrations / Links",
      "name": "Links"
    },
    {
      "description": "System Package Management / List Package Information",
      "name": "List Package Information"
    },
    {
      "description": "Authentication / Login URL",
      "name": "Login URL"
    },
    {
      "description": "The Mail module for WHM API 1.",
      "name": "Mail"
    },
    {
      "description": "Mail / Mail DNS Settings",
      "name": "Mail DNS Settings"
    },
    {
      "description": "Mail / Mail Server Settings",
      "name": "Mail Server Settings"
    },
    {
      "description": "Databases / Manage MySQL Server",
      "name": "Manage MySQL Server"
    },
    {
      "description": "Login Security (cPHulk) / Management",
      "name": "Management"
    },
    {
      "description": "The Market module for WHM API 1.",
      "name": "Market"
    },
    {
      "description": "Commerce Integration / Market Integration",
      "name": "Market Integration"
    },
    {
      "description": "The ModSecurity module for WHM API 1.",
      "name": "ModSecurity"
    },
    {
      "description": "Databases / MySQL Databases",
      "name": "MySQL Databases"
    },
    {
      "description": "IP Address Management / Network Address Translation",
      "name": "Network Address Translation"
    },
    {
      "description": "Server Administration / Notifications",
      "name": "Notifications"
    },
    {
      "description": "System Package Management / Package Manager Settings",
      "name": "Package Manager Settings"
    },
    {
      "description": "The Packages module for WHM API 1.",
      "name": "Packages"
    },
    {
      "description": "Accounts / Passwords",
      "name": "Passwords"
    },
    {
      "description": "The PHP module for WHM API 1.",
      "name": "PHP"
    },
    {
      "description": "Web Server Configuration / PHP-FPM",
      "name": "PHP-FPM"
    },
    {
      "description": "Databases / PostgreSQL Databases",
      "name": "PostgreSQL Databases"
    },
    {
      "description": "cPanel Market / Product Management",
      "name": "Product Management"
    },
    {
      "description": "cPanel Market / Provider Management",
      "name": "Provider Management"
    },
    {
      "description": "Databases / Remote MySQL Databases",
      "name": "Remote MySQL Databases"
    },
    {
      "description": "Login Security (cPHulk) / Reporting",
      "name": "Reporting"
    },
    {
      "description": "The Resellers module for WHM API 1.",
      "name": "Resellers"
    },
    {
      "description": "DNS / Resolvers",
      "name": "Resolvers"
    },
    {
      "description": "Account Restoration / Restore Account",
      "name": "Restore Account"
    },
    {
      "description": "Account Restoration / Restore Queue Management",
      "name": "Restore Queue Management"
    },
    {
      "description": "Account Restoration / Restore Queue Reporting",
      "name": "Restore Queue Reporting"
    },
    {
      "description": "The RPM module for WHM API 1.",
      "name": "RPM"
    },
    {
      "description": "Web Server Security (ModSecurity) / Rule Settings",
      "name": "Rule Settings"
    },
    {
      "description": "Web Server Security (ModSecurity) / Rule Vendor Settings",
      "name": "Rule Vendor Settings"
    },
    {
      "description": "The Script Hooks module for WHM API 1.",
      "name": "Script Hooks"
    },
    {
      "description": "Integrations / Scripts Hooks",
      "name": "Scripts Hooks"
    },
    {
      "description": "The Security module for WHM API 1.",
      "name": "Security"
    },
    {
      "description": "The Server Administration module for WHM API 1.",
      "name": "Server Administration"
    },
    {
      "description": "Server Administration / Server Nodes",
      "name": "Server Nodes"
    },
    {
      "description": "Server Administration / Server Profiles",
      "name": "Server Profiles"
    },
    {
      "description": "Web Server Security (ModSecurity) / Server Settings",
      "name": "Server Settings"
    },
    {
      "description": "SSL Certificates / Server Settings",
      "name": "Server Settings"
    },
    {
      "description": "Server Administration / Services",
      "name": "Services"
    },
    {
      "description": "API Development Tools / Session",
      "name": "Session"
    },
    {
      "description": "Login Security (cPHulk) / Settings",
      "name": "Settings"
    },
    {
      "description": "Mail / Spam Management",
      "name": "Spam Management"
    },
    {
      "description": "Mail / Spam Protection (Greylisting)",
      "name": "Spam Protection (Greylisting)"
    },
    {
      "description": "Authentication / SSH Keys and Connections",
      "name": "SSH Keys and Connections"
    },
    {
      "description": "The SSL module for WHM API 1.",
      "name": "SSL"
    },
    {
      "description": "Accounts / Styles",
      "name": "Styles"
    },
    {
      "description": "The Styles and Themes module for WHM API 1.",
      "name": "Styles and Themes"
    },
    {
      "description": "cPanel Support Tickets / Support Access",
      "name": "Support Access"
    },
    {
      "description": "The Support Tickets module for WHM API 1.",
      "name": "Support Tickets"
    },
    {
      "description": "Accounts / Suspensions",
      "name": "Suspensions"
    },
    {
      "description": "Server Administration / System Information",
      "name": "System Information"
    },
    {
      "description": "cPanel Support Tickets / Ticket Management",
      "name": "Ticket Management"
    },
    {
      "description": "Web Server Configuration / Tomcat Settings",
      "name": "Tomcat Settings"
    },
    {
      "description": "Transfers / Transfer Configuration",
      "name": "Transfer Configuration"
    },
    {
      "description": "Transfers / Transfer Monitoring",
      "name": "Transfer Monitoring"
    },
    {
      "description": "The Transfers module for WHM API 1.",
      "name": "Transfers"
    },
    {
      "description": "Authentication / Two-Factor Authentication",
      "name": "Two-Factor Authentication"
    },
    {
      "description": "The Updates module for WHM API 1.",
      "name": "Updates"
    },
    {
      "description": "Server Administration / Updates",
      "name": "Updates"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Account Restoration",
      "tags": [
        "Restore Account",
        "Restore Queue Management",
        "Restore Queue Reporting"
      ]
    },
    {
      "name": "Accounts",
      "tags": [
        "Account Creation",
        "Account Management",
        "Accounts",
        "Bandwidth and Disk Quotas",
        "Domain Management",
        "Passwords",
        "Server Administration",
        "Styles",
        "Styles and Themes",
        "Suspensions"
      ]
    },
    {
      "name": "API Development Tools",
      "tags": [
        "API Execution",
        "API Statistics",
        "API Token Management",
        "Applications",
        "Session"
      ]
    },
    {
      "name": "Authentication",
      "tags": [
        "Authentication Providers",
        "External Authentication",
        "Login URL",
        "SSH Keys and Connections",
        "Two-Factor Authentication"
      ]
    },
    {
      "name": "Backups",
      "tags": [
        "Backup Destination",
        "Backup or Restore",
        "Backup Settings",
        "Legacy Migration"
      ]
    },
    {
      "name": "Commerce Integration",
      "tags": [
        "Market Integration"
      ]
    },
    {
      "name": "cPanel Market",
      "tags": [
        "Product Management",
        "Provider Management"
      ]
    },
    {
      "name": "cPanel Support Tickets",
      "tags": [
        "Support Access",
        "Ticket Management"
      ]
    },
    {
      "name": "Databases",
      "tags": [
        "Manage MySQL Server",
        "MySQL Databases",
        "PostgreSQL Databases",
        "Remote MySQL Databases"
      ]
    },
    {
      "name": "DNS",
      "tags": [
        "DNS Cluster Settings",
        "DNS Security",
        "DNS Zones",
        "Domain Management",
        "Resolvers"
      ]
    },
    {
      "name": "Hosting Plans",
      "tags": [
        "Feature Access",
        "Feature Lists",
        "Hosting Plan Extensions",
        "Hosting Plans"
      ]
    },
    {
      "name": "Integrations",
      "tags": [
        "API Authentication",
        "Links",
        "Scripts Hooks"
      ]
    },
    {
      "name": "IP Address Management",
      "tags": [
        "IPv4 Address Settings",
        "IPv6 Address Settings",
        "Network Address Translation"
      ]
    },
    {
      "name": "Login Security (cPHulk)",
      "tags": [
        "Management",
        "Reporting",
        "Settings"
      ]
    },
    {
      "name": "Mail",
      "tags": [
        "cPanel Account Mail Management",
        "Mail DNS Settings",
        "Mail Server Settings",
        "Spam Management",
        "Spam Protection (Greylisting)"
      ]
    },
    {
      "name": "Resellers",
      "tags": [
        "Account Limits",
        "Account Management",
        "Account Permissions",
        "Account Settings"
      ]
    },
    {
      "name": "Server Administration",
      "tags": [
        "Account Management",
        "Configuration Clusters",
        "Configurations",
        "Connections",
        "cPanel Analytics",
        "License Management",
        "Notifications",
        "Security",
        "Server Administration",
        "Server Nodes",
        "Server Profiles",
        "Services",
        "System Information",
        "Updates"
      ]
    },
    {
      "name": "SSL Certificates",
      "tags": [
        "Auto-Generated Certificates",
        "cPanel Account Settings",
        "Server Settings"
      ]
    },
    {
      "name": "System Package Management",
      "tags": [
        "Install or Uninstall Package",
        "List Package Information",
        "Package Manager Settings"
      ]
    },
    {
      "name": "Transfers",
      "tags": [
        "cPanel Account Transfer",
        "Transfer Configuration",
        "Transfer Monitoring"
      ]
    },
    {
      "name": "Web Server Configuration",
      "tags": [
        "EasyApache Settings",
        "PHP",
        "PHP-FPM",
        "Tomcat Settings"
      ]
    },
    {
      "name": "Web Server Security (ModSecurity)",
      "tags": [
        "Rule Settings",
        "Rule Vendor Settings",
        "Server Settings"
      ]
    }
  ]
}